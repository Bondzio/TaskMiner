; ModuleID = '/home/gleison/tf/Benchmarks/Prolangs-C/unix-tbl/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.colstr = type { i8*, i8* }

@instead = external global [0 x i8*], align 8
@tabout = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [8 x i8] c"\5Ch'%dp'\00", align 1
@nlin = external global i32, align 4
@fullbot = external global [0 x i32], align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"1v-.5m\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c".5m\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"\5Cv'%s'\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"\5Cv'%dp'\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"\5Cs\5Cn(%d\00", align 1
@linsize = external global i32, align 4
@.str.6 = private unnamed_addr constant [15 x i8] c"\5Cv'-\5Cn(%dp/6u'\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"\5Ch'-\5Cn(#~u'\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"\5CL'|\5Cn(#%cu-%s\00", align 1
@linestop = external global [0 x i32], align 4
@.str.9 = private unnamed_addr constant [3 x i8] c"1v\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"\5Cn(35u\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"-(%s)\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"%s%dp\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"'\5Cs0\5Cv'\5Cn(\5C*(#du-\5Cn(#%cu+%s\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"+%s\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"\5Cv'\5Cn(%dp/6u'\00", align 1
@table = external global [0 x %struct.colstr*], align 8

; Function Attrs: nounwind uwtable
define void @drawvert(i32 %start, i32 %end, i32 %c, i32 %lwid) #0 {
entry:
  %start.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %lwid.addr = alloca i32, align 4
  %exb = alloca i8*, align 8
  %ext = alloca i8*, align 8
  %tp = alloca i32, align 4
  %sl = alloca i32, align 4
  %ln = alloca i32, align 4
  %pos = alloca i32, align 4
  %epb = alloca i32, align 4
  %ept = alloca i32, align 4
  %vm = alloca i32, align 4
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !22, metadata !23), !dbg !24
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !25, metadata !23), !dbg !26
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !27, metadata !23), !dbg !28
  store i32 %lwid, i32* %lwid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lwid.addr, metadata !29, metadata !23), !dbg !30
  call void @llvm.dbg.declare(metadata i8** %exb, metadata !31, metadata !23), !dbg !32
  store i8* null, i8** %exb, align 8, !dbg !32
  call void @llvm.dbg.declare(metadata i8** %ext, metadata !33, metadata !23), !dbg !34
  store i8* null, i8** %ext, align 8, !dbg !34
  call void @llvm.dbg.declare(metadata i32* %tp, metadata !35, metadata !23), !dbg !36
  store i32 0, i32* %tp, align 4, !dbg !36
  call void @llvm.dbg.declare(metadata i32* %sl, metadata !37, metadata !23), !dbg !38
  call void @llvm.dbg.declare(metadata i32* %ln, metadata !39, metadata !23), !dbg !40
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !41, metadata !23), !dbg !42
  call void @llvm.dbg.declare(metadata i32* %epb, metadata !43, metadata !23), !dbg !44
  call void @llvm.dbg.declare(metadata i32* %ept, metadata !45, metadata !23), !dbg !46
  call void @llvm.dbg.declare(metadata i32* %vm, metadata !47, metadata !23), !dbg !48
  %0 = load i32, i32* %end.addr, align 4, !dbg !49
  %inc = add nsw i32 %0, 1, !dbg !49
  store i32 %inc, i32* %end.addr, align 4, !dbg !49
  store i32 118, i32* %vm, align 4, !dbg !50
  br label %while.cond, !dbg !51

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i32, i32* %end.addr, align 4, !dbg !52
  %idxprom = sext i32 %1 to i64, !dbg !55
  %arrayidx = getelementptr inbounds [0 x i8*], [0 x i8*]* @instead, i32 0, i64 %idxprom, !dbg !55
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !55
  %tobool = icmp ne i8* %2, null, !dbg !51
  br i1 %tobool, label %while.body, label %while.end, !dbg !51

while.body:                                       ; preds = %while.cond
  %3 = load i32, i32* %end.addr, align 4, !dbg !56
  %inc1 = add nsw i32 %3, 1, !dbg !56
  store i32 %inc1, i32* %end.addr, align 4, !dbg !56
  br label %while.cond, !dbg !51

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %ln, align 4, !dbg !57
  br label %for.cond, !dbg !59

for.cond:                                         ; preds = %for.inc, %while.end
  %4 = load i32, i32* %ln, align 4, !dbg !60
  %5 = load i32, i32* %lwid.addr, align 4, !dbg !64
  %cmp = icmp slt i32 %4, %5, !dbg !65
  br i1 %cmp, label %for.body, label %for.end, !dbg !66

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %ept, align 4, !dbg !67
  store i32 0, i32* %epb, align 4, !dbg !69
  %6 = load i32, i32* %ln, align 4, !dbg !70
  %mul = mul nsw i32 2, %6, !dbg !71
  %7 = load i32, i32* %lwid.addr, align 4, !dbg !72
  %sub = sub nsw i32 %mul, %7, !dbg !73
  %add = add nsw i32 %sub, 1, !dbg !74
  store i32 %add, i32* %pos, align 4, !dbg !75
  %8 = load i32, i32* %pos, align 4, !dbg !76
  %9 = load i32, i32* %tp, align 4, !dbg !78
  %cmp2 = icmp ne i32 %8, %9, !dbg !79
  br i1 %cmp2, label %if.then, label %if.end, !dbg !80

if.then:                                          ; preds = %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !81
  %11 = load i32, i32* %pos, align 4, !dbg !82
  %12 = load i32, i32* %tp, align 4, !dbg !83
  %sub3 = sub nsw i32 %11, %12, !dbg !84
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i32 %sub3), !dbg !85
  br label %if.end, !dbg !85

if.end:                                           ; preds = %if.then, %for.body
  %13 = load i32, i32* %pos, align 4, !dbg !86
  store i32 %13, i32* %tp, align 4, !dbg !87
  %14 = load i32, i32* %end.addr, align 4, !dbg !88
  %15 = load i32, i32* @nlin, align 4, !dbg !90
  %cmp4 = icmp slt i32 %14, %15, !dbg !91
  br i1 %cmp4, label %if.then.5, label %if.end.18, !dbg !92

if.then.5:                                        ; preds = %if.end
  %16 = load i32, i32* %end.addr, align 4, !dbg !93
  %idxprom6 = sext i32 %16 to i64, !dbg !96
  %arrayidx7 = getelementptr inbounds [0 x i32], [0 x i32]* @fullbot, i32 0, i64 %idxprom6, !dbg !96
  %17 = load i32, i32* %arrayidx7, align 4, !dbg !96
  %tobool8 = icmp ne i32 %17, 0, !dbg !96
  br i1 %tobool8, label %if.then.14, label %lor.lhs.false, !dbg !97

lor.lhs.false:                                    ; preds = %if.then.5
  %18 = load i32, i32* %end.addr, align 4, !dbg !98
  %idxprom9 = sext i32 %18 to i64, !dbg !100
  %arrayidx10 = getelementptr inbounds [0 x i8*], [0 x i8*]* @instead, i32 0, i64 %idxprom9, !dbg !100
  %19 = load i8*, i8** %arrayidx10, align 8, !dbg !100
  %tobool11 = icmp ne i8* %19, null, !dbg !100
  br i1 %tobool11, label %if.else, label %land.lhs.true, !dbg !101

land.lhs.true:                                    ; preds = %lor.lhs.false
  %20 = load i32, i32* %end.addr, align 4, !dbg !102
  %call12 = call i32 @allh(i32 %20), !dbg !104
  %tobool13 = icmp ne i32 %call12, 0, !dbg !104
  br i1 %tobool13, label %if.then.14, label %if.else, !dbg !105

if.then.14:                                       ; preds = %land.lhs.true, %if.then.5
  store i32 2, i32* %epb, align 4, !dbg !106
  br label %if.end.17, !dbg !107

if.else:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %21 = load i32, i32* %end.addr, align 4, !dbg !108
  %22 = load i32, i32* %c.addr, align 4, !dbg !109
  %call15 = call i32 @midbar(i32 %21, i32 %22), !dbg !110
  switch i32 %call15, label %sw.epilog [
    i32 45, label %sw.bb
    i32 61, label %sw.bb.16
  ], !dbg !111

sw.bb:                                            ; preds = %if.else
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8** %exb, align 8, !dbg !112
  br label %sw.epilog, !dbg !114

sw.bb.16:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8** %exb, align 8, !dbg !115
  store i32 1, i32* %epb, align 4, !dbg !116
  br label %sw.epilog, !dbg !117

sw.epilog:                                        ; preds = %if.else, %sw.bb.16, %sw.bb
  br label %if.end.17

if.end.17:                                        ; preds = %sw.epilog, %if.then.14
  br label %if.end.18, !dbg !118

if.end.18:                                        ; preds = %if.end.17, %if.end
  %23 = load i32, i32* %lwid.addr, align 4, !dbg !119
  %cmp19 = icmp sgt i32 %23, 1, !dbg !121
  br i1 %cmp19, label %if.then.20, label %if.end.32, !dbg !122

if.then.20:                                       ; preds = %if.end.18
  %24 = load i32, i32* %end.addr, align 4, !dbg !123
  %25 = load i32, i32* %c.addr, align 4, !dbg !124
  %call21 = call i32 @interh(i32 %24, i32 %25), !dbg !125
  switch i32 %call21, label %sw.epilog.31 [
    i32 3, label %sw.bb.22
    i32 2, label %sw.bb.24
    i32 1, label %sw.bb.27
  ], !dbg !126

sw.bb.22:                                         ; preds = %if.then.20
  %26 = load i32, i32* %epb, align 4, !dbg !127
  %sub23 = sub nsw i32 %26, 1, !dbg !127
  store i32 %sub23, i32* %epb, align 4, !dbg !127
  br label %sw.epilog.31, !dbg !129

sw.bb.24:                                         ; preds = %if.then.20
  %27 = load i32, i32* %ln, align 4, !dbg !130
  %cmp25 = icmp eq i32 %27, 0, !dbg !131
  %cond = select i1 %cmp25, i32 1, i32 -1, !dbg !130
  %28 = load i32, i32* %epb, align 4, !dbg !132
  %add26 = add nsw i32 %28, %cond, !dbg !132
  store i32 %add26, i32* %epb, align 4, !dbg !132
  br label %sw.epilog.31, !dbg !133

sw.bb.27:                                         ; preds = %if.then.20
  %29 = load i32, i32* %ln, align 4, !dbg !134
  %cmp28 = icmp eq i32 %29, 1, !dbg !135
  %cond29 = select i1 %cmp28, i32 1, i32 -1, !dbg !134
  %30 = load i32, i32* %epb, align 4, !dbg !136
  %add30 = add nsw i32 %30, %cond29, !dbg !136
  store i32 %add30, i32* %epb, align 4, !dbg !136
  br label %sw.epilog.31, !dbg !137

sw.epilog.31:                                     ; preds = %if.then.20, %sw.bb.27, %sw.bb.24, %sw.bb.22
  br label %if.end.32, !dbg !138

if.end.32:                                        ; preds = %sw.epilog.31, %if.end.18
  %31 = load i32, i32* %lwid.addr, align 4, !dbg !139
  %cmp33 = icmp eq i32 %31, 1, !dbg !141
  br i1 %cmp33, label %if.then.34, label %if.end.41, !dbg !142

if.then.34:                                       ; preds = %if.end.32
  %32 = load i32, i32* %end.addr, align 4, !dbg !143
  %33 = load i32, i32* %c.addr, align 4, !dbg !144
  %call35 = call i32 @interh(i32 %32, i32 %33), !dbg !145
  switch i32 %call35, label %sw.epilog.40 [
    i32 3, label %sw.bb.36
    i32 2, label %sw.bb.38
    i32 1, label %sw.bb.38
  ], !dbg !146

sw.bb.36:                                         ; preds = %if.then.34
  %34 = load i32, i32* %epb, align 4, !dbg !147
  %sub37 = sub nsw i32 %34, 1, !dbg !147
  store i32 %sub37, i32* %epb, align 4, !dbg !147
  br label %sw.epilog.40, !dbg !149

sw.bb.38:                                         ; preds = %if.then.34, %if.then.34
  %35 = load i32, i32* %epb, align 4, !dbg !150
  %add39 = add nsw i32 %35, 1, !dbg !150
  store i32 %add39, i32* %epb, align 4, !dbg !150
  br label %sw.epilog.40, !dbg !151

sw.epilog.40:                                     ; preds = %if.then.34, %sw.bb.38, %sw.bb.36
  br label %if.end.41, !dbg !152

if.end.41:                                        ; preds = %sw.epilog.40, %if.end.32
  %36 = load i32, i32* %start.addr, align 4, !dbg !153
  %cmp42 = icmp sgt i32 %36, 0, !dbg !155
  br i1 %cmp42, label %if.then.43, label %if.else.71, !dbg !156

if.then.43:                                       ; preds = %if.end.41
  %37 = load i32, i32* %start.addr, align 4, !dbg !157
  %sub44 = sub nsw i32 %37, 1, !dbg !159
  store i32 %sub44, i32* %sl, align 4, !dbg !160
  br label %while.cond.45, !dbg !161

while.cond.45:                                    ; preds = %while.body.50, %if.then.43
  %38 = load i32, i32* %sl, align 4, !dbg !162
  %cmp46 = icmp sge i32 %38, 0, !dbg !165
  br i1 %cmp46, label %land.rhs, label %land.end, !dbg !166

land.rhs:                                         ; preds = %while.cond.45
  %39 = load i32, i32* %sl, align 4, !dbg !167
  %idxprom47 = sext i32 %39 to i64, !dbg !169
  %arrayidx48 = getelementptr inbounds [0 x i8*], [0 x i8*]* @instead, i32 0, i64 %idxprom47, !dbg !169
  %40 = load i8*, i8** %arrayidx48, align 8, !dbg !169
  %tobool49 = icmp ne i8* %40, null, !dbg !166
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.45
  %41 = phi i1 [ false, %while.cond.45 ], [ %tobool49, %land.rhs ]
  br i1 %41, label %while.body.50, label %while.end.51, !dbg !170

while.body.50:                                    ; preds = %land.end
  %42 = load i32, i32* %sl, align 4, !dbg !172
  %dec = add nsw i32 %42, -1, !dbg !172
  store i32 %dec, i32* %sl, align 4, !dbg !172
  br label %while.cond.45, !dbg !161

while.end.51:                                     ; preds = %land.end
  %43 = load i32, i32* %sl, align 4, !dbg !173
  %cmp52 = icmp sge i32 %43, 0, !dbg !175
  br i1 %cmp52, label %land.lhs.true.53, label %if.else.61, !dbg !176

land.lhs.true.53:                                 ; preds = %while.end.51
  %44 = load i32, i32* %sl, align 4, !dbg !177
  %idxprom54 = sext i32 %44 to i64, !dbg !179
  %arrayidx55 = getelementptr inbounds [0 x i32], [0 x i32]* @fullbot, i32 0, i64 %idxprom54, !dbg !179
  %45 = load i32, i32* %arrayidx55, align 4, !dbg !179
  %tobool56 = icmp ne i32 %45, 0, !dbg !179
  br i1 %tobool56, label %if.then.60, label %lor.lhs.false.57, !dbg !180

lor.lhs.false.57:                                 ; preds = %land.lhs.true.53
  %46 = load i32, i32* %sl, align 4, !dbg !181
  %call58 = call i32 @allh(i32 %46), !dbg !183
  %tobool59 = icmp ne i32 %call58, 0, !dbg !183
  br i1 %tobool59, label %if.then.60, label %if.else.61, !dbg !184

if.then.60:                                       ; preds = %lor.lhs.false.57, %land.lhs.true.53
  store i32 0, i32* %ept, align 4, !dbg !185
  br label %if.end.70, !dbg !186

if.else.61:                                       ; preds = %lor.lhs.false.57, %while.end.51
  %47 = load i32, i32* %sl, align 4, !dbg !187
  %cmp62 = icmp sge i32 %47, 0, !dbg !189
  br i1 %cmp62, label %if.then.63, label %if.else.68, !dbg !190

if.then.63:                                       ; preds = %if.else.61
  %48 = load i32, i32* %sl, align 4, !dbg !191
  %49 = load i32, i32* %c.addr, align 4, !dbg !192
  %call64 = call i32 @midbar(i32 %48, i32 %49), !dbg !193
  switch i32 %call64, label %sw.default [
    i32 45, label %sw.bb.65
    i32 61, label %sw.bb.66
  ], !dbg !194

sw.bb.65:                                         ; preds = %if.then.63
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8** %ext, align 8, !dbg !195
  br label %sw.epilog.67, !dbg !197

sw.bb.66:                                         ; preds = %if.then.63
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8** %ext, align 8, !dbg !198
  store i32 -1, i32* %ept, align 4, !dbg !199
  br label %sw.epilog.67, !dbg !200

sw.default:                                       ; preds = %if.then.63
  store i32 109, i32* %vm, align 4, !dbg !201
  br label %sw.epilog.67, !dbg !202

sw.epilog.67:                                     ; preds = %sw.default, %sw.bb.66, %sw.bb.65
  br label %if.end.69, !dbg !203

if.else.68:                                       ; preds = %if.else.61
  store i32 -4, i32* %ept, align 4, !dbg !204
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.68, %sw.epilog.67
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.then.60
  br label %if.end.78, !dbg !205

if.else.71:                                       ; preds = %if.end.41
  %50 = load i32, i32* %start.addr, align 4, !dbg !206
  %cmp72 = icmp eq i32 %50, 0, !dbg !208
  br i1 %cmp72, label %land.lhs.true.73, label %if.end.77, !dbg !209

land.lhs.true.73:                                 ; preds = %if.else.71
  %call74 = call i32 @allh(i32 0), !dbg !210
  %tobool75 = icmp ne i32 %call74, 0, !dbg !210
  br i1 %tobool75, label %if.then.76, label %if.end.77, !dbg !212

if.then.76:                                       ; preds = %land.lhs.true.73
  store i32 0, i32* %ept, align 4, !dbg !213
  store i32 109, i32* %vm, align 4, !dbg !215
  br label %if.end.77, !dbg !216

if.end.77:                                        ; preds = %if.then.76, %land.lhs.true.73, %if.else.71
  br label %if.end.78

if.end.78:                                        ; preds = %if.end.77, %if.end.70
  %51 = load i32, i32* %lwid.addr, align 4, !dbg !217
  %cmp79 = icmp sgt i32 %51, 1, !dbg !219
  br i1 %cmp79, label %if.then.80, label %if.else.93, !dbg !220

if.then.80:                                       ; preds = %if.end.78
  %52 = load i32, i32* %start.addr, align 4, !dbg !221
  %53 = load i32, i32* %c.addr, align 4, !dbg !222
  %call81 = call i32 @interh(i32 %52, i32 %53), !dbg !223
  switch i32 %call81, label %sw.epilog.92 [
    i32 3, label %sw.bb.82
    i32 1, label %sw.bb.84
    i32 2, label %sw.bb.88
  ], !dbg !224

sw.bb.82:                                         ; preds = %if.then.80
  %54 = load i32, i32* %ept, align 4, !dbg !225
  %add83 = add nsw i32 %54, 1, !dbg !225
  store i32 %add83, i32* %ept, align 4, !dbg !225
  br label %sw.epilog.92, !dbg !227

sw.bb.84:                                         ; preds = %if.then.80
  %55 = load i32, i32* %ln, align 4, !dbg !228
  %cmp85 = icmp eq i32 %55, 0, !dbg !229
  %cond86 = select i1 %cmp85, i32 1, i32 -1, !dbg !228
  %56 = load i32, i32* %ept, align 4, !dbg !230
  %add87 = add nsw i32 %56, %cond86, !dbg !230
  store i32 %add87, i32* %ept, align 4, !dbg !230
  br label %sw.epilog.92, !dbg !231

sw.bb.88:                                         ; preds = %if.then.80
  %57 = load i32, i32* %ln, align 4, !dbg !232
  %cmp89 = icmp eq i32 %57, 1, !dbg !233
  %cond90 = select i1 %cmp89, i32 1, i32 -1, !dbg !232
  %58 = load i32, i32* %ept, align 4, !dbg !234
  %add91 = add nsw i32 %58, %cond90, !dbg !234
  store i32 %add91, i32* %ept, align 4, !dbg !234
  br label %sw.epilog.92, !dbg !235

sw.epilog.92:                                     ; preds = %if.then.80, %sw.bb.88, %sw.bb.84, %sw.bb.82
  br label %if.end.103, !dbg !236

if.else.93:                                       ; preds = %if.end.78
  %59 = load i32, i32* %lwid.addr, align 4, !dbg !237
  %cmp94 = icmp eq i32 %59, 1, !dbg !239
  br i1 %cmp94, label %if.then.95, label %if.end.102, !dbg !240

if.then.95:                                       ; preds = %if.else.93
  %60 = load i32, i32* %start.addr, align 4, !dbg !241
  %61 = load i32, i32* %c.addr, align 4, !dbg !242
  %call96 = call i32 @interh(i32 %60, i32 %61), !dbg !243
  switch i32 %call96, label %sw.epilog.101 [
    i32 3, label %sw.bb.97
    i32 1, label %sw.bb.99
    i32 2, label %sw.bb.99
  ], !dbg !244

sw.bb.97:                                         ; preds = %if.then.95
  %62 = load i32, i32* %ept, align 4, !dbg !245
  %add98 = add nsw i32 %62, 1, !dbg !245
  store i32 %add98, i32* %ept, align 4, !dbg !245
  br label %sw.epilog.101, !dbg !247

sw.bb.99:                                         ; preds = %if.then.95, %if.then.95
  %63 = load i32, i32* %ept, align 4, !dbg !248
  %sub100 = sub nsw i32 %63, 1, !dbg !248
  store i32 %sub100, i32* %ept, align 4, !dbg !248
  br label %sw.epilog.101, !dbg !249

sw.epilog.101:                                    ; preds = %if.then.95, %sw.bb.99, %sw.bb.97
  br label %if.end.102, !dbg !250

if.end.102:                                       ; preds = %sw.epilog.101, %if.else.93
  br label %if.end.103

if.end.103:                                       ; preds = %if.end.102, %sw.epilog.92
  %64 = load i8*, i8** %exb, align 8, !dbg !251
  %tobool104 = icmp ne i8* %64, null, !dbg !251
  br i1 %tobool104, label %if.then.105, label %if.end.107, !dbg !253

if.then.105:                                      ; preds = %if.end.103
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !254
  %66 = load i8*, i8** %exb, align 8, !dbg !255
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* %66), !dbg !256
  br label %if.end.107, !dbg !256

if.end.107:                                       ; preds = %if.then.105, %if.end.103
  %67 = load i32, i32* %epb, align 4, !dbg !257
  %tobool108 = icmp ne i32 %67, 0, !dbg !257
  br i1 %tobool108, label %if.then.109, label %if.end.111, !dbg !259

if.then.109:                                      ; preds = %if.end.107
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !260
  %69 = load i32, i32* %epb, align 4, !dbg !261
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i32 %69), !dbg !262
  br label %if.end.111, !dbg !262

if.end.111:                                       ; preds = %if.then.109, %if.end.107
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !263
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i32 33), !dbg !264
  %71 = load i32, i32* @linsize, align 4, !dbg !265
  %tobool113 = icmp ne i32 %71, 0, !dbg !265
  br i1 %tobool113, label %if.then.114, label %if.end.116, !dbg !267

if.then.114:                                      ; preds = %if.end.111
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !268
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i32 33), !dbg !269
  br label %if.end.116, !dbg !269

if.end.116:                                       ; preds = %if.then.114, %if.end.111
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !270
  %call117 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i32 0, i32 0)), !dbg !271
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !272
  %75 = load i32, i32* %start.addr, align 4, !dbg !273
  %idxprom118 = sext i32 %75 to i64, !dbg !274
  %arrayidx119 = getelementptr inbounds [0 x i32], [0 x i32]* @linestop, i32 0, i64 %idxprom118, !dbg !274
  %76 = load i32, i32* %arrayidx119, align 4, !dbg !274
  %add120 = add nsw i32 %76, 97, !dbg !275
  %sub121 = sub nsw i32 %add120, 1, !dbg !276
  %77 = load i32, i32* %vm, align 4, !dbg !277
  %cmp122 = icmp eq i32 %77, 118, !dbg !278
  %cond123 = select i1 %cmp122, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), !dbg !277
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i32 %sub121, i8* %cond123), !dbg !279
  %78 = load i8*, i8** %ext, align 8, !dbg !280
  %tobool125 = icmp ne i8* %78, null, !dbg !280
  br i1 %tobool125, label %if.then.126, label %if.end.128, !dbg !282

if.then.126:                                      ; preds = %if.end.116
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !283
  %80 = load i8*, i8** %ext, align 8, !dbg !284
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* %80), !dbg !285
  br label %if.end.128, !dbg !285

if.end.128:                                       ; preds = %if.then.126, %if.end.116
  %81 = load i8*, i8** %exb, align 8, !dbg !286
  %tobool129 = icmp ne i8* %81, null, !dbg !286
  br i1 %tobool129, label %if.then.130, label %if.end.132, !dbg !288

if.then.130:                                      ; preds = %if.end.128
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !289
  %83 = load i8*, i8** %exb, align 8, !dbg !290
  %call131 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* %83), !dbg !291
  br label %if.end.132, !dbg !291

if.end.132:                                       ; preds = %if.then.130, %if.end.128
  %84 = load i32, i32* %ept, align 4, !dbg !292
  %85 = load i32, i32* %epb, align 4, !dbg !293
  %sub133 = sub nsw i32 %84, %85, !dbg !294
  store i32 %sub133, i32* %pos, align 4, !dbg !295
  %86 = load i32, i32* %pos, align 4, !dbg !296
  %tobool134 = icmp ne i32 %86, 0, !dbg !296
  br i1 %tobool134, label %if.then.135, label %if.end.139, !dbg !298

if.then.135:                                      ; preds = %if.end.132
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !299
  %88 = load i32, i32* %pos, align 4, !dbg !300
  %cmp136 = icmp sge i32 %88, 0, !dbg !301
  %cond137 = select i1 %cmp136, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i32 0, i32 0), !dbg !300
  %89 = load i32, i32* %pos, align 4, !dbg !302
  %call138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* %cond137, i32 %89), !dbg !303
  br label %if.end.139, !dbg !303

if.end.139:                                       ; preds = %if.then.135, %if.end.132
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !304
  %91 = load i32, i32* %start.addr, align 4, !dbg !305
  %idxprom140 = sext i32 %91 to i64, !dbg !306
  %arrayidx141 = getelementptr inbounds [0 x i32], [0 x i32]* @linestop, i32 0, i64 %idxprom140, !dbg !306
  %92 = load i32, i32* %arrayidx141, align 4, !dbg !306
  %add142 = add nsw i32 %92, 97, !dbg !307
  %sub143 = sub nsw i32 %add142, 1, !dbg !308
  %93 = load i32, i32* %vm, align 4, !dbg !309
  %cmp144 = icmp eq i32 %93, 118, !dbg !310
  %cond145 = select i1 %cmp144, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), !dbg !309
  %call146 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %90, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i32 0, i32 0), i32 %sub143, i8* %cond145), !dbg !311
  %94 = load i8*, i8** %ext, align 8, !dbg !312
  %tobool147 = icmp ne i8* %94, null, !dbg !312
  br i1 %tobool147, label %if.then.148, label %if.end.150, !dbg !314

if.then.148:                                      ; preds = %if.end.139
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !315
  %96 = load i8*, i8** %ext, align 8, !dbg !316
  %call149 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* %96), !dbg !317
  br label %if.end.150, !dbg !317

if.end.150:                                       ; preds = %if.then.148, %if.end.139
  %97 = load i32, i32* %ept, align 4, !dbg !318
  %tobool151 = icmp ne i32 %97, 0, !dbg !318
  br i1 %tobool151, label %if.then.152, label %if.end.158, !dbg !320

if.then.152:                                      ; preds = %if.end.150
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !321
  %99 = load i32, i32* %ept, align 4, !dbg !322
  %sub153 = sub nsw i32 0, %99, !dbg !323
  %cmp154 = icmp sgt i32 %sub153, 0, !dbg !324
  %cond155 = select i1 %cmp154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i32 0, i32 0), !dbg !325
  %100 = load i32, i32* %ept, align 4, !dbg !326
  %sub156 = sub nsw i32 0, %100, !dbg !327
  %call157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* %cond155, i32 %sub156), !dbg !328
  br label %if.end.158, !dbg !328

if.end.158:                                       ; preds = %if.then.152, %if.end.150
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !329
  %call159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0)), !dbg !330
  %102 = load i32, i32* @linsize, align 4, !dbg !331
  %tobool160 = icmp ne i32 %102, 0, !dbg !331
  br i1 %tobool160, label %if.then.161, label %if.end.163, !dbg !333

if.then.161:                                      ; preds = %if.end.158
  %103 = load %struct._IO_FILE*, %struct._IO_FILE** @tabout, align 8, !dbg !334
  %call162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %103, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i32 0, i32 0), i32 33), !dbg !335
  br label %if.end.163, !dbg !335

if.end.163:                                       ; preds = %if.then.161, %if.end.158
  br label %for.inc, !dbg !336

for.inc:                                          ; preds = %if.end.163
  %104 = load i32, i32* %ln, align 4, !dbg !337
  %inc164 = add nsw i32 %104, 1, !dbg !337
  store i32 %inc164, i32* %ln, align 4, !dbg !337
  br label %for.cond, !dbg !338

for.end:                                          ; preds = %for.cond
  ret void, !dbg !339
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @allh(i32) #2

; Function Attrs: nounwind uwtable
define i32 @midbar(i32 %i, i32 %c) #0 {
entry:
  %i.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !340, metadata !23), !dbg !341
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !342, metadata !23), !dbg !343
  call void @llvm.dbg.declare(metadata i32* %k, metadata !344, metadata !23), !dbg !345
  %0 = load i32, i32* %i.addr, align 4, !dbg !346
  %1 = load i32, i32* %c.addr, align 4, !dbg !347
  %call = call i32 @midbcol(i32 %0, i32 %1), !dbg !348
  store i32 %call, i32* %k, align 4, !dbg !349
  %2 = load i32, i32* %k, align 4, !dbg !350
  %cmp = icmp eq i32 %2, 0, !dbg !352
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !353

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %c.addr, align 4, !dbg !354
  %cmp1 = icmp sgt i32 %3, 0, !dbg !356
  br i1 %cmp1, label %if.then, label %if.end, !dbg !357

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %i.addr, align 4, !dbg !358
  %5 = load i32, i32* %c.addr, align 4, !dbg !359
  %sub = sub nsw i32 %5, 1, !dbg !360
  %call2 = call i32 @midbcol(i32 %4, i32 %sub), !dbg !361
  store i32 %call2, i32* %k, align 4, !dbg !362
  br label %if.end, !dbg !363

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i32, i32* %k, align 4, !dbg !364
  ret i32 %6, !dbg !365
}

declare i32 @interh(i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @midbcol(i32 %i, i32 %c) #0 {
entry:
  %retval = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %ct = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !366, metadata !23), !dbg !367
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !368, metadata !23), !dbg !369
  call void @llvm.dbg.declare(metadata i32* %ct, metadata !370, metadata !23), !dbg !371
  br label %while.cond, !dbg !372

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %i.addr, align 4, !dbg !373
  %1 = load i32, i32* %c.addr, align 4, !dbg !376
  %call = call i32 @ctype(i32 %0, i32 %1), !dbg !377
  store i32 %call, i32* %ct, align 4, !dbg !378
  %cmp = icmp eq i32 %call, 115, !dbg !379
  br i1 %cmp, label %while.body, label %while.end, !dbg !372

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %c.addr, align 4, !dbg !380
  %dec = add nsw i32 %2, -1, !dbg !380
  store i32 %dec, i32* %c.addr, align 4, !dbg !380
  br label %while.cond, !dbg !372

while.end:                                        ; preds = %while.cond
  %3 = load i32, i32* %ct, align 4, !dbg !381
  %cmp1 = icmp eq i32 %3, 45, !dbg !383
  br i1 %cmp1, label %if.then, label %lor.lhs.false, !dbg !384

lor.lhs.false:                                    ; preds = %while.end
  %4 = load i32, i32* %ct, align 4, !dbg !385
  %cmp2 = icmp eq i32 %4, 61, !dbg !387
  br i1 %cmp2, label %if.then, label %if.end, !dbg !388

if.then:                                          ; preds = %lor.lhs.false, %while.end
  %5 = load i32, i32* %ct, align 4, !dbg !389
  store i32 %5, i32* %retval, !dbg !390
  br label %return, !dbg !390

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* %c.addr, align 4, !dbg !391
  %idxprom = sext i32 %6 to i64, !dbg !393
  %7 = load i32, i32* %i.addr, align 4, !dbg !394
  %idxprom3 = sext i32 %7 to i64, !dbg !393
  %arrayidx = getelementptr inbounds [0 x %struct.colstr*], [0 x %struct.colstr*]* @table, i32 0, i64 %idxprom3, !dbg !393
  %8 = load %struct.colstr*, %struct.colstr** %arrayidx, align 8, !dbg !393
  %arrayidx4 = getelementptr inbounds %struct.colstr, %struct.colstr* %8, i64 %idxprom, !dbg !393
  %col = getelementptr inbounds %struct.colstr, %struct.colstr* %arrayidx4, i32 0, i32 0, !dbg !395
  %9 = load i8*, i8** %col, align 8, !dbg !395
  %call5 = call i32 @barent(i8* %9), !dbg !396
  store i32 %call5, i32* %ct, align 4, !dbg !397
  %tobool = icmp ne i32 %call5, 0, !dbg !397
  br i1 %tobool, label %if.then.6, label %if.end.7, !dbg !398

if.then.6:                                        ; preds = %if.end
  %10 = load i32, i32* %ct, align 4, !dbg !399
  store i32 %10, i32* %retval, !dbg !400
  br label %return, !dbg !400

if.end.7:                                         ; preds = %if.end
  store i32 0, i32* %retval, !dbg !401
  br label %return, !dbg !401

return:                                           ; preds = %if.end.7, %if.then.6, %if.then
  %11 = load i32, i32* %retval, !dbg !402
  ret i32 %11, !dbg !402
}

declare i32 @ctype(i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @barent(i8* %s) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !403, metadata !23), !dbg !404
  %0 = load i8*, i8** %s.addr, align 8, !dbg !405
  %cmp = icmp eq i8* %0, null, !dbg !407
  br i1 %cmp, label %if.then, label %if.end, !dbg !408

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, !dbg !409
  br label %return, !dbg !409

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !410
  %2 = ptrtoint i8* %1 to i32, !dbg !412
  %call = call i32 @point(i32 %2), !dbg !413
  %tobool = icmp ne i32 %call, 0, !dbg !413
  br i1 %tobool, label %if.end.2, label %if.then.1, !dbg !414

if.then.1:                                        ; preds = %if.end
  store i32 1, i32* %retval, !dbg !415
  br label %return, !dbg !415

if.end.2:                                         ; preds = %if.end
  %3 = load i8*, i8** %s.addr, align 8, !dbg !416
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !416
  %4 = load i8, i8* %arrayidx, align 1, !dbg !416
  %conv = sext i8 %4 to i32, !dbg !416
  %cmp3 = icmp eq i32 %conv, 92, !dbg !418
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !419

if.then.5:                                        ; preds = %if.end.2
  %5 = load i8*, i8** %s.addr, align 8, !dbg !420
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !420
  store i8* %incdec.ptr, i8** %s.addr, align 8, !dbg !420
  br label %if.end.6, !dbg !421

if.end.6:                                         ; preds = %if.then.5, %if.end.2
  %6 = load i8*, i8** %s.addr, align 8, !dbg !422
  %arrayidx7 = getelementptr inbounds i8, i8* %6, i64 1, !dbg !422
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !422
  %conv8 = sext i8 %7 to i32, !dbg !422
  %cmp9 = icmp ne i32 %conv8, 0, !dbg !424
  br i1 %cmp9, label %if.then.11, label %if.end.12, !dbg !425

if.then.11:                                       ; preds = %if.end.6
  store i32 0, i32* %retval, !dbg !426
  br label %return, !dbg !426

if.end.12:                                        ; preds = %if.end.6
  %8 = load i8*, i8** %s.addr, align 8, !dbg !427
  %arrayidx13 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !427
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !427
  %conv14 = sext i8 %9 to i32, !dbg !427
  switch i32 %conv14, label %sw.epilog [
    i32 95, label %sw.bb
    i32 61, label %sw.bb.15
  ], !dbg !428

sw.bb:                                            ; preds = %if.end.12
  store i32 45, i32* %retval, !dbg !429
  br label %return, !dbg !429

sw.bb.15:                                         ; preds = %if.end.12
  store i32 61, i32* %retval, !dbg !431
  br label %return, !dbg !431

sw.epilog:                                        ; preds = %if.end.12
  store i32 0, i32* %retval, !dbg !432
  br label %return, !dbg !432

return:                                           ; preds = %sw.epilog, %sw.bb.15, %sw.bb, %if.then.11, %if.then.1, %if.then
  %10 = load i32, i32* %retval, !dbg !433
  ret i32 %10, !dbg !433
}

declare i32 @point(i32) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!19, !20}
!llvm.ident = !{!21}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-tbl")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!5 = !{!6, !10, !13, !14}
!6 = !DISubprogram(name: "drawvert", scope: !7, file: !7, line: 17, type: !8, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32, i32, i32)* @drawvert, variables: !2)
!7 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-tbl/tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-tbl")
!8 = !DISubroutineType(types: !9)
!9 = !{null, !4, !4, !4, !4}
!10 = !DISubprogram(name: "midbar", scope: !7, file: !7, line: 143, type: !11, isLocal: false, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @midbar, variables: !2)
!11 = !DISubroutineType(types: !12)
!12 = !{!4, !4, !4}
!13 = !DISubprogram(name: "midbcol", scope: !7, file: !7, line: 151, type: !11, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @midbcol, variables: !2)
!14 = !DISubprogram(name: "barent", scope: !7, file: !7, line: 162, type: !15, isLocal: false, isDefinition: true, scopeLine: 162, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i8*)* @barent, variables: !2)
!15 = !DISubroutineType(types: !16)
!16 = !{!4, !17}
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64, align: 64)
!18 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!19 = !{i32 2, !"Dwarf Version", i32 4}
!20 = !{i32 2, !"Debug Info Version", i32 3}
!21 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!22 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start", arg: 1, scope: !6, file: !7, line: 17, type: !4)
!23 = !DIExpression()
!24 = !DILocation(line: 17, column: 19, scope: !6)
!25 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "end", arg: 2, scope: !6, file: !7, line: 17, type: !4)
!26 = !DILocation(line: 17, column: 30, scope: !6)
!27 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 3, scope: !6, file: !7, line: 17, type: !4)
!28 = !DILocation(line: 17, column: 39, scope: !6)
!29 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lwid", arg: 4, scope: !6, file: !7, line: 17, type: !4)
!30 = !DILocation(line: 17, column: 46, scope: !6)
!31 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exb", scope: !6, file: !7, line: 18, type: !17)
!32 = !DILocation(line: 18, column: 9, scope: !6)
!33 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ext", scope: !6, file: !7, line: 18, type: !17)
!34 = !DILocation(line: 18, column: 19, scope: !6)
!35 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tp", scope: !6, file: !7, line: 19, type: !4)
!36 = !DILocation(line: 19, column: 7, scope: !6)
!37 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sl", scope: !6, file: !7, line: 19, type: !4)
!38 = !DILocation(line: 19, column: 15, scope: !6)
!39 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ln", scope: !6, file: !7, line: 19, type: !4)
!40 = !DILocation(line: 19, column: 19, scope: !6)
!41 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pos", scope: !6, file: !7, line: 19, type: !4)
!42 = !DILocation(line: 19, column: 23, scope: !6)
!43 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "epb", scope: !6, file: !7, line: 19, type: !4)
!44 = !DILocation(line: 19, column: 28, scope: !6)
!45 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ept", scope: !6, file: !7, line: 19, type: !4)
!46 = !DILocation(line: 19, column: 33, scope: !6)
!47 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vm", scope: !6, file: !7, line: 19, type: !4)
!48 = !DILocation(line: 19, column: 38, scope: !6)
!49 = !DILocation(line: 20, column: 6, scope: !6)
!50 = !DILocation(line: 21, column: 6, scope: !6)
!51 = !DILocation(line: 23, column: 3, scope: !6)
!52 = !DILocation(line: 23, column: 18, scope: !53)
!53 = !DILexicalBlockFile(scope: !54, file: !7, discriminator: 2)
!54 = !DILexicalBlockFile(scope: !6, file: !7, discriminator: 1)
!55 = !DILocation(line: 23, column: 10, scope: !6)
!56 = !DILocation(line: 24, column: 8, scope: !6)
!57 = !DILocation(line: 25, column: 11, scope: !58)
!58 = distinct !DILexicalBlock(scope: !6, file: !7, line: 25, column: 3)
!59 = !DILocation(line: 25, column: 8, scope: !58)
!60 = !DILocation(line: 25, column: 16, scope: !61)
!61 = !DILexicalBlockFile(scope: !62, file: !7, discriminator: 2)
!62 = !DILexicalBlockFile(scope: !63, file: !7, discriminator: 1)
!63 = distinct !DILexicalBlock(scope: !58, file: !7, line: 25, column: 3)
!64 = !DILocation(line: 25, column: 21, scope: !63)
!65 = !DILocation(line: 25, column: 19, scope: !63)
!66 = !DILocation(line: 25, column: 3, scope: !58)
!67 = !DILocation(line: 26, column: 15, scope: !68)
!68 = distinct !DILexicalBlock(scope: !63, file: !7, line: 25, column: 33)
!69 = !DILocation(line: 26, column: 9, scope: !68)
!70 = !DILocation(line: 27, column: 15, scope: !68)
!71 = !DILocation(line: 27, column: 13, scope: !68)
!72 = !DILocation(line: 27, column: 20, scope: !68)
!73 = !DILocation(line: 27, column: 18, scope: !68)
!74 = !DILocation(line: 27, column: 25, scope: !68)
!75 = !DILocation(line: 27, column: 9, scope: !68)
!76 = !DILocation(line: 28, column: 9, scope: !77)
!77 = distinct !DILexicalBlock(scope: !68, file: !7, line: 28, column: 9)
!78 = !DILocation(line: 28, column: 16, scope: !77)
!79 = !DILocation(line: 28, column: 13, scope: !77)
!80 = !DILocation(line: 28, column: 9, scope: !68)
!81 = !DILocation(line: 29, column: 15, scope: !77)
!82 = !DILocation(line: 29, column: 35, scope: !77)
!83 = !DILocation(line: 29, column: 41, scope: !77)
!84 = !DILocation(line: 29, column: 39, scope: !77)
!85 = !DILocation(line: 29, column: 7, scope: !77)
!86 = !DILocation(line: 30, column: 10, scope: !68)
!87 = !DILocation(line: 30, column: 8, scope: !68)
!88 = !DILocation(line: 31, column: 9, scope: !89)
!89 = distinct !DILexicalBlock(scope: !68, file: !7, line: 31, column: 9)
!90 = !DILocation(line: 31, column: 15, scope: !89)
!91 = !DILocation(line: 31, column: 13, scope: !89)
!92 = !DILocation(line: 31, column: 9, scope: !68)
!93 = !DILocation(line: 32, column: 19, scope: !94)
!94 = distinct !DILexicalBlock(scope: !95, file: !7, line: 32, column: 11)
!95 = distinct !DILexicalBlock(scope: !89, file: !7, line: 31, column: 21)
!96 = !DILocation(line: 32, column: 11, scope: !94)
!97 = !DILocation(line: 32, column: 24, scope: !94)
!98 = !DILocation(line: 32, column: 37, scope: !99)
!99 = !DILexicalBlockFile(scope: !94, file: !7, discriminator: 1)
!100 = !DILocation(line: 32, column: 29, scope: !94)
!101 = !DILocation(line: 32, column: 42, scope: !94)
!102 = !DILocation(line: 32, column: 50, scope: !103)
!103 = !DILexicalBlockFile(scope: !94, file: !7, discriminator: 2)
!104 = !DILocation(line: 32, column: 45, scope: !94)
!105 = !DILocation(line: 32, column: 11, scope: !95)
!106 = !DILocation(line: 33, column: 13, scope: !94)
!107 = !DILocation(line: 33, column: 9, scope: !94)
!108 = !DILocation(line: 35, column: 24, scope: !94)
!109 = !DILocation(line: 35, column: 29, scope: !94)
!110 = !DILocation(line: 35, column: 17, scope: !94)
!111 = !DILocation(line: 35, column: 9, scope: !94)
!112 = !DILocation(line: 37, column: 15, scope: !113)
!113 = distinct !DILexicalBlock(scope: !94, file: !7, line: 35, column: 33)
!114 = !DILocation(line: 38, column: 11, scope: !113)
!115 = !DILocation(line: 40, column: 15, scope: !113)
!116 = !DILocation(line: 41, column: 15, scope: !113)
!117 = !DILocation(line: 42, column: 11, scope: !113)
!118 = !DILocation(line: 44, column: 5, scope: !95)
!119 = !DILocation(line: 45, column: 9, scope: !120)
!120 = distinct !DILexicalBlock(scope: !68, file: !7, line: 45, column: 9)
!121 = !DILocation(line: 45, column: 14, scope: !120)
!122 = !DILocation(line: 45, column: 9, scope: !68)
!123 = !DILocation(line: 46, column: 22, scope: !120)
!124 = !DILocation(line: 46, column: 27, scope: !120)
!125 = !DILocation(line: 46, column: 15, scope: !120)
!126 = !DILocation(line: 46, column: 7, scope: !120)
!127 = !DILocation(line: 48, column: 13, scope: !128)
!128 = distinct !DILexicalBlock(scope: !120, file: !7, line: 46, column: 31)
!129 = !DILocation(line: 49, column: 9, scope: !128)
!130 = !DILocation(line: 51, column: 17, scope: !128)
!131 = !DILocation(line: 51, column: 20, scope: !128)
!132 = !DILocation(line: 51, column: 13, scope: !128)
!133 = !DILocation(line: 52, column: 9, scope: !128)
!134 = !DILocation(line: 54, column: 17, scope: !128)
!135 = !DILocation(line: 54, column: 20, scope: !128)
!136 = !DILocation(line: 54, column: 13, scope: !128)
!137 = !DILocation(line: 55, column: 9, scope: !128)
!138 = !DILocation(line: 56, column: 7, scope: !128)
!139 = !DILocation(line: 57, column: 9, scope: !140)
!140 = distinct !DILexicalBlock(scope: !68, file: !7, line: 57, column: 9)
!141 = !DILocation(line: 57, column: 14, scope: !140)
!142 = !DILocation(line: 57, column: 9, scope: !68)
!143 = !DILocation(line: 58, column: 22, scope: !140)
!144 = !DILocation(line: 58, column: 27, scope: !140)
!145 = !DILocation(line: 58, column: 15, scope: !140)
!146 = !DILocation(line: 58, column: 7, scope: !140)
!147 = !DILocation(line: 60, column: 13, scope: !148)
!148 = distinct !DILexicalBlock(scope: !140, file: !7, line: 58, column: 31)
!149 = !DILocation(line: 61, column: 9, scope: !148)
!150 = !DILocation(line: 64, column: 13, scope: !148)
!151 = !DILocation(line: 65, column: 9, scope: !148)
!152 = !DILocation(line: 66, column: 7, scope: !148)
!153 = !DILocation(line: 67, column: 9, scope: !154)
!154 = distinct !DILexicalBlock(scope: !68, file: !7, line: 67, column: 9)
!155 = !DILocation(line: 67, column: 15, scope: !154)
!156 = !DILocation(line: 67, column: 9, scope: !68)
!157 = !DILocation(line: 68, column: 12, scope: !158)
!158 = distinct !DILexicalBlock(scope: !154, file: !7, line: 67, column: 20)
!159 = !DILocation(line: 68, column: 18, scope: !158)
!160 = !DILocation(line: 68, column: 10, scope: !158)
!161 = !DILocation(line: 69, column: 7, scope: !158)
!162 = !DILocation(line: 69, column: 14, scope: !163)
!163 = !DILexicalBlockFile(scope: !164, file: !7, discriminator: 4)
!164 = !DILexicalBlockFile(scope: !158, file: !7, discriminator: 1)
!165 = !DILocation(line: 69, column: 17, scope: !158)
!166 = !DILocation(line: 69, column: 22, scope: !158)
!167 = !DILocation(line: 69, column: 33, scope: !168)
!168 = !DILexicalBlockFile(scope: !158, file: !7, discriminator: 2)
!169 = !DILocation(line: 69, column: 25, scope: !158)
!170 = !DILocation(line: 69, column: 7, scope: !171)
!171 = !DILexicalBlockFile(scope: !158, file: !7, discriminator: 3)
!172 = !DILocation(line: 70, column: 11, scope: !158)
!173 = !DILocation(line: 71, column: 11, scope: !174)
!174 = distinct !DILexicalBlock(scope: !158, file: !7, line: 71, column: 11)
!175 = !DILocation(line: 71, column: 14, scope: !174)
!176 = !DILocation(line: 71, column: 19, scope: !174)
!177 = !DILocation(line: 71, column: 31, scope: !178)
!178 = !DILexicalBlockFile(scope: !174, file: !7, discriminator: 1)
!179 = !DILocation(line: 71, column: 23, scope: !174)
!180 = !DILocation(line: 71, column: 35, scope: !174)
!181 = !DILocation(line: 71, column: 43, scope: !182)
!182 = !DILexicalBlockFile(scope: !174, file: !7, discriminator: 2)
!183 = !DILocation(line: 71, column: 38, scope: !174)
!184 = !DILocation(line: 71, column: 11, scope: !158)
!185 = !DILocation(line: 72, column: 13, scope: !174)
!186 = !DILocation(line: 72, column: 9, scope: !174)
!187 = !DILocation(line: 73, column: 16, scope: !188)
!188 = distinct !DILexicalBlock(scope: !174, file: !7, line: 73, column: 16)
!189 = !DILocation(line: 73, column: 19, scope: !188)
!190 = !DILocation(line: 73, column: 16, scope: !174)
!191 = !DILocation(line: 74, column: 24, scope: !188)
!192 = !DILocation(line: 74, column: 28, scope: !188)
!193 = !DILocation(line: 74, column: 17, scope: !188)
!194 = !DILocation(line: 74, column: 9, scope: !188)
!195 = !DILocation(line: 76, column: 15, scope: !196)
!196 = distinct !DILexicalBlock(scope: !188, file: !7, line: 74, column: 32)
!197 = !DILocation(line: 77, column: 11, scope: !196)
!198 = !DILocation(line: 79, column: 15, scope: !196)
!199 = !DILocation(line: 80, column: 15, scope: !196)
!200 = !DILocation(line: 81, column: 11, scope: !196)
!201 = !DILocation(line: 83, column: 14, scope: !196)
!202 = !DILocation(line: 84, column: 11, scope: !196)
!203 = !DILocation(line: 85, column: 9, scope: !196)
!204 = !DILocation(line: 87, column: 13, scope: !188)
!205 = !DILocation(line: 88, column: 5, scope: !158)
!206 = !DILocation(line: 88, column: 16, scope: !207)
!207 = distinct !DILexicalBlock(scope: !154, file: !7, line: 88, column: 16)
!208 = !DILocation(line: 88, column: 22, scope: !207)
!209 = !DILocation(line: 88, column: 27, scope: !207)
!210 = !DILocation(line: 88, column: 30, scope: !211)
!211 = !DILexicalBlockFile(scope: !207, file: !7, discriminator: 1)
!212 = !DILocation(line: 88, column: 16, scope: !154)
!213 = !DILocation(line: 89, column: 11, scope: !214)
!214 = distinct !DILexicalBlock(scope: !207, file: !7, line: 88, column: 39)
!215 = !DILocation(line: 90, column: 10, scope: !214)
!216 = !DILocation(line: 91, column: 5, scope: !214)
!217 = !DILocation(line: 92, column: 9, scope: !218)
!218 = distinct !DILexicalBlock(scope: !68, file: !7, line: 92, column: 9)
!219 = !DILocation(line: 92, column: 14, scope: !218)
!220 = !DILocation(line: 92, column: 9, scope: !68)
!221 = !DILocation(line: 93, column: 22, scope: !218)
!222 = !DILocation(line: 93, column: 29, scope: !218)
!223 = !DILocation(line: 93, column: 15, scope: !218)
!224 = !DILocation(line: 93, column: 7, scope: !218)
!225 = !DILocation(line: 95, column: 13, scope: !226)
!226 = distinct !DILexicalBlock(scope: !218, file: !7, line: 93, column: 33)
!227 = !DILocation(line: 96, column: 9, scope: !226)
!228 = !DILocation(line: 98, column: 17, scope: !226)
!229 = !DILocation(line: 98, column: 20, scope: !226)
!230 = !DILocation(line: 98, column: 13, scope: !226)
!231 = !DILocation(line: 99, column: 9, scope: !226)
!232 = !DILocation(line: 101, column: 17, scope: !226)
!233 = !DILocation(line: 101, column: 20, scope: !226)
!234 = !DILocation(line: 101, column: 13, scope: !226)
!235 = !DILocation(line: 102, column: 9, scope: !226)
!236 = !DILocation(line: 103, column: 7, scope: !226)
!237 = !DILocation(line: 104, column: 14, scope: !238)
!238 = distinct !DILexicalBlock(scope: !218, file: !7, line: 104, column: 14)
!239 = !DILocation(line: 104, column: 19, scope: !238)
!240 = !DILocation(line: 104, column: 14, scope: !218)
!241 = !DILocation(line: 105, column: 22, scope: !238)
!242 = !DILocation(line: 105, column: 29, scope: !238)
!243 = !DILocation(line: 105, column: 15, scope: !238)
!244 = !DILocation(line: 105, column: 7, scope: !238)
!245 = !DILocation(line: 107, column: 13, scope: !246)
!246 = distinct !DILexicalBlock(scope: !238, file: !7, line: 105, column: 33)
!247 = !DILocation(line: 108, column: 9, scope: !246)
!248 = !DILocation(line: 111, column: 13, scope: !246)
!249 = !DILocation(line: 112, column: 9, scope: !246)
!250 = !DILocation(line: 113, column: 7, scope: !246)
!251 = !DILocation(line: 114, column: 9, scope: !252)
!252 = distinct !DILexicalBlock(scope: !68, file: !7, line: 114, column: 9)
!253 = !DILocation(line: 114, column: 9, scope: !68)
!254 = !DILocation(line: 115, column: 15, scope: !252)
!255 = !DILocation(line: 115, column: 34, scope: !252)
!256 = !DILocation(line: 115, column: 7, scope: !252)
!257 = !DILocation(line: 116, column: 9, scope: !258)
!258 = distinct !DILexicalBlock(scope: !68, file: !7, line: 116, column: 9)
!259 = !DILocation(line: 116, column: 9, scope: !68)
!260 = !DILocation(line: 117, column: 15, scope: !258)
!261 = !DILocation(line: 117, column: 35, scope: !258)
!262 = !DILocation(line: 117, column: 7, scope: !258)
!263 = !DILocation(line: 118, column: 13, scope: !68)
!264 = !DILocation(line: 118, column: 5, scope: !68)
!265 = !DILocation(line: 119, column: 9, scope: !266)
!266 = distinct !DILexicalBlock(scope: !68, file: !7, line: 119, column: 9)
!267 = !DILocation(line: 119, column: 9, scope: !68)
!268 = !DILocation(line: 120, column: 15, scope: !266)
!269 = !DILocation(line: 120, column: 7, scope: !266)
!270 = !DILocation(line: 121, column: 13, scope: !68)
!271 = !DILocation(line: 121, column: 5, scope: !68)
!272 = !DILocation(line: 122, column: 13, scope: !68)
!273 = !DILocation(line: 122, column: 50, scope: !68)
!274 = !DILocation(line: 122, column: 41, scope: !68)
!275 = !DILocation(line: 122, column: 57, scope: !68)
!276 = !DILocation(line: 122, column: 63, scope: !68)
!277 = !DILocation(line: 122, column: 68, scope: !68)
!278 = !DILocation(line: 122, column: 71, scope: !68)
!279 = !DILocation(line: 122, column: 5, scope: !68)
!280 = !DILocation(line: 123, column: 9, scope: !281)
!281 = distinct !DILexicalBlock(scope: !68, file: !7, line: 123, column: 9)
!282 = !DILocation(line: 123, column: 9, scope: !68)
!283 = !DILocation(line: 124, column: 15, scope: !281)
!284 = !DILocation(line: 124, column: 32, scope: !281)
!285 = !DILocation(line: 124, column: 7, scope: !281)
!286 = !DILocation(line: 125, column: 9, scope: !287)
!287 = distinct !DILexicalBlock(scope: !68, file: !7, line: 125, column: 9)
!288 = !DILocation(line: 125, column: 9, scope: !68)
!289 = !DILocation(line: 126, column: 15, scope: !287)
!290 = !DILocation(line: 126, column: 32, scope: !287)
!291 = !DILocation(line: 126, column: 7, scope: !287)
!292 = !DILocation(line: 127, column: 11, scope: !68)
!293 = !DILocation(line: 127, column: 17, scope: !68)
!294 = !DILocation(line: 127, column: 15, scope: !68)
!295 = !DILocation(line: 127, column: 9, scope: !68)
!296 = !DILocation(line: 128, column: 9, scope: !297)
!297 = distinct !DILexicalBlock(scope: !68, file: !7, line: 128, column: 9)
!298 = !DILocation(line: 128, column: 9, scope: !68)
!299 = !DILocation(line: 129, column: 15, scope: !297)
!300 = !DILocation(line: 129, column: 32, scope: !297)
!301 = !DILocation(line: 129, column: 36, scope: !297)
!302 = !DILocation(line: 129, column: 53, scope: !297)
!303 = !DILocation(line: 129, column: 7, scope: !297)
!304 = !DILocation(line: 132, column: 13, scope: !68)
!305 = !DILocation(line: 132, column: 66, scope: !68)
!306 = !DILocation(line: 132, column: 57, scope: !68)
!307 = !DILocation(line: 132, column: 73, scope: !68)
!308 = !DILocation(line: 132, column: 79, scope: !68)
!309 = !DILocation(line: 132, column: 84, scope: !68)
!310 = !DILocation(line: 132, column: 87, scope: !68)
!311 = !DILocation(line: 132, column: 5, scope: !68)
!312 = !DILocation(line: 133, column: 9, scope: !313)
!313 = distinct !DILexicalBlock(scope: !68, file: !7, line: 133, column: 9)
!314 = !DILocation(line: 133, column: 9, scope: !68)
!315 = !DILocation(line: 134, column: 15, scope: !313)
!316 = !DILocation(line: 134, column: 30, scope: !313)
!317 = !DILocation(line: 134, column: 7, scope: !313)
!318 = !DILocation(line: 135, column: 9, scope: !319)
!319 = distinct !DILexicalBlock(scope: !68, file: !7, line: 135, column: 9)
!320 = !DILocation(line: 135, column: 9, scope: !68)
!321 = !DILocation(line: 136, column: 15, scope: !319)
!322 = !DILocation(line: 136, column: 34, scope: !319)
!323 = !DILocation(line: 136, column: 33, scope: !319)
!324 = !DILocation(line: 136, column: 39, scope: !319)
!325 = !DILocation(line: 136, column: 32, scope: !319)
!326 = !DILocation(line: 136, column: 57, scope: !319)
!327 = !DILocation(line: 136, column: 56, scope: !319)
!328 = !DILocation(line: 136, column: 7, scope: !319)
!329 = !DILocation(line: 137, column: 13, scope: !68)
!330 = !DILocation(line: 137, column: 5, scope: !68)
!331 = !DILocation(line: 138, column: 9, scope: !332)
!332 = distinct !DILexicalBlock(scope: !68, file: !7, line: 138, column: 9)
!333 = !DILocation(line: 138, column: 9, scope: !68)
!334 = !DILocation(line: 139, column: 15, scope: !332)
!335 = !DILocation(line: 139, column: 7, scope: !332)
!336 = !DILocation(line: 140, column: 3, scope: !68)
!337 = !DILocation(line: 25, column: 29, scope: !63)
!338 = !DILocation(line: 25, column: 3, scope: !63)
!339 = !DILocation(line: 141, column: 1, scope: !6)
!340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 1, scope: !10, file: !7, line: 143, type: !4)
!341 = !DILocation(line: 143, column: 16, scope: !10)
!342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !10, file: !7, line: 143, type: !4)
!343 = !DILocation(line: 143, column: 23, scope: !10)
!344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !10, file: !7, line: 144, type: !4)
!345 = !DILocation(line: 144, column: 7, scope: !10)
!346 = !DILocation(line: 145, column: 15, scope: !10)
!347 = !DILocation(line: 145, column: 18, scope: !10)
!348 = !DILocation(line: 145, column: 7, scope: !10)
!349 = !DILocation(line: 145, column: 5, scope: !10)
!350 = !DILocation(line: 146, column: 7, scope: !351)
!351 = distinct !DILexicalBlock(scope: !10, file: !7, line: 146, column: 7)
!352 = !DILocation(line: 146, column: 9, scope: !351)
!353 = !DILocation(line: 146, column: 14, scope: !351)
!354 = !DILocation(line: 146, column: 17, scope: !355)
!355 = !DILexicalBlockFile(scope: !351, file: !7, discriminator: 1)
!356 = !DILocation(line: 146, column: 19, scope: !351)
!357 = !DILocation(line: 146, column: 7, scope: !10)
!358 = !DILocation(line: 147, column: 17, scope: !351)
!359 = !DILocation(line: 147, column: 20, scope: !351)
!360 = !DILocation(line: 147, column: 22, scope: !351)
!361 = !DILocation(line: 147, column: 9, scope: !351)
!362 = !DILocation(line: 147, column: 7, scope: !351)
!363 = !DILocation(line: 147, column: 5, scope: !351)
!364 = !DILocation(line: 148, column: 11, scope: !10)
!365 = !DILocation(line: 148, column: 3, scope: !10)
!366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 1, scope: !13, file: !7, line: 151, type: !4)
!367 = !DILocation(line: 151, column: 17, scope: !13)
!368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !13, file: !7, line: 151, type: !4)
!369 = !DILocation(line: 151, column: 24, scope: !13)
!370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ct", scope: !13, file: !7, line: 152, type: !4)
!371 = !DILocation(line: 152, column: 7, scope: !13)
!372 = !DILocation(line: 153, column: 3, scope: !13)
!373 = !DILocation(line: 153, column: 22, scope: !374)
!374 = !DILexicalBlockFile(scope: !375, file: !7, discriminator: 2)
!375 = !DILexicalBlockFile(scope: !13, file: !7, discriminator: 1)
!376 = !DILocation(line: 153, column: 25, scope: !13)
!377 = !DILocation(line: 153, column: 16, scope: !13)
!378 = !DILocation(line: 153, column: 14, scope: !13)
!379 = !DILocation(line: 153, column: 29, scope: !13)
!380 = !DILocation(line: 154, column: 6, scope: !13)
!381 = !DILocation(line: 155, column: 7, scope: !382)
!382 = distinct !DILexicalBlock(scope: !13, file: !7, line: 155, column: 7)
!383 = !DILocation(line: 155, column: 10, scope: !382)
!384 = !DILocation(line: 155, column: 17, scope: !382)
!385 = !DILocation(line: 155, column: 20, scope: !386)
!386 = !DILexicalBlockFile(scope: !382, file: !7, discriminator: 1)
!387 = !DILocation(line: 155, column: 23, scope: !382)
!388 = !DILocation(line: 155, column: 7, scope: !13)
!389 = !DILocation(line: 156, column: 13, scope: !382)
!390 = !DILocation(line: 156, column: 5, scope: !382)
!391 = !DILocation(line: 157, column: 28, scope: !392)
!392 = distinct !DILexicalBlock(scope: !13, file: !7, line: 157, column: 7)
!393 = !DILocation(line: 157, column: 19, scope: !392)
!394 = !DILocation(line: 157, column: 25, scope: !392)
!395 = !DILocation(line: 157, column: 31, scope: !392)
!396 = !DILocation(line: 157, column: 12, scope: !392)
!397 = !DILocation(line: 157, column: 10, scope: !392)
!398 = !DILocation(line: 157, column: 7, scope: !13)
!399 = !DILocation(line: 158, column: 13, scope: !392)
!400 = !DILocation(line: 158, column: 5, scope: !392)
!401 = !DILocation(line: 159, column: 3, scope: !13)
!402 = !DILocation(line: 160, column: 1, scope: !13)
!403 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !14, file: !7, line: 162, type: !17)
!404 = !DILocation(line: 162, column: 18, scope: !14)
!405 = !DILocation(line: 163, column: 7, scope: !406)
!406 = distinct !DILexicalBlock(scope: !14, file: !7, line: 163, column: 7)
!407 = !DILocation(line: 163, column: 9, scope: !406)
!408 = !DILocation(line: 163, column: 7, scope: !14)
!409 = !DILocation(line: 164, column: 5, scope: !406)
!410 = !DILocation(line: 165, column: 19, scope: !411)
!411 = distinct !DILexicalBlock(scope: !14, file: !7, line: 165, column: 7)
!412 = !DILocation(line: 165, column: 14, scope: !411)
!413 = !DILocation(line: 165, column: 8, scope: !411)
!414 = !DILocation(line: 165, column: 7, scope: !14)
!415 = !DILocation(line: 166, column: 5, scope: !411)
!416 = !DILocation(line: 167, column: 7, scope: !417)
!417 = distinct !DILexicalBlock(scope: !14, file: !7, line: 167, column: 7)
!418 = !DILocation(line: 167, column: 12, scope: !417)
!419 = !DILocation(line: 167, column: 7, scope: !14)
!420 = !DILocation(line: 168, column: 6, scope: !417)
!421 = !DILocation(line: 168, column: 5, scope: !417)
!422 = !DILocation(line: 169, column: 7, scope: !423)
!423 = distinct !DILexicalBlock(scope: !14, file: !7, line: 169, column: 7)
!424 = !DILocation(line: 169, column: 12, scope: !423)
!425 = !DILocation(line: 169, column: 7, scope: !14)
!426 = !DILocation(line: 170, column: 5, scope: !423)
!427 = !DILocation(line: 171, column: 11, scope: !14)
!428 = !DILocation(line: 171, column: 3, scope: !14)
!429 = !DILocation(line: 173, column: 5, scope: !430)
!430 = distinct !DILexicalBlock(scope: !14, file: !7, line: 171, column: 17)
!431 = !DILocation(line: 175, column: 5, scope: !430)
!432 = !DILocation(line: 177, column: 3, scope: !14)
!433 = !DILocation(line: 178, column: 1, scope: !14)
