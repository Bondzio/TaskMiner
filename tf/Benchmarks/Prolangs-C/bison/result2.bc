; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define void @TC(i32* %R, i32 %n) #0 {
entry:
  call void @llvm.dbg.value(metadata i32* %R, i64 0, metadata !18, metadata !19), !dbg !20
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !21, metadata !19), !dbg !22
  %add = add nsw i32 %n, 31, !dbg !23
  %div = sdiv i32 %add, 32, !dbg !23
  %conv = sext i32 %div to i64, !dbg !23
  %mul = mul i64 %conv, 4, !dbg !24
  %conv1 = trunc i64 %mul to i32, !dbg !23
  call void @llvm.dbg.value(metadata i32 %conv1, i64 0, metadata !25, metadata !19), !dbg !26
  %tmp2 = bitcast i32* %R to i8*, !dbg !27
  %mul2 = mul nsw i32 %n, %conv1, !dbg !28
  %idx.ext = sext i32 %mul2 to i64, !dbg !29
  %add.ptr = getelementptr inbounds i8, i8* %tmp2, i64 %idx.ext, !dbg !29
  %tmp5 = bitcast i8* %add.ptr to i32*, !dbg !30
  call void @llvm.dbg.value(metadata i32* %tmp5, i64 0, metadata !31, metadata !19), !dbg !32
  call void @llvm.dbg.value(metadata i32* %R, i64 0, metadata !33, metadata !19), !dbg !34
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !35, metadata !19), !dbg !36
  call void @llvm.dbg.value(metadata i32* %R, i64 0, metadata !37, metadata !19), !dbg !38
  br label %while.cond, !dbg !39

while.cond:                                       ; preds = %if.end.24, %entry
  %mask.0 = phi i32 [ 1, %entry ], [ %mask.1, %if.end.24 ]
  %cword.0 = phi i32* [ %R, %entry ], [ %cword.1, %if.end.24 ]
  %rowi.0 = phi i32* [ %R, %entry ], [ %tmp42, %if.end.24 ]
  %cmp = icmp ult i32* %rowi.0, %tmp5, !dbg !40
  br i1 %cmp, label %while.body, label %while.end.27, !dbg !39

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32* %cword.0, i64 0, metadata !41, metadata !19), !dbg !42
  call void @llvm.dbg.value(metadata i32* %R, i64 0, metadata !43, metadata !19), !dbg !44
  br label %while.cond.4, !dbg !45

while.cond.4:                                     ; preds = %if.end, %while.body
  %rowj.0 = phi i32* [ %R, %while.body ], [ %rowj.2, %if.end ]
  %ccol.0 = phi i32* [ %cword.0, %while.body ], [ %tmp35, %if.end ]
  %cmp5 = icmp ult i32* %rowj.0, %tmp5, !dbg !47
  br i1 %cmp5, label %while.body.7, label %while.end.19, !dbg !45

while.body.7:                                     ; preds = %while.cond.4
  %tmp15 = load i32, i32* %ccol.0, align 4, !dbg !48
  %and = and i32 %tmp15, %mask.0, !dbg !51
  %tobool = icmp ne i32 %and, 0, !dbg !51
  br i1 %tobool, label %if.then, label %if.else, !dbg !52

if.then:                                          ; preds = %while.body.7
  call void @llvm.dbg.value(metadata i32* %rowi.0, i64 0, metadata !53, metadata !19), !dbg !54
  %tmp19 = bitcast i32* %rowj.0 to i8*, !dbg !55
  %idx.ext8 = sext i32 %conv1 to i64, !dbg !57
  %add.ptr9 = getelementptr inbounds i8, i8* %tmp19, i64 %idx.ext8, !dbg !57
  %tmp21 = bitcast i8* %add.ptr9 to i32*, !dbg !58
  call void @llvm.dbg.value(metadata i32* %tmp21, i64 0, metadata !59, metadata !19), !dbg !60
  br label %while.cond.10, !dbg !61

while.cond.10:                                    ; preds = %while.body.13, %if.then
  %rp.0 = phi i32* [ %rowi.0, %if.then ], [ %incdec.ptr, %while.body.13 ]
  %rowj.1 = phi i32* [ %rowj.0, %if.then ], [ %incdec.ptr14, %while.body.13 ]
  %cmp11 = icmp ult i32* %rowj.1, %tmp21, !dbg !62
  br i1 %cmp11, label %while.body.13, label %while.end, !dbg !61

while.body.13:                                    ; preds = %while.cond.10
  %incdec.ptr = getelementptr inbounds i32, i32* %rp.0, i32 1, !dbg !63
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, i64 0, metadata !53, metadata !19), !dbg !54
  %tmp25 = load i32, i32* %rp.0, align 4, !dbg !64
  %incdec.ptr14 = getelementptr inbounds i32, i32* %rowj.1, i32 1, !dbg !65
  call void @llvm.dbg.value(metadata i32* %incdec.ptr14, i64 0, metadata !43, metadata !19), !dbg !44
  %tmp27 = load i32, i32* %rowj.1, align 4, !dbg !66
  %or = or i32 %tmp27, %tmp25, !dbg !66
  store i32 %or, i32* %rowj.1, align 4, !dbg !66
  br label %while.cond.10, !dbg !61

while.end:                                        ; preds = %while.cond.10
  %rowj.1.lcssa = phi i32* [ %rowj.1, %while.cond.10 ]
  br label %if.end, !dbg !67

if.else:                                          ; preds = %while.body.7
  %tmp29 = bitcast i32* %rowj.0 to i8*, !dbg !68
  %idx.ext15 = sext i32 %conv1 to i64, !dbg !70
  %add.ptr16 = getelementptr inbounds i8, i8* %tmp29, i64 %idx.ext15, !dbg !70
  %tmp31 = bitcast i8* %add.ptr16 to i32*, !dbg !71
  call void @llvm.dbg.value(metadata i32* %tmp31, i64 0, metadata !43, metadata !19), !dbg !44
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  %rowj.2 = phi i32* [ %rowj.1.lcssa, %while.end ], [ %tmp31, %if.else ]
  %tmp33 = bitcast i32* %ccol.0 to i8*, !dbg !72
  %idx.ext17 = sext i32 %conv1 to i64, !dbg !73
  %add.ptr18 = getelementptr inbounds i8, i8* %tmp33, i64 %idx.ext17, !dbg !73
  %tmp35 = bitcast i8* %add.ptr18 to i32*, !dbg !74
  call void @llvm.dbg.value(metadata i32* %tmp35, i64 0, metadata !41, metadata !19), !dbg !42
  br label %while.cond.4, !dbg !45

while.end.19:                                     ; preds = %while.cond.4
  %shl = shl i32 %mask.0, 1, !dbg !75
  call void @llvm.dbg.value(metadata i32 %shl, i64 0, metadata !35, metadata !19), !dbg !36
  %cmp20 = icmp eq i32 %shl, 0, !dbg !76
  br i1 %cmp20, label %if.then.22, label %if.end.24, !dbg !78

if.then.22:                                       ; preds = %while.end.19
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !35, metadata !19), !dbg !36
  %incdec.ptr23 = getelementptr inbounds i32, i32* %cword.0, i32 1, !dbg !79
  call void @llvm.dbg.value(metadata i32* %incdec.ptr23, i64 0, metadata !33, metadata !19), !dbg !34
  br label %if.end.24, !dbg !81

if.end.24:                                        ; preds = %if.then.22, %while.end.19
  %mask.1 = phi i32 [ 1, %if.then.22 ], [ %shl, %while.end.19 ]
  %cword.1 = phi i32* [ %incdec.ptr23, %if.then.22 ], [ %cword.0, %while.end.19 ]
  %tmp40 = bitcast i32* %rowi.0 to i8*, !dbg !82
  %idx.ext25 = sext i32 %conv1 to i64, !dbg !83
  %add.ptr26 = getelementptr inbounds i8, i8* %tmp40, i64 %idx.ext25, !dbg !83
  %tmp42 = bitcast i8* %add.ptr26 to i32*, !dbg !84
  call void @llvm.dbg.value(metadata i32* %tmp42, i64 0, metadata !37, metadata !19), !dbg !38
  br label %while.cond, !dbg !39

while.end.27:                                     ; preds = %while.cond
  ret void, !dbg !85
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @RTC(i32* %R, i32 %n) #0 {
entry:
  call void @llvm.dbg.value(metadata i32* %R, i64 0, metadata !86, metadata !19), !dbg !87
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !88, metadata !19), !dbg !89
  call void @TC(i32* %R, i32 %n), !dbg !90
  %add = add nsw i32 %n, 31, !dbg !91
  %div = sdiv i32 %add, 32, !dbg !91
  %conv = sext i32 %div to i64, !dbg !91
  %mul = mul i64 %conv, 4, !dbg !92
  %conv1 = trunc i64 %mul to i32, !dbg !91
  call void @llvm.dbg.value(metadata i32 %conv1, i64 0, metadata !93, metadata !19), !dbg !94
  %tmp4 = bitcast i32* %R to i8*, !dbg !95
  %mul2 = mul nsw i32 %n, %conv1, !dbg !96
  %idx.ext = sext i32 %mul2 to i64, !dbg !97
  %add.ptr = getelementptr inbounds i8, i8* %tmp4, i64 %idx.ext, !dbg !97
  %tmp7 = bitcast i8* %add.ptr to i32*, !dbg !98
  call void @llvm.dbg.value(metadata i32* %tmp7, i64 0, metadata !99, metadata !19), !dbg !100
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !101, metadata !19), !dbg !102
  call void @llvm.dbg.value(metadata i32* %R, i64 0, metadata !103, metadata !19), !dbg !104
  br label %while.cond, !dbg !105

while.cond:                                       ; preds = %if.end, %entry
  %mask.0 = phi i32 [ 1, %entry ], [ %mask.1, %if.end ]
  %rp.0 = phi i32* [ %R, %entry ], [ %tmp20, %if.end ]
  %cmp = icmp ult i32* %rp.0, %tmp7, !dbg !106
  br i1 %cmp, label %while.body, label %while.end, !dbg !105

while.body:                                       ; preds = %while.cond
  %tmp13 = load i32, i32* %rp.0, align 4, !dbg !107
  %or = or i32 %tmp13, %mask.0, !dbg !107
  store i32 %or, i32* %rp.0, align 4, !dbg !107
  %shl = shl i32 %mask.0, 1, !dbg !109
  call void @llvm.dbg.value(metadata i32 %shl, i64 0, metadata !101, metadata !19), !dbg !102
  %cmp4 = icmp eq i32 %shl, 0, !dbg !110
  br i1 %cmp4, label %if.then, label %if.end, !dbg !112

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !101, metadata !19), !dbg !102
  %incdec.ptr = getelementptr inbounds i32, i32* %rp.0, i32 1, !dbg !113
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, i64 0, metadata !103, metadata !19), !dbg !104
  br label %if.end, !dbg !115

if.end:                                           ; preds = %if.then, %while.body
  %mask.1 = phi i32 [ 1, %if.then ], [ %shl, %while.body ]
  %rp.1 = phi i32* [ %incdec.ptr, %if.then ], [ %rp.0, %while.body ]
  %tmp18 = bitcast i32* %rp.1 to i8*, !dbg !116
  %idx.ext6 = sext i32 %conv1 to i64, !dbg !117
  %add.ptr7 = getelementptr inbounds i8, i8* %tmp18, i64 %idx.ext6, !dbg !117
  %tmp20 = bitcast i8* %add.ptr7 to i32*, !dbg !118
  call void @llvm.dbg.value(metadata i32* %tmp20, i64 0, metadata !103, metadata !19), !dbg !104
  br label %while.cond, !dbg !105

while.end:                                        ; preds = %while.cond
  ret void, !dbg !119
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!15, !16}
!llvm.ident = !{!17}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !8)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/bison")
!2 = !{}
!3 = !{!4, !6}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!7 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!8 = !{!9, !14}
!9 = !DISubprogram(name: "TC", scope: !10, file: !10, line: 27, type: !11, isLocal: false, isDefinition: true, scopeLine: 27, flags: DIFlagPrototyped, isOptimized: false, function: void (i32*, i32)* @TC, variables: !2)
!10 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Prolangs-C/bison/tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/bison")
!11 = !DISubroutineType(types: !12)
!12 = !{null, !4, !13}
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !DISubprogram(name: "RTC", scope: !10, file: !10, line: 76, type: !11, isLocal: false, isDefinition: true, scopeLine: 76, flags: DIFlagPrototyped, isOptimized: false, function: void (i32*, i32)* @RTC, variables: !2)
!15 = !{i32 2, !"Dwarf Version", i32 4}
!16 = !{i32 2, !"Debug Info Version", i32 3}
!17 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!18 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "R", arg: 1, scope: !9, file: !10, line: 27, type: !4)
!19 = !DIExpression()
!20 = !DILocation(line: 27, column: 19, scope: !9)
!21 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !9, file: !10, line: 27, type: !13)
!22 = !DILocation(line: 27, column: 26, scope: !9)
!23 = !DILocation(line: 39, column: 13, scope: !9)
!24 = !DILocation(line: 39, column: 25, scope: !9)
!25 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rowsize", scope: !9, file: !10, line: 28, type: !13)
!26 = !DILocation(line: 28, column: 16, scope: !9)
!27 = !DILocation(line: 40, column: 25, scope: !9)
!28 = !DILocation(line: 40, column: 40, scope: !9)
!29 = !DILocation(line: 40, column: 35, scope: !9)
!30 = !DILocation(line: 40, column: 12, scope: !9)
!31 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "relend", scope: !9, file: !10, line: 35, type: !4)
!32 = !DILocation(line: 35, column: 13, scope: !9)
!33 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cword", scope: !9, file: !10, line: 36, type: !4)
!34 = !DILocation(line: 36, column: 13, scope: !9)
!35 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !9, file: !10, line: 29, type: !5)
!36 = !DILocation(line: 29, column: 21, scope: !9)
!37 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rowi", scope: !9, file: !10, line: 37, type: !4)
!38 = !DILocation(line: 37, column: 13, scope: !9)
!39 = !DILocation(line: 45, column: 3, scope: !9)
!40 = !DILocation(line: 45, column: 15, scope: !9)
!41 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ccol", scope: !9, file: !10, line: 33, type: !4)
!42 = !DILocation(line: 33, column: 22, scope: !9)
!43 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rowj", scope: !9, file: !10, line: 30, type: !4)
!44 = !DILocation(line: 30, column: 22, scope: !9)
!45 = !DILocation(line: 49, column: 5, scope: !46)
!46 = distinct !DILexicalBlock(scope: !9, file: !10, line: 45, column: 25)
!47 = !DILocation(line: 49, column: 17, scope: !46)
!48 = !DILocation(line: 50, column: 11, scope: !49)
!49 = distinct !DILexicalBlock(scope: !50, file: !10, line: 50, column: 11)
!50 = distinct !DILexicalBlock(scope: !46, file: !10, line: 49, column: 27)
!51 = !DILocation(line: 50, column: 17, scope: !49)
!52 = !DILocation(line: 50, column: 11, scope: !50)
!53 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rp", scope: !9, file: !10, line: 31, type: !4)
!54 = !DILocation(line: 31, column: 22, scope: !9)
!55 = !DILocation(line: 52, column: 29, scope: !56)
!56 = distinct !DILexicalBlock(scope: !49, file: !10, line: 50, column: 25)
!57 = !DILocation(line: 52, column: 42, scope: !56)
!58 = !DILocation(line: 52, column: 16, scope: !56)
!59 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rend", scope: !9, file: !10, line: 32, type: !4)
!60 = !DILocation(line: 32, column: 22, scope: !9)
!61 = !DILocation(line: 54, column: 9, scope: !56)
!62 = !DILocation(line: 54, column: 21, scope: !56)
!63 = !DILocation(line: 55, column: 25, scope: !56)
!64 = !DILocation(line: 55, column: 22, scope: !56)
!65 = !DILocation(line: 55, column: 16, scope: !56)
!66 = !DILocation(line: 55, column: 19, scope: !56)
!67 = !DILocation(line: 56, column: 7, scope: !56)
!68 = !DILocation(line: 57, column: 29, scope: !69)
!69 = distinct !DILexicalBlock(scope: !49, file: !10, line: 56, column: 14)
!70 = !DILocation(line: 57, column: 42, scope: !69)
!71 = !DILocation(line: 57, column: 16, scope: !69)
!72 = !DILocation(line: 60, column: 27, scope: !50)
!73 = !DILocation(line: 60, column: 40, scope: !50)
!74 = !DILocation(line: 60, column: 14, scope: !50)
!75 = !DILocation(line: 63, column: 10, scope: !46)
!76 = !DILocation(line: 64, column: 14, scope: !77)
!77 = distinct !DILexicalBlock(scope: !46, file: !10, line: 64, column: 9)
!78 = !DILocation(line: 64, column: 9, scope: !46)
!79 = !DILocation(line: 66, column: 12, scope: !80)
!80 = distinct !DILexicalBlock(scope: !77, file: !10, line: 64, column: 20)
!81 = !DILocation(line: 67, column: 5, scope: !80)
!82 = !DILocation(line: 69, column: 25, scope: !46)
!83 = !DILocation(line: 69, column: 38, scope: !46)
!84 = !DILocation(line: 69, column: 12, scope: !46)
!85 = !DILocation(line: 71, column: 1, scope: !9)
!86 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "R", arg: 1, scope: !14, file: !10, line: 76, type: !4)
!87 = !DILocation(line: 76, column: 20, scope: !14)
!88 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !14, file: !10, line: 76, type: !13)
!89 = !DILocation(line: 76, column: 27, scope: !14)
!90 = !DILocation(line: 82, column: 3, scope: !14)
!91 = !DILocation(line: 84, column: 13, scope: !14)
!92 = !DILocation(line: 84, column: 25, scope: !14)
!93 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rowsize", scope: !14, file: !10, line: 77, type: !13)
!94 = !DILocation(line: 77, column: 16, scope: !14)
!95 = !DILocation(line: 85, column: 25, scope: !14)
!96 = !DILocation(line: 85, column: 39, scope: !14)
!97 = !DILocation(line: 85, column: 35, scope: !14)
!98 = !DILocation(line: 85, column: 12, scope: !14)
!99 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "relend", scope: !14, file: !10, line: 80, type: !4)
!100 = !DILocation(line: 80, column: 22, scope: !14)
!101 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !14, file: !10, line: 78, type: !5)
!102 = !DILocation(line: 78, column: 21, scope: !14)
!103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rp", scope: !14, file: !10, line: 79, type: !4)
!104 = !DILocation(line: 79, column: 22, scope: !14)
!105 = !DILocation(line: 89, column: 3, scope: !14)
!106 = !DILocation(line: 89, column: 13, scope: !14)
!107 = !DILocation(line: 90, column: 9, scope: !108)
!108 = distinct !DILexicalBlock(scope: !14, file: !10, line: 89, column: 23)
!109 = !DILocation(line: 92, column: 10, scope: !108)
!110 = !DILocation(line: 93, column: 14, scope: !111)
!111 = distinct !DILexicalBlock(scope: !108, file: !10, line: 93, column: 9)
!112 = !DILocation(line: 93, column: 9, scope: !108)
!113 = !DILocation(line: 95, column: 9, scope: !114)
!114 = distinct !DILexicalBlock(scope: !111, file: !10, line: 93, column: 20)
!115 = !DILocation(line: 96, column: 5, scope: !114)
!116 = !DILocation(line: 98, column: 23, scope: !108)
!117 = !DILocation(line: 98, column: 34, scope: !108)
!118 = !DILocation(line: 98, column: 10, scope: !108)
!119 = !DILocation(line: 100, column: 1, scope: !14)
