; ModuleID = '/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.alias_node = type { i8*, %struct.alias_node*, %struct.alias_node* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@nargc = internal global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c":include:\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c".forward\00", align 1
@alias.t_dom = internal global [512 x i8] zeroinitializer, align 16
@alias.t_unam = internal global [512 x i8] zeroinitializer, align 16
@nargv = internal global [500 x i8*] zeroinitializer, align 16
@v_search.loaded = internal global i32 0, align 4
@aliases = internal global %struct.alias_node { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i32 0, i32 0), %struct.alias_node* null, %struct.alias_node* null }, align 8
@aliasfile = external global i8*, align 8
@debug = external global i32, align 4
@.str.4 = private unnamed_addr constant [30 x i8] c"load_alias open('%s') failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"load_alias '%s' includes file '%s'\0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"load_alias for '%s' failed\0A\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind uwtable
define i8** @alias(i32* %pargc, i8** %argv) #0 {
entry:
  %pargc.addr = alloca i32*, align 8
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %domain = alloca [512 x i8], align 16
  %ubuf = alloca [512 x i8], align 16
  %user = alloca i8*, align 8
  %addr = alloca %struct.alias_node*, align 8
  %addrstk = alloca %struct.alias_node, align 8
  %flist = alloca %struct.alias_node*, align 8
  %fliststk = alloca %struct.alias_node, align 8
  %u = alloca %struct.alias_node*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %a = alloca %struct.alias_node*, align 8
  %home = alloca i8*, align 8
  %buf = alloca [512 x i8], align 16
  %aliased = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  %p = alloca i8*, align 8
  %dtmpb = alloca [512 x i8], align 16
  %utmpb = alloca [512 x i8], align 16
  %ut = alloca i8*, align 8
  %user_inalias = alloca i32, align 4
  %t = alloca %struct.alias_node*, align 8
  %t_user = alloca i8*, align 8
  store i32* %pargc, i32** %pargc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pargc.addr, metadata !66, metadata !67), !dbg !68
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !69, metadata !67), !dbg !70
  call void @llvm.dbg.declare(metadata i32* %i, metadata !71, metadata !67), !dbg !72
  call void @llvm.dbg.declare(metadata [512 x i8]* %domain, metadata !73, metadata !67), !dbg !74
  call void @llvm.dbg.declare(metadata [512 x i8]* %ubuf, metadata !75, metadata !67), !dbg !76
  call void @llvm.dbg.declare(metadata i8** %user, metadata !77, metadata !67), !dbg !78
  call void @llvm.dbg.declare(metadata %struct.alias_node** %addr, metadata !79, metadata !67), !dbg !80
  call void @llvm.dbg.declare(metadata %struct.alias_node* %addrstk, metadata !81, metadata !67), !dbg !82
  call void @llvm.dbg.declare(metadata %struct.alias_node** %flist, metadata !83, metadata !67), !dbg !84
  call void @llvm.dbg.declare(metadata %struct.alias_node* %fliststk, metadata !85, metadata !67), !dbg !86
  call void @llvm.dbg.declare(metadata %struct.alias_node** %u, metadata !87, metadata !67), !dbg !88
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !89, metadata !67), !dbg !149
  call void @llvm.dbg.declare(metadata %struct.alias_node** %a, metadata !150, metadata !67), !dbg !151
  call void @llvm.dbg.declare(metadata i8** %home, metadata !152, metadata !67), !dbg !153
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf, metadata !154, metadata !67), !dbg !155
  call void @llvm.dbg.declare(metadata i32* %aliased, metadata !156, metadata !67), !dbg !157
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !158, metadata !67), !dbg !195
  store %struct.alias_node* %addrstk, %struct.alias_node** %addr, align 8, !dbg !196
  store %struct.alias_node* %fliststk, %struct.alias_node** %flist, align 8, !dbg !197
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %ubuf, i32 0, i32 0, !dbg !198
  store i8* %arraydecay, i8** %user, align 8, !dbg !199
  %0 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !200
  %horz = getelementptr inbounds %struct.alias_node, %struct.alias_node* %0, i32 0, i32 1, !dbg !201
  store %struct.alias_node* null, %struct.alias_node** %horz, align 8, !dbg !202
  %1 = load %struct.alias_node*, %struct.alias_node** %flist, align 8, !dbg !203
  %horz1 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %1, i32 0, i32 1, !dbg !204
  store %struct.alias_node* null, %struct.alias_node** %horz1, align 8, !dbg !205
  store i32 0, i32* %i, align 4, !dbg !206
  br label %for.cond, !dbg !208

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !209
  %3 = load i32*, i32** %pargc.addr, align 8, !dbg !213
  %4 = load i32, i32* %3, align 4, !dbg !214
  %cmp = icmp slt i32 %2, %4, !dbg !215
  br i1 %cmp, label %for.body, label %for.end, !dbg !216

for.body:                                         ; preds = %for.cond
  %5 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !217
  %6 = load i32, i32* %i, align 4, !dbg !219
  %idxprom = sext i32 %6 to i64, !dbg !220
  %7 = load i8**, i8*** %argv.addr, align 8, !dbg !220
  %arrayidx = getelementptr inbounds i8*, i8** %7, i64 %idxprom, !dbg !220
  %8 = load i8*, i8** %arrayidx, align 8, !dbg !220
  call void @add_horz(%struct.alias_node* %5, i8* %8), !dbg !221
  br label %for.inc, !dbg !222

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !223
  %inc = add nsw i32 %9, 1, !dbg !223
  store i32 %inc, i32* %i, align 4, !dbg !223
  br label %for.cond, !dbg !224

for.end:                                          ; preds = %for.cond
  br label %while.cond, !dbg !225

while.cond:                                       ; preds = %if.end.185, %if.then.151, %if.then.146, %if.then.135, %if.then.101, %if.then.91, %if.end.31, %for.end
  %10 = load i32, i32* @nargc, align 4, !dbg !226
  %cmp2 = icmp slt i32 %10, 500, !dbg !229
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !230

land.rhs:                                         ; preds = %while.cond
  %11 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !231
  %call = call %struct.alias_node* @pop(%struct.alias_node* %11), !dbg !233
  store %struct.alias_node* %call, %struct.alias_node** %u, align 8, !dbg !234
  %cmp3 = icmp ne %struct.alias_node* %call, null, !dbg !235
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %12, label %while.body, label %while.end.186, !dbg !236

while.body:                                       ; preds = %land.end
  %13 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !238
  %string = getelementptr inbounds %struct.alias_node, %struct.alias_node* %13, i32 0, i32 0, !dbg !241
  %14 = load i8*, i8** %string, align 8, !dbg !241
  %call4 = call i32 (i8*, i8*, i32, ...) bitcast (i32 (...)* @strncmpic to i32 (i8*, i8*, i32, ...)*)(i8* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i32 9), !dbg !242
  %cmp5 = icmp eq i32 %call4, 0, !dbg !243
  br i1 %cmp5, label %if.then, label %if.end.32, !dbg !244

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i8** %p, metadata !245, metadata !67), !dbg !247
  %15 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !248
  %string6 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %15, i32 0, i32 0, !dbg !249
  %16 = load i8*, i8** %string6, align 8, !dbg !249
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 9, !dbg !250
  store i8* %add.ptr, i8** %p, align 8, !dbg !247
  %17 = load i8*, i8** %p, align 8, !dbg !251
  %18 = load i8, i8* %17, align 1, !dbg !253
  %conv = sext i8 %18 to i32, !dbg !253
  %cmp7 = icmp eq i32 %conv, 47, !dbg !254
  br i1 %cmp7, label %land.lhs.true, label %if.end.31, !dbg !255

land.lhs.true:                                    ; preds = %if.then
  %19 = load %struct.alias_node*, %struct.alias_node** %flist, align 8, !dbg !256
  %20 = load i8*, i8** %p, align 8, !dbg !258
  %call9 = call %struct.alias_node* @h_search(%struct.alias_node* %19, i8* %20), !dbg !259
  %cmp10 = icmp eq %struct.alias_node* %call9, null, !dbg !260
  br i1 %cmp10, label %if.then.12, label %if.end.31, !dbg !261

if.then.12:                                       ; preds = %land.lhs.true
  %21 = load %struct.alias_node*, %struct.alias_node** %flist, align 8, !dbg !262
  %22 = load i8*, i8** %p, align 8, !dbg !264
  call void @add_horz(%struct.alias_node* %21, i8* %22), !dbg !265
  %23 = load i8*, i8** %p, align 8, !dbg !266
  %call13 = call i32 @stat(i8* %23, %struct.stat* %st) #5, !dbg !268
  %cmp14 = icmp sge i32 %call13, 0, !dbg !269
  br i1 %cmp14, label %land.lhs.true.16, label %if.end, !dbg !270

land.lhs.true.16:                                 ; preds = %if.then.12
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !271
  %24 = load i32, i32* %st_mode, align 4, !dbg !271
  %and = and i32 %24, 61440, !dbg !273
  %cmp17 = icmp eq i32 %and, 32768, !dbg !274
  br i1 %cmp17, label %land.lhs.true.19, label %if.end, !dbg !275

land.lhs.true.19:                                 ; preds = %land.lhs.true.16
  %25 = load i8*, i8** %p, align 8, !dbg !276
  %call20 = call %struct._IO_FILE* @fopen(i8* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !278
  store %struct._IO_FILE* %call20, %struct._IO_FILE** %fp, align 8, !dbg !279
  %cmp21 = icmp ne %struct._IO_FILE* %call20, null, !dbg !280
  br i1 %cmp21, label %if.then.23, label %if.end, !dbg !281

if.then.23:                                       ; preds = %land.lhs.true.19
  br label %while.cond.24, !dbg !282

while.cond.24:                                    ; preds = %while.body.27, %if.then.23
  %arraydecay25 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !284
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !287
  %call26 = call i8* @fgets(i8* %arraydecay25, i32 512, %struct._IO_FILE* %26), !dbg !288
  %tobool = icmp ne i8* %call26, null, !dbg !282
  br i1 %tobool, label %while.body.27, label %while.end, !dbg !282

while.body.27:                                    ; preds = %while.cond.24
  %27 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !289
  %arraydecay28 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !291
  %call29 = call i32 @recipients(%struct.alias_node* %27, i8* %arraydecay28), !dbg !292
  br label %while.cond.24, !dbg !282

while.end:                                        ; preds = %while.cond.24
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !293
  %call30 = call i32 @fclose(%struct._IO_FILE* %28), !dbg !294
  br label %if.end, !dbg !295

if.end:                                           ; preds = %while.end, %land.lhs.true.19, %land.lhs.true.16, %if.then.12
  br label %if.end.31, !dbg !296

if.end.31:                                        ; preds = %if.end, %land.lhs.true, %if.then
  br label %while.cond, !dbg !297

if.end.32:                                        ; preds = %while.body
  %29 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !298
  %string33 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %29, i32 0, i32 0, !dbg !300
  %30 = load i8*, i8** %string33, align 8, !dbg !300
  %arraydecay34 = getelementptr inbounds [512 x i8], [512 x i8]* %domain, i32 0, i32 0, !dbg !301
  %arraydecay35 = getelementptr inbounds [512 x i8], [512 x i8]* %ubuf, i32 0, i32 0, !dbg !302
  %call36 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (...)* @islocal to i32 (i8*, i8*, i8*, ...)*)(i8* %30, i8* %arraydecay34, i8* %arraydecay35), !dbg !303
  %cmp37 = icmp eq i32 %call36, 0, !dbg !304
  br i1 %cmp37, label %if.then.39, label %if.end.40, !dbg !305

if.then.39:                                       ; preds = %if.end.32
  br label %aliasing_complete, !dbg !306

if.end.40:                                        ; preds = %if.end.32
  %arraydecay41 = getelementptr inbounds [512 x i8], [512 x i8]* %ubuf, i32 0, i32 0, !dbg !308
  %31 = load i8, i8* %arraydecay41, align 1, !dbg !308
  %conv42 = sext i8 %31 to i32, !dbg !308
  %cmp43 = icmp ne i32 %conv42, 92, !dbg !308
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !308

cond.true:                                        ; preds = %if.end.40
  %arraydecay45 = getelementptr inbounds [512 x i8], [512 x i8]* %ubuf, i32 0, i32 0, !dbg !309
  br label %cond.end, !dbg !309

cond.false:                                       ; preds = %if.end.40
  %arraydecay46 = getelementptr inbounds [512 x i8], [512 x i8]* %ubuf, i32 0, i32 0, !dbg !311
  %add.ptr47 = getelementptr inbounds i8, i8* %arraydecay46, i64 1, !dbg !311
  br label %cond.end, !dbg !311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay45, %cond.true ], [ %add.ptr47, %cond.false ], !dbg !308
  store i8* %cond, i8** %user, align 8, !dbg !313
  %32 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !316
  %string48 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %32, i32 0, i32 0, !dbg !317
  %33 = load i8*, i8** %string48, align 8, !dbg !317
  %34 = load i8*, i8** %user, align 8, !dbg !318
  %call49 = call i8* @strcpy(i8* %33, i8* %34) #5, !dbg !319
  %35 = load i8*, i8** %user, align 8, !dbg !320
  %call50 = call %struct.alias_node* @v_search(i8* %35), !dbg !322
  store %struct.alias_node* %call50, %struct.alias_node** %a, align 8, !dbg !323
  %cmp51 = icmp ne %struct.alias_node* %call50, null, !dbg !324
  br i1 %cmp51, label %if.then.53, label %if.end.93, !dbg !325

if.then.53:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [512 x i8]* %dtmpb, metadata !326, metadata !67), !dbg !328
  call void @llvm.dbg.declare(metadata [512 x i8]* %utmpb, metadata !329, metadata !67), !dbg !330
  call void @llvm.dbg.declare(metadata i8** %ut, metadata !331, metadata !67), !dbg !332
  call void @llvm.dbg.declare(metadata i32* %user_inalias, metadata !333, metadata !67), !dbg !334
  store i32 0, i32* %user_inalias, align 4, !dbg !334
  call void @llvm.dbg.declare(metadata %struct.alias_node** %t, metadata !335, metadata !67), !dbg !336
  %36 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !337
  store %struct.alias_node* %36, %struct.alias_node** %t, align 8, !dbg !336
  %37 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !338
  %horz54 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %37, i32 0, i32 1, !dbg !340
  %38 = load %struct.alias_node*, %struct.alias_node** %horz54, align 8, !dbg !340
  store %struct.alias_node* %38, %struct.alias_node** %a, align 8, !dbg !341
  br label %for.cond.55, !dbg !342

for.cond.55:                                      ; preds = %for.inc.85, %if.then.53
  %39 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !343
  %cmp56 = icmp ne %struct.alias_node* %39, null, !dbg !347
  br i1 %cmp56, label %for.body.58, label %for.end.87, !dbg !348

for.body.58:                                      ; preds = %for.cond.55
  %40 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !349
  %string59 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %40, i32 0, i32 0, !dbg !352
  %41 = load i8*, i8** %string59, align 8, !dbg !352
  %arraydecay60 = getelementptr inbounds [512 x i8], [512 x i8]* %dtmpb, i32 0, i32 0, !dbg !353
  %arraydecay61 = getelementptr inbounds [512 x i8], [512 x i8]* %utmpb, i32 0, i32 0, !dbg !354
  %call62 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (...)* @islocal to i32 (i8*, i8*, i8*, ...)*)(i8* %41, i8* %arraydecay60, i8* %arraydecay61), !dbg !355
  %tobool63 = icmp ne i32 %call62, 0, !dbg !355
  br i1 %tobool63, label %if.then.64, label %if.else.82, !dbg !356

if.then.64:                                       ; preds = %for.body.58
  %arraydecay65 = getelementptr inbounds [512 x i8], [512 x i8]* %utmpb, i32 0, i32 0, !dbg !357
  %42 = load i8, i8* %arraydecay65, align 1, !dbg !357
  %conv66 = sext i8 %42 to i32, !dbg !357
  %cmp67 = icmp ne i32 %conv66, 92, !dbg !357
  br i1 %cmp67, label %cond.true.69, label %cond.false.71, !dbg !357

cond.true.69:                                     ; preds = %if.then.64
  %arraydecay70 = getelementptr inbounds [512 x i8], [512 x i8]* %utmpb, i32 0, i32 0, !dbg !359
  br label %cond.end.74, !dbg !359

cond.false.71:                                    ; preds = %if.then.64
  %arraydecay72 = getelementptr inbounds [512 x i8], [512 x i8]* %utmpb, i32 0, i32 0, !dbg !361
  %add.ptr73 = getelementptr inbounds i8, i8* %arraydecay72, i64 1, !dbg !361
  br label %cond.end.74, !dbg !361

cond.end.74:                                      ; preds = %cond.false.71, %cond.true.69
  %cond75 = phi i8* [ %arraydecay70, %cond.true.69 ], [ %add.ptr73, %cond.false.71 ], !dbg !357
  store i8* %cond75, i8** %ut, align 8, !dbg !363
  %43 = load i8*, i8** %ut, align 8, !dbg !366
  %44 = load i8*, i8** %user, align 8, !dbg !368
  %call76 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcmpic to i32 (i8*, i8*, ...)*)(i8* %43, i8* %44), !dbg !369
  %cmp77 = icmp eq i32 %call76, 0, !dbg !370
  br i1 %cmp77, label %if.then.79, label %if.else, !dbg !371

if.then.79:                                       ; preds = %cond.end.74
  store i32 1, i32* %user_inalias, align 4, !dbg !372
  br label %if.end.81, !dbg !374

if.else:                                          ; preds = %cond.end.74
  %45 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !375
  %46 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !377
  %string80 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %46, i32 0, i32 0, !dbg !378
  %47 = load i8*, i8** %string80, align 8, !dbg !378
  call void @add_horz(%struct.alias_node* %45, i8* %47), !dbg !379
  br label %if.end.81

if.end.81:                                        ; preds = %if.else, %if.then.79
  br label %if.end.84, !dbg !380

if.else.82:                                       ; preds = %for.body.58
  %48 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !381
  %49 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !383
  %string83 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %49, i32 0, i32 0, !dbg !384
  %50 = load i8*, i8** %string83, align 8, !dbg !384
  call void @add_horz(%struct.alias_node* %48, i8* %50), !dbg !385
  br label %if.end.84

if.end.84:                                        ; preds = %if.else.82, %if.end.81
  br label %for.inc.85, !dbg !386

for.inc.85:                                       ; preds = %if.end.84
  %51 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !387
  %horz86 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %51, i32 0, i32 1, !dbg !388
  %52 = load %struct.alias_node*, %struct.alias_node** %horz86, align 8, !dbg !388
  store %struct.alias_node* %52, %struct.alias_node** %a, align 8, !dbg !389
  br label %for.cond.55, !dbg !390

for.end.87:                                       ; preds = %for.cond.55
  %53 = load %struct.alias_node*, %struct.alias_node** %t, align 8, !dbg !391
  %horz88 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %53, i32 0, i32 1, !dbg !392
  store %struct.alias_node* null, %struct.alias_node** %horz88, align 8, !dbg !393
  %54 = load i32, i32* %user_inalias, align 4, !dbg !394
  %cmp89 = icmp eq i32 %54, 0, !dbg !396
  br i1 %cmp89, label %if.then.91, label %if.end.92, !dbg !397

if.then.91:                                       ; preds = %for.end.87
  br label %while.cond, !dbg !398

if.end.92:                                        ; preds = %for.end.87
  br label %if.end.93, !dbg !400

if.end.93:                                        ; preds = %if.end.92, %cond.end
  %55 = load i8*, i8** %user, align 8, !dbg !401
  %call94 = call i8* (i8*, ...) bitcast (i8* (...)* @tilde to i8* (i8*, ...)*)(i8* %55), !dbg !403
  store i8* %call94, i8** %home, align 8, !dbg !404
  %cmp95 = icmp ne i8* %call94, null, !dbg !405
  br i1 %cmp95, label %if.then.97, label %if.end.138, !dbg !406

if.then.97:                                       ; preds = %if.end.93
  %56 = load %struct.alias_node*, %struct.alias_node** %flist, align 8, !dbg !407
  %57 = load i8*, i8** %home, align 8, !dbg !410
  %call98 = call %struct.alias_node* @h_search(%struct.alias_node* %56, i8* %57), !dbg !411
  %cmp99 = icmp ne %struct.alias_node* %call98, null, !dbg !412
  br i1 %cmp99, label %if.then.101, label %if.end.102, !dbg !413

if.then.101:                                      ; preds = %if.then.97
  br label %while.cond, !dbg !414

if.end.102:                                       ; preds = %if.then.97
  %58 = load %struct.alias_node*, %struct.alias_node** %flist, align 8, !dbg !416
  %59 = load i8*, i8** %home, align 8, !dbg !417
  call void @add_horz(%struct.alias_node* %58, i8* %59), !dbg !418
  %arraydecay103 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !419
  %60 = load i8*, i8** %home, align 8, !dbg !420
  %call104 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay103, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* %60, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0)) #5, !dbg !421
  %arraydecay105 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !422
  %call106 = call i32 @stat(i8* %arraydecay105, %struct.stat* %st) #5, !dbg !424
  %cmp107 = icmp sge i32 %call106, 0, !dbg !425
  br i1 %cmp107, label %land.lhs.true.109, label %if.end.137, !dbg !426

land.lhs.true.109:                                ; preds = %if.end.102
  %st_mode110 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !427
  %61 = load i32, i32* %st_mode110, align 4, !dbg !427
  %and111 = and i32 %61, 61440, !dbg !429
  %cmp112 = icmp eq i32 %and111, 32768, !dbg !430
  br i1 %cmp112, label %land.lhs.true.114, label %if.end.137, !dbg !431

land.lhs.true.114:                                ; preds = %land.lhs.true.109
  %st_mode115 = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !432
  %62 = load i32, i32* %st_mode115, align 4, !dbg !432
  %and116 = and i32 %62, 292, !dbg !434
  %cmp117 = icmp eq i32 %and116, 292, !dbg !435
  br i1 %cmp117, label %land.lhs.true.119, label %if.end.137, !dbg !436

land.lhs.true.119:                                ; preds = %land.lhs.true.114
  %arraydecay120 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !437
  %call121 = call %struct._IO_FILE* @fopen(i8* %arraydecay120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !439
  store %struct._IO_FILE* %call121, %struct._IO_FILE** %fp, align 8, !dbg !440
  %cmp122 = icmp ne %struct._IO_FILE* %call121, null, !dbg !441
  br i1 %cmp122, label %if.then.124, label %if.end.137, !dbg !442

if.then.124:                                      ; preds = %land.lhs.true.119
  store i32 0, i32* %aliased, align 4, !dbg !443
  br label %while.cond.125, !dbg !445

while.cond.125:                                   ; preds = %while.body.129, %if.then.124
  %arraydecay126 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !446
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !449
  %call127 = call i8* @fgets(i8* %arraydecay126, i32 512, %struct._IO_FILE* %63), !dbg !450
  %tobool128 = icmp ne i8* %call127, null, !dbg !445
  br i1 %tobool128, label %while.body.129, label %while.end.132, !dbg !445

while.body.129:                                   ; preds = %while.cond.125
  %64 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !451
  %arraydecay130 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !453
  %call131 = call i32 @recipients(%struct.alias_node* %64, i8* %arraydecay130), !dbg !454
  %65 = load i32, i32* %aliased, align 4, !dbg !455
  %or = or i32 %65, %call131, !dbg !455
  store i32 %or, i32* %aliased, align 4, !dbg !455
  br label %while.cond.125, !dbg !445

while.end.132:                                    ; preds = %while.cond.125
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !456
  %call133 = call i32 @fclose(%struct._IO_FILE* %66), !dbg !457
  %67 = load i32, i32* %aliased, align 4, !dbg !458
  %tobool134 = icmp ne i32 %67, 0, !dbg !458
  br i1 %tobool134, label %if.then.135, label %if.end.136, !dbg !460

if.then.135:                                      ; preds = %while.end.132
  br label %while.cond, !dbg !461

if.end.136:                                       ; preds = %while.end.132
  br label %if.end.137, !dbg !463

if.end.137:                                       ; preds = %if.end.136, %land.lhs.true.119, %land.lhs.true.114, %land.lhs.true.109, %if.end.102
  br label %if.end.138, !dbg !464

if.end.138:                                       ; preds = %if.end.137, %if.end.93
  call void @llvm.dbg.declare(metadata i8** %t_user, metadata !465, metadata !67), !dbg !467
  %68 = load i8*, i8** %user, align 8, !dbg !468
  %call139 = call i8* (i8*, ...) bitcast (i8* (...)* @res_fname to i8* (i8*, ...)*)(i8* %68), !dbg !469
  store i8* %call139, i8** %t_user, align 8, !dbg !467
  %69 = load i8*, i8** %t_user, align 8, !dbg !470
  %cmp140 = icmp ne i8* %69, null, !dbg !472
  br i1 %cmp140, label %if.then.142, label %if.end.153, !dbg !473

if.then.142:                                      ; preds = %if.end.138
  %70 = load i8*, i8** %t_user, align 8, !dbg !474
  %call143 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (...)* @islocal to i32 (i8*, i8*, i8*, ...)*)(i8* %70, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @alias.t_dom, i32 0, i32 0), i8* getelementptr inbounds ([512 x i8], [512 x i8]* @alias.t_unam, i32 0, i32 0)), !dbg !477
  %cmp144 = icmp eq i32 %call143, 0, !dbg !478
  br i1 %cmp144, label %if.then.146, label %if.end.147, !dbg !479

if.then.146:                                      ; preds = %if.then.142
  %71 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !480
  %72 = load i8*, i8** %t_user, align 8, !dbg !482
  call void @add_horz(%struct.alias_node* %71, i8* %72), !dbg !483
  br label %while.cond, !dbg !484

if.end.147:                                       ; preds = %if.then.142
  %73 = load i8*, i8** %user, align 8, !dbg !485
  %call148 = call i32 @strcmp(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @alias.t_unam, i32 0, i32 0), i8* %73) #6, !dbg !487
  %cmp149 = icmp ne i32 %call148, 0, !dbg !488
  br i1 %cmp149, label %if.then.151, label %if.end.152, !dbg !489

if.then.151:                                      ; preds = %if.end.147
  %74 = load %struct.alias_node*, %struct.alias_node** %addr, align 8, !dbg !490
  call void @add_horz(%struct.alias_node* %74, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @alias.t_unam, i32 0, i32 0)), !dbg !492
  br label %while.cond, !dbg !493

if.end.152:                                       ; preds = %if.end.147
  br label %if.end.153, !dbg !494

if.end.153:                                       ; preds = %if.end.152, %if.end.138
  br label %aliasing_complete, !dbg !495

aliasing_complete:                                ; preds = %if.end.153, %if.then.39
  %75 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !496
  %string154 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %75, i32 0, i32 0, !dbg !496
  %76 = load i8*, i8** %string154, align 8, !dbg !496
  %77 = load i8, i8* %76, align 1, !dbg !496
  %conv155 = sext i8 %77 to i32, !dbg !496
  %cmp156 = icmp ne i32 %conv155, 92, !dbg !496
  br i1 %cmp156, label %cond.true.158, label %cond.false.160, !dbg !496

cond.true.158:                                    ; preds = %aliasing_complete
  %78 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !497
  %string159 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %78, i32 0, i32 0, !dbg !497
  %79 = load i8*, i8** %string159, align 8, !dbg !497
  br label %cond.end.163, !dbg !497

cond.false.160:                                   ; preds = %aliasing_complete
  %80 = load %struct.alias_node*, %struct.alias_node** %u, align 8, !dbg !498
  %string161 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %80, i32 0, i32 0, !dbg !498
  %81 = load i8*, i8** %string161, align 8, !dbg !498
  %add.ptr162 = getelementptr inbounds i8, i8* %81, i64 1, !dbg !498
  br label %cond.end.163, !dbg !498

cond.end.163:                                     ; preds = %cond.false.160, %cond.true.158
  %cond164 = phi i8* [ %79, %cond.true.158 ], [ %add.ptr162, %cond.false.160 ], !dbg !496
  store i8* %cond164, i8** %user, align 8, !dbg !499
  store i32 0, i32* %i, align 4, !dbg !500
  br label %for.cond.165, !dbg !502

for.cond.165:                                     ; preds = %for.inc.176, %cond.end.163
  %82 = load i32, i32* %i, align 4, !dbg !503
  %83 = load i32, i32* @nargc, align 4, !dbg !507
  %cmp166 = icmp slt i32 %82, %83, !dbg !508
  br i1 %cmp166, label %for.body.168, label %for.end.178, !dbg !509

for.body.168:                                     ; preds = %for.cond.165
  %84 = load i32, i32* %i, align 4, !dbg !510
  %idxprom169 = sext i32 %84 to i64, !dbg !513
  %arrayidx170 = getelementptr inbounds [500 x i8*], [500 x i8*]* @nargv, i32 0, i64 %idxprom169, !dbg !513
  %85 = load i8*, i8** %arrayidx170, align 8, !dbg !513
  %86 = load i8*, i8** %user, align 8, !dbg !514
  %call171 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcmpic to i32 (i8*, i8*, ...)*)(i8* %85, i8* %86), !dbg !515
  %cmp172 = icmp eq i32 %call171, 0, !dbg !516
  br i1 %cmp172, label %if.then.174, label %if.end.175, !dbg !517

if.then.174:                                      ; preds = %for.body.168
  br label %for.end.178, !dbg !518

if.end.175:                                       ; preds = %for.body.168
  br label %for.inc.176, !dbg !520

for.inc.176:                                      ; preds = %if.end.175
  %87 = load i32, i32* %i, align 4, !dbg !521
  %inc177 = add nsw i32 %87, 1, !dbg !521
  store i32 %inc177, i32* %i, align 4, !dbg !521
  br label %for.cond.165, !dbg !522

for.end.178:                                      ; preds = %if.then.174, %for.cond.165
  %88 = load i32, i32* %i, align 4, !dbg !523
  %89 = load i32, i32* @nargc, align 4, !dbg !525
  %cmp179 = icmp eq i32 %88, %89, !dbg !526
  br i1 %cmp179, label %if.then.181, label %if.end.185, !dbg !527

if.then.181:                                      ; preds = %for.end.178
  %90 = load i8*, i8** %user, align 8, !dbg !528
  %91 = load i32, i32* @nargc, align 4, !dbg !530
  %inc182 = add nsw i32 %91, 1, !dbg !530
  store i32 %inc182, i32* @nargc, align 4, !dbg !530
  %idxprom183 = sext i32 %91 to i64, !dbg !531
  %arrayidx184 = getelementptr inbounds [500 x i8*], [500 x i8*]* @nargv, i32 0, i64 %idxprom183, !dbg !531
  store i8* %90, i8** %arrayidx184, align 8, !dbg !532
  br label %if.end.185, !dbg !533

if.end.185:                                       ; preds = %if.then.181, %for.end.178
  br label %while.cond, !dbg !225

while.end.186:                                    ; preds = %land.end
  %92 = load i32, i32* @nargc, align 4, !dbg !534
  %93 = load i32*, i32** %pargc.addr, align 8, !dbg !535
  store i32 %92, i32* %93, align 4, !dbg !536
  ret i8** getelementptr inbounds ([500 x i8*], [500 x i8*]* @nargv, i32 0, i32 0), !dbg !537
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @strncmpic(...) #2

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #3

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #2

declare i32 @fclose(%struct._IO_FILE*) #2

declare i32 @islocal(...) #2

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

declare i32 @strcmpic(...) #2

declare i8* @tilde(...) #2

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

declare i8* @res_fname(...) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind uwtable
define %struct.alias_node* @v_search(i8* %user) #0 {
entry:
  %retval = alloca %struct.alias_node*, align 8
  %user.addr = alloca i8*, align 8
  %head = alloca %struct.alias_node*, align 8
  %a = alloca %struct.alias_node*, align 8
  store i8* %user, i8** %user.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %user.addr, metadata !538, metadata !67), !dbg !539
  call void @llvm.dbg.declare(metadata %struct.alias_node** %head, metadata !540, metadata !67), !dbg !541
  call void @llvm.dbg.declare(metadata %struct.alias_node** %a, metadata !542, metadata !67), !dbg !543
  store %struct.alias_node* @aliases, %struct.alias_node** %head, align 8, !dbg !544
  %0 = load i32, i32* @v_search.loaded, align 4, !dbg !545
  %cmp = icmp eq i32 %0, 0, !dbg !547
  br i1 %cmp, label %if.then, label %if.end, !dbg !548

if.then:                                          ; preds = %entry
  %1 = load %struct.alias_node*, %struct.alias_node** %head, align 8, !dbg !549
  %2 = load i8*, i8** @aliasfile, align 8, !dbg !551
  call void @load_alias(%struct.alias_node* %1, i8* %2), !dbg !552
  store i32 1, i32* @v_search.loaded, align 4, !dbg !553
  br label %if.end, !dbg !554

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.alias_node*, %struct.alias_node** %head, align 8, !dbg !555
  %vert = getelementptr inbounds %struct.alias_node, %struct.alias_node* %3, i32 0, i32 2, !dbg !557
  %4 = load %struct.alias_node*, %struct.alias_node** %vert, align 8, !dbg !557
  store %struct.alias_node* %4, %struct.alias_node** %a, align 8, !dbg !558
  br label %for.cond, !dbg !559

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !560
  %cmp1 = icmp ne %struct.alias_node* %5, null, !dbg !564
  br i1 %cmp1, label %for.body, label %for.end, !dbg !565

for.body:                                         ; preds = %for.cond
  %6 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !566
  %string = getelementptr inbounds %struct.alias_node, %struct.alias_node* %6, i32 0, i32 0, !dbg !569
  %7 = load i8*, i8** %string, align 8, !dbg !569
  %8 = load i8*, i8** %user.addr, align 8, !dbg !570
  %call = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcmpic to i32 (i8*, i8*, ...)*)(i8* %7, i8* %8), !dbg !571
  %cmp2 = icmp eq i32 %call, 0, !dbg !572
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !573

if.then.3:                                        ; preds = %for.body
  br label %for.end, !dbg !574

if.end.4:                                         ; preds = %for.body
  br label %for.inc, !dbg !576

for.inc:                                          ; preds = %if.end.4
  %9 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !577
  %vert5 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %9, i32 0, i32 2, !dbg !578
  %10 = load %struct.alias_node*, %struct.alias_node** %vert5, align 8, !dbg !578
  store %struct.alias_node* %10, %struct.alias_node** %a, align 8, !dbg !579
  br label %for.cond, !dbg !580

for.end:                                          ; preds = %if.then.3, %for.cond
  %11 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !581
  %cmp6 = icmp eq %struct.alias_node* %11, null, !dbg !583
  br i1 %cmp6, label %if.then.7, label %if.end.8, !dbg !584

if.then.7:                                        ; preds = %for.end
  store %struct.alias_node* null, %struct.alias_node** %retval, !dbg !585
  br label %return, !dbg !585

if.end.8:                                         ; preds = %for.end
  %12 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !587
  store %struct.alias_node* %12, %struct.alias_node** %retval, !dbg !588
  br label %return, !dbg !588

return:                                           ; preds = %if.end.8, %if.then.7
  %13 = load %struct.alias_node*, %struct.alias_node** %retval, !dbg !589
  ret %struct.alias_node* %13, !dbg !589
}

; Function Attrs: nounwind uwtable
define %struct.alias_node* @h_search(%struct.alias_node* %head, i8* %str) #0 {
entry:
  %head.addr = alloca %struct.alias_node*, align 8
  %str.addr = alloca i8*, align 8
  %a = alloca %struct.alias_node*, align 8
  store %struct.alias_node* %head, %struct.alias_node** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_node** %head.addr, metadata !590, metadata !67), !dbg !591
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !592, metadata !67), !dbg !593
  call void @llvm.dbg.declare(metadata %struct.alias_node** %a, metadata !594, metadata !67), !dbg !595
  %0 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !596
  %horz = getelementptr inbounds %struct.alias_node, %struct.alias_node* %0, i32 0, i32 1, !dbg !598
  %1 = load %struct.alias_node*, %struct.alias_node** %horz, align 8, !dbg !598
  store %struct.alias_node* %1, %struct.alias_node** %a, align 8, !dbg !599
  br label %for.cond, !dbg !600

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !601
  %cmp = icmp ne %struct.alias_node* %2, null, !dbg !605
  br i1 %cmp, label %for.body, label %for.end, !dbg !606

for.body:                                         ; preds = %for.cond
  %3 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !607
  %string = getelementptr inbounds %struct.alias_node, %struct.alias_node* %3, i32 0, i32 0, !dbg !610
  %4 = load i8*, i8** %string, align 8, !dbg !610
  %5 = load i8*, i8** %str.addr, align 8, !dbg !611
  %call = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcmpic to i32 (i8*, i8*, ...)*)(i8* %4, i8* %5), !dbg !612
  %cmp1 = icmp eq i32 %call, 0, !dbg !613
  br i1 %cmp1, label %if.then, label %if.end, !dbg !614

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !615

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !617

for.inc:                                          ; preds = %if.end
  %6 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !618
  %horz2 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %6, i32 0, i32 1, !dbg !619
  %7 = load %struct.alias_node*, %struct.alias_node** %horz2, align 8, !dbg !619
  store %struct.alias_node* %7, %struct.alias_node** %a, align 8, !dbg !620
  br label %for.cond, !dbg !621

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.alias_node*, %struct.alias_node** %a, align 8, !dbg !622
  ret %struct.alias_node* %8, !dbg !623
}

; Function Attrs: nounwind uwtable
define void @load_alias(%struct.alias_node* %head, i8* %filename) #0 {
entry:
  %head.addr = alloca %struct.alias_node*, align 8
  %filename.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %v = alloca %struct.alias_node*, align 8
  %h = alloca %struct.alias_node*, align 8
  %domain = alloca [512 x i8], align 16
  %user = alloca [512 x i8], align 16
  %p = alloca i8*, align 8
  %b = alloca i8*, align 8
  %buf = alloca [512 x i8], align 16
  %nl = alloca i8*, align 8
  store %struct.alias_node* %head, %struct.alias_node** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_node** %head.addr, metadata !624, metadata !67), !dbg !625
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !626, metadata !67), !dbg !627
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !628, metadata !67), !dbg !629
  call void @llvm.dbg.declare(metadata %struct.alias_node** %v, metadata !630, metadata !67), !dbg !631
  call void @llvm.dbg.declare(metadata %struct.alias_node** %h, metadata !632, metadata !67), !dbg !633
  call void @llvm.dbg.declare(metadata [512 x i8]* %domain, metadata !634, metadata !67), !dbg !635
  call void @llvm.dbg.declare(metadata [512 x i8]* %user, metadata !636, metadata !67), !dbg !637
  call void @llvm.dbg.declare(metadata i8** %p, metadata !638, metadata !67), !dbg !639
  call void @llvm.dbg.declare(metadata i8** %b, metadata !640, metadata !67), !dbg !641
  call void @llvm.dbg.declare(metadata [512 x i8]* %buf, metadata !642, metadata !67), !dbg !643
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !644
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !646
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !647
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !648
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !649

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !650
  %cmp1 = icmp eq i32 %1, 2, !dbg !650
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !653

if.then.2:                                        ; preds = %if.then
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !654
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i32 0, i32 0), i8* %2), !dbg !650
  br label %if.end, !dbg !650

if.end:                                           ; preds = %if.then.2, %if.then
  br label %for.end, !dbg !656

if.end.4:                                         ; preds = %entry
  br label %while.cond, !dbg !657

while.cond:                                       ; preds = %if.end.72, %if.then.59, %if.end.28, %if.then.13, %if.end.4
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !658
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !661
  %call5 = call i8* @fgets(i8* %arraydecay, i32 512, %struct._IO_FILE* %3), !dbg !662
  %cmp6 = icmp ne i8* %call5, null, !dbg !663
  br i1 %cmp6, label %while.body, label %while.end.74, !dbg !657

while.body:                                       ; preds = %while.cond
  %arraydecay7 = getelementptr inbounds [512 x i8], [512 x i8]* %buf, i32 0, i32 0, !dbg !664
  store i8* %arraydecay7, i8** %p, align 8, !dbg !666
  %4 = load i8*, i8** %p, align 8, !dbg !667
  %5 = load i8, i8* %4, align 1, !dbg !669
  %conv = sext i8 %5 to i32, !dbg !669
  %cmp8 = icmp eq i32 %conv, 35, !dbg !670
  br i1 %cmp8, label %if.then.13, label %lor.lhs.false, !dbg !671

lor.lhs.false:                                    ; preds = %while.body
  %6 = load i8*, i8** %p, align 8, !dbg !672
  %7 = load i8, i8* %6, align 1, !dbg !674
  %conv10 = sext i8 %7 to i32, !dbg !674
  %cmp11 = icmp eq i32 %conv10, 10, !dbg !675
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !676

if.then.13:                                       ; preds = %lor.lhs.false, %while.body
  br label %while.cond, !dbg !677

if.end.14:                                        ; preds = %lor.lhs.false
  %8 = load i8*, i8** %p, align 8, !dbg !679
  %call15 = call i32 @strncmp(i8* %8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i64 9) #6, !dbg !681
  %cmp16 = icmp eq i32 %call15, 0, !dbg !682
  br i1 %cmp16, label %if.then.18, label %if.end.29, !dbg !683

if.then.18:                                       ; preds = %if.end.14
  call void @llvm.dbg.declare(metadata i8** %nl, metadata !684, metadata !67), !dbg !686
  %9 = load i8*, i8** %p, align 8, !dbg !687
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 9, !dbg !687
  store i8* %add.ptr, i8** %p, align 8, !dbg !687
  %10 = load i8*, i8** %p, align 8, !dbg !688
  %call19 = call i8* @strchr(i8* %10, i32 10) #6, !dbg !690
  store i8* %call19, i8** %nl, align 8, !dbg !691
  %cmp20 = icmp ne i8* %call19, null, !dbg !692
  br i1 %cmp20, label %if.then.22, label %if.end.23, !dbg !693

if.then.22:                                       ; preds = %if.then.18
  %11 = load i8*, i8** %nl, align 8, !dbg !694
  store i8 0, i8* %11, align 1, !dbg !696
  br label %if.end.23, !dbg !697

if.end.23:                                        ; preds = %if.then.22, %if.then.18
  %12 = load i32, i32* @debug, align 4, !dbg !698
  %cmp24 = icmp eq i32 %12, 2, !dbg !698
  br i1 %cmp24, label %if.then.26, label %if.end.28, !dbg !700

if.then.26:                                       ; preds = %if.end.23
  %13 = load i8*, i8** %filename.addr, align 8, !dbg !701
  %14 = load i8*, i8** %p, align 8, !dbg !703
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i8* %13, i8* %14), !dbg !698
  br label %if.end.28, !dbg !698

if.end.28:                                        ; preds = %if.then.26, %if.end.23
  %15 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !704
  %16 = load i8*, i8** %p, align 8, !dbg !705
  call void @load_alias(%struct.alias_node* %15, i8* %16), !dbg !706
  br label %while.cond, !dbg !707

if.end.29:                                        ; preds = %if.end.14
  %17 = load i8*, i8** %p, align 8, !dbg !708
  %18 = load i8, i8* %17, align 1, !dbg !710
  %conv30 = sext i8 %18 to i32, !dbg !710
  %cmp31 = icmp ne i32 %conv30, 32, !dbg !711
  br i1 %cmp31, label %land.lhs.true, label %if.end.72, !dbg !712

land.lhs.true:                                    ; preds = %if.end.29
  %19 = load i8*, i8** %p, align 8, !dbg !713
  %20 = load i8, i8* %19, align 1, !dbg !715
  %conv33 = sext i8 %20 to i32, !dbg !715
  %cmp34 = icmp ne i32 %conv33, 9, !dbg !716
  br i1 %cmp34, label %if.then.36, label %if.end.72, !dbg !717

if.then.36:                                       ; preds = %land.lhs.true
  %21 = load i8*, i8** %p, align 8, !dbg !718
  store i8* %21, i8** %b, align 8, !dbg !720
  br label %while.cond.37, !dbg !721

while.cond.37:                                    ; preds = %while.body.52, %if.then.36
  %22 = load i8*, i8** %p, align 8, !dbg !722
  %23 = load i8, i8* %22, align 1, !dbg !722
  %conv38 = sext i8 %23 to i32, !dbg !722
  %cmp39 = icmp ne i32 %conv38, 32, !dbg !722
  br i1 %cmp39, label %land.lhs.true.41, label %land.end, !dbg !722

land.lhs.true.41:                                 ; preds = %while.cond.37
  %24 = load i8*, i8** %p, align 8, !dbg !725
  %25 = load i8, i8* %24, align 1, !dbg !725
  %conv42 = sext i8 %25 to i32, !dbg !725
  %cmp43 = icmp ne i32 %conv42, 9, !dbg !725
  br i1 %cmp43, label %land.lhs.true.45, label %land.end, !dbg !725

land.lhs.true.45:                                 ; preds = %land.lhs.true.41
  %26 = load i8*, i8** %p, align 8, !dbg !727
  %27 = load i8, i8* %26, align 1, !dbg !727
  %conv46 = sext i8 %27 to i32, !dbg !727
  %cmp47 = icmp ne i32 %conv46, 10, !dbg !727
  br i1 %cmp47, label %land.rhs, label %land.end, !dbg !727

land.rhs:                                         ; preds = %land.lhs.true.45
  %28 = load i8*, i8** %p, align 8, !dbg !729
  %29 = load i8, i8* %28, align 1, !dbg !729
  %conv49 = sext i8 %29 to i32, !dbg !729
  %cmp50 = icmp ne i32 %conv49, 44, !dbg !729
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true.45, %land.lhs.true.41, %while.cond.37
  %30 = phi i1 [ false, %land.lhs.true.45 ], [ false, %land.lhs.true.41 ], [ false, %while.cond.37 ], [ %cmp50, %land.rhs ]
  br i1 %30, label %while.body.52, label %while.end, !dbg !731

while.body.52:                                    ; preds = %land.end
  %31 = load i8*, i8** %p, align 8, !dbg !735
  %incdec.ptr = getelementptr inbounds i8, i8* %31, i32 1, !dbg !735
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !735
  br label %while.cond.37, !dbg !735

while.end:                                        ; preds = %land.end
  %32 = load i8*, i8** %p, align 8, !dbg !737
  %incdec.ptr53 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !737
  store i8* %incdec.ptr53, i8** %p, align 8, !dbg !737
  store i8 0, i8* %32, align 1, !dbg !738
  %33 = load i8*, i8** %b, align 8, !dbg !739
  %arraydecay54 = getelementptr inbounds [512 x i8], [512 x i8]* %domain, i32 0, i32 0, !dbg !741
  %arraydecay55 = getelementptr inbounds [512 x i8], [512 x i8]* %user, i32 0, i32 0, !dbg !742
  %call56 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (...)* @islocal to i32 (i8*, i8*, i8*, ...)*)(i8* %33, i8* %arraydecay54, i8* %arraydecay55), !dbg !743
  %cmp57 = icmp eq i32 %call56, 0, !dbg !744
  br i1 %cmp57, label %if.then.59, label %if.end.60, !dbg !745

if.then.59:                                       ; preds = %while.end
  br label %while.cond, !dbg !746

if.end.60:                                        ; preds = %while.end
  %34 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !748
  %arraydecay61 = getelementptr inbounds [512 x i8], [512 x i8]* %user, i32 0, i32 0, !dbg !750
  %call62 = call %struct.alias_node* @add_vert(%struct.alias_node* %34, i8* %arraydecay61), !dbg !751
  store %struct.alias_node* %call62, %struct.alias_node** %h, align 8, !dbg !752
  %cmp63 = icmp eq %struct.alias_node* %call62, null, !dbg !753
  br i1 %cmp63, label %if.then.65, label %if.end.71, !dbg !754

if.then.65:                                       ; preds = %if.end.60
  %35 = load i32, i32* @debug, align 4, !dbg !755
  %cmp66 = icmp eq i32 %35, 2, !dbg !755
  br i1 %cmp66, label %if.then.68, label %if.end.70, !dbg !758

if.then.68:                                       ; preds = %if.then.65
  %36 = load i8*, i8** %b, align 8, !dbg !759
  %call69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i32 0, i32 0), i8* %36), !dbg !755
  br label %if.end.70, !dbg !755

if.end.70:                                        ; preds = %if.then.68, %if.then.65
  br label %for.end, !dbg !761

if.end.71:                                        ; preds = %if.end.60
  br label %if.end.72, !dbg !762

if.end.72:                                        ; preds = %if.end.71, %land.lhs.true, %if.end.29
  %37 = load %struct.alias_node*, %struct.alias_node** %h, align 8, !dbg !763
  %38 = load i8*, i8** %p, align 8, !dbg !764
  %call73 = call i32 @recipients(%struct.alias_node* %37, i8* %38), !dbg !765
  br label %while.cond, !dbg !657

while.end.74:                                     ; preds = %while.cond
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !766
  %call75 = call i32 @fclose(%struct._IO_FILE* %39), !dbg !767
  %40 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !768
  store %struct.alias_node* %40, %struct.alias_node** %v, align 8, !dbg !770
  br label %for.cond, !dbg !771

for.cond:                                         ; preds = %if.end.86, %while.end.74
  %41 = load %struct.alias_node*, %struct.alias_node** %v, align 8, !dbg !772
  %vert = getelementptr inbounds %struct.alias_node, %struct.alias_node* %41, i32 0, i32 2, !dbg !776
  %42 = load %struct.alias_node*, %struct.alias_node** %vert, align 8, !dbg !776
  %cmp76 = icmp ne %struct.alias_node* %42, null, !dbg !777
  br i1 %cmp76, label %for.body, label %for.end, !dbg !778

for.body:                                         ; preds = %for.cond
  %43 = load %struct.alias_node*, %struct.alias_node** %v, align 8, !dbg !779
  %vert78 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %43, i32 0, i32 2, !dbg !782
  %44 = load %struct.alias_node*, %struct.alias_node** %vert78, align 8, !dbg !782
  %horz = getelementptr inbounds %struct.alias_node, %struct.alias_node* %44, i32 0, i32 1, !dbg !783
  %45 = load %struct.alias_node*, %struct.alias_node** %horz, align 8, !dbg !783
  %cmp79 = icmp eq %struct.alias_node* %45, null, !dbg !784
  br i1 %cmp79, label %if.then.81, label %if.else, !dbg !785

if.then.81:                                       ; preds = %for.body
  %46 = load %struct.alias_node*, %struct.alias_node** %v, align 8, !dbg !786
  %vert82 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %46, i32 0, i32 2, !dbg !788
  %47 = load %struct.alias_node*, %struct.alias_node** %vert82, align 8, !dbg !788
  %vert83 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %47, i32 0, i32 2, !dbg !789
  %48 = load %struct.alias_node*, %struct.alias_node** %vert83, align 8, !dbg !789
  %49 = load %struct.alias_node*, %struct.alias_node** %v, align 8, !dbg !790
  %vert84 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %49, i32 0, i32 2, !dbg !791
  store %struct.alias_node* %48, %struct.alias_node** %vert84, align 8, !dbg !792
  br label %if.end.86, !dbg !793

if.else:                                          ; preds = %for.body
  %50 = load %struct.alias_node*, %struct.alias_node** %v, align 8, !dbg !794
  %vert85 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %50, i32 0, i32 2, !dbg !796
  %51 = load %struct.alias_node*, %struct.alias_node** %vert85, align 8, !dbg !796
  store %struct.alias_node* %51, %struct.alias_node** %v, align 8, !dbg !797
  br label %if.end.86

if.end.86:                                        ; preds = %if.else, %if.then.81
  br label %for.cond, !dbg !798

for.end:                                          ; preds = %if.end, %if.end.70, %for.cond
  ret void, !dbg !799
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #4

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #4

; Function Attrs: nounwind uwtable
define i32 @recipients(%struct.alias_node* %h, i8* %p) #0 {
entry:
  %retval = alloca i32, align 4
  %h.addr = alloca %struct.alias_node*, align 8
  %p.addr = alloca i8*, align 8
  %b = alloca i8*, align 8
  %d = alloca [512 x i8], align 16
  %u = alloca [512 x i8], align 16
  %ret = alloca i32, align 4
  store %struct.alias_node* %h, %struct.alias_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_node** %h.addr, metadata !800, metadata !67), !dbg !801
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !802, metadata !67), !dbg !803
  call void @llvm.dbg.declare(metadata i8** %b, metadata !804, metadata !67), !dbg !805
  call void @llvm.dbg.declare(metadata [512 x i8]* %d, metadata !806, metadata !67), !dbg !807
  call void @llvm.dbg.declare(metadata [512 x i8]* %u, metadata !808, metadata !67), !dbg !809
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !810, metadata !67), !dbg !811
  store i32 0, i32* %ret, align 4, !dbg !811
  %0 = load i8*, i8** %p.addr, align 8, !dbg !812
  call void @strip_comments(i8* %0), !dbg !813
  br label %while.cond, !dbg !814

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !815
  %2 = load i8, i8* %1, align 1, !dbg !815
  %conv = sext i8 %2 to i32, !dbg !815
  %cmp = icmp eq i32 %conv, 32, !dbg !815
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !815

lor.lhs.false:                                    ; preds = %while.cond
  %3 = load i8*, i8** %p.addr, align 8, !dbg !818
  %4 = load i8, i8* %3, align 1, !dbg !818
  %conv2 = sext i8 %4 to i32, !dbg !818
  %cmp3 = icmp eq i32 %conv2, 9, !dbg !818
  br i1 %cmp3, label %lor.end, label %lor.lhs.false.5, !dbg !818

lor.lhs.false.5:                                  ; preds = %lor.lhs.false
  %5 = load i8*, i8** %p.addr, align 8, !dbg !820
  %6 = load i8, i8* %5, align 1, !dbg !820
  %conv6 = sext i8 %6 to i32, !dbg !820
  %cmp7 = icmp eq i32 %conv6, 10, !dbg !820
  br i1 %cmp7, label %lor.end, label %lor.rhs, !dbg !820

lor.rhs:                                          ; preds = %lor.lhs.false.5
  %7 = load i8*, i8** %p.addr, align 8, !dbg !822
  %8 = load i8, i8* %7, align 1, !dbg !822
  %conv9 = sext i8 %8 to i32, !dbg !822
  %cmp10 = icmp eq i32 %conv9, 44, !dbg !822
  br label %lor.end, !dbg !822

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false.5, %lor.lhs.false, %while.cond
  %9 = phi i1 [ true, %lor.lhs.false.5 ], [ true, %lor.lhs.false ], [ true, %while.cond ], [ %cmp10, %lor.rhs ]
  br i1 %9, label %while.body, label %while.end, !dbg !824

while.body:                                       ; preds = %lor.end
  %10 = load i8*, i8** %p.addr, align 8, !dbg !829
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !829
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !829
  br label %while.cond, !dbg !829

while.end:                                        ; preds = %lor.end
  br label %while.cond.12, !dbg !831

while.cond.12:                                    ; preds = %while.end.84, %while.end
  %11 = load i8*, i8** %p.addr, align 8, !dbg !832
  %12 = load i8, i8* %11, align 1, !dbg !834
  %conv13 = sext i8 %12 to i32, !dbg !834
  %conv14 = sext i32 %conv13 to i64, !dbg !834
  %13 = inttoptr i64 %conv14 to i8*, !dbg !834
  %cmp15 = icmp ne i8* %13, null, !dbg !835
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !836

land.rhs:                                         ; preds = %while.cond.12
  %14 = load i8*, i8** %p.addr, align 8, !dbg !837
  %15 = load i8, i8* %14, align 1, !dbg !838
  %conv17 = sext i8 %15 to i32, !dbg !838
  %cmp18 = icmp ne i32 %conv17, 35, !dbg !839
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.12
  %16 = phi i1 [ false, %while.cond.12 ], [ %cmp18, %land.rhs ]
  br i1 %16, label %while.body.20, label %while.end.85, !dbg !840

while.body.20:                                    ; preds = %land.end
  %17 = load i8*, i8** %p.addr, align 8, !dbg !841
  store i8* %17, i8** %b, align 8, !dbg !843
  %18 = load i8*, i8** %b, align 8, !dbg !844
  %19 = load i8, i8* %18, align 1, !dbg !846
  %conv21 = sext i8 %19 to i32, !dbg !846
  %cmp22 = icmp eq i32 %conv21, 34, !dbg !847
  br i1 %cmp22, label %if.then, label %if.else, !dbg !848

if.then:                                          ; preds = %while.body.20
  %20 = load i8*, i8** %b, align 8, !dbg !849
  %incdec.ptr24 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !849
  store i8* %incdec.ptr24, i8** %b, align 8, !dbg !849
  %call = call i8* @strchr(i8* %incdec.ptr24, i32 34) #6, !dbg !852
  store i8* %call, i8** %p.addr, align 8, !dbg !853
  %cmp25 = icmp eq i8* %call, null, !dbg !854
  br i1 %cmp25, label %if.then.27, label %if.end, !dbg !855

if.then.27:                                       ; preds = %if.then
  %21 = load i32, i32* %ret, align 4, !dbg !856
  store i32 %21, i32* %retval, !dbg !858
  br label %return, !dbg !858

if.end:                                           ; preds = %if.then
  br label %if.end.47, !dbg !859

if.else:                                          ; preds = %while.body.20
  br label %while.cond.28, !dbg !860

while.cond.28:                                    ; preds = %while.body.44, %if.else
  %22 = load i8*, i8** %p.addr, align 8, !dbg !862
  %23 = load i8, i8* %22, align 1, !dbg !862
  %conv29 = sext i8 %23 to i32, !dbg !862
  %cmp30 = icmp ne i32 %conv29, 32, !dbg !862
  br i1 %cmp30, label %land.lhs.true, label %land.end.43, !dbg !862

land.lhs.true:                                    ; preds = %while.cond.28
  %24 = load i8*, i8** %p.addr, align 8, !dbg !865
  %25 = load i8, i8* %24, align 1, !dbg !865
  %conv32 = sext i8 %25 to i32, !dbg !865
  %cmp33 = icmp ne i32 %conv32, 9, !dbg !865
  br i1 %cmp33, label %land.lhs.true.35, label %land.end.43, !dbg !865

land.lhs.true.35:                                 ; preds = %land.lhs.true
  %26 = load i8*, i8** %p.addr, align 8, !dbg !867
  %27 = load i8, i8* %26, align 1, !dbg !867
  %conv36 = sext i8 %27 to i32, !dbg !867
  %cmp37 = icmp ne i32 %conv36, 10, !dbg !867
  br i1 %cmp37, label %land.rhs.39, label %land.end.43, !dbg !867

land.rhs.39:                                      ; preds = %land.lhs.true.35
  %28 = load i8*, i8** %p.addr, align 8, !dbg !869
  %29 = load i8, i8* %28, align 1, !dbg !869
  %conv40 = sext i8 %29 to i32, !dbg !869
  %cmp41 = icmp ne i32 %conv40, 44, !dbg !869
  br label %land.end.43

land.end.43:                                      ; preds = %land.rhs.39, %land.lhs.true.35, %land.lhs.true, %while.cond.28
  %30 = phi i1 [ false, %land.lhs.true.35 ], [ false, %land.lhs.true ], [ false, %while.cond.28 ], [ %cmp41, %land.rhs.39 ]
  br i1 %30, label %while.body.44, label %while.end.46, !dbg !871

while.body.44:                                    ; preds = %land.end.43
  %31 = load i8*, i8** %p.addr, align 8, !dbg !875
  %incdec.ptr45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !875
  store i8* %incdec.ptr45, i8** %p.addr, align 8, !dbg !875
  br label %while.cond.28, !dbg !875

while.end.46:                                     ; preds = %land.end.43
  br label %if.end.47

if.end.47:                                        ; preds = %while.end.46, %if.end
  %32 = load i8*, i8** %p.addr, align 8, !dbg !877
  %33 = load i8, i8* %32, align 1, !dbg !879
  %conv48 = sext i8 %33 to i32, !dbg !879
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !880
  br i1 %cmp49, label %if.then.51, label %if.end.53, !dbg !881

if.then.51:                                       ; preds = %if.end.47
  %34 = load i8*, i8** %p.addr, align 8, !dbg !882
  %incdec.ptr52 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !882
  store i8* %incdec.ptr52, i8** %p.addr, align 8, !dbg !882
  store i8 0, i8* %34, align 1, !dbg !884
  br label %if.end.53, !dbg !885

if.end.53:                                        ; preds = %if.then.51, %if.end.47
  %35 = load i8*, i8** %b, align 8, !dbg !886
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %d, i32 0, i32 0, !dbg !888
  %arraydecay54 = getelementptr inbounds [512 x i8], [512 x i8]* %u, i32 0, i32 0, !dbg !889
  %call55 = call i32 (i8*, i8*, i8*, ...) bitcast (i32 (...)* @islocal to i32 (i8*, i8*, i8*, ...)*)(i8* %35, i8* %arraydecay, i8* %arraydecay54), !dbg !890
  %cmp56 = icmp eq i32 %call55, 0, !dbg !891
  br i1 %cmp56, label %if.then.63, label %lor.lhs.false.58, !dbg !892

lor.lhs.false.58:                                 ; preds = %if.end.53
  %36 = load %struct.alias_node*, %struct.alias_node** %h.addr, align 8, !dbg !893
  %string = getelementptr inbounds %struct.alias_node, %struct.alias_node* %36, i32 0, i32 0, !dbg !895
  %37 = load i8*, i8** %string, align 8, !dbg !895
  %arraydecay59 = getelementptr inbounds [512 x i8], [512 x i8]* %u, i32 0, i32 0, !dbg !896
  %call60 = call i32 (i8*, i8*, ...) bitcast (i32 (...)* @strcmpic to i32 (i8*, i8*, ...)*)(i8* %37, i8* %arraydecay59), !dbg !897
  %cmp61 = icmp ne i32 %call60, 0, !dbg !898
  br i1 %cmp61, label %if.then.63, label %if.end.64, !dbg !899

if.then.63:                                       ; preds = %lor.lhs.false.58, %if.end.53
  %38 = load %struct.alias_node*, %struct.alias_node** %h.addr, align 8, !dbg !900
  %39 = load i8*, i8** %b, align 8, !dbg !902
  call void @add_horz(%struct.alias_node* %38, i8* %39), !dbg !903
  store i32 1, i32* %ret, align 4, !dbg !904
  br label %if.end.64, !dbg !905

if.end.64:                                        ; preds = %if.then.63, %lor.lhs.false.58
  br label %while.cond.65, !dbg !906

while.cond.65:                                    ; preds = %while.body.82, %if.end.64
  %40 = load i8*, i8** %p.addr, align 8, !dbg !907
  %41 = load i8, i8* %40, align 1, !dbg !907
  %conv66 = sext i8 %41 to i32, !dbg !907
  %cmp67 = icmp eq i32 %conv66, 32, !dbg !907
  br i1 %cmp67, label %lor.end.81, label %lor.lhs.false.69, !dbg !907

lor.lhs.false.69:                                 ; preds = %while.cond.65
  %42 = load i8*, i8** %p.addr, align 8, !dbg !910
  %43 = load i8, i8* %42, align 1, !dbg !910
  %conv70 = sext i8 %43 to i32, !dbg !910
  %cmp71 = icmp eq i32 %conv70, 9, !dbg !910
  br i1 %cmp71, label %lor.end.81, label %lor.lhs.false.73, !dbg !910

lor.lhs.false.73:                                 ; preds = %lor.lhs.false.69
  %44 = load i8*, i8** %p.addr, align 8, !dbg !912
  %45 = load i8, i8* %44, align 1, !dbg !912
  %conv74 = sext i8 %45 to i32, !dbg !912
  %cmp75 = icmp eq i32 %conv74, 10, !dbg !912
  br i1 %cmp75, label %lor.end.81, label %lor.rhs.77, !dbg !912

lor.rhs.77:                                       ; preds = %lor.lhs.false.73
  %46 = load i8*, i8** %p.addr, align 8, !dbg !914
  %47 = load i8, i8* %46, align 1, !dbg !914
  %conv78 = sext i8 %47 to i32, !dbg !914
  %cmp79 = icmp eq i32 %conv78, 44, !dbg !914
  br label %lor.end.81, !dbg !914

lor.end.81:                                       ; preds = %lor.rhs.77, %lor.lhs.false.73, %lor.lhs.false.69, %while.cond.65
  %48 = phi i1 [ true, %lor.lhs.false.73 ], [ true, %lor.lhs.false.69 ], [ true, %while.cond.65 ], [ %cmp79, %lor.rhs.77 ]
  br i1 %48, label %while.body.82, label %while.end.84, !dbg !916

while.body.82:                                    ; preds = %lor.end.81
  %49 = load i8*, i8** %p.addr, align 8, !dbg !921
  %incdec.ptr83 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !921
  store i8* %incdec.ptr83, i8** %p.addr, align 8, !dbg !921
  br label %while.cond.65, !dbg !921

while.end.84:                                     ; preds = %lor.end.81
  br label %while.cond.12, !dbg !831

while.end.85:                                     ; preds = %land.end
  %50 = load i32, i32* %ret, align 4, !dbg !923
  store i32 %50, i32* %retval, !dbg !924
  br label %return, !dbg !924

return:                                           ; preds = %while.end.85, %if.then.27
  %51 = load i32, i32* %retval, !dbg !925
  ret i32 %51, !dbg !925
}

; Function Attrs: nounwind uwtable
define void @strip_comments(i8* %p) #0 {
entry:
  %p.addr = alloca i8*, align 8
  %b = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !926, metadata !67), !dbg !927
  call void @llvm.dbg.declare(metadata i8** %b, metadata !928, metadata !67), !dbg !929
  br label %while.cond, !dbg !930

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i8*, i8** %p.addr, align 8, !dbg !931
  %call = call i8* @strchr(i8* %0, i32 40) #6, !dbg !934
  store i8* %call, i8** %p.addr, align 8, !dbg !935
  %cmp = icmp ne i8* %call, null, !dbg !936
  br i1 %cmp, label %while.body, label %while.end, !dbg !930

while.body:                                       ; preds = %while.cond
  %1 = load i8*, i8** %p.addr, align 8, !dbg !937
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !937
  store i8* %incdec.ptr, i8** %p.addr, align 8, !dbg !937
  store i8* %1, i8** %b, align 8, !dbg !939
  %2 = load i8*, i8** %p.addr, align 8, !dbg !940
  %call1 = call i8* @strchr(i8* %2, i32 41) #6, !dbg !942
  store i8* %call1, i8** %p.addr, align 8, !dbg !943
  %cmp2 = icmp ne i8* %call1, null, !dbg !944
  br i1 %cmp2, label %if.then, label %if.else, !dbg !945

if.then:                                          ; preds = %while.body
  %3 = load i8*, i8** %b, align 8, !dbg !946
  %4 = load i8*, i8** %p.addr, align 8, !dbg !948
  %incdec.ptr3 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !948
  store i8* %incdec.ptr3, i8** %p.addr, align 8, !dbg !948
  %call4 = call i8* @strcpy(i8* %3, i8* %incdec.ptr3) #5, !dbg !949
  br label %if.end, !dbg !950

if.else:                                          ; preds = %while.body
  %5 = load i8*, i8** %b, align 8, !dbg !951
  store i8 0, i8* %5, align 1, !dbg !953
  br label %while.end, !dbg !954

if.end:                                           ; preds = %if.then
  br label %while.cond, !dbg !930

while.end:                                        ; preds = %if.else, %while.cond
  ret void, !dbg !955
}

; Function Attrs: nounwind uwtable
define %struct.alias_node* @add_vert(%struct.alias_node* %head, i8* %str) #0 {
entry:
  %head.addr = alloca %struct.alias_node*, align 8
  %str.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %new = alloca %struct.alias_node*, align 8
  store %struct.alias_node* %head, %struct.alias_node** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_node** %head.addr, metadata !956, metadata !67), !dbg !957
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !958, metadata !67), !dbg !959
  call void @llvm.dbg.declare(metadata i8** %p, metadata !960, metadata !67), !dbg !961
  call void @llvm.dbg.declare(metadata %struct.alias_node** %new, metadata !962, metadata !67), !dbg !963
  %0 = load i8*, i8** %str.addr, align 8, !dbg !964
  %call = call i8* @strchr(i8* %0, i32 58) #6, !dbg !966
  store i8* %call, i8** %p, align 8, !dbg !967
  %cmp = icmp ne i8* %call, null, !dbg !968
  br i1 %cmp, label %if.then, label %if.end, !dbg !969

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %p, align 8, !dbg !970
  store i8 0, i8* %1, align 1, !dbg !972
  br label %if.end, !dbg !973

if.end:                                           ; preds = %if.then, %entry
  %call1 = call noalias i8* @malloc(i64 24) #5, !dbg !974
  %2 = bitcast i8* %call1 to %struct.alias_node*, !dbg !976
  store %struct.alias_node* %2, %struct.alias_node** %new, align 8, !dbg !977
  %cmp2 = icmp ne %struct.alias_node* %2, null, !dbg !978
  br i1 %cmp2, label %if.then.3, label %if.end.15, !dbg !979

if.then.3:                                        ; preds = %if.end
  %3 = load i8*, i8** %str.addr, align 8, !dbg !980
  %call4 = call i64 @strlen(i8* %3) #6, !dbg !983
  %conv = trunc i64 %call4 to i32, !dbg !984
  %add = add i32 %conv, 1, !dbg !985
  %conv5 = zext i32 %add to i64, !dbg !984
  %call6 = call noalias i8* @malloc(i64 %conv5) #5, !dbg !986
  %4 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !987
  %string = getelementptr inbounds %struct.alias_node, %struct.alias_node* %4, i32 0, i32 0, !dbg !988
  store i8* %call6, i8** %string, align 8, !dbg !989
  %cmp7 = icmp eq i8* %call6, null, !dbg !990
  br i1 %cmp7, label %if.then.9, label %if.else, !dbg !991

if.then.9:                                        ; preds = %if.then.3
  %5 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !992
  %6 = bitcast %struct.alias_node* %5 to i8*, !dbg !992
  call void @free(i8* %6) #5, !dbg !994
  store %struct.alias_node* null, %struct.alias_node** %new, align 8, !dbg !995
  br label %if.end.14, !dbg !996

if.else:                                          ; preds = %if.then.3
  %7 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !997
  %string10 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %7, i32 0, i32 0, !dbg !999
  %8 = load i8*, i8** %string10, align 8, !dbg !999
  %9 = load i8*, i8** %str.addr, align 8, !dbg !1000
  %call11 = call i8* @strcpy(i8* %8, i8* %9) #5, !dbg !1001
  %10 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1002
  %vert = getelementptr inbounds %struct.alias_node, %struct.alias_node* %10, i32 0, i32 2, !dbg !1003
  %11 = load %struct.alias_node*, %struct.alias_node** %vert, align 8, !dbg !1003
  %12 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1004
  %vert12 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %12, i32 0, i32 2, !dbg !1005
  store %struct.alias_node* %11, %struct.alias_node** %vert12, align 8, !dbg !1006
  %13 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1007
  %horz = getelementptr inbounds %struct.alias_node, %struct.alias_node* %13, i32 0, i32 1, !dbg !1008
  store %struct.alias_node* null, %struct.alias_node** %horz, align 8, !dbg !1009
  %14 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1010
  %15 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1011
  %vert13 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %15, i32 0, i32 2, !dbg !1012
  store %struct.alias_node* %14, %struct.alias_node** %vert13, align 8, !dbg !1013
  br label %if.end.14

if.end.14:                                        ; preds = %if.else, %if.then.9
  br label %if.end.15, !dbg !1014

if.end.15:                                        ; preds = %if.end.14, %if.end
  %16 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1015
  ret %struct.alias_node* %16, !dbg !1016
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind uwtable
define void @add_horz(%struct.alias_node* %head, i8* %str) #0 {
entry:
  %head.addr = alloca %struct.alias_node*, align 8
  %str.addr = alloca i8*, align 8
  %new = alloca %struct.alias_node*, align 8
  store %struct.alias_node* %head, %struct.alias_node** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_node** %head.addr, metadata !1017, metadata !67), !dbg !1018
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !1019, metadata !67), !dbg !1020
  call void @llvm.dbg.declare(metadata %struct.alias_node** %new, metadata !1021, metadata !67), !dbg !1022
  %call = call noalias i8* @malloc(i64 24) #5, !dbg !1023
  %0 = bitcast i8* %call to %struct.alias_node*, !dbg !1025
  store %struct.alias_node* %0, %struct.alias_node** %new, align 8, !dbg !1026
  %cmp = icmp ne %struct.alias_node* %0, null, !dbg !1027
  br i1 %cmp, label %if.then, label %if.end.11, !dbg !1028

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %str.addr, align 8, !dbg !1029
  %call1 = call i64 @strlen(i8* %1) #6, !dbg !1032
  %conv = trunc i64 %call1 to i32, !dbg !1033
  %add = add i32 %conv, 1, !dbg !1034
  %conv2 = zext i32 %add to i64, !dbg !1033
  %call3 = call noalias i8* @malloc(i64 %conv2) #5, !dbg !1035
  %2 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1036
  %string = getelementptr inbounds %struct.alias_node, %struct.alias_node* %2, i32 0, i32 0, !dbg !1037
  store i8* %call3, i8** %string, align 8, !dbg !1038
  %cmp4 = icmp eq i8* %call3, null, !dbg !1039
  br i1 %cmp4, label %if.then.6, label %if.else, !dbg !1040

if.then.6:                                        ; preds = %if.then
  %3 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1041
  %4 = bitcast %struct.alias_node* %3 to i8*, !dbg !1041
  call void @free(i8* %4) #5, !dbg !1043
  store %struct.alias_node* null, %struct.alias_node** %new, align 8, !dbg !1044
  br label %if.end, !dbg !1045

if.else:                                          ; preds = %if.then
  %5 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1046
  %string7 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %5, i32 0, i32 0, !dbg !1048
  %6 = load i8*, i8** %string7, align 8, !dbg !1048
  %7 = load i8*, i8** %str.addr, align 8, !dbg !1049
  %call8 = call i8* @strcpy(i8* %6, i8* %7) #5, !dbg !1050
  %8 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1051
  %horz = getelementptr inbounds %struct.alias_node, %struct.alias_node* %8, i32 0, i32 1, !dbg !1052
  %9 = load %struct.alias_node*, %struct.alias_node** %horz, align 8, !dbg !1052
  %10 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1053
  %horz9 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %10, i32 0, i32 1, !dbg !1054
  store %struct.alias_node* %9, %struct.alias_node** %horz9, align 8, !dbg !1055
  %11 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1056
  %vert = getelementptr inbounds %struct.alias_node, %struct.alias_node* %11, i32 0, i32 2, !dbg !1057
  store %struct.alias_node* null, %struct.alias_node** %vert, align 8, !dbg !1058
  %12 = load %struct.alias_node*, %struct.alias_node** %new, align 8, !dbg !1059
  %13 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1060
  %horz10 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %13, i32 0, i32 1, !dbg !1061
  store %struct.alias_node* %12, %struct.alias_node** %horz10, align 8, !dbg !1062
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.6
  br label %if.end.11, !dbg !1063

if.end.11:                                        ; preds = %if.end, %entry
  ret void, !dbg !1064
}

; Function Attrs: nounwind uwtable
define %struct.alias_node* @pop(%struct.alias_node* %head) #0 {
entry:
  %head.addr = alloca %struct.alias_node*, align 8
  %ret = alloca %struct.alias_node*, align 8
  store %struct.alias_node* %head, %struct.alias_node** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_node** %head.addr, metadata !1065, metadata !67), !dbg !1066
  call void @llvm.dbg.declare(metadata %struct.alias_node** %ret, metadata !1067, metadata !67), !dbg !1068
  store %struct.alias_node* null, %struct.alias_node** %ret, align 8, !dbg !1068
  %0 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1069
  %cmp = icmp ne %struct.alias_node* %0, null, !dbg !1071
  br i1 %cmp, label %if.then, label %if.end.5, !dbg !1072

if.then:                                          ; preds = %entry
  %1 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1073
  %horz = getelementptr inbounds %struct.alias_node, %struct.alias_node* %1, i32 0, i32 1, !dbg !1075
  %2 = load %struct.alias_node*, %struct.alias_node** %horz, align 8, !dbg !1075
  store %struct.alias_node* %2, %struct.alias_node** %ret, align 8, !dbg !1076
  %3 = load %struct.alias_node*, %struct.alias_node** %ret, align 8, !dbg !1077
  %cmp1 = icmp ne %struct.alias_node* %3, null, !dbg !1079
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !1080

if.then.2:                                        ; preds = %if.then
  %4 = load %struct.alias_node*, %struct.alias_node** %ret, align 8, !dbg !1081
  %horz3 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %4, i32 0, i32 1, !dbg !1083
  %5 = load %struct.alias_node*, %struct.alias_node** %horz3, align 8, !dbg !1083
  %6 = load %struct.alias_node*, %struct.alias_node** %head.addr, align 8, !dbg !1084
  %horz4 = getelementptr inbounds %struct.alias_node, %struct.alias_node* %6, i32 0, i32 1, !dbg !1085
  store %struct.alias_node* %5, %struct.alias_node** %horz4, align 8, !dbg !1086
  br label %if.end, !dbg !1087

if.end:                                           ; preds = %if.then.2, %if.then
  br label %if.end.5, !dbg !1088

if.end.5:                                         ; preds = %if.end, %entry
  %7 = load %struct.alias_node*, %struct.alias_node** %ret, align 8, !dbg !1089
  ret %struct.alias_node* %7, !dbg !1090
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!63, !64}
!llvm.ident = !{!65}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !9, subprograms: !22, globals: !50)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "edebug", file: !4, line: 303, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./defs.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!5 = !{!6, !7, !8}
!6 = !DIEnumerator(name: "NO", value: 0)
!7 = !DIEnumerator(name: "VERBOSE", value: 1)
!8 = !DIEnumerator(name: "YES", value: 2)
!9 = !{!10, !20, !21}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "node", file: !12, line: 37, baseType: !13)
!12 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail/tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "alias_node", file: !12, line: 39, size: 192, align: 64, elements: !14)
!14 = !{!15, !18, !19}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !13, file: !12, line: 40, baseType: !16, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "horz", scope: !13, file: !12, line: 41, baseType: !10, size: 64, align: 64, offset: 64)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !13, file: !12, line: 42, baseType: !10, size: 64, align: 64, offset: 128)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!21 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!22 = !{!23, !30, !33, !36, !39, !42, !45, !46, !47}
!23 = !DISubprogram(name: "alias", scope: !12, file: !12, line: 87, type: !24, isLocal: false, isDefinition: true, scopeLine: 87, flags: DIFlagPrototyped, isOptimized: false, function: i8** (i32*, i8**)* @alias, variables: !29)
!24 = !DISubroutineType(types: !25)
!25 = !{!26, !27, !26}
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!29 = !{}
!30 = !DISubprogram(name: "v_search", scope: !12, file: !12, line: 300, type: !31, isLocal: false, isDefinition: true, scopeLine: 300, flags: DIFlagPrototyped, isOptimized: false, function: %struct.alias_node* (i8*)* @v_search, variables: !29)
!31 = !DISubroutineType(types: !32)
!32 = !{!10, !16}
!33 = !DISubprogram(name: "h_search", scope: !12, file: !12, line: 332, type: !34, isLocal: false, isDefinition: true, scopeLine: 332, flags: DIFlagPrototyped, isOptimized: false, function: %struct.alias_node* (%struct.alias_node*, i8*)* @h_search, variables: !29)
!34 = !DISubroutineType(types: !35)
!35 = !{!10, !10, !16}
!36 = !DISubprogram(name: "load_alias", scope: !12, file: !12, line: 354, type: !37, isLocal: false, isDefinition: true, scopeLine: 354, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.alias_node*, i8*)* @load_alias, variables: !29)
!37 = !DISubroutineType(types: !38)
!38 = !{null, !10, !16}
!39 = !DISubprogram(name: "recipients", scope: !12, file: !12, line: 437, type: !40, isLocal: false, isDefinition: true, scopeLine: 437, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.alias_node*, i8*)* @recipients, variables: !29)
!40 = !DISubroutineType(types: !41)
!41 = !{!28, !10, !16}
!42 = !DISubprogram(name: "strip_comments", scope: !12, file: !12, line: 484, type: !43, isLocal: false, isDefinition: true, scopeLine: 484, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @strip_comments, variables: !29)
!43 = !DISubroutineType(types: !44)
!44 = !{null, !16}
!45 = !DISubprogram(name: "add_vert", scope: !12, file: !12, line: 503, type: !34, isLocal: false, isDefinition: true, scopeLine: 503, flags: DIFlagPrototyped, isOptimized: false, function: %struct.alias_node* (%struct.alias_node*, i8*)* @add_vert, variables: !29)
!46 = !DISubprogram(name: "add_horz", scope: !12, file: !12, line: 533, type: !37, isLocal: false, isDefinition: true, scopeLine: 533, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.alias_node*, i8*)* @add_horz, variables: !29)
!47 = !DISubprogram(name: "pop", scope: !12, file: !12, line: 550, type: !48, isLocal: false, isDefinition: true, scopeLine: 550, flags: DIFlagPrototyped, isOptimized: false, function: %struct.alias_node* (%struct.alias_node*)* @pop, variables: !29)
!48 = !DISubroutineType(types: !49)
!49 = !{!10, !10}
!50 = !{!51, !55, !56, !57, !61, !62}
!51 = !DIGlobalVariable(name: "t_dom", scope: !23, file: !12, line: 261, type: !52, isLocal: true, isDefinition: true, variable: [512 x i8]* @alias.t_dom)
!52 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 4096, align: 8, elements: !53)
!53 = !{!54}
!54 = !DISubrange(count: 512)
!55 = !DIGlobalVariable(name: "t_unam", scope: !23, file: !12, line: 261, type: !52, isLocal: true, isDefinition: true, variable: [512 x i8]* @alias.t_unam)
!56 = !DIGlobalVariable(name: "loaded", scope: !30, file: !12, line: 303, type: !28, isLocal: true, isDefinition: true, variable: i32* @v_search.loaded)
!57 = !DIGlobalVariable(name: "nargv", scope: !0, file: !12, line: 67, type: !58, isLocal: true, isDefinition: true, variable: [500 x i8*]* @nargv)
!58 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 32000, align: 64, elements: !59)
!59 = !{!60}
!60 = !DISubrange(count: 500)
!61 = !DIGlobalVariable(name: "nargc", scope: !0, file: !12, line: 66, type: !28, isLocal: true, isDefinition: true, variable: i32* @nargc)
!62 = !DIGlobalVariable(name: "aliases", scope: !0, file: !12, line: 46, type: !11, isLocal: true, isDefinition: true, variable: %struct.alias_node* @aliases)
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!66 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pargc", arg: 1, scope: !23, file: !12, line: 87, type: !27)
!67 = !DIExpression()
!68 = !DILocation(line: 87, column: 19, scope: !23)
!69 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !23, file: !12, line: 87, type: !26)
!70 = !DILocation(line: 87, column: 33, scope: !23)
!71 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !12, line: 91, type: !28)
!72 = !DILocation(line: 91, column: 7, scope: !23)
!73 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "domain", scope: !23, file: !12, line: 92, type: !52)
!74 = !DILocation(line: 92, column: 8, scope: !23)
!75 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ubuf", scope: !23, file: !12, line: 92, type: !52)
!76 = !DILocation(line: 92, column: 24, scope: !23)
!77 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "user", scope: !23, file: !12, line: 92, type: !16)
!78 = !DILocation(line: 92, column: 39, scope: !23)
!79 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "addr", scope: !23, file: !12, line: 93, type: !10)
!80 = !DILocation(line: 93, column: 9, scope: !23)
!81 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "addrstk", scope: !23, file: !12, line: 93, type: !11)
!82 = !DILocation(line: 93, column: 15, scope: !23)
!83 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flist", scope: !23, file: !12, line: 94, type: !10)
!84 = !DILocation(line: 94, column: 9, scope: !23)
!85 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fliststk", scope: !23, file: !12, line: 94, type: !11)
!86 = !DILocation(line: 94, column: 16, scope: !23)
!87 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !23, file: !12, line: 94, type: !10)
!88 = !DILocation(line: 94, column: 27, scope: !23)
!89 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !23, file: !12, line: 97, type: !90)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !92, line: 48, baseType: !93)
!92 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!93 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !94, line: 241, size: 1728, align: 64, elements: !95)
!94 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !116, !117, !118, !119, !123, !125, !127, !131, !134, !136, !137, !138, !139, !140, !144, !145}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !93, file: !94, line: 242, baseType: !28, size: 32, align: 32)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !93, file: !94, line: 247, baseType: !16, size: 64, align: 64, offset: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !93, file: !94, line: 248, baseType: !16, size: 64, align: 64, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !93, file: !94, line: 249, baseType: !16, size: 64, align: 64, offset: 192)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !93, file: !94, line: 250, baseType: !16, size: 64, align: 64, offset: 256)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !93, file: !94, line: 251, baseType: !16, size: 64, align: 64, offset: 320)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !93, file: !94, line: 252, baseType: !16, size: 64, align: 64, offset: 384)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !93, file: !94, line: 253, baseType: !16, size: 64, align: 64, offset: 448)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !93, file: !94, line: 254, baseType: !16, size: 64, align: 64, offset: 512)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !93, file: !94, line: 256, baseType: !16, size: 64, align: 64, offset: 576)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !93, file: !94, line: 257, baseType: !16, size: 64, align: 64, offset: 640)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !93, file: !94, line: 258, baseType: !16, size: 64, align: 64, offset: 704)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !93, file: !94, line: 260, baseType: !109, size: 64, align: 64, offset: 768)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64, align: 64)
!110 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !94, line: 156, size: 192, align: 64, elements: !111)
!111 = !{!112, !113, !115}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !110, file: !94, line: 157, baseType: !109, size: 64, align: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !110, file: !94, line: 158, baseType: !114, size: 64, align: 64, offset: 64)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64, align: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !110, file: !94, line: 162, baseType: !28, size: 32, align: 32, offset: 128)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !93, file: !94, line: 262, baseType: !114, size: 64, align: 64, offset: 832)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !93, file: !94, line: 264, baseType: !28, size: 32, align: 32, offset: 896)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !93, file: !94, line: 268, baseType: !28, size: 32, align: 32, offset: 928)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !93, file: !94, line: 270, baseType: !120, size: 64, align: 64, offset: 960)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !121, line: 131, baseType: !122)
!121 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!122 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !93, file: !94, line: 274, baseType: !124, size: 16, align: 16, offset: 1024)
!124 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !93, file: !94, line: 275, baseType: !126, size: 8, align: 8, offset: 1040)
!126 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !93, file: !94, line: 276, baseType: !128, size: 8, align: 8, offset: 1048)
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 8, align: 8, elements: !129)
!129 = !{!130}
!130 = !DISubrange(count: 1)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !93, file: !94, line: 280, baseType: !132, size: 64, align: 64, offset: 1088)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64, align: 64)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !94, line: 150, baseType: null)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !93, file: !94, line: 289, baseType: !135, size: 64, align: 64, offset: 1152)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !121, line: 132, baseType: !122)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !93, file: !94, line: 297, baseType: !20, size: 64, align: 64, offset: 1216)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !93, file: !94, line: 298, baseType: !20, size: 64, align: 64, offset: 1280)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !93, file: !94, line: 299, baseType: !20, size: 64, align: 64, offset: 1344)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !93, file: !94, line: 300, baseType: !20, size: 64, align: 64, offset: 1408)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !93, file: !94, line: 302, baseType: !141, size: 64, align: 64, offset: 1472)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !142, line: 62, baseType: !143)
!142 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!143 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !93, file: !94, line: 303, baseType: !28, size: 32, align: 32, offset: 1536)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !93, file: !94, line: 305, baseType: !146, size: 160, align: 8, offset: 1568)
!146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 160, align: 8, elements: !147)
!147 = !{!148}
!148 = !DISubrange(count: 20)
!149 = !DILocation(line: 97, column: 9, scope: !23)
!150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !23, file: !12, line: 98, type: !10)
!151 = !DILocation(line: 98, column: 9, scope: !23)
!152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "home", scope: !23, file: !12, line: 99, type: !16)
!153 = !DILocation(line: 99, column: 9, scope: !23)
!154 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !23, file: !12, line: 99, type: !52)
!155 = !DILocation(line: 99, column: 15, scope: !23)
!156 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aliased", scope: !23, file: !12, line: 100, type: !28)
!157 = !DILocation(line: 100, column: 7, scope: !23)
!158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "st", scope: !23, file: !12, line: 101, type: !159)
!159 = !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !160, line: 46, size: 1152, align: 64, elements: !161)
!160 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!161 = !{!162, !164, !166, !168, !170, !172, !174, !175, !176, !177, !179, !181, !189, !190, !191}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !159, file: !160, line: 48, baseType: !163, size: 64, align: 64)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !121, line: 124, baseType: !143)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !159, file: !160, line: 53, baseType: !165, size: 64, align: 64, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !121, line: 127, baseType: !143)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !159, file: !160, line: 61, baseType: !167, size: 64, align: 64, offset: 128)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !121, line: 130, baseType: !143)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !159, file: !160, line: 62, baseType: !169, size: 32, align: 32, offset: 192)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !121, line: 129, baseType: !21)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !159, file: !160, line: 64, baseType: !171, size: 32, align: 32, offset: 224)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !121, line: 125, baseType: !21)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !159, file: !160, line: 65, baseType: !173, size: 32, align: 32, offset: 256)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !121, line: 126, baseType: !21)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !159, file: !160, line: 67, baseType: !28, size: 32, align: 32, offset: 288)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !159, file: !160, line: 69, baseType: !163, size: 64, align: 64, offset: 320)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !159, file: !160, line: 74, baseType: !120, size: 64, align: 64, offset: 384)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !159, file: !160, line: 78, baseType: !178, size: 64, align: 64, offset: 448)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !121, line: 153, baseType: !122)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !159, file: !160, line: 80, baseType: !180, size: 64, align: 64, offset: 512)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !121, line: 158, baseType: !122)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !159, file: !160, line: 91, baseType: !182, size: 128, align: 64, offset: 576)
!182 = !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !183, line: 120, size: 128, align: 64, elements: !184)
!183 = !DIFile(filename: "/usr/include/time.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/unix-smail")
!184 = !{!185, !187}
!185 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !182, file: !183, line: 122, baseType: !186, size: 64, align: 64)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !121, line: 139, baseType: !122)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !182, file: !183, line: 123, baseType: !188, size: 64, align: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !121, line: 175, baseType: !122)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !159, file: !160, line: 92, baseType: !182, size: 128, align: 64, offset: 704)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !159, file: !160, line: 93, baseType: !182, size: 128, align: 64, offset: 832)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !159, file: !160, line: 106, baseType: !192, size: 192, align: 64, offset: 960)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 192, align: 64, elements: !193)
!193 = !{!194}
!194 = !DISubrange(count: 3)
!195 = !DILocation(line: 101, column: 15, scope: !23)
!196 = !DILocation(line: 108, column: 8, scope: !23)
!197 = !DILocation(line: 109, column: 9, scope: !23)
!198 = !DILocation(line: 110, column: 10, scope: !23)
!199 = !DILocation(line: 110, column: 8, scope: !23)
!200 = !DILocation(line: 112, column: 3, scope: !23)
!201 = !DILocation(line: 112, column: 9, scope: !23)
!202 = !DILocation(line: 112, column: 14, scope: !23)
!203 = !DILocation(line: 113, column: 3, scope: !23)
!204 = !DILocation(line: 113, column: 10, scope: !23)
!205 = !DILocation(line: 113, column: 15, scope: !23)
!206 = !DILocation(line: 118, column: 10, scope: !207)
!207 = distinct !DILexicalBlock(scope: !23, file: !12, line: 118, column: 3)
!208 = !DILocation(line: 118, column: 8, scope: !207)
!209 = !DILocation(line: 118, column: 15, scope: !210)
!210 = !DILexicalBlockFile(scope: !211, file: !12, discriminator: 2)
!211 = !DILexicalBlockFile(scope: !212, file: !12, discriminator: 1)
!212 = distinct !DILexicalBlock(scope: !207, file: !12, line: 118, column: 3)
!213 = !DILocation(line: 118, column: 20, scope: !212)
!214 = !DILocation(line: 118, column: 19, scope: !212)
!215 = !DILocation(line: 118, column: 17, scope: !212)
!216 = !DILocation(line: 118, column: 3, scope: !207)
!217 = !DILocation(line: 119, column: 10, scope: !218)
!218 = distinct !DILexicalBlock(scope: !212, file: !12, line: 118, column: 32)
!219 = !DILocation(line: 119, column: 21, scope: !218)
!220 = !DILocation(line: 119, column: 16, scope: !218)
!221 = !DILocation(line: 119, column: 5, scope: !218)
!222 = !DILocation(line: 120, column: 3, scope: !218)
!223 = !DILocation(line: 118, column: 28, scope: !212)
!224 = !DILocation(line: 118, column: 3, scope: !212)
!225 = !DILocation(line: 127, column: 3, scope: !23)
!226 = !DILocation(line: 127, column: 11, scope: !227)
!227 = !DILexicalBlockFile(scope: !228, file: !12, discriminator: 4)
!228 = !DILexicalBlockFile(scope: !23, file: !12, discriminator: 1)
!229 = !DILocation(line: 127, column: 17, scope: !23)
!230 = !DILocation(line: 127, column: 28, scope: !23)
!231 = !DILocation(line: 127, column: 41, scope: !232)
!232 = !DILexicalBlockFile(scope: !23, file: !12, discriminator: 2)
!233 = !DILocation(line: 127, column: 37, scope: !23)
!234 = !DILocation(line: 127, column: 35, scope: !23)
!235 = !DILocation(line: 127, column: 48, scope: !23)
!236 = !DILocation(line: 127, column: 3, scope: !237)
!237 = !DILexicalBlockFile(scope: !23, file: !12, discriminator: 3)
!238 = !DILocation(line: 129, column: 19, scope: !239)
!239 = distinct !DILexicalBlock(scope: !240, file: !12, line: 129, column: 9)
!240 = distinct !DILexicalBlock(scope: !23, file: !12, line: 127, column: 59)
!241 = !DILocation(line: 129, column: 22, scope: !239)
!242 = !DILocation(line: 129, column: 9, scope: !239)
!243 = !DILocation(line: 129, column: 46, scope: !239)
!244 = !DILocation(line: 129, column: 9, scope: !240)
!245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !246, file: !12, line: 135, type: !16)
!246 = distinct !DILexicalBlock(scope: !239, file: !12, line: 129, column: 52)
!247 = !DILocation(line: 135, column: 13, scope: !246)
!248 = !DILocation(line: 135, column: 17, scope: !246)
!249 = !DILocation(line: 135, column: 20, scope: !246)
!250 = !DILocation(line: 135, column: 27, scope: !246)
!251 = !DILocation(line: 137, column: 13, scope: !252)
!252 = distinct !DILexicalBlock(scope: !246, file: !12, line: 137, column: 11)
!253 = !DILocation(line: 137, column: 12, scope: !252)
!254 = !DILocation(line: 137, column: 15, scope: !252)
!255 = !DILocation(line: 137, column: 23, scope: !252)
!256 = !DILocation(line: 137, column: 36, scope: !257)
!257 = !DILexicalBlockFile(scope: !252, file: !12, discriminator: 1)
!258 = !DILocation(line: 137, column: 43, scope: !252)
!259 = !DILocation(line: 137, column: 27, scope: !252)
!260 = !DILocation(line: 137, column: 46, scope: !252)
!261 = !DILocation(line: 137, column: 11, scope: !246)
!262 = !DILocation(line: 138, column: 14, scope: !263)
!263 = distinct !DILexicalBlock(scope: !252, file: !12, line: 137, column: 56)
!264 = !DILocation(line: 138, column: 21, scope: !263)
!265 = !DILocation(line: 138, column: 9, scope: !263)
!266 = !DILocation(line: 139, column: 19, scope: !267)
!267 = distinct !DILexicalBlock(scope: !263, file: !12, line: 139, column: 13)
!268 = !DILocation(line: 139, column: 14, scope: !267)
!269 = !DILocation(line: 139, column: 27, scope: !267)
!270 = !DILocation(line: 139, column: 33, scope: !267)
!271 = !DILocation(line: 139, column: 41, scope: !272)
!272 = !DILexicalBlockFile(scope: !267, file: !12, discriminator: 1)
!273 = !DILocation(line: 139, column: 49, scope: !267)
!274 = !DILocation(line: 139, column: 59, scope: !267)
!275 = !DILocation(line: 139, column: 71, scope: !267)
!276 = !DILocation(line: 139, column: 87, scope: !277)
!277 = !DILexicalBlockFile(scope: !267, file: !12, discriminator: 2)
!278 = !DILocation(line: 139, column: 81, scope: !267)
!279 = !DILocation(line: 139, column: 79, scope: !267)
!280 = !DILocation(line: 139, column: 96, scope: !267)
!281 = !DILocation(line: 139, column: 13, scope: !263)
!282 = !DILocation(line: 140, column: 11, scope: !283)
!283 = distinct !DILexicalBlock(scope: !267, file: !12, line: 139, column: 106)
!284 = !DILocation(line: 140, column: 24, scope: !285)
!285 = !DILexicalBlockFile(scope: !286, file: !12, discriminator: 2)
!286 = !DILexicalBlockFile(scope: !283, file: !12, discriminator: 1)
!287 = !DILocation(line: 140, column: 41, scope: !283)
!288 = !DILocation(line: 140, column: 18, scope: !283)
!289 = !DILocation(line: 141, column: 30, scope: !290)
!290 = distinct !DILexicalBlock(scope: !283, file: !12, line: 140, column: 46)
!291 = !DILocation(line: 141, column: 36, scope: !290)
!292 = !DILocation(line: 141, column: 19, scope: !290)
!293 = !DILocation(line: 143, column: 24, scope: !283)
!294 = !DILocation(line: 143, column: 17, scope: !283)
!295 = !DILocation(line: 144, column: 9, scope: !283)
!296 = !DILocation(line: 145, column: 7, scope: !263)
!297 = !DILocation(line: 146, column: 7, scope: !246)
!298 = !DILocation(line: 153, column: 17, scope: !299)
!299 = distinct !DILexicalBlock(scope: !240, file: !12, line: 153, column: 9)
!300 = !DILocation(line: 153, column: 20, scope: !299)
!301 = !DILocation(line: 153, column: 28, scope: !299)
!302 = !DILocation(line: 153, column: 36, scope: !299)
!303 = !DILocation(line: 153, column: 9, scope: !299)
!304 = !DILocation(line: 153, column: 42, scope: !299)
!305 = !DILocation(line: 153, column: 9, scope: !240)
!306 = !DILocation(line: 154, column: 7, scope: !307)
!307 = distinct !DILexicalBlock(scope: !299, file: !12, line: 153, column: 48)
!308 = !DILocation(line: 169, column: 12, scope: !240)
!309 = !DILocation(line: 169, column: 12, scope: !310)
!310 = !DILexicalBlockFile(scope: !240, file: !12, discriminator: 1)
!311 = !DILocation(line: 169, column: 12, scope: !312)
!312 = !DILexicalBlockFile(scope: !240, file: !12, discriminator: 2)
!313 = !DILocation(line: 169, column: 10, scope: !314)
!314 = !DILexicalBlockFile(scope: !315, file: !12, discriminator: 4)
!315 = !DILexicalBlockFile(scope: !240, file: !12, discriminator: 3)
!316 = !DILocation(line: 171, column: 18, scope: !240)
!317 = !DILocation(line: 171, column: 21, scope: !240)
!318 = !DILocation(line: 171, column: 29, scope: !240)
!319 = !DILocation(line: 171, column: 11, scope: !240)
!320 = !DILocation(line: 189, column: 24, scope: !321)
!321 = distinct !DILexicalBlock(scope: !240, file: !12, line: 189, column: 9)
!322 = !DILocation(line: 189, column: 15, scope: !321)
!323 = !DILocation(line: 189, column: 13, scope: !321)
!324 = !DILocation(line: 189, column: 31, scope: !321)
!325 = !DILocation(line: 189, column: 9, scope: !240)
!326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtmpb", scope: !327, file: !12, line: 190, type: !52)
!327 = distinct !DILexicalBlock(scope: !321, file: !12, line: 189, column: 42)
!328 = !DILocation(line: 190, column: 12, scope: !327)
!329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "utmpb", scope: !327, file: !12, line: 190, type: !52)
!330 = !DILocation(line: 190, column: 27, scope: !327)
!331 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ut", scope: !327, file: !12, line: 190, type: !16)
!332 = !DILocation(line: 190, column: 43, scope: !327)
!333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "user_inalias", scope: !327, file: !12, line: 191, type: !28)
!334 = !DILocation(line: 191, column: 11, scope: !327)
!335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !327, file: !12, line: 192, type: !10)
!336 = !DILocation(line: 192, column: 13, scope: !327)
!337 = !DILocation(line: 192, column: 17, scope: !327)
!338 = !DILocation(line: 194, column: 16, scope: !339)
!339 = distinct !DILexicalBlock(scope: !327, file: !12, line: 194, column: 7)
!340 = !DILocation(line: 194, column: 19, scope: !339)
!341 = !DILocation(line: 194, column: 14, scope: !339)
!342 = !DILocation(line: 194, column: 12, scope: !339)
!343 = !DILocation(line: 194, column: 25, scope: !344)
!344 = !DILexicalBlockFile(scope: !345, file: !12, discriminator: 2)
!345 = !DILexicalBlockFile(scope: !346, file: !12, discriminator: 1)
!346 = distinct !DILexicalBlock(scope: !339, file: !12, line: 194, column: 7)
!347 = !DILocation(line: 194, column: 27, scope: !346)
!348 = !DILocation(line: 194, column: 7, scope: !339)
!349 = !DILocation(line: 195, column: 21, scope: !350)
!350 = distinct !DILexicalBlock(scope: !351, file: !12, line: 195, column: 13)
!351 = distinct !DILexicalBlock(scope: !346, file: !12, line: 194, column: 50)
!352 = !DILocation(line: 195, column: 24, scope: !350)
!353 = !DILocation(line: 195, column: 32, scope: !350)
!354 = !DILocation(line: 195, column: 39, scope: !350)
!355 = !DILocation(line: 195, column: 13, scope: !350)
!356 = !DILocation(line: 195, column: 13, scope: !351)
!357 = !DILocation(line: 203, column: 16, scope: !358)
!358 = distinct !DILexicalBlock(scope: !350, file: !12, line: 195, column: 47)
!359 = !DILocation(line: 203, column: 16, scope: !360)
!360 = !DILexicalBlockFile(scope: !358, file: !12, discriminator: 1)
!361 = !DILocation(line: 203, column: 16, scope: !362)
!362 = !DILexicalBlockFile(scope: !358, file: !12, discriminator: 2)
!363 = !DILocation(line: 203, column: 14, scope: !364)
!364 = !DILexicalBlockFile(scope: !365, file: !12, discriminator: 4)
!365 = !DILexicalBlockFile(scope: !358, file: !12, discriminator: 3)
!366 = !DILocation(line: 207, column: 24, scope: !367)
!367 = distinct !DILexicalBlock(scope: !358, file: !12, line: 207, column: 15)
!368 = !DILocation(line: 207, column: 28, scope: !367)
!369 = !DILocation(line: 207, column: 15, scope: !367)
!370 = !DILocation(line: 207, column: 34, scope: !367)
!371 = !DILocation(line: 207, column: 15, scope: !358)
!372 = !DILocation(line: 210, column: 26, scope: !373)
!373 = distinct !DILexicalBlock(scope: !367, file: !12, line: 209, column: 11)
!374 = !DILocation(line: 211, column: 11, scope: !373)
!375 = !DILocation(line: 212, column: 18, scope: !376)
!376 = distinct !DILexicalBlock(scope: !367, file: !12, line: 211, column: 18)
!377 = !DILocation(line: 212, column: 24, scope: !376)
!378 = !DILocation(line: 212, column: 27, scope: !376)
!379 = !DILocation(line: 212, column: 13, scope: !376)
!380 = !DILocation(line: 214, column: 9, scope: !358)
!381 = !DILocation(line: 215, column: 16, scope: !382)
!382 = distinct !DILexicalBlock(scope: !350, file: !12, line: 214, column: 16)
!383 = !DILocation(line: 215, column: 22, scope: !382)
!384 = !DILocation(line: 215, column: 25, scope: !382)
!385 = !DILocation(line: 215, column: 11, scope: !382)
!386 = !DILocation(line: 217, column: 7, scope: !351)
!387 = !DILocation(line: 194, column: 41, scope: !346)
!388 = !DILocation(line: 194, column: 44, scope: !346)
!389 = !DILocation(line: 194, column: 39, scope: !346)
!390 = !DILocation(line: 194, column: 7, scope: !346)
!391 = !DILocation(line: 218, column: 7, scope: !327)
!392 = !DILocation(line: 218, column: 10, scope: !327)
!393 = !DILocation(line: 218, column: 15, scope: !327)
!394 = !DILocation(line: 219, column: 11, scope: !395)
!395 = distinct !DILexicalBlock(scope: !327, file: !12, line: 219, column: 11)
!396 = !DILocation(line: 219, column: 24, scope: !395)
!397 = !DILocation(line: 219, column: 11, scope: !327)
!398 = !DILocation(line: 220, column: 9, scope: !399)
!399 = distinct !DILexicalBlock(scope: !395, file: !12, line: 219, column: 30)
!400 = !DILocation(line: 222, column: 5, scope: !327)
!401 = !DILocation(line: 224, column: 23, scope: !402)
!402 = distinct !DILexicalBlock(scope: !240, file: !12, line: 224, column: 9)
!403 = !DILocation(line: 224, column: 17, scope: !402)
!404 = !DILocation(line: 224, column: 15, scope: !402)
!405 = !DILocation(line: 224, column: 30, scope: !402)
!406 = !DILocation(line: 224, column: 9, scope: !240)
!407 = !DILocation(line: 229, column: 21, scope: !408)
!408 = distinct !DILexicalBlock(scope: !409, file: !12, line: 229, column: 11)
!409 = distinct !DILexicalBlock(scope: !402, file: !12, line: 224, column: 39)
!410 = !DILocation(line: 229, column: 28, scope: !408)
!411 = !DILocation(line: 229, column: 12, scope: !408)
!412 = !DILocation(line: 229, column: 34, scope: !408)
!413 = !DILocation(line: 229, column: 11, scope: !409)
!414 = !DILocation(line: 230, column: 9, scope: !415)
!415 = distinct !DILexicalBlock(scope: !408, file: !12, line: 229, column: 44)
!416 = !DILocation(line: 232, column: 12, scope: !409)
!417 = !DILocation(line: 232, column: 19, scope: !409)
!418 = !DILocation(line: 232, column: 7, scope: !409)
!419 = !DILocation(line: 239, column: 21, scope: !409)
!420 = !DILocation(line: 239, column: 35, scope: !409)
!421 = !DILocation(line: 239, column: 13, scope: !409)
!422 = !DILocation(line: 240, column: 17, scope: !423)
!423 = distinct !DILexicalBlock(scope: !409, file: !12, line: 240, column: 11)
!424 = !DILocation(line: 240, column: 12, scope: !423)
!425 = !DILocation(line: 240, column: 27, scope: !423)
!426 = !DILocation(line: 240, column: 33, scope: !423)
!427 = !DILocation(line: 240, column: 41, scope: !428)
!428 = !DILexicalBlockFile(scope: !423, file: !12, discriminator: 1)
!429 = !DILocation(line: 240, column: 49, scope: !423)
!430 = !DILocation(line: 240, column: 59, scope: !423)
!431 = !DILocation(line: 240, column: 71, scope: !423)
!432 = !DILocation(line: 240, column: 79, scope: !433)
!433 = !DILexicalBlockFile(scope: !423, file: !12, discriminator: 2)
!434 = !DILocation(line: 240, column: 87, scope: !423)
!435 = !DILocation(line: 240, column: 95, scope: !423)
!436 = !DILocation(line: 240, column: 104, scope: !423)
!437 = !DILocation(line: 240, column: 120, scope: !438)
!438 = !DILexicalBlockFile(scope: !423, file: !12, discriminator: 3)
!439 = !DILocation(line: 240, column: 114, scope: !423)
!440 = !DILocation(line: 240, column: 112, scope: !423)
!441 = !DILocation(line: 240, column: 131, scope: !423)
!442 = !DILocation(line: 240, column: 11, scope: !409)
!443 = !DILocation(line: 241, column: 17, scope: !444)
!444 = distinct !DILexicalBlock(scope: !423, file: !12, line: 240, column: 141)
!445 = !DILocation(line: 242, column: 9, scope: !444)
!446 = !DILocation(line: 242, column: 22, scope: !447)
!447 = !DILexicalBlockFile(scope: !448, file: !12, discriminator: 2)
!448 = !DILexicalBlockFile(scope: !444, file: !12, discriminator: 1)
!449 = !DILocation(line: 242, column: 39, scope: !444)
!450 = !DILocation(line: 242, column: 16, scope: !444)
!451 = !DILocation(line: 243, column: 33, scope: !452)
!452 = distinct !DILexicalBlock(scope: !444, file: !12, line: 242, column: 44)
!453 = !DILocation(line: 243, column: 39, scope: !452)
!454 = !DILocation(line: 243, column: 22, scope: !452)
!455 = !DILocation(line: 243, column: 19, scope: !452)
!456 = !DILocation(line: 245, column: 22, scope: !444)
!457 = !DILocation(line: 245, column: 15, scope: !444)
!458 = !DILocation(line: 246, column: 13, scope: !459)
!459 = distinct !DILexicalBlock(scope: !444, file: !12, line: 246, column: 13)
!460 = !DILocation(line: 246, column: 13, scope: !444)
!461 = !DILocation(line: 247, column: 11, scope: !462)
!462 = distinct !DILexicalBlock(scope: !459, file: !12, line: 246, column: 22)
!463 = !DILocation(line: 249, column: 7, scope: !444)
!464 = !DILocation(line: 250, column: 5, scope: !409)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_user", scope: !466, file: !12, line: 262, type: !16)
!466 = distinct !DILexicalBlock(scope: !240, file: !12, line: 260, column: 5)
!467 = !DILocation(line: 262, column: 13, scope: !466)
!468 = !DILocation(line: 262, column: 32, scope: !466)
!469 = !DILocation(line: 262, column: 22, scope: !466)
!470 = !DILocation(line: 263, column: 11, scope: !471)
!471 = distinct !DILexicalBlock(scope: !466, file: !12, line: 263, column: 11)
!472 = !DILocation(line: 263, column: 18, scope: !471)
!473 = !DILocation(line: 263, column: 11, scope: !466)
!474 = !DILocation(line: 264, column: 21, scope: !475)
!475 = distinct !DILexicalBlock(scope: !476, file: !12, line: 264, column: 13)
!476 = distinct !DILexicalBlock(scope: !471, file: !12, line: 263, column: 27)
!477 = !DILocation(line: 264, column: 13, scope: !475)
!478 = !DILocation(line: 264, column: 44, scope: !475)
!479 = !DILocation(line: 264, column: 13, scope: !476)
!480 = !DILocation(line: 266, column: 16, scope: !481)
!481 = distinct !DILexicalBlock(scope: !475, file: !12, line: 264, column: 50)
!482 = !DILocation(line: 266, column: 22, scope: !481)
!483 = !DILocation(line: 266, column: 11, scope: !481)
!484 = !DILocation(line: 267, column: 11, scope: !481)
!485 = !DILocation(line: 269, column: 28, scope: !486)
!486 = distinct !DILexicalBlock(scope: !476, file: !12, line: 269, column: 13)
!487 = !DILocation(line: 269, column: 13, scope: !486)
!488 = !DILocation(line: 269, column: 34, scope: !486)
!489 = !DILocation(line: 269, column: 13, scope: !476)
!490 = !DILocation(line: 271, column: 16, scope: !491)
!491 = distinct !DILexicalBlock(scope: !486, file: !12, line: 269, column: 40)
!492 = !DILocation(line: 271, column: 11, scope: !491)
!493 = !DILocation(line: 272, column: 11, scope: !491)
!494 = !DILocation(line: 274, column: 7, scope: !476)
!495 = !DILocation(line: 275, column: 5, scope: !466)
!496 = !DILocation(line: 279, column: 12, scope: !240)
!497 = !DILocation(line: 279, column: 12, scope: !310)
!498 = !DILocation(line: 279, column: 12, scope: !312)
!499 = !DILocation(line: 279, column: 10, scope: !314)
!500 = !DILocation(line: 280, column: 12, scope: !501)
!501 = distinct !DILexicalBlock(scope: !240, file: !12, line: 280, column: 5)
!502 = !DILocation(line: 280, column: 10, scope: !501)
!503 = !DILocation(line: 280, column: 17, scope: !504)
!504 = !DILexicalBlockFile(scope: !505, file: !12, discriminator: 2)
!505 = !DILexicalBlockFile(scope: !506, file: !12, discriminator: 1)
!506 = distinct !DILexicalBlock(scope: !501, file: !12, line: 280, column: 5)
!507 = !DILocation(line: 280, column: 21, scope: !506)
!508 = !DILocation(line: 280, column: 19, scope: !506)
!509 = !DILocation(line: 280, column: 5, scope: !501)
!510 = !DILocation(line: 281, column: 26, scope: !511)
!511 = distinct !DILexicalBlock(scope: !512, file: !12, line: 281, column: 11)
!512 = distinct !DILexicalBlock(scope: !506, file: !12, line: 280, column: 33)
!513 = !DILocation(line: 281, column: 20, scope: !511)
!514 = !DILocation(line: 281, column: 30, scope: !511)
!515 = !DILocation(line: 281, column: 11, scope: !511)
!516 = !DILocation(line: 281, column: 36, scope: !511)
!517 = !DILocation(line: 281, column: 11, scope: !512)
!518 = !DILocation(line: 282, column: 9, scope: !519)
!519 = distinct !DILexicalBlock(scope: !511, file: !12, line: 281, column: 42)
!520 = !DILocation(line: 284, column: 5, scope: !512)
!521 = !DILocation(line: 280, column: 29, scope: !506)
!522 = !DILocation(line: 280, column: 5, scope: !506)
!523 = !DILocation(line: 286, column: 9, scope: !524)
!524 = distinct !DILexicalBlock(scope: !240, file: !12, line: 286, column: 9)
!525 = !DILocation(line: 286, column: 14, scope: !524)
!526 = !DILocation(line: 286, column: 11, scope: !524)
!527 = !DILocation(line: 286, column: 9, scope: !240)
!528 = !DILocation(line: 287, column: 24, scope: !529)
!529 = distinct !DILexicalBlock(scope: !524, file: !12, line: 286, column: 21)
!530 = !DILocation(line: 287, column: 18, scope: !529)
!531 = !DILocation(line: 287, column: 7, scope: !529)
!532 = !DILocation(line: 287, column: 22, scope: !529)
!533 = !DILocation(line: 288, column: 5, scope: !529)
!534 = !DILocation(line: 290, column: 12, scope: !23)
!535 = !DILocation(line: 290, column: 4, scope: !23)
!536 = !DILocation(line: 290, column: 10, scope: !23)
!537 = !DILocation(line: 291, column: 3, scope: !23)
!538 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "user", arg: 1, scope: !30, file: !12, line: 300, type: !16)
!539 = !DILocation(line: 300, column: 22, scope: !30)
!540 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "head", scope: !30, file: !12, line: 301, type: !10)
!541 = !DILocation(line: 301, column: 9, scope: !30)
!542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !30, file: !12, line: 302, type: !10)
!543 = !DILocation(line: 302, column: 9, scope: !30)
!544 = !DILocation(line: 305, column: 8, scope: !30)
!545 = !DILocation(line: 306, column: 7, scope: !546)
!546 = distinct !DILexicalBlock(scope: !30, file: !12, line: 306, column: 7)
!547 = !DILocation(line: 306, column: 14, scope: !546)
!548 = !DILocation(line: 306, column: 7, scope: !30)
!549 = !DILocation(line: 307, column: 16, scope: !550)
!550 = distinct !DILexicalBlock(scope: !546, file: !12, line: 306, column: 20)
!551 = !DILocation(line: 307, column: 22, scope: !550)
!552 = !DILocation(line: 307, column: 5, scope: !550)
!553 = !DILocation(line: 308, column: 12, scope: !550)
!554 = !DILocation(line: 309, column: 3, scope: !550)
!555 = !DILocation(line: 311, column: 12, scope: !556)
!556 = distinct !DILexicalBlock(scope: !30, file: !12, line: 311, column: 3)
!557 = !DILocation(line: 311, column: 18, scope: !556)
!558 = !DILocation(line: 311, column: 10, scope: !556)
!559 = !DILocation(line: 311, column: 8, scope: !556)
!560 = !DILocation(line: 311, column: 24, scope: !561)
!561 = !DILexicalBlockFile(scope: !562, file: !12, discriminator: 2)
!562 = !DILexicalBlockFile(scope: !563, file: !12, discriminator: 1)
!563 = distinct !DILexicalBlock(scope: !556, file: !12, line: 311, column: 3)
!564 = !DILocation(line: 311, column: 26, scope: !563)
!565 = !DILocation(line: 311, column: 3, scope: !556)
!566 = !DILocation(line: 315, column: 18, scope: !567)
!567 = distinct !DILexicalBlock(scope: !568, file: !12, line: 315, column: 9)
!568 = distinct !DILexicalBlock(scope: !563, file: !12, line: 311, column: 49)
!569 = !DILocation(line: 315, column: 21, scope: !567)
!570 = !DILocation(line: 315, column: 29, scope: !567)
!571 = !DILocation(line: 315, column: 9, scope: !567)
!572 = !DILocation(line: 315, column: 35, scope: !567)
!573 = !DILocation(line: 315, column: 9, scope: !568)
!574 = !DILocation(line: 318, column: 7, scope: !575)
!575 = distinct !DILexicalBlock(scope: !567, file: !12, line: 317, column: 5)
!576 = !DILocation(line: 320, column: 3, scope: !568)
!577 = !DILocation(line: 311, column: 40, scope: !563)
!578 = !DILocation(line: 311, column: 43, scope: !563)
!579 = !DILocation(line: 311, column: 38, scope: !563)
!580 = !DILocation(line: 311, column: 3, scope: !563)
!581 = !DILocation(line: 321, column: 7, scope: !582)
!582 = distinct !DILexicalBlock(scope: !30, file: !12, line: 321, column: 7)
!583 = !DILocation(line: 321, column: 9, scope: !582)
!584 = !DILocation(line: 321, column: 7, scope: !30)
!585 = !DILocation(line: 322, column: 5, scope: !586)
!586 = distinct !DILexicalBlock(scope: !582, file: !12, line: 321, column: 19)
!587 = !DILocation(line: 324, column: 11, scope: !30)
!588 = !DILocation(line: 324, column: 3, scope: !30)
!589 = !DILocation(line: 325, column: 1, scope: !30)
!590 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "head", arg: 1, scope: !33, file: !12, line: 332, type: !10)
!591 = !DILocation(line: 332, column: 22, scope: !33)
!592 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 2, scope: !33, file: !12, line: 332, type: !16)
!593 = !DILocation(line: 332, column: 34, scope: !33)
!594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !33, file: !12, line: 333, type: !10)
!595 = !DILocation(line: 333, column: 9, scope: !33)
!596 = !DILocation(line: 334, column: 12, scope: !597)
!597 = distinct !DILexicalBlock(scope: !33, file: !12, line: 334, column: 3)
!598 = !DILocation(line: 334, column: 18, scope: !597)
!599 = !DILocation(line: 334, column: 10, scope: !597)
!600 = !DILocation(line: 334, column: 8, scope: !597)
!601 = !DILocation(line: 334, column: 24, scope: !602)
!602 = !DILexicalBlockFile(scope: !603, file: !12, discriminator: 2)
!603 = !DILexicalBlockFile(scope: !604, file: !12, discriminator: 1)
!604 = distinct !DILexicalBlock(scope: !597, file: !12, line: 334, column: 3)
!605 = !DILocation(line: 334, column: 26, scope: !604)
!606 = !DILocation(line: 334, column: 3, scope: !597)
!607 = !DILocation(line: 338, column: 18, scope: !608)
!608 = distinct !DILexicalBlock(scope: !609, file: !12, line: 338, column: 9)
!609 = distinct !DILexicalBlock(scope: !604, file: !12, line: 334, column: 49)
!610 = !DILocation(line: 338, column: 21, scope: !608)
!611 = !DILocation(line: 338, column: 29, scope: !608)
!612 = !DILocation(line: 338, column: 9, scope: !608)
!613 = !DILocation(line: 338, column: 34, scope: !608)
!614 = !DILocation(line: 338, column: 9, scope: !609)
!615 = !DILocation(line: 341, column: 7, scope: !616)
!616 = distinct !DILexicalBlock(scope: !608, file: !12, line: 340, column: 5)
!617 = !DILocation(line: 343, column: 3, scope: !609)
!618 = !DILocation(line: 334, column: 40, scope: !604)
!619 = !DILocation(line: 334, column: 43, scope: !604)
!620 = !DILocation(line: 334, column: 38, scope: !604)
!621 = !DILocation(line: 334, column: 3, scope: !604)
!622 = !DILocation(line: 344, column: 11, scope: !33)
!623 = !DILocation(line: 344, column: 3, scope: !33)
!624 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "head", arg: 1, scope: !36, file: !12, line: 354, type: !10)
!625 = !DILocation(line: 354, column: 23, scope: !36)
!626 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 2, scope: !36, file: !12, line: 354, type: !16)
!627 = !DILocation(line: 354, column: 35, scope: !36)
!628 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !36, file: !12, line: 355, type: !90)
!629 = !DILocation(line: 355, column: 9, scope: !36)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !36, file: !12, line: 356, type: !10)
!631 = !DILocation(line: 356, column: 9, scope: !36)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !36, file: !12, line: 356, type: !10)
!633 = !DILocation(line: 356, column: 13, scope: !36)
!634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "domain", scope: !36, file: !12, line: 357, type: !52)
!635 = !DILocation(line: 357, column: 8, scope: !36)
!636 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "user", scope: !36, file: !12, line: 357, type: !52)
!637 = !DILocation(line: 357, column: 24, scope: !36)
!638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !36, file: !12, line: 358, type: !16)
!639 = !DILocation(line: 358, column: 9, scope: !36)
!640 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !36, file: !12, line: 358, type: !16)
!641 = !DILocation(line: 358, column: 13, scope: !36)
!642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !36, file: !12, line: 358, type: !52)
!643 = !DILocation(line: 358, column: 16, scope: !36)
!644 = !DILocation(line: 360, column: 19, scope: !645)
!645 = distinct !DILexicalBlock(scope: !36, file: !12, line: 360, column: 7)
!646 = !DILocation(line: 360, column: 13, scope: !645)
!647 = !DILocation(line: 360, column: 11, scope: !645)
!648 = !DILocation(line: 360, column: 35, scope: !645)
!649 = !DILocation(line: 360, column: 7, scope: !36)
!650 = !DILocation(line: 361, column: 5, scope: !651)
!651 = distinct !DILexicalBlock(scope: !652, file: !12, line: 361, column: 5)
!652 = distinct !DILexicalBlock(scope: !645, file: !12, line: 360, column: 44)
!653 = !DILocation(line: 361, column: 5, scope: !652)
!654 = !DILocation(line: 361, column: 45, scope: !655)
!655 = !DILexicalBlockFile(scope: !651, file: !12, discriminator: 1)
!656 = !DILocation(line: 362, column: 5, scope: !652)
!657 = !DILocation(line: 365, column: 3, scope: !36)
!658 = !DILocation(line: 365, column: 16, scope: !659)
!659 = !DILexicalBlockFile(scope: !660, file: !12, discriminator: 2)
!660 = !DILexicalBlockFile(scope: !36, file: !12, discriminator: 1)
!661 = !DILocation(line: 365, column: 33, scope: !36)
!662 = !DILocation(line: 365, column: 10, scope: !36)
!663 = !DILocation(line: 365, column: 37, scope: !36)
!664 = !DILocation(line: 366, column: 9, scope: !665)
!665 = distinct !DILexicalBlock(scope: !36, file: !12, line: 365, column: 46)
!666 = !DILocation(line: 366, column: 7, scope: !665)
!667 = !DILocation(line: 367, column: 11, scope: !668)
!668 = distinct !DILexicalBlock(scope: !665, file: !12, line: 367, column: 9)
!669 = !DILocation(line: 367, column: 10, scope: !668)
!670 = !DILocation(line: 367, column: 13, scope: !668)
!671 = !DILocation(line: 367, column: 21, scope: !668)
!672 = !DILocation(line: 367, column: 26, scope: !673)
!673 = !DILexicalBlockFile(scope: !668, file: !12, discriminator: 1)
!674 = !DILocation(line: 367, column: 25, scope: !668)
!675 = !DILocation(line: 367, column: 28, scope: !668)
!676 = !DILocation(line: 367, column: 9, scope: !665)
!677 = !DILocation(line: 368, column: 7, scope: !678)
!678 = distinct !DILexicalBlock(scope: !668, file: !12, line: 367, column: 38)
!679 = !DILocation(line: 375, column: 17, scope: !680)
!680 = distinct !DILexicalBlock(scope: !665, file: !12, line: 375, column: 9)
!681 = !DILocation(line: 375, column: 9, scope: !680)
!682 = !DILocation(line: 375, column: 36, scope: !680)
!683 = !DILocation(line: 375, column: 9, scope: !665)
!684 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nl", scope: !685, file: !12, line: 376, type: !16)
!685 = distinct !DILexicalBlock(scope: !680, file: !12, line: 375, column: 42)
!686 = !DILocation(line: 376, column: 13, scope: !685)
!687 = !DILocation(line: 377, column: 9, scope: !685)
!688 = !DILocation(line: 378, column: 23, scope: !689)
!689 = distinct !DILexicalBlock(scope: !685, file: !12, line: 378, column: 11)
!690 = !DILocation(line: 378, column: 17, scope: !689)
!691 = !DILocation(line: 378, column: 15, scope: !689)
!692 = !DILocation(line: 378, column: 33, scope: !689)
!693 = !DILocation(line: 378, column: 11, scope: !685)
!694 = !DILocation(line: 379, column: 10, scope: !695)
!695 = distinct !DILexicalBlock(scope: !689, file: !12, line: 378, column: 42)
!696 = !DILocation(line: 379, column: 13, scope: !695)
!697 = !DILocation(line: 380, column: 7, scope: !695)
!698 = !DILocation(line: 381, column: 7, scope: !699)
!699 = distinct !DILexicalBlock(scope: !685, file: !12, line: 381, column: 7)
!700 = !DILocation(line: 381, column: 7, scope: !685)
!701 = !DILocation(line: 381, column: 53, scope: !702)
!702 = !DILexicalBlockFile(scope: !699, file: !12, discriminator: 1)
!703 = !DILocation(line: 381, column: 63, scope: !699)
!704 = !DILocation(line: 382, column: 18, scope: !685)
!705 = !DILocation(line: 382, column: 24, scope: !685)
!706 = !DILocation(line: 382, column: 7, scope: !685)
!707 = !DILocation(line: 383, column: 7, scope: !685)
!708 = !DILocation(line: 391, column: 10, scope: !709)
!709 = distinct !DILexicalBlock(scope: !665, file: !12, line: 391, column: 9)
!710 = !DILocation(line: 391, column: 9, scope: !709)
!711 = !DILocation(line: 391, column: 12, scope: !709)
!712 = !DILocation(line: 391, column: 19, scope: !709)
!713 = !DILocation(line: 391, column: 23, scope: !714)
!714 = !DILexicalBlockFile(scope: !709, file: !12, discriminator: 1)
!715 = !DILocation(line: 391, column: 22, scope: !709)
!716 = !DILocation(line: 391, column: 25, scope: !709)
!717 = !DILocation(line: 391, column: 9, scope: !665)
!718 = !DILocation(line: 392, column: 11, scope: !719)
!719 = distinct !DILexicalBlock(scope: !709, file: !12, line: 391, column: 34)
!720 = !DILocation(line: 392, column: 9, scope: !719)
!721 = !DILocation(line: 393, column: 7, scope: !719)
!722 = !DILocation(line: 393, column: 7, scope: !723)
!723 = !DILexicalBlockFile(scope: !724, file: !12, discriminator: 9)
!724 = !DILexicalBlockFile(scope: !719, file: !12, discriminator: 1)
!725 = !DILocation(line: 393, column: 7, scope: !726)
!726 = !DILexicalBlockFile(scope: !719, file: !12, discriminator: 2)
!727 = !DILocation(line: 393, column: 7, scope: !728)
!728 = !DILexicalBlockFile(scope: !719, file: !12, discriminator: 4)
!729 = !DILocation(line: 393, column: 7, scope: !730)
!730 = !DILexicalBlockFile(scope: !719, file: !12, discriminator: 6)
!731 = !DILocation(line: 393, column: 7, scope: !732)
!732 = !DILexicalBlockFile(scope: !733, file: !12, discriminator: 7)
!733 = !DILexicalBlockFile(scope: !734, file: !12, discriminator: 5)
!734 = !DILexicalBlockFile(scope: !719, file: !12, discriminator: 3)
!735 = !DILocation(line: 393, column: 7, scope: !736)
!736 = !DILexicalBlockFile(scope: !719, file: !12, discriminator: 8)
!737 = !DILocation(line: 394, column: 9, scope: !719)
!738 = !DILocation(line: 394, column: 12, scope: !719)
!739 = !DILocation(line: 398, column: 19, scope: !740)
!740 = distinct !DILexicalBlock(scope: !719, file: !12, line: 398, column: 11)
!741 = !DILocation(line: 398, column: 22, scope: !740)
!742 = !DILocation(line: 398, column: 30, scope: !740)
!743 = !DILocation(line: 398, column: 11, scope: !740)
!744 = !DILocation(line: 398, column: 36, scope: !740)
!745 = !DILocation(line: 398, column: 11, scope: !719)
!746 = !DILocation(line: 402, column: 9, scope: !747)
!747 = distinct !DILexicalBlock(scope: !740, file: !12, line: 398, column: 42)
!748 = !DILocation(line: 407, column: 25, scope: !749)
!749 = distinct !DILexicalBlock(scope: !719, file: !12, line: 407, column: 11)
!750 = !DILocation(line: 407, column: 31, scope: !749)
!751 = !DILocation(line: 407, column: 16, scope: !749)
!752 = !DILocation(line: 407, column: 14, scope: !749)
!753 = !DILocation(line: 407, column: 38, scope: !749)
!754 = !DILocation(line: 407, column: 11, scope: !719)
!755 = !DILocation(line: 408, column: 9, scope: !756)
!756 = distinct !DILexicalBlock(scope: !757, file: !12, line: 408, column: 9)
!757 = distinct !DILexicalBlock(scope: !749, file: !12, line: 407, column: 48)
!758 = !DILocation(line: 408, column: 9, scope: !757)
!759 = !DILocation(line: 408, column: 47, scope: !760)
!760 = !DILexicalBlockFile(scope: !756, file: !12, discriminator: 1)
!761 = !DILocation(line: 409, column: 9, scope: !757)
!762 = !DILocation(line: 411, column: 5, scope: !719)
!763 = !DILocation(line: 417, column: 22, scope: !665)
!764 = !DILocation(line: 417, column: 25, scope: !665)
!765 = !DILocation(line: 417, column: 11, scope: !665)
!766 = !DILocation(line: 419, column: 16, scope: !36)
!767 = !DILocation(line: 419, column: 9, scope: !36)
!768 = !DILocation(line: 423, column: 12, scope: !769)
!769 = distinct !DILexicalBlock(scope: !36, file: !12, line: 423, column: 3)
!770 = !DILocation(line: 423, column: 10, scope: !769)
!771 = !DILocation(line: 423, column: 8, scope: !769)
!772 = !DILocation(line: 423, column: 18, scope: !773)
!773 = !DILexicalBlockFile(scope: !774, file: !12, discriminator: 2)
!774 = !DILexicalBlockFile(scope: !775, file: !12, discriminator: 1)
!775 = distinct !DILexicalBlock(scope: !769, file: !12, line: 423, column: 3)
!776 = !DILocation(line: 423, column: 21, scope: !775)
!777 = !DILocation(line: 423, column: 26, scope: !775)
!778 = !DILocation(line: 423, column: 3, scope: !769)
!779 = !DILocation(line: 424, column: 9, scope: !780)
!780 = distinct !DILexicalBlock(scope: !781, file: !12, line: 424, column: 9)
!781 = distinct !DILexicalBlock(scope: !775, file: !12, line: 423, column: 37)
!782 = !DILocation(line: 424, column: 12, scope: !780)
!783 = !DILocation(line: 424, column: 18, scope: !780)
!784 = !DILocation(line: 424, column: 23, scope: !780)
!785 = !DILocation(line: 424, column: 9, scope: !781)
!786 = !DILocation(line: 425, column: 17, scope: !787)
!787 = distinct !DILexicalBlock(scope: !780, file: !12, line: 424, column: 33)
!788 = !DILocation(line: 425, column: 20, scope: !787)
!789 = !DILocation(line: 425, column: 26, scope: !787)
!790 = !DILocation(line: 425, column: 7, scope: !787)
!791 = !DILocation(line: 425, column: 10, scope: !787)
!792 = !DILocation(line: 425, column: 15, scope: !787)
!793 = !DILocation(line: 426, column: 5, scope: !787)
!794 = !DILocation(line: 427, column: 11, scope: !795)
!795 = distinct !DILexicalBlock(scope: !780, file: !12, line: 426, column: 12)
!796 = !DILocation(line: 427, column: 14, scope: !795)
!797 = !DILocation(line: 427, column: 9, scope: !795)
!798 = !DILocation(line: 423, column: 3, scope: !775)
!799 = !DILocation(line: 430, column: 1, scope: !36)
!800 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h", arg: 1, scope: !39, file: !12, line: 437, type: !10)
!801 = !DILocation(line: 437, column: 22, scope: !39)
!802 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 2, scope: !39, file: !12, line: 437, type: !16)
!803 = !DILocation(line: 437, column: 31, scope: !39)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !39, file: !12, line: 439, type: !16)
!805 = !DILocation(line: 439, column: 9, scope: !39)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !39, file: !12, line: 439, type: !52)
!807 = !DILocation(line: 439, column: 12, scope: !39)
!808 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !39, file: !12, line: 439, type: !52)
!809 = !DILocation(line: 439, column: 23, scope: !39)
!810 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !39, file: !12, line: 440, type: !28)
!811 = !DILocation(line: 440, column: 7, scope: !39)
!812 = !DILocation(line: 442, column: 18, scope: !39)
!813 = !DILocation(line: 442, column: 3, scope: !39)
!814 = !DILocation(line: 444, column: 3, scope: !39)
!815 = !DILocation(line: 444, column: 3, scope: !816)
!816 = !DILexicalBlockFile(scope: !817, file: !12, discriminator: 10)
!817 = !DILexicalBlockFile(scope: !39, file: !12, discriminator: 1)
!818 = !DILocation(line: 444, column: 3, scope: !819)
!819 = !DILexicalBlockFile(scope: !39, file: !12, discriminator: 3)
!820 = !DILocation(line: 444, column: 3, scope: !821)
!821 = !DILexicalBlockFile(scope: !39, file: !12, discriminator: 5)
!822 = !DILocation(line: 444, column: 3, scope: !823)
!823 = !DILexicalBlockFile(scope: !39, file: !12, discriminator: 7)
!824 = !DILocation(line: 444, column: 3, scope: !825)
!825 = !DILexicalBlockFile(scope: !826, file: !12, discriminator: 8)
!826 = !DILexicalBlockFile(scope: !827, file: !12, discriminator: 6)
!827 = !DILexicalBlockFile(scope: !828, file: !12, discriminator: 4)
!828 = !DILexicalBlockFile(scope: !39, file: !12, discriminator: 2)
!829 = !DILocation(line: 444, column: 3, scope: !830)
!830 = !DILexicalBlockFile(scope: !39, file: !12, discriminator: 9)
!831 = !DILocation(line: 446, column: 3, scope: !39)
!832 = !DILocation(line: 446, column: 12, scope: !833)
!833 = !DILexicalBlockFile(scope: !817, file: !12, discriminator: 4)
!834 = !DILocation(line: 446, column: 11, scope: !39)
!835 = !DILocation(line: 446, column: 14, scope: !39)
!836 = !DILocation(line: 446, column: 23, scope: !39)
!837 = !DILocation(line: 446, column: 28, scope: !828)
!838 = !DILocation(line: 446, column: 27, scope: !39)
!839 = !DILocation(line: 446, column: 30, scope: !39)
!840 = !DILocation(line: 446, column: 3, scope: !819)
!841 = !DILocation(line: 447, column: 9, scope: !842)
!842 = distinct !DILexicalBlock(scope: !39, file: !12, line: 446, column: 39)
!843 = !DILocation(line: 447, column: 7, scope: !842)
!844 = !DILocation(line: 448, column: 10, scope: !845)
!845 = distinct !DILexicalBlock(scope: !842, file: !12, line: 448, column: 9)
!846 = !DILocation(line: 448, column: 9, scope: !845)
!847 = !DILocation(line: 448, column: 12, scope: !845)
!848 = !DILocation(line: 448, column: 9, scope: !842)
!849 = !DILocation(line: 449, column: 22, scope: !850)
!850 = distinct !DILexicalBlock(scope: !851, file: !12, line: 449, column: 11)
!851 = distinct !DILexicalBlock(scope: !845, file: !12, line: 448, column: 20)
!852 = !DILocation(line: 449, column: 16, scope: !850)
!853 = !DILocation(line: 449, column: 14, scope: !850)
!854 = !DILocation(line: 449, column: 33, scope: !850)
!855 = !DILocation(line: 449, column: 11, scope: !851)
!856 = !DILocation(line: 452, column: 17, scope: !857)
!857 = distinct !DILexicalBlock(scope: !850, file: !12, line: 449, column: 42)
!858 = !DILocation(line: 452, column: 9, scope: !857)
!859 = !DILocation(line: 454, column: 5, scope: !851)
!860 = !DILocation(line: 455, column: 7, scope: !861)
!861 = distinct !DILexicalBlock(scope: !845, file: !12, line: 454, column: 12)
!862 = !DILocation(line: 455, column: 7, scope: !863)
!863 = !DILexicalBlockFile(scope: !864, file: !12, discriminator: 9)
!864 = !DILexicalBlockFile(scope: !861, file: !12, discriminator: 1)
!865 = !DILocation(line: 455, column: 7, scope: !866)
!866 = !DILexicalBlockFile(scope: !861, file: !12, discriminator: 2)
!867 = !DILocation(line: 455, column: 7, scope: !868)
!868 = !DILexicalBlockFile(scope: !861, file: !12, discriminator: 4)
!869 = !DILocation(line: 455, column: 7, scope: !870)
!870 = !DILexicalBlockFile(scope: !861, file: !12, discriminator: 6)
!871 = !DILocation(line: 455, column: 7, scope: !872)
!872 = !DILexicalBlockFile(scope: !873, file: !12, discriminator: 7)
!873 = !DILexicalBlockFile(scope: !874, file: !12, discriminator: 5)
!874 = !DILexicalBlockFile(scope: !861, file: !12, discriminator: 3)
!875 = !DILocation(line: 455, column: 7, scope: !876)
!876 = !DILexicalBlockFile(scope: !861, file: !12, discriminator: 8)
!877 = !DILocation(line: 458, column: 10, scope: !878)
!878 = distinct !DILexicalBlock(scope: !842, file: !12, line: 458, column: 9)
!879 = !DILocation(line: 458, column: 9, scope: !878)
!880 = !DILocation(line: 458, column: 12, scope: !878)
!881 = !DILocation(line: 458, column: 9, scope: !842)
!882 = !DILocation(line: 459, column: 9, scope: !883)
!883 = distinct !DILexicalBlock(scope: !878, file: !12, line: 458, column: 22)
!884 = !DILocation(line: 459, column: 12, scope: !883)
!885 = !DILocation(line: 460, column: 5, scope: !883)
!886 = !DILocation(line: 465, column: 18, scope: !887)
!887 = distinct !DILexicalBlock(scope: !842, file: !12, line: 465, column: 9)
!888 = !DILocation(line: 465, column: 21, scope: !887)
!889 = !DILocation(line: 465, column: 24, scope: !887)
!890 = !DILocation(line: 465, column: 10, scope: !887)
!891 = !DILocation(line: 465, column: 27, scope: !887)
!892 = !DILocation(line: 465, column: 33, scope: !887)
!893 = !DILocation(line: 465, column: 46, scope: !894)
!894 = !DILexicalBlockFile(scope: !887, file: !12, discriminator: 1)
!895 = !DILocation(line: 465, column: 49, scope: !887)
!896 = !DILocation(line: 465, column: 57, scope: !887)
!897 = !DILocation(line: 465, column: 37, scope: !887)
!898 = !DILocation(line: 465, column: 60, scope: !887)
!899 = !DILocation(line: 465, column: 9, scope: !842)
!900 = !DILocation(line: 466, column: 16, scope: !901)
!901 = distinct !DILexicalBlock(scope: !887, file: !12, line: 465, column: 67)
!902 = !DILocation(line: 466, column: 19, scope: !901)
!903 = !DILocation(line: 466, column: 7, scope: !901)
!904 = !DILocation(line: 467, column: 11, scope: !901)
!905 = !DILocation(line: 468, column: 5, scope: !901)
!906 = !DILocation(line: 469, column: 5, scope: !842)
!907 = !DILocation(line: 469, column: 5, scope: !908)
!908 = !DILexicalBlockFile(scope: !909, file: !12, discriminator: 10)
!909 = !DILexicalBlockFile(scope: !842, file: !12, discriminator: 1)
!910 = !DILocation(line: 469, column: 5, scope: !911)
!911 = !DILexicalBlockFile(scope: !842, file: !12, discriminator: 3)
!912 = !DILocation(line: 469, column: 5, scope: !913)
!913 = !DILexicalBlockFile(scope: !842, file: !12, discriminator: 5)
!914 = !DILocation(line: 469, column: 5, scope: !915)
!915 = !DILexicalBlockFile(scope: !842, file: !12, discriminator: 7)
!916 = !DILocation(line: 469, column: 5, scope: !917)
!917 = !DILexicalBlockFile(scope: !918, file: !12, discriminator: 8)
!918 = !DILexicalBlockFile(scope: !919, file: !12, discriminator: 6)
!919 = !DILexicalBlockFile(scope: !920, file: !12, discriminator: 4)
!920 = !DILexicalBlockFile(scope: !842, file: !12, discriminator: 2)
!921 = !DILocation(line: 469, column: 5, scope: !922)
!922 = !DILexicalBlockFile(scope: !842, file: !12, discriminator: 9)
!923 = !DILocation(line: 471, column: 11, scope: !39)
!924 = !DILocation(line: 471, column: 3, scope: !39)
!925 = !DILocation(line: 472, column: 1, scope: !39)
!926 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !42, file: !12, line: 484, type: !16)
!927 = !DILocation(line: 484, column: 27, scope: !42)
!928 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !42, file: !12, line: 485, type: !16)
!929 = !DILocation(line: 485, column: 9, scope: !42)
!930 = !DILocation(line: 486, column: 3, scope: !42)
!931 = !DILocation(line: 486, column: 21, scope: !932)
!932 = !DILexicalBlockFile(scope: !933, file: !12, discriminator: 2)
!933 = !DILexicalBlockFile(scope: !42, file: !12, discriminator: 1)
!934 = !DILocation(line: 486, column: 15, scope: !42)
!935 = !DILocation(line: 486, column: 13, scope: !42)
!936 = !DILocation(line: 486, column: 30, scope: !42)
!937 = !DILocation(line: 487, column: 10, scope: !938)
!938 = distinct !DILexicalBlock(scope: !42, file: !12, line: 486, column: 39)
!939 = !DILocation(line: 487, column: 7, scope: !938)
!940 = !DILocation(line: 490, column: 20, scope: !941)
!941 = distinct !DILexicalBlock(scope: !938, file: !12, line: 490, column: 9)
!942 = !DILocation(line: 490, column: 14, scope: !941)
!943 = !DILocation(line: 490, column: 12, scope: !941)
!944 = !DILocation(line: 490, column: 29, scope: !941)
!945 = !DILocation(line: 490, column: 9, scope: !938)
!946 = !DILocation(line: 491, column: 20, scope: !947)
!947 = distinct !DILexicalBlock(scope: !941, file: !12, line: 490, column: 38)
!948 = !DILocation(line: 491, column: 23, scope: !947)
!949 = !DILocation(line: 491, column: 13, scope: !947)
!950 = !DILocation(line: 492, column: 5, scope: !947)
!951 = !DILocation(line: 493, column: 8, scope: !952)
!952 = distinct !DILexicalBlock(scope: !941, file: !12, line: 492, column: 12)
!953 = !DILocation(line: 493, column: 10, scope: !952)
!954 = !DILocation(line: 494, column: 7, scope: !952)
!955 = !DILocation(line: 497, column: 1, scope: !42)
!956 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "head", arg: 1, scope: !45, file: !12, line: 503, type: !10)
!957 = !DILocation(line: 503, column: 22, scope: !45)
!958 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 2, scope: !45, file: !12, line: 503, type: !16)
!959 = !DILocation(line: 503, column: 34, scope: !45)
!960 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !45, file: !12, line: 504, type: !16)
!961 = !DILocation(line: 504, column: 9, scope: !45)
!962 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new", scope: !45, file: !12, line: 506, type: !10)
!963 = !DILocation(line: 506, column: 9, scope: !45)
!964 = !DILocation(line: 511, column: 18, scope: !965)
!965 = distinct !DILexicalBlock(scope: !45, file: !12, line: 511, column: 7)
!966 = !DILocation(line: 511, column: 12, scope: !965)
!967 = !DILocation(line: 511, column: 10, scope: !965)
!968 = !DILocation(line: 511, column: 29, scope: !965)
!969 = !DILocation(line: 511, column: 7, scope: !45)
!970 = !DILocation(line: 512, column: 6, scope: !971)
!971 = distinct !DILexicalBlock(scope: !965, file: !12, line: 511, column: 38)
!972 = !DILocation(line: 512, column: 8, scope: !971)
!973 = !DILocation(line: 513, column: 3, scope: !971)
!974 = !DILocation(line: 514, column: 22, scope: !975)
!975 = distinct !DILexicalBlock(scope: !45, file: !12, line: 514, column: 7)
!976 = !DILocation(line: 514, column: 14, scope: !975)
!977 = !DILocation(line: 514, column: 12, scope: !975)
!978 = !DILocation(line: 514, column: 44, scope: !975)
!979 = !DILocation(line: 514, column: 7, scope: !45)
!980 = !DILocation(line: 515, column: 48, scope: !981)
!981 = distinct !DILexicalBlock(scope: !982, file: !12, line: 515, column: 9)
!982 = distinct !DILexicalBlock(scope: !975, file: !12, line: 514, column: 54)
!983 = !DILocation(line: 515, column: 41, scope: !981)
!984 = !DILocation(line: 515, column: 31, scope: !981)
!985 = !DILocation(line: 515, column: 53, scope: !981)
!986 = !DILocation(line: 515, column: 24, scope: !981)
!987 = !DILocation(line: 515, column: 10, scope: !981)
!988 = !DILocation(line: 515, column: 15, scope: !981)
!989 = !DILocation(line: 515, column: 22, scope: !981)
!990 = !DILocation(line: 515, column: 59, scope: !981)
!991 = !DILocation(line: 515, column: 9, scope: !982)
!992 = !DILocation(line: 516, column: 12, scope: !993)
!993 = distinct !DILexicalBlock(scope: !981, file: !12, line: 515, column: 68)
!994 = !DILocation(line: 516, column: 7, scope: !993)
!995 = !DILocation(line: 517, column: 11, scope: !993)
!996 = !DILocation(line: 518, column: 5, scope: !993)
!997 = !DILocation(line: 519, column: 20, scope: !998)
!998 = distinct !DILexicalBlock(scope: !981, file: !12, line: 518, column: 12)
!999 = !DILocation(line: 519, column: 25, scope: !998)
!1000 = !DILocation(line: 519, column: 33, scope: !998)
!1001 = !DILocation(line: 519, column: 13, scope: !998)
!1002 = !DILocation(line: 520, column: 19, scope: !998)
!1003 = !DILocation(line: 520, column: 25, scope: !998)
!1004 = !DILocation(line: 520, column: 7, scope: !998)
!1005 = !DILocation(line: 520, column: 12, scope: !998)
!1006 = !DILocation(line: 520, column: 17, scope: !998)
!1007 = !DILocation(line: 521, column: 7, scope: !998)
!1008 = !DILocation(line: 521, column: 12, scope: !998)
!1009 = !DILocation(line: 521, column: 17, scope: !998)
!1010 = !DILocation(line: 522, column: 20, scope: !998)
!1011 = !DILocation(line: 522, column: 7, scope: !998)
!1012 = !DILocation(line: 522, column: 13, scope: !998)
!1013 = !DILocation(line: 522, column: 18, scope: !998)
!1014 = !DILocation(line: 525, column: 3, scope: !982)
!1015 = !DILocation(line: 526, column: 11, scope: !45)
!1016 = !DILocation(line: 526, column: 3, scope: !45)
!1017 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "head", arg: 1, scope: !46, file: !12, line: 533, type: !10)
!1018 = !DILocation(line: 533, column: 21, scope: !46)
!1019 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 2, scope: !46, file: !12, line: 533, type: !16)
!1020 = !DILocation(line: 533, column: 33, scope: !46)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new", scope: !46, file: !12, line: 534, type: !10)
!1022 = !DILocation(line: 534, column: 9, scope: !46)
!1023 = !DILocation(line: 536, column: 22, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !46, file: !12, line: 536, column: 7)
!1025 = !DILocation(line: 536, column: 14, scope: !1024)
!1026 = !DILocation(line: 536, column: 12, scope: !1024)
!1027 = !DILocation(line: 536, column: 44, scope: !1024)
!1028 = !DILocation(line: 536, column: 7, scope: !46)
!1029 = !DILocation(line: 537, column: 48, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1031, file: !12, line: 537, column: 9)
!1031 = distinct !DILexicalBlock(scope: !1024, file: !12, line: 536, column: 54)
!1032 = !DILocation(line: 537, column: 41, scope: !1030)
!1033 = !DILocation(line: 537, column: 31, scope: !1030)
!1034 = !DILocation(line: 537, column: 53, scope: !1030)
!1035 = !DILocation(line: 537, column: 24, scope: !1030)
!1036 = !DILocation(line: 537, column: 10, scope: !1030)
!1037 = !DILocation(line: 537, column: 15, scope: !1030)
!1038 = !DILocation(line: 537, column: 22, scope: !1030)
!1039 = !DILocation(line: 537, column: 59, scope: !1030)
!1040 = !DILocation(line: 537, column: 9, scope: !1031)
!1041 = !DILocation(line: 538, column: 12, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !1030, file: !12, line: 537, column: 68)
!1043 = !DILocation(line: 538, column: 7, scope: !1042)
!1044 = !DILocation(line: 539, column: 11, scope: !1042)
!1045 = !DILocation(line: 540, column: 5, scope: !1042)
!1046 = !DILocation(line: 541, column: 20, scope: !1047)
!1047 = distinct !DILexicalBlock(scope: !1030, file: !12, line: 540, column: 12)
!1048 = !DILocation(line: 541, column: 25, scope: !1047)
!1049 = !DILocation(line: 541, column: 33, scope: !1047)
!1050 = !DILocation(line: 541, column: 13, scope: !1047)
!1051 = !DILocation(line: 542, column: 19, scope: !1047)
!1052 = !DILocation(line: 542, column: 25, scope: !1047)
!1053 = !DILocation(line: 542, column: 7, scope: !1047)
!1054 = !DILocation(line: 542, column: 12, scope: !1047)
!1055 = !DILocation(line: 542, column: 17, scope: !1047)
!1056 = !DILocation(line: 543, column: 7, scope: !1047)
!1057 = !DILocation(line: 543, column: 12, scope: !1047)
!1058 = !DILocation(line: 543, column: 17, scope: !1047)
!1059 = !DILocation(line: 544, column: 20, scope: !1047)
!1060 = !DILocation(line: 544, column: 7, scope: !1047)
!1061 = !DILocation(line: 544, column: 13, scope: !1047)
!1062 = !DILocation(line: 544, column: 18, scope: !1047)
!1063 = !DILocation(line: 547, column: 3, scope: !1031)
!1064 = !DILocation(line: 548, column: 1, scope: !46)
!1065 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "head", arg: 1, scope: !47, file: !12, line: 550, type: !10)
!1066 = !DILocation(line: 550, column: 17, scope: !47)
!1067 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ret", scope: !47, file: !12, line: 551, type: !10)
!1068 = !DILocation(line: 551, column: 9, scope: !47)
!1069 = !DILocation(line: 553, column: 7, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !47, file: !12, line: 553, column: 7)
!1071 = !DILocation(line: 553, column: 12, scope: !1070)
!1072 = !DILocation(line: 553, column: 7, scope: !47)
!1073 = !DILocation(line: 554, column: 11, scope: !1074)
!1074 = distinct !DILexicalBlock(scope: !1070, file: !12, line: 553, column: 22)
!1075 = !DILocation(line: 554, column: 17, scope: !1074)
!1076 = !DILocation(line: 554, column: 9, scope: !1074)
!1077 = !DILocation(line: 555, column: 9, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1074, file: !12, line: 555, column: 9)
!1079 = !DILocation(line: 555, column: 13, scope: !1078)
!1080 = !DILocation(line: 555, column: 9, scope: !1074)
!1081 = !DILocation(line: 556, column: 20, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1078, file: !12, line: 555, column: 23)
!1083 = !DILocation(line: 556, column: 25, scope: !1082)
!1084 = !DILocation(line: 556, column: 7, scope: !1082)
!1085 = !DILocation(line: 556, column: 13, scope: !1082)
!1086 = !DILocation(line: 556, column: 18, scope: !1082)
!1087 = !DILocation(line: 557, column: 5, scope: !1082)
!1088 = !DILocation(line: 558, column: 3, scope: !1074)
!1089 = !DILocation(line: 559, column: 11, scope: !47)
!1090 = !DILocation(line: 559, column: 3, scope: !47)
