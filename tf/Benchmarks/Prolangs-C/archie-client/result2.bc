; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vlink = type { i32, i8*, i8, i32, i8*, %struct.vlink*, %struct.vlink*, i8*, i8*, i8*, i8*, i64, i64, %struct.acl*, i64, i64, i8*, %struct.pattrib*, %struct.pfile*, %struct.vlink*, %struct.vlink* }
%struct.acl = type { i32, i8*, i8*, i8*, %struct.restrict_*, %struct.acl*, %struct.acl* }
%struct.restrict_ = type { %struct.acl*, %struct.acl* }
%struct.pattrib = type { i8, i8*, i8*, %union.avalue, %struct.pattrib*, %struct.pattrib* }
%union.avalue = type { i8* }
%struct.pfile = type { i32, i64, i64, i64, i64, %struct.vlink*, %struct.vlink*, %struct.pattrib*, %struct.pfile*, %struct.pfile* }

@vlink_count = global i32 0, align 4
@vlink_max = global i32 0, align 4
@lfree = internal global %struct.vlink* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"FILE\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"INTERNET-D\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@string_count = external global i32, align 4

; Function Attrs: nounwind uwtable
define %struct.vlink* @vlalloc() #0 {
entry:
  %tmp = load %struct.vlink*, %struct.vlink** @lfree, align 8, !dbg !92
  %tobool = icmp ne %struct.vlink* %tmp, null, !dbg !92
  br i1 %tobool, label %if.then, label %if.else, !dbg !94

if.then:                                          ; preds = %entry
  %tmp1 = load %struct.vlink*, %struct.vlink** @lfree, align 8, !dbg !95
  call void @llvm.dbg.value(metadata %struct.vlink* %tmp1, i64 0, metadata !97, metadata !98), !dbg !99
  %tmp2 = load %struct.vlink*, %struct.vlink** @lfree, align 8, !dbg !100
  %next = getelementptr inbounds %struct.vlink, %struct.vlink* %tmp2, i32 0, i32 20, !dbg !101
  %tmp3 = load %struct.vlink*, %struct.vlink** %next, align 8, !dbg !101
  store %struct.vlink* %tmp3, %struct.vlink** @lfree, align 8, !dbg !102
  br label %if.end.3, !dbg !103

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 160) #4, !dbg !104
  %tmp4 = bitcast i8* %call to %struct.vlink*, !dbg !106
  call void @llvm.dbg.value(metadata %struct.vlink* %tmp4, i64 0, metadata !97, metadata !98), !dbg !99
  %tobool1 = icmp ne %struct.vlink* %tmp4, null, !dbg !107
  br i1 %tobool1, label %if.end, label %if.then.2, !dbg !109

if.then.2:                                        ; preds = %if.else
  br label %return, !dbg !110

if.end:                                           ; preds = %if.else
  %tmp6 = load i32, i32* @vlink_max, align 4, !dbg !111
  %inc = add nsw i32 %tmp6, 1, !dbg !111
  store i32 %inc, i32* @vlink_max, align 4, !dbg !111
  br label %if.end.3

if.end.3:                                         ; preds = %if.end, %if.then
  %vl.0 = phi %struct.vlink* [ %tmp1, %if.then ], [ %tmp4, %if.end ]
  %tmp7 = load i32, i32* @vlink_count, align 4, !dbg !112
  %inc4 = add nsw i32 %tmp7, 1, !dbg !112
  store i32 %inc4, i32* @vlink_count, align 4, !dbg !112
  %tmp9 = bitcast %struct.vlink* %vl.0 to i8*, !dbg !113
  call void @bzero(i8* %tmp9, i32 160), !dbg !113
  %linktype = getelementptr inbounds %struct.vlink, %struct.vlink* %vl.0, i32 0, i32 2, !dbg !114
  store i8 76, i8* %linktype, align 1, !dbg !115
  %call5 = call i8* (i8*, ...) bitcast (i8* (...)* @stcopy to i8* (i8*, ...)*)(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0)), !dbg !116
  %type = getelementptr inbounds %struct.vlink, %struct.vlink* %vl.0, i32 0, i32 4, !dbg !117
  store i8* %call5, i8** %type, align 8, !dbg !118
  %call6 = call i8* (i8*, ...) bitcast (i8* (...)* @stcopy to i8* (i8*, ...)*)(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0)), !dbg !119
  %hosttype = getelementptr inbounds %struct.vlink, %struct.vlink* %vl.0, i32 0, i32 7, !dbg !120
  store i8* %call6, i8** %hosttype, align 8, !dbg !121
  %call7 = call i8* (i8*, ...) bitcast (i8* (...)* @stcopy to i8* (i8*, ...)*)(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0)), !dbg !122
  %nametype = getelementptr inbounds %struct.vlink, %struct.vlink* %vl.0, i32 0, i32 9, !dbg !123
  store i8* %call7, i8** %nametype, align 8, !dbg !124
  br label %return, !dbg !125

return:                                           ; preds = %if.end.3, %if.then.2
  %retval.0 = phi %struct.vlink* [ %vl.0, %if.end.3 ], [ null, %if.then.2 ]
  ret %struct.vlink* %retval.0, !dbg !126
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare void @bzero(i8*, i32) #3

declare i8* @stcopy(...) #3

; Function Attrs: nounwind uwtable
define void @vlfree(%struct.vlink* %vl) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.vlink* %vl, i64 0, metadata !127, metadata !98), !dbg !128
  %dontfree = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 0, !dbg !129
  %tmp1 = load i32, i32* %dontfree, align 4, !dbg !129
  %tobool = icmp ne i32 %tmp1, 0, !dbg !131
  br i1 %tobool, label %if.then, label %if.end, !dbg !132

if.then:                                          ; preds = %entry
  br label %return, !dbg !133

if.end:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 1, !dbg !134
  %tmp3 = load i8*, i8** %name, align 8, !dbg !134
  %tobool1 = icmp ne i8* %tmp3, null, !dbg !136
  br i1 %tobool1, label %if.then.2, label %if.end.4, !dbg !137

if.then.2:                                        ; preds = %if.end
  %name3 = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 1, !dbg !138
  %tmp5 = load i8*, i8** %name3, align 8, !dbg !138
  call void @free(i8* %tmp5) #4, !dbg !139
  br label %if.end.4, !dbg !139

if.end.4:                                         ; preds = %if.then.2, %if.end
  %type = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 4, !dbg !140
  %tmp7 = load i8*, i8** %type, align 8, !dbg !140
  call void (i8*, ...) bitcast (void (...)* @stfree to void (i8*, ...)*)(i8* %tmp7), !dbg !141
  %replicas = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 6, !dbg !142
  %tmp9 = load %struct.vlink*, %struct.vlink** %replicas, align 8, !dbg !142
  %tobool5 = icmp ne %struct.vlink* %tmp9, null, !dbg !144
  br i1 %tobool5, label %if.then.6, label %if.end.8, !dbg !145

if.then.6:                                        ; preds = %if.end.4
  %replicas7 = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 6, !dbg !146
  %tmp11 = load %struct.vlink*, %struct.vlink** %replicas7, align 8, !dbg !146
  call void @vllfree(%struct.vlink* %tmp11), !dbg !147
  br label %if.end.8, !dbg !147

if.end.8:                                         ; preds = %if.then.6, %if.end.4
  %hosttype = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 7, !dbg !148
  %tmp13 = load i8*, i8** %hosttype, align 8, !dbg !148
  call void (i8*, ...) bitcast (void (...)* @stfree to void (i8*, ...)*)(i8* %tmp13), !dbg !149
  %host = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 8, !dbg !150
  %tmp15 = load i8*, i8** %host, align 8, !dbg !150
  %tobool9 = icmp ne i8* %tmp15, null, !dbg !152
  br i1 %tobool9, label %if.then.10, label %if.end.12, !dbg !153

if.then.10:                                       ; preds = %if.end.8
  %host11 = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 8, !dbg !154
  %tmp17 = load i8*, i8** %host11, align 8, !dbg !154
  call void @free(i8* %tmp17) #4, !dbg !155
  br label %if.end.12, !dbg !155

if.end.12:                                        ; preds = %if.then.10, %if.end.8
  %nametype = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 9, !dbg !156
  %tmp19 = load i8*, i8** %nametype, align 8, !dbg !156
  call void (i8*, ...) bitcast (void (...)* @stfree to void (i8*, ...)*)(i8* %tmp19), !dbg !157
  %filename = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 10, !dbg !158
  %tmp21 = load i8*, i8** %filename, align 8, !dbg !158
  %tobool13 = icmp ne i8* %tmp21, null, !dbg !160
  br i1 %tobool13, label %if.then.14, label %if.end.16, !dbg !161

if.then.14:                                       ; preds = %if.end.12
  %filename15 = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 10, !dbg !162
  %tmp23 = load i8*, i8** %filename15, align 8, !dbg !162
  call void @free(i8* %tmp23) #4, !dbg !163
  br label %if.end.16, !dbg !163

if.end.16:                                        ; preds = %if.then.14, %if.end.12
  %args = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 16, !dbg !164
  %tmp25 = load i8*, i8** %args, align 8, !dbg !164
  %tobool17 = icmp ne i8* %tmp25, null, !dbg !166
  br i1 %tobool17, label %if.then.18, label %if.end.20, !dbg !167

if.then.18:                                       ; preds = %if.end.16
  %args19 = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 16, !dbg !168
  %tmp27 = load i8*, i8** %args19, align 8, !dbg !168
  call void @free(i8* %tmp27) #4, !dbg !169
  br label %if.end.20, !dbg !169

if.end.20:                                        ; preds = %if.then.18, %if.end.16
  %lattrib = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 17, !dbg !170
  %tmp29 = load %struct.pattrib*, %struct.pattrib** %lattrib, align 8, !dbg !170
  %tobool21 = icmp ne %struct.pattrib* %tmp29, null, !dbg !172
  br i1 %tobool21, label %if.then.22, label %if.end.24, !dbg !173

if.then.22:                                       ; preds = %if.end.20
  %lattrib23 = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 17, !dbg !174
  %tmp31 = load %struct.pattrib*, %struct.pattrib** %lattrib23, align 8, !dbg !174
  call void (%struct.pattrib*, ...) bitcast (void (...)* @atlfree to void (%struct.pattrib*, ...)*)(%struct.pattrib* %tmp31), !dbg !175
  br label %if.end.24, !dbg !175

if.end.24:                                        ; preds = %if.then.22, %if.end.20
  %f_info = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 18, !dbg !176
  store %struct.pfile* null, %struct.pfile** %f_info, align 8, !dbg !177
  %tmp33 = load %struct.vlink*, %struct.vlink** @lfree, align 8, !dbg !178
  %next = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 20, !dbg !179
  store %struct.vlink* %tmp33, %struct.vlink** %next, align 8, !dbg !180
  %previous = getelementptr inbounds %struct.vlink, %struct.vlink* %vl, i32 0, i32 19, !dbg !181
  store %struct.vlink* null, %struct.vlink** %previous, align 8, !dbg !182
  store %struct.vlink* %vl, %struct.vlink** @lfree, align 8, !dbg !183
  %tmp37 = load i32, i32* @vlink_count, align 4, !dbg !184
  %dec = add nsw i32 %tmp37, -1, !dbg !184
  store i32 %dec, i32* @vlink_count, align 4, !dbg !184
  %tmp38 = load i32, i32* @string_count, align 4, !dbg !185
  %sub = sub nsw i32 %tmp38, 4, !dbg !185
  store i32 %sub, i32* @string_count, align 4, !dbg !185
  br label %return, !dbg !186

return:                                           ; preds = %if.end.24, %if.then
  ret void, !dbg !187
}

; Function Attrs: nounwind
declare void @free(i8*) #2

declare void @stfree(...) #3

declare void @atlfree(...) #3

; Function Attrs: nounwind uwtable
define void @vllfree(%struct.vlink* %vl) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.vlink* %vl, i64 0, metadata !189, metadata !98), !dbg !190
  br label %while.cond, !dbg !191

while.cond:                                       ; preds = %while.body, %entry
  %vl.addr.0 = phi %struct.vlink* [ %vl, %entry ], [ %tmp5, %while.body ]
  %cmp = icmp ne %struct.vlink* %vl.addr.0, null, !dbg !192
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !193

land.rhs:                                         ; preds = %while.cond
  %dontfree = getelementptr inbounds %struct.vlink, %struct.vlink* %vl.addr.0, i32 0, i32 0, !dbg !194
  %tmp2 = load i32, i32* %dontfree, align 4, !dbg !194
  %tobool = icmp ne i32 %tmp2, 0, !dbg !195
  %lnot = xor i1 %tobool, true, !dbg !195
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp3 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ]
  br i1 %tmp3, label %while.body, label %while.end, !dbg !196

while.body:                                       ; preds = %land.end
  %next = getelementptr inbounds %struct.vlink, %struct.vlink* %vl.addr.0, i32 0, i32 20, !dbg !198
  %tmp5 = load %struct.vlink*, %struct.vlink** %next, align 8, !dbg !198
  call void @llvm.dbg.value(metadata %struct.vlink* %tmp5, i64 0, metadata !200, metadata !98), !dbg !201
  call void @vlfree(%struct.vlink* %vl.addr.0), !dbg !202
  call void @llvm.dbg.value(metadata %struct.vlink* %tmp5, i64 0, metadata !189, metadata !98), !dbg !190
  br label %while.cond, !dbg !191

while.end:                                        ; preds = %land.end
  ret void, !dbg !203
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!89, !90}
!llvm.ident = !{!91}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !76, globals: !85)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/archie-client")
!2 = !{}
!3 = !{!4, !12, !75}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "VLINK", file: !5, line: 106, baseType: !6)
!5 = !DIFile(filename: "./pfs.h", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/archie-client")
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlink", file: !5, line: 82, size: 1280, align: 64, elements: !8)
!8 = !{!9, !11, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !25, !26, !42, !43, !44, !45, !59, !73, !74}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "dontfree", scope: !7, file: !5, line: 83, baseType: !10, size: 32, align: 32)
!10 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7, file: !5, line: 84, baseType: !12, size: 64, align: 64, offset: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "linktype", scope: !7, file: !5, line: 85, baseType: !13, size: 8, align: 8, offset: 128)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "expanded", scope: !7, file: !5, line: 86, baseType: !10, size: 32, align: 32, offset: 160)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7, file: !5, line: 87, baseType: !12, size: 64, align: 64, offset: 192)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "filters", scope: !7, file: !5, line: 88, baseType: !6, size: 64, align: 64, offset: 256)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "replicas", scope: !7, file: !5, line: 89, baseType: !6, size: 64, align: 64, offset: 320)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "hosttype", scope: !7, file: !5, line: 90, baseType: !12, size: 64, align: 64, offset: 384)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !7, file: !5, line: 91, baseType: !12, size: 64, align: 64, offset: 448)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "nametype", scope: !7, file: !5, line: 92, baseType: !12, size: 64, align: 64, offset: 512)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !7, file: !5, line: 93, baseType: !12, size: 64, align: 64, offset: 576)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !7, file: !5, line: 94, baseType: !24, size: 64, align: 64, offset: 640)
!24 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "f_magic_no", scope: !7, file: !5, line: 95, baseType: !24, size: 64, align: 64, offset: 704)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !7, file: !5, line: 96, baseType: !27, size: 64, align: 64, offset: 768)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DICompositeType(tag: DW_TAG_structure_type, name: "acl", file: !5, line: 208, size: 448, align: 64, elements: !29)
!29 = !{!30, !31, !32, !33, !34, !40, !41}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "acetype", scope: !28, file: !5, line: 209, baseType: !10, size: 32, align: 32)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "atype", scope: !28, file: !5, line: 210, baseType: !12, size: 64, align: 64, offset: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "rights", scope: !28, file: !5, line: 211, baseType: !12, size: 64, align: 64, offset: 128)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "principals", scope: !28, file: !5, line: 212, baseType: !12, size: 64, align: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "restrictions", scope: !28, file: !5, line: 213, baseType: !35, size: 64, align: 64, offset: 256)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "restrict_", file: !5, line: 235, size: 128, align: 64, elements: !37)
!37 = !{!38, !39}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !36, file: !5, line: 236, baseType: !27, size: 64, align: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !36, file: !5, line: 237, baseType: !27, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !28, file: !5, line: 214, baseType: !27, size: 64, align: 64, offset: 320)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !28, file: !5, line: 215, baseType: !27, size: 64, align: 64, offset: 384)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "dest_exp", scope: !7, file: !5, line: 97, baseType: !24, size: 64, align: 64, offset: 832)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "link_exp", scope: !7, file: !5, line: 98, baseType: !24, size: 64, align: 64, offset: 896)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7, file: !5, line: 99, baseType: !12, size: 64, align: 64, offset: 960)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "lattrib", scope: !7, file: !5, line: 100, baseType: !46, size: 64, align: 64, offset: 1024)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64, align: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "pattrib", file: !5, line: 171, size: 384, align: 64, elements: !48)
!48 = !{!49, !50, !51, !52, !57, !58}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "precedence", scope: !47, file: !5, line: 172, baseType: !13, size: 8, align: 8)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "aname", scope: !47, file: !5, line: 173, baseType: !12, size: 64, align: 64, offset: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "avtype", scope: !47, file: !5, line: 174, baseType: !12, size: 64, align: 64, offset: 128)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !47, file: !5, line: 175, baseType: !53, size: 64, align: 64, offset: 192)
!53 = !DICompositeType(tag: DW_TAG_union_type, name: "avalue", file: !5, line: 165, size: 64, align: 64, elements: !54)
!54 = !{!55, !56}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !53, file: !5, line: 166, baseType: !12, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !53, file: !5, line: 167, baseType: !6, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !47, file: !5, line: 176, baseType: !46, size: 64, align: 64, offset: 256)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !47, file: !5, line: 177, baseType: !46, size: 64, align: 64, offset: 320)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "f_info", scope: !7, file: !5, line: 101, baseType: !60, size: 64, align: 64, offset: 1088)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64, align: 64)
!61 = !DICompositeType(tag: DW_TAG_structure_type, name: "pfile", file: !5, line: 190, size: 640, align: 64, elements: !62)
!62 = !{!63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !61, file: !5, line: 191, baseType: !10, size: 32, align: 32)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "f_magic_no", scope: !61, file: !5, line: 192, baseType: !24, size: 64, align: 64, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !61, file: !5, line: 193, baseType: !24, size: 64, align: 64, offset: 128)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !61, file: !5, line: 194, baseType: !24, size: 64, align: 64, offset: 192)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "last_ref", scope: !61, file: !5, line: 195, baseType: !24, size: 64, align: 64, offset: 256)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !61, file: !5, line: 196, baseType: !6, size: 64, align: 64, offset: 320)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "backlinks", scope: !61, file: !5, line: 197, baseType: !6, size: 64, align: 64, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !61, file: !5, line: 198, baseType: !46, size: 64, align: 64, offset: 448)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !61, file: !5, line: 199, baseType: !60, size: 64, align: 64, offset: 512)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !61, file: !5, line: 200, baseType: !60, size: 64, align: 64, offset: 576)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !7, file: !5, line: 102, baseType: !6, size: 64, align: 64, offset: 1152)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7, file: !5, line: 103, baseType: !6, size: 64, align: 64, offset: 1216)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!76 = !{!77, !81, !84}
!77 = !DISubprogram(name: "vlalloc", scope: !78, file: !78, line: 28, type: !79, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, function: %struct.vlink* ()* @vlalloc, variables: !2)
!78 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Prolangs-C/archie-client/tmp.c", directory: "/home/gleison/tf/Benchmarks/Prolangs-C/archie-client")
!79 = !DISubroutineType(types: !80)
!80 = !{!4}
!81 = !DISubprogram(name: "vlfree", scope: !78, file: !78, line: 62, type: !82, isLocal: false, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.vlink*)* @vlfree, variables: !2)
!82 = !DISubroutineType(types: !83)
!83 = !{null, !4}
!84 = !DISubprogram(name: "vllfree", scope: !78, file: !78, line: 103, type: !82, isLocal: false, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.vlink*)* @vllfree, variables: !2)
!85 = !{!86, !87, !88}
!86 = !DIGlobalVariable(name: "vlink_count", scope: !0, file: !78, line: 16, type: !10, isLocal: false, isDefinition: true, variable: i32* @vlink_count)
!87 = !DIGlobalVariable(name: "vlink_max", scope: !0, file: !78, line: 17, type: !10, isLocal: false, isDefinition: true, variable: i32* @vlink_max)
!88 = !DIGlobalVariable(name: "lfree", scope: !0, file: !78, line: 15, type: !4, isLocal: true, isDefinition: true, variable: %struct.vlink** @lfree)
!89 = !{i32 2, !"Dwarf Version", i32 4}
!90 = !{i32 2, !"Debug Info Version", i32 3}
!91 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!92 = !DILocation(line: 30, column: 7, scope: !93)
!93 = distinct !DILexicalBlock(scope: !77, file: !78, line: 30, column: 7)
!94 = !DILocation(line: 30, column: 7, scope: !77)
!95 = !DILocation(line: 31, column: 10, scope: !96)
!96 = distinct !DILexicalBlock(scope: !93, file: !78, line: 30, column: 14)
!97 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vl", scope: !77, file: !78, line: 29, type: !4)
!98 = !DIExpression()
!99 = !DILocation(line: 29, column: 9, scope: !77)
!100 = !DILocation(line: 32, column: 13, scope: !96)
!101 = !DILocation(line: 32, column: 20, scope: !96)
!102 = !DILocation(line: 32, column: 11, scope: !96)
!103 = !DILocation(line: 33, column: 3, scope: !96)
!104 = !DILocation(line: 34, column: 17, scope: !105)
!105 = distinct !DILexicalBlock(scope: !93, file: !78, line: 33, column: 10)
!106 = !DILocation(line: 34, column: 10, scope: !105)
!107 = !DILocation(line: 35, column: 10, scope: !108)
!108 = distinct !DILexicalBlock(scope: !105, file: !78, line: 35, column: 9)
!109 = !DILocation(line: 35, column: 9, scope: !105)
!110 = !DILocation(line: 36, column: 7, scope: !108)
!111 = !DILocation(line: 37, column: 14, scope: !105)
!112 = !DILocation(line: 40, column: 14, scope: !77)
!113 = !DILocation(line: 45, column: 3, scope: !77)
!114 = !DILocation(line: 47, column: 7, scope: !77)
!115 = !DILocation(line: 47, column: 16, scope: !77)
!116 = !DILocation(line: 48, column: 14, scope: !77)
!117 = !DILocation(line: 48, column: 7, scope: !77)
!118 = !DILocation(line: 48, column: 12, scope: !77)
!119 = !DILocation(line: 49, column: 18, scope: !77)
!120 = !DILocation(line: 49, column: 7, scope: !77)
!121 = !DILocation(line: 49, column: 16, scope: !77)
!122 = !DILocation(line: 50, column: 18, scope: !77)
!123 = !DILocation(line: 50, column: 7, scope: !77)
!124 = !DILocation(line: 50, column: 16, scope: !77)
!125 = !DILocation(line: 52, column: 3, scope: !77)
!126 = !DILocation(line: 53, column: 1, scope: !77)
!127 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vl", arg: 1, scope: !81, file: !78, line: 62, type: !4)
!128 = !DILocation(line: 62, column: 19, scope: !81)
!129 = !DILocation(line: 65, column: 11, scope: !130)
!130 = distinct !DILexicalBlock(scope: !81, file: !78, line: 65, column: 7)
!131 = !DILocation(line: 65, column: 7, scope: !130)
!132 = !DILocation(line: 65, column: 7, scope: !81)
!133 = !DILocation(line: 66, column: 5, scope: !130)
!134 = !DILocation(line: 71, column: 11, scope: !135)
!135 = distinct !DILexicalBlock(scope: !81, file: !78, line: 71, column: 7)
!136 = !DILocation(line: 71, column: 7, scope: !135)
!137 = !DILocation(line: 71, column: 7, scope: !81)
!138 = !DILocation(line: 72, column: 14, scope: !135)
!139 = !DILocation(line: 72, column: 5, scope: !135)
!140 = !DILocation(line: 73, column: 14, scope: !81)
!141 = !DILocation(line: 73, column: 3, scope: !81)
!142 = !DILocation(line: 74, column: 11, scope: !143)
!143 = distinct !DILexicalBlock(scope: !81, file: !78, line: 74, column: 7)
!144 = !DILocation(line: 74, column: 7, scope: !143)
!145 = !DILocation(line: 74, column: 7, scope: !81)
!146 = !DILocation(line: 75, column: 17, scope: !143)
!147 = !DILocation(line: 75, column: 5, scope: !143)
!148 = !DILocation(line: 76, column: 14, scope: !81)
!149 = !DILocation(line: 76, column: 3, scope: !81)
!150 = !DILocation(line: 77, column: 11, scope: !151)
!151 = distinct !DILexicalBlock(scope: !81, file: !78, line: 77, column: 7)
!152 = !DILocation(line: 77, column: 7, scope: !151)
!153 = !DILocation(line: 77, column: 7, scope: !81)
!154 = !DILocation(line: 78, column: 14, scope: !151)
!155 = !DILocation(line: 78, column: 5, scope: !151)
!156 = !DILocation(line: 79, column: 14, scope: !81)
!157 = !DILocation(line: 79, column: 3, scope: !81)
!158 = !DILocation(line: 80, column: 11, scope: !159)
!159 = distinct !DILexicalBlock(scope: !81, file: !78, line: 80, column: 7)
!160 = !DILocation(line: 80, column: 7, scope: !159)
!161 = !DILocation(line: 80, column: 7, scope: !81)
!162 = !DILocation(line: 81, column: 14, scope: !159)
!163 = !DILocation(line: 81, column: 5, scope: !159)
!164 = !DILocation(line: 82, column: 11, scope: !165)
!165 = distinct !DILexicalBlock(scope: !81, file: !78, line: 82, column: 7)
!166 = !DILocation(line: 82, column: 7, scope: !165)
!167 = !DILocation(line: 82, column: 7, scope: !81)
!168 = !DILocation(line: 83, column: 14, scope: !165)
!169 = !DILocation(line: 83, column: 5, scope: !165)
!170 = !DILocation(line: 84, column: 11, scope: !171)
!171 = distinct !DILexicalBlock(scope: !81, file: !78, line: 84, column: 7)
!172 = !DILocation(line: 84, column: 7, scope: !171)
!173 = !DILocation(line: 84, column: 7, scope: !81)
!174 = !DILocation(line: 85, column: 17, scope: !171)
!175 = !DILocation(line: 85, column: 5, scope: !171)
!176 = !DILocation(line: 87, column: 7, scope: !81)
!177 = !DILocation(line: 87, column: 14, scope: !81)
!178 = !DILocation(line: 88, column: 14, scope: !81)
!179 = !DILocation(line: 88, column: 7, scope: !81)
!180 = !DILocation(line: 88, column: 12, scope: !81)
!181 = !DILocation(line: 89, column: 7, scope: !81)
!182 = !DILocation(line: 89, column: 16, scope: !81)
!183 = !DILocation(line: 90, column: 9, scope: !81)
!184 = !DILocation(line: 91, column: 14, scope: !81)
!185 = !DILocation(line: 92, column: 16, scope: !81)
!186 = !DILocation(line: 93, column: 1, scope: !81)
!187 = !DILocation(line: 93, column: 1, scope: !188)
!188 = !DILexicalBlockFile(scope: !81, file: !78, discriminator: 1)
!189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vl", arg: 1, scope: !84, file: !78, line: 103, type: !4)
!190 = !DILocation(line: 103, column: 20, scope: !84)
!191 = !DILocation(line: 106, column: 3, scope: !84)
!192 = !DILocation(line: 106, column: 14, scope: !84)
!193 = !DILocation(line: 106, column: 23, scope: !84)
!194 = !DILocation(line: 106, column: 31, scope: !84)
!195 = !DILocation(line: 106, column: 26, scope: !84)
!196 = !DILocation(line: 106, column: 3, scope: !197)
!197 = !DILexicalBlockFile(scope: !84, file: !78, discriminator: 3)
!198 = !DILocation(line: 107, column: 15, scope: !199)
!199 = distinct !DILexicalBlock(scope: !84, file: !78, line: 106, column: 41)
!200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nxt", scope: !84, file: !78, line: 104, type: !4)
!201 = !DILocation(line: 104, column: 9, scope: !84)
!202 = !DILocation(line: 108, column: 5, scope: !199)
!203 = !DILocation(line: 111, column: 1, scope: !84)
