; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@amino_acid_codes = external global i8*, align 8
@gap_pos2 = external global i32, align 4
@names = external global i8**, align 8
@seq_array = external global i8**, align 8
@seqlen_array = external global i32*, align 8
@get_seq.line = internal global [513 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@bots_verbose_mode = external global i32, align 4
@stdout = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"Could not open sequence file (%s)\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Number of sequences is %d\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"Sequence file is bogus (%s)\0A\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Sequence format is Pearson\0A\00", align 1

; Function Attrs: nounwind uwtable
define i64 @strlcpy(i8* %dst, i8* %src, i64 %siz) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !106, metadata !107), !dbg !108
  call void @llvm.dbg.value(metadata i8* %src, i64 0, metadata !109, metadata !107), !dbg !110
  call void @llvm.dbg.value(metadata i64 %siz, i64 0, metadata !111, metadata !107), !dbg !112
  call void @llvm.dbg.value(metadata i8* %dst, i64 0, metadata !113, metadata !107), !dbg !114
  call void @llvm.dbg.value(metadata i8* %src, i64 0, metadata !115, metadata !107), !dbg !116
  call void @llvm.dbg.value(metadata i64 %siz, i64 0, metadata !117, metadata !107), !dbg !118
  %cmp = icmp ne i64 %siz, 0, !dbg !119
  br i1 %cmp, label %if.then, label %if.end.6, !dbg !121

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !122

while.cond:                                       ; preds = %if.end, %if.then
  %d.0 = phi i8* [ %dst, %if.then ], [ %incdec.ptr2, %if.end ]
  %s.0 = phi i8* [ %src, %if.then ], [ %incdec.ptr, %if.end ]
  %n.0 = phi i64 [ %siz, %if.then ], [ %dec, %if.end ]
  %dec = add i64 %n.0, -1, !dbg !124
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !117, metadata !107), !dbg !118
  %cmp1 = icmp ne i64 %dec, 0, !dbg !127
  br i1 %cmp1, label %while.body, label %while.end.loopexit, !dbg !122

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, i8* %s.0, i32 1, !dbg !128
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !115, metadata !107), !dbg !116
  %tmp6 = load i8, i8* %s.0, align 1, !dbg !131
  %incdec.ptr2 = getelementptr inbounds i8, i8* %d.0, i32 1, !dbg !132
  call void @llvm.dbg.value(metadata i8* %incdec.ptr2, i64 0, metadata !113, metadata !107), !dbg !114
  store i8 %tmp6, i8* %d.0, align 1, !dbg !133
  %conv = sext i8 %tmp6 to i32, !dbg !134
  %cmp3 = icmp eq i32 %conv, 0, !dbg !135
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !136

if.then.5:                                        ; preds = %while.body
  %incdec.ptr2.lcssa = phi i8* [ %incdec.ptr2, %while.body ]
  %incdec.ptr.lcssa = phi i8* [ %incdec.ptr, %while.body ]
  %dec.lcssa17 = phi i64 [ %dec, %while.body ]
  br label %while.end, !dbg !137

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !122

while.end.loopexit:                               ; preds = %while.cond
  %dec.lcssa = phi i64 [ %dec, %while.cond ]
  %s.0.lcssa = phi i8* [ %s.0, %while.cond ]
  %d.0.lcssa = phi i8* [ %d.0, %while.cond ]
  br label %while.end, !dbg !138

while.end:                                        ; preds = %while.end.loopexit, %if.then.5
  %dec18 = phi i64 [ %dec.lcssa17, %if.then.5 ], [ %dec.lcssa, %while.end.loopexit ]
  %d.1 = phi i8* [ %incdec.ptr2.lcssa, %if.then.5 ], [ %d.0.lcssa, %while.end.loopexit ]
  %s.1 = phi i8* [ %incdec.ptr.lcssa, %if.then.5 ], [ %s.0.lcssa, %while.end.loopexit ]
  br label %if.end.6, !dbg !138

if.end.6:                                         ; preds = %while.end, %entry
  %d.2 = phi i8* [ %d.1, %while.end ], [ %dst, %entry ]
  %s.2 = phi i8* [ %s.1, %while.end ], [ %src, %entry ]
  %n.1 = phi i64 [ %dec18, %while.end ], [ %siz, %entry ]
  %cmp7 = icmp eq i64 %n.1, 0, !dbg !139
  br i1 %cmp7, label %if.then.9, label %if.end.18, !dbg !141

if.then.9:                                        ; preds = %if.end.6
  %cmp10 = icmp ne i64 %siz, 0, !dbg !142
  br i1 %cmp10, label %if.then.12, label %if.end.13, !dbg !145

if.then.12:                                       ; preds = %if.then.9
  store i8 0, i8* %d.2, align 1, !dbg !146
  br label %if.end.13, !dbg !147

if.end.13:                                        ; preds = %if.then.12, %if.then.9
  br label %while.cond.14, !dbg !148

while.cond.14:                                    ; preds = %while.body.16, %if.end.13
  %s.3 = phi i8* [ %s.2, %if.end.13 ], [ %incdec.ptr15, %while.body.16 ]
  %incdec.ptr15 = getelementptr inbounds i8, i8* %s.3, i32 1, !dbg !149
  call void @llvm.dbg.value(metadata i8* %incdec.ptr15, i64 0, metadata !115, metadata !107), !dbg !116
  %tmp12 = load i8, i8* %s.3, align 1, !dbg !152
  %tobool = icmp ne i8 %tmp12, 0, !dbg !148
  br i1 %tobool, label %while.body.16, label %while.end.17, !dbg !148

while.body.16:                                    ; preds = %while.cond.14
  br label %while.cond.14, !dbg !153

while.end.17:                                     ; preds = %while.cond.14
  %incdec.ptr15.lcssa = phi i8* [ %incdec.ptr15, %while.cond.14 ]
  br label %if.end.18, !dbg !155

if.end.18:                                        ; preds = %while.end.17, %if.end.6
  %s.4 = phi i8* [ %incdec.ptr15.lcssa, %while.end.17 ], [ %s.2, %if.end.6 ]
  %sub.ptr.lhs.cast = ptrtoint i8* %s.4 to i64, !dbg !156
  %sub.ptr.rhs.cast = ptrtoint i8* %src to i64, !dbg !156
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !156
  %sub = sub nsw i64 %sub.ptr.sub, 1, !dbg !157
  ret i64 %sub, !dbg !158
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @fill_chartab(i8* %chartab) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %chartab, i64 0, metadata !159, metadata !107), !dbg !160
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !161, metadata !107), !dbg !162
  %0 = ptrtoint i8* %chartab to i64
  %chartab14 = ptrtoint i8* %chartab to i64
  %1 = add i64 %chartab14, 1, !dbg !163
  %2 = add i64 %chartab14, 1, !dbg !163
  %3 = add i64 %0, 1, !dbg !163
  %4 = add i64 %0, 1, !dbg !163
  br label %for.cond, !dbg !165

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 128, !dbg !166
  %5 = ptrtoint i8* undef to i64, !dbg !163
  %6 = sub i64 %1, %0, !dbg !163
  %7 = ptrtoint i8* %chartab to i64, !dbg !163
  %8 = sub i64 %3, %7, !dbg !163
  br i1 %cmp, label %for.body, label %for.end, !dbg !163

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !168
  %arrayidx = getelementptr inbounds i8, i8* %chartab, i64 %idxprom, !dbg !168
  store i8 0, i8* %arrayidx, align 1, !dbg !169
  br label %for.inc, !dbg !168

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !170
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !161, metadata !107), !dbg !162
  br label %for.cond, !dbg !171

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !161, metadata !107), !dbg !162
  br label %for.cond.1, !dbg !172

for.cond.1:                                       ; preds = %for.inc.11, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc12, %for.inc.11 ]
  %cmp2 = icmp slt i32 %i.1, 25, !dbg !174
  br i1 %cmp2, label %for.body.3, label %for.end.13, !dbg !176

for.body.3:                                       ; preds = %for.cond.1
  %idxprom4 = sext i32 %i.1 to i64, !dbg !177
  %tmp6 = load i8*, i8** @amino_acid_codes, align 8, !dbg !177
  %arrayidx5 = getelementptr inbounds i8, i8* %tmp6, i64 %idxprom4, !dbg !177
  %tmp7 = load i8, i8* %arrayidx5, align 1, !dbg !177
  call void @llvm.dbg.value(metadata i8 %tmp7, i64 0, metadata !179, metadata !107), !dbg !180
  %conv = sext i8 %tmp7 to i32, !dbg !181
  %call = call i32 @tolower(i32 %conv) #6, !dbg !182
  %idxprom6 = sext i32 %call to i64, !dbg !183
  %arrayidx7 = getelementptr inbounds i8, i8* %chartab, i64 %idxprom6, !dbg !183
  store i8 %tmp7, i8* %arrayidx7, align 1, !dbg !184
  %conv8 = sext i8 %tmp7 to i32, !dbg !185
  %idxprom9 = sext i32 %conv8 to i64, !dbg !186
  %arrayidx10 = getelementptr inbounds i8, i8* %chartab, i64 %idxprom9, !dbg !186
  store i8 %tmp7, i8* %arrayidx10, align 1, !dbg !187
  br label %for.inc.11, !dbg !188

for.inc.11:                                       ; preds = %for.body.3
  %inc12 = add nsw i32 %i.1, 1, !dbg !189
  call void @llvm.dbg.value(metadata i32 %inc12, i64 0, metadata !161, metadata !107), !dbg !162
  br label %for.cond.1, !dbg !190

for.end.13:                                       ; preds = %for.cond.1
  ret void, !dbg !191
}

; Function Attrs: nounwind
declare i32 @tolower(i32) #2

; Function Attrs: nounwind uwtable
define void @encode(i8* %seq, i8* %naseq, i32 %l) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %seq, i64 0, metadata !192, metadata !107), !dbg !193
  call void @llvm.dbg.value(metadata i8* %naseq, i64 0, metadata !194, metadata !107), !dbg !195
  call void @llvm.dbg.value(metadata i32 %l, i64 0, metadata !196, metadata !107), !dbg !197
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !198, metadata !107), !dbg !199
  br label %for.cond, !dbg !200

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc23, %for.inc ]
  %cmp = icmp sle i32 %i.0, %l, !dbg !202
  br i1 %cmp, label %for.body, label %for.end, !dbg !204

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !205
  %arrayidx = getelementptr inbounds i8, i8* %seq, i64 %idxprom, !dbg !205
  %tmp4 = load i8, i8* %arrayidx, align 1, !dbg !205
  %conv = sext i8 %tmp4 to i32, !dbg !205
  %cmp1 = icmp eq i32 %conv, 45, !dbg !207
  br i1 %cmp1, label %if.then, label %if.else, !dbg !208

if.then:                                          ; preds = %for.body
  %tmp5 = load i32, i32* @gap_pos2, align 4, !dbg !209
  %conv3 = trunc i32 %tmp5 to i8, !dbg !211
  %idxprom4 = sext i32 %i.0 to i64, !dbg !212
  %arrayidx5 = getelementptr inbounds i8, i8* %naseq, i64 %idxprom4, !dbg !212
  store i8 %conv3, i8* %arrayidx5, align 1, !dbg !213
  br label %if.end.22, !dbg !214

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !215, metadata !107), !dbg !216
  %idxprom6 = sext i32 %i.0 to i64, !dbg !217
  %arrayidx7 = getelementptr inbounds i8, i8* %seq, i64 %idxprom6, !dbg !217
  %tmp10 = load i8, i8* %arrayidx7, align 1, !dbg !217
  call void @llvm.dbg.value(metadata i8 %tmp10, i64 0, metadata !219, metadata !107), !dbg !220
  %tmp11 = load i8*, i8** @amino_acid_codes, align 8, !dbg !221
  call void @llvm.dbg.value(metadata i8* %tmp11, i64 0, metadata !222, metadata !107), !dbg !223
  %idxprom8 = sext i32 %i.0 to i64, !dbg !224
  %arrayidx9 = getelementptr inbounds i8, i8* %naseq, i64 %idxprom8, !dbg !224
  store i8 -1, i8* %arrayidx9, align 1, !dbg !225
  br label %while.cond, !dbg !226

while.cond:                                       ; preds = %if.end, %if.else
  %j.0 = phi i32 [ 0, %if.else ], [ %inc, %if.end ]
  %idxprom10 = sext i32 %j.0 to i64, !dbg !227
  %arrayidx11 = getelementptr inbounds i8, i8* %tmp11, i64 %idxprom10, !dbg !227
  %tmp16 = load i8, i8* %arrayidx11, align 1, !dbg !227
  %tobool = icmp ne i8 %tmp16, 0, !dbg !226
  br i1 %tobool, label %while.body, label %while.end.loopexit, !dbg !226

while.body:                                       ; preds = %while.cond
  %idxprom12 = sext i32 %j.0 to i64, !dbg !228
  %arrayidx13 = getelementptr inbounds i8, i8* %tmp11, i64 %idxprom12, !dbg !228
  %tmp19 = load i8, i8* %arrayidx13, align 1, !dbg !228
  %conv14 = sext i8 %tmp19 to i32, !dbg !228
  %conv15 = sext i8 %tmp10 to i32, !dbg !231
  %cmp16 = icmp eq i32 %conv14, %conv15, !dbg !232
  br i1 %cmp16, label %if.then.18, label %if.end, !dbg !233

if.then.18:                                       ; preds = %while.body
  %j.0.lcssa28 = phi i32 [ %j.0, %while.body ]
  %conv19 = trunc i32 %j.0.lcssa28 to i8, !dbg !234
  %idxprom20 = sext i32 %i.0 to i64, !dbg !236
  %arrayidx21 = getelementptr inbounds i8, i8* %naseq, i64 %idxprom20, !dbg !236
  store i8 %conv19, i8* %arrayidx21, align 1, !dbg !237
  br label %while.end, !dbg !238

if.end:                                           ; preds = %while.body
  %inc = add nsw i32 %j.0, 1, !dbg !239
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !215, metadata !107), !dbg !216
  br label %while.cond, !dbg !226

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.then.18
  br label %if.end.22

if.end.22:                                        ; preds = %while.end, %if.then
  br label %for.inc, !dbg !240

for.inc:                                          ; preds = %if.end.22
  %inc23 = add nsw i32 %i.0, 1, !dbg !241
  call void @llvm.dbg.value(metadata i32 %inc23, i64 0, metadata !198, metadata !107), !dbg !199
  br label %for.cond, !dbg !242

for.end:                                          ; preds = %for.cond
  %add = add nsw i32 %l, 1, !dbg !243
  %idxprom24 = sext i32 %add to i64, !dbg !244
  %arrayidx25 = getelementptr inbounds i8, i8* %naseq, i64 %idxprom24, !dbg !244
  store i8 -3, i8* %arrayidx25, align 1, !dbg !245
  ret void, !dbg !246
}

; Function Attrs: nounwind uwtable
define void @alloc_aln(i32 %nseqs) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %nseqs, i64 0, metadata !247, metadata !107), !dbg !248
  %add = add nsw i32 %nseqs, 1, !dbg !249
  %conv = sext i32 %add to i64, !dbg !250
  %mul = mul i64 %conv, 8, !dbg !251
  %call = call noalias i8* @malloc(i64 %mul) #6, !dbg !252
  %tmp1 = bitcast i8* %call to i8**, !dbg !253
  store i8** %tmp1, i8*** @names, align 8, !dbg !254
  %add1 = add nsw i32 %nseqs, 1, !dbg !255
  %conv2 = sext i32 %add1 to i64, !dbg !256
  %mul3 = mul i64 %conv2, 8, !dbg !257
  %call4 = call noalias i8* @malloc(i64 %mul3) #6, !dbg !258
  %tmp3 = bitcast i8* %call4 to i8**, !dbg !259
  store i8** %tmp3, i8*** @seq_array, align 8, !dbg !260
  %add5 = add nsw i32 %nseqs, 1, !dbg !261
  %conv6 = sext i32 %add5 to i64, !dbg !262
  %mul7 = mul i64 %conv6, 4, !dbg !263
  %call8 = call noalias i8* @malloc(i64 %mul7) #6, !dbg !264
  %tmp5 = bitcast i8* %call8 to i32*, !dbg !265
  store i32* %tmp5, i32** @seqlen_array, align 8, !dbg !266
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !267, metadata !107), !dbg !268
  br label %for.cond, !dbg !269

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %add9 = add nsw i32 %nseqs, 1, !dbg !271
  %cmp = icmp slt i32 %i.0, %add9, !dbg !273
  br i1 %cmp, label %for.body, label %for.end, !dbg !274

for.body:                                         ; preds = %for.cond
  %call11 = call noalias i8* @malloc(i64 31) #6, !dbg !275
  %idxprom = sext i32 %i.0 to i64, !dbg !277
  %tmp9 = load i8**, i8*** @names, align 8, !dbg !277
  %arrayidx = getelementptr inbounds i8*, i8** %tmp9, i64 %idxprom, !dbg !277
  store i8* %call11, i8** %arrayidx, align 8, !dbg !278
  %idxprom12 = sext i32 %i.0 to i64, !dbg !279
  %tmp11 = load i8**, i8*** @seq_array, align 8, !dbg !279
  %arrayidx13 = getelementptr inbounds i8*, i8** %tmp11, i64 %idxprom12, !dbg !279
  store i8* null, i8** %arrayidx13, align 8, !dbg !280
  br label %for.inc, !dbg !281

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !282
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !267, metadata !107), !dbg !268
  br label %for.cond, !dbg !283

for.end:                                          ; preds = %for.cond
  ret void, !dbg !284
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind uwtable
define i8* @get_seq(i8* %sname, i32* %len, i8* %chartab, %struct._IO_FILE* %fin) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %sname, i64 0, metadata !285, metadata !107), !dbg !286
  call void @llvm.dbg.value(metadata i32* %len, i64 0, metadata !287, metadata !107), !dbg !288
  call void @llvm.dbg.value(metadata i8* %chartab, i64 0, metadata !289, metadata !107), !dbg !290
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fin, i64 0, metadata !291, metadata !107), !dbg !292
  store i32 0, i32* %len, align 4, !dbg !293
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !294, metadata !107), !dbg !295
  br label %while.cond, !dbg !296

while.cond:                                       ; preds = %while.body, %entry
  %tmp1 = load i8, i8* getelementptr inbounds ([513 x i8], [513 x i8]* @get_seq.line, i32 0, i32 0), align 1, !dbg !297
  %conv = sext i8 %tmp1 to i32, !dbg !297
  %cmp = icmp ne i32 %conv, 62, !dbg !300
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !301

land.rhs:                                         ; preds = %while.cond
  %call = call i8* @fgets(i8* getelementptr inbounds ([513 x i8], [513 x i8]* @get_seq.line, i32 0, i32 0), i32 513, %struct._IO_FILE* %fin), !dbg !302
  %cmp2 = icmp ne i8* %call, null, !dbg !303
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp3 = phi i1 [ false, %while.cond ], [ %cmp2, %land.rhs ]
  br i1 %tmp3, label %while.body, label %while.end, !dbg !304

while.body:                                       ; preds = %land.end
  br label %while.cond, !dbg !306

while.end:                                        ; preds = %land.end
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !308, metadata !107), !dbg !309
  br label %for.cond, !dbg !310

for.cond:                                         ; preds = %for.inc, %while.end
  %i.0 = phi i32 [ 1, %while.end ], [ %inc, %for.inc ]
  %conv4 = sext i32 %i.0 to i64, !dbg !312
  %call5 = call i64 @strlen(i8* getelementptr inbounds ([513 x i8], [513 x i8]* @get_seq.line, i32 0, i32 0)) #7, !dbg !316
  %cmp6 = icmp ule i64 %conv4, %call5, !dbg !317
  br i1 %cmp6, label %for.body, label %for.end.loopexit, !dbg !318

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !319
  %arrayidx = getelementptr inbounds [513 x i8], [513 x i8]* @get_seq.line, i32 0, i64 %idxprom, !dbg !319
  %tmp6 = load i8, i8* %arrayidx, align 1, !dbg !319
  %conv8 = sext i8 %tmp6 to i32, !dbg !319
  %cmp9 = icmp ne i32 %conv8, 32, !dbg !321
  br i1 %cmp9, label %if.then, label %if.end, !dbg !322

if.then:                                          ; preds = %for.body
  %i.0.lcssa51 = phi i32 [ %i.0, %for.body ]
  br label %for.end, !dbg !323

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !324

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %i.0, 1, !dbg !326
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !308, metadata !107), !dbg !309
  br label %for.cond, !dbg !327

for.end.loopexit:                                 ; preds = %for.cond
  %i.0.lcssa = phi i32 [ %i.0, %for.cond ]
  br label %for.end, !dbg !328

for.end:                                          ; preds = %for.end.loopexit, %if.then
  %i.052 = phi i32 [ %i.0.lcssa, %for.end.loopexit ], [ %i.0.lcssa51, %if.then ]
  call void @llvm.dbg.value(metadata i32 %i.0, i64 0, metadata !329, metadata !107), !dbg !328
  br label %for.cond.11, !dbg !330

for.cond.11:                                      ; preds = %for.inc.24, %for.end
  %j.0 = phi i32 [ %i.052, %for.end ], [ %inc25, %for.inc.24 ]
  %conv12 = sext i32 %j.0 to i64, !dbg !332
  %call13 = call i64 @strlen(i8* getelementptr inbounds ([513 x i8], [513 x i8]* @get_seq.line, i32 0, i32 0)) #7, !dbg !336
  %cmp14 = icmp ule i64 %conv12, %call13, !dbg !337
  br i1 %cmp14, label %for.body.16, label %for.end.26.loopexit, !dbg !338

for.body.16:                                      ; preds = %for.cond.11
  %idxprom17 = sext i32 %j.0 to i64, !dbg !339
  %arrayidx18 = getelementptr inbounds [513 x i8], [513 x i8]* @get_seq.line, i32 0, i64 %idxprom17, !dbg !339
  %tmp11 = load i8, i8* %arrayidx18, align 1, !dbg !339
  %conv19 = sext i8 %tmp11 to i32, !dbg !339
  %cmp20 = icmp eq i32 %conv19, 32, !dbg !341
  br i1 %cmp20, label %if.then.22, label %if.end.23, !dbg !342

if.then.22:                                       ; preds = %for.body.16
  %j.0.lcssa49 = phi i32 [ %j.0, %for.body.16 ]
  br label %for.end.26, !dbg !343

if.end.23:                                        ; preds = %for.body.16
  br label %for.inc.24, !dbg !344

for.inc.24:                                       ; preds = %if.end.23
  %inc25 = add nsw i32 %j.0, 1, !dbg !346
  call void @llvm.dbg.value(metadata i32 %inc25, i64 0, metadata !329, metadata !107), !dbg !328
  br label %for.cond.11, !dbg !347

for.end.26.loopexit:                              ; preds = %for.cond.11
  %j.0.lcssa = phi i32 [ %j.0, %for.cond.11 ]
  br label %for.end.26, !dbg !348

for.end.26:                                       ; preds = %for.end.26.loopexit, %if.then.22
  %j.050 = phi i32 [ %j.0.lcssa, %for.end.26.loopexit ], [ %j.0.lcssa49, %if.then.22 ]
  %idx.ext = sext i32 %i.052 to i64, !dbg !348
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([513 x i8], [513 x i8]* @get_seq.line, i32 0, i32 0), i64 %idx.ext, !dbg !348
  %sub = sub nsw i32 %j.050, %i.052, !dbg !349
  %add = add nsw i32 %sub, 1, !dbg !350
  %conv27 = sext i32 %add to i64, !dbg !351
  %call28 = call i64 @strlcpy(i8* %sname, i8* %add.ptr, i64 %conv27), !dbg !352
  %sub29 = sub nsw i32 %j.050, %i.052, !dbg !353
  %idxprom30 = sext i32 %sub29 to i64, !dbg !354
  %arrayidx31 = getelementptr inbounds i8, i8* %sname, i64 %idxprom30, !dbg !354
  store i8 0, i8* %arrayidx31, align 1, !dbg !355
  br label %while.cond.32, !dbg !356

while.cond.32:                                    ; preds = %if.end.83, %for.end.26
  %c.0 = phi i8 [ undef, %for.end.26 ], [ %c.2, %if.end.83 ]
  %seq.0 = phi i8* [ null, %for.end.26 ], [ %seq.1, %if.end.83 ]
  %call33 = call i8* @fgets(i8* getelementptr inbounds ([513 x i8], [513 x i8]* @get_seq.line, i32 0, i32 0), i32 513, %struct._IO_FILE* %fin), !dbg !357
  %cmp34 = icmp ne i8* %call33, null, !dbg !358
  br i1 %cmp34, label %while.body.36, label %while.end.84.loopexit, !dbg !356

while.body.36:                                    ; preds = %while.cond.32
  %cmp37 = icmp eq i8* %seq.0, null, !dbg !359
  br i1 %cmp37, label %if.then.39, label %if.else, !dbg !362

if.then.39:                                       ; preds = %while.body.36
  %call40 = call noalias i8* @malloc(i64 514) #6, !dbg !363
  call void @llvm.dbg.value(metadata i8* %call40, i64 0, metadata !294, metadata !107), !dbg !295
  br label %if.end.45, !dbg !364

if.else:                                          ; preds = %while.body.36
  %tmp24 = load i32, i32* %len, align 4, !dbg !365
  %add41 = add nsw i32 %tmp24, 512, !dbg !366
  %add42 = add nsw i32 %add41, 2, !dbg !367
  %conv43 = sext i32 %add42 to i64, !dbg !368
  %mul = mul i64 %conv43, 1, !dbg !369
  %call44 = call i8* @realloc(i8* %seq.0, i64 %mul) #6, !dbg !370
  call void @llvm.dbg.value(metadata i8* %call44, i64 0, metadata !294, metadata !107), !dbg !295
  br label %if.end.45

if.end.45:                                        ; preds = %if.else, %if.then.39
  %seq.1 = phi i8* [ %call40, %if.then.39 ], [ %call44, %if.else ]
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !308, metadata !107), !dbg !309
  br label %for.cond.46, !dbg !371

for.cond.46:                                      ; preds = %for.inc.76, %if.end.45
  %i.1 = phi i32 [ 0, %if.end.45 ], [ %inc77, %for.inc.76 ]
  %c.1 = phi i8 [ %c.0, %if.end.45 ], [ %tmp27, %for.inc.76 ]
  %cmp47 = icmp sle i32 %i.1, 512, !dbg !373
  br i1 %cmp47, label %for.body.49, label %for.end.78.loopexit, !dbg !375

for.body.49:                                      ; preds = %for.cond.46
  %idxprom50 = sext i32 %i.1 to i64, !dbg !376
  %arrayidx51 = getelementptr inbounds [513 x i8], [513 x i8]* @get_seq.line, i32 0, i64 %idxprom50, !dbg !376
  %tmp27 = load i8, i8* %arrayidx51, align 1, !dbg !376
  call void @llvm.dbg.value(metadata i8 %tmp27, i64 0, metadata !378, metadata !107), !dbg !379
  %conv52 = sext i8 %tmp27 to i32, !dbg !380
  %cmp53 = icmp eq i32 %conv52, 10, !dbg !382
  br i1 %cmp53, label %if.then.62, label %lor.lhs.false, !dbg !383

lor.lhs.false:                                    ; preds = %for.body.49
  %conv55 = sext i8 %tmp27 to i32, !dbg !384
  %cmp56 = icmp eq i32 %conv55, 0, !dbg !386
  br i1 %cmp56, label %if.then.62, label %lor.lhs.false.58, !dbg !387

lor.lhs.false.58:                                 ; preds = %lor.lhs.false
  %conv59 = sext i8 %tmp27 to i32, !dbg !388
  %cmp60 = icmp eq i32 %conv59, 62, !dbg !390
  br i1 %cmp60, label %if.then.62, label %if.end.63, !dbg !391

if.then.62:                                       ; preds = %lor.lhs.false.58, %lor.lhs.false, %for.body.49
  %tmp27.lcssa = phi i8 [ %tmp27, %lor.lhs.false.58 ], [ %tmp27, %lor.lhs.false ], [ %tmp27, %for.body.49 ]
  br label %for.end.78, !dbg !392

if.end.63:                                        ; preds = %lor.lhs.false.58
  %conv64 = sext i8 %tmp27 to i32, !dbg !393
  %conv65 = sext i8 %tmp27 to i32, !dbg !395
  %idxprom66 = sext i32 %conv65 to i64, !dbg !396
  %arrayidx67 = getelementptr inbounds i8, i8* %chartab, i64 %idxprom66, !dbg !396
  %tmp34 = load i8, i8* %arrayidx67, align 1, !dbg !396
  %conv68 = sext i8 %tmp34 to i32, !dbg !396
  %cmp69 = icmp eq i32 %conv64, %conv68, !dbg !397
  br i1 %cmp69, label %if.then.71, label %if.end.75, !dbg !398

if.then.71:                                       ; preds = %if.end.63
  %tmp36 = load i32, i32* %len, align 4, !dbg !399
  %add72 = add nsw i32 %tmp36, 1, !dbg !399
  store i32 %add72, i32* %len, align 4, !dbg !399
  %tmp39 = load i32, i32* %len, align 4, !dbg !401
  %idxprom73 = sext i32 %tmp39 to i64, !dbg !402
  %arrayidx74 = getelementptr inbounds i8, i8* %seq.1, i64 %idxprom73, !dbg !402
  store i8 %tmp27, i8* %arrayidx74, align 1, !dbg !403
  br label %if.end.75, !dbg !404

if.end.75:                                        ; preds = %if.then.71, %if.end.63
  br label %for.inc.76, !dbg !405

for.inc.76:                                       ; preds = %if.end.75
  %inc77 = add nsw i32 %i.1, 1, !dbg !406
  call void @llvm.dbg.value(metadata i32 %inc77, i64 0, metadata !308, metadata !107), !dbg !309
  br label %for.cond.46, !dbg !407

for.end.78.loopexit:                              ; preds = %for.cond.46
  %c.1.lcssa = phi i8 [ %c.1, %for.cond.46 ]
  br label %for.end.78, !dbg !408

for.end.78:                                       ; preds = %for.end.78.loopexit, %if.then.62
  %c.2 = phi i8 [ %tmp27.lcssa, %if.then.62 ], [ %c.1.lcssa, %for.end.78.loopexit ]
  %conv79 = sext i8 %c.2 to i32, !dbg !408
  %cmp80 = icmp eq i32 %conv79, 62, !dbg !410
  br i1 %cmp80, label %if.then.82, label %if.end.83, !dbg !411

if.then.82:                                       ; preds = %for.end.78
  %seq.1.lcssa = phi i8* [ %seq.1, %for.end.78 ]
  br label %while.end.84, !dbg !412

if.end.83:                                        ; preds = %for.end.78
  br label %while.cond.32, !dbg !356

while.end.84.loopexit:                            ; preds = %while.cond.32
  %seq.0.lcssa = phi i8* [ %seq.0, %while.cond.32 ]
  br label %while.end.84, !dbg !413

while.end.84:                                     ; preds = %while.end.84.loopexit, %if.then.82
  %seq.2 = phi i8* [ %seq.1.lcssa, %if.then.82 ], [ %seq.0.lcssa, %while.end.84.loopexit ]
  %tmp44 = load i32, i32* %len, align 4, !dbg !413
  %add85 = add nsw i32 %tmp44, 1, !dbg !414
  %idxprom86 = sext i32 %add85 to i64, !dbg !415
  %arrayidx87 = getelementptr inbounds i8, i8* %seq.2, i64 %idxprom86, !dbg !415
  store i8 0, i8* %arrayidx87, align 1, !dbg !416
  ret i8* %seq.2, !dbg !417
}

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @readseqs(i8* %filename) #0 {
entry:
  %l1 = alloca i32, align 4
  %no_seqs = alloca i32, align 4
  %chartab = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !418, metadata !107), !dbg !419
  call void @llvm.dbg.declare(metadata i32* %l1, metadata !420, metadata !107), !dbg !421
  call void @llvm.dbg.declare(metadata i32* %no_seqs, metadata !422, metadata !107), !dbg !423
  call void @llvm.dbg.declare(metadata [128 x i8]* %chartab, metadata !424, metadata !107), !dbg !428
  %call = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !429
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !431, metadata !107), !dbg !432
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !433
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !434

if.then:                                          ; preds = %entry
  %tmp1 = load i32, i32* @bots_verbose_mode, align 4, !dbg !435
  %cmp1 = icmp uge i32 %tmp1, 2, !dbg !435
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !439

if.then.2:                                        ; preds = %if.then
  %tmp2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !440
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i32 0, i32 0), i8* %filename), !dbg !440
  br label %if.end, !dbg !440

if.end:                                           ; preds = %if.then.2, %if.then
  call void @exit(i32 -1) #8, !dbg !443
  unreachable, !dbg !443

if.end.4:                                         ; preds = %entry
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i32 0, i32 0), i32* %no_seqs), !dbg !444
  %cmp6 = icmp eq i32 %call5, -1, !dbg !446
  br i1 %cmp6, label %if.then.7, label %if.end.12, !dbg !447

if.then.7:                                        ; preds = %if.end.4
  %tmp5 = load i32, i32* @bots_verbose_mode, align 4, !dbg !448
  %cmp8 = icmp uge i32 %tmp5, 2, !dbg !448
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !452

if.then.9:                                        ; preds = %if.then.7
  %tmp6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !453
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i32 0, i32 0), i8* %filename), !dbg !453
  br label %if.end.11, !dbg !453

if.end.11:                                        ; preds = %if.then.9, %if.then.7
  call void @exit(i32 -1) #8, !dbg !456
  unreachable, !dbg !456

if.end.12:                                        ; preds = %if.end.4
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %chartab, i32 0, i32 0, !dbg !457
  call void @fill_chartab(i8* %arraydecay), !dbg !458
  %tmp8 = load i32, i32* @bots_verbose_mode, align 4, !dbg !459
  %cmp13 = icmp uge i32 %tmp8, 2, !dbg !459
  br i1 %cmp13, label %if.then.14, label %if.end.16, !dbg !462

if.then.14:                                       ; preds = %if.end.12
  %tmp9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !463
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0)), !dbg !463
  br label %if.end.16, !dbg !463

if.end.16:                                        ; preds = %if.then.14, %if.end.12
  %tmp10 = load i32, i32* %no_seqs, align 4, !dbg !466
  call void @alloc_aln(i32 %tmp10), !dbg !467
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !468, metadata !107), !dbg !469
  br label %for.cond, !dbg !470

for.cond:                                         ; preds = %for.inc, %if.end.16
  %i.0 = phi i32 [ 1, %if.end.16 ], [ %inc, %for.inc ]
  %tmp12 = load i32, i32* %no_seqs, align 4, !dbg !472
  %cmp17 = icmp sle i32 %i.0, %tmp12, !dbg !474
  br i1 %cmp17, label %for.body, label %for.end, !dbg !475

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !476
  %tmp14 = load i8**, i8*** @names, align 8, !dbg !476
  %arrayidx = getelementptr inbounds i8*, i8** %tmp14, i64 %idxprom, !dbg !476
  %tmp15 = load i8*, i8** %arrayidx, align 8, !dbg !476
  %arraydecay18 = getelementptr inbounds [128 x i8], [128 x i8]* %chartab, i32 0, i32 0, !dbg !478
  %call19 = call i8* @get_seq(i8* %tmp15, i32* %l1, i8* %arraydecay18, %struct._IO_FILE* %call), !dbg !479
  call void @llvm.dbg.value(metadata i8* %call19, i64 0, metadata !480, metadata !107), !dbg !481
  %tmp17 = load i32, i32* %l1, align 4, !dbg !482
  %idxprom20 = sext i32 %i.0 to i64, !dbg !483
  %tmp19 = load i32*, i32** @seqlen_array, align 8, !dbg !483
  %arrayidx21 = getelementptr inbounds i32, i32* %tmp19, i64 %idxprom20, !dbg !483
  store i32 %tmp17, i32* %arrayidx21, align 4, !dbg !484
  %tmp20 = load i32, i32* %l1, align 4, !dbg !485
  %add = add nsw i32 %tmp20, 2, !dbg !486
  %conv = sext i32 %add to i64, !dbg !487
  %mul = mul i64 %conv, 1, !dbg !488
  %call22 = call noalias i8* @malloc(i64 %mul) #6, !dbg !489
  %idxprom23 = sext i32 %i.0 to i64, !dbg !490
  %tmp22 = load i8**, i8*** @seq_array, align 8, !dbg !490
  %arrayidx24 = getelementptr inbounds i8*, i8** %tmp22, i64 %idxprom23, !dbg !490
  store i8* %call22, i8** %arrayidx24, align 8, !dbg !491
  %idxprom25 = sext i32 %i.0 to i64, !dbg !492
  %tmp25 = load i8**, i8*** @seq_array, align 8, !dbg !492
  %arrayidx26 = getelementptr inbounds i8*, i8** %tmp25, i64 %idxprom25, !dbg !492
  %tmp26 = load i8*, i8** %arrayidx26, align 8, !dbg !492
  %tmp27 = load i32, i32* %l1, align 4, !dbg !493
  call void @encode(i8* %call19, i8* %tmp26, i32 %tmp27), !dbg !494
  call void @free(i8* %call19) #6, !dbg !495
  br label %for.inc, !dbg !496

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !497
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !468, metadata !107), !dbg !469
  br label %for.cond, !dbg !498

for.end:                                          ; preds = %for.cond
  %tmp30 = load i32, i32* %no_seqs, align 4, !dbg !499
  ret i32 %tmp30, !dbg !500
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #5

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!103, !104}
!llvm.ident = !{!105}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !9, subprograms: !16, globals: !98)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 76, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./bots.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!5 = !{!6, !7, !8}
!6 = !DIEnumerator(name: "BOTS_VERBOSE_NONE", value: 0)
!7 = !DIEnumerator(name: "BOTS_VERBOSE_DEFAULT", value: 1)
!8 = !DIEnumerator(name: "BOTS_VERBOSE_DEBUG", value: 2)
!9 = !{!10, !11, !12, !14, !13, !15}
!10 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!11 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!16 = !{!17, !27, !30, !33, !36, !95}
!17 = !DISubprogram(name: "strlcpy", scope: !18, file: !18, line: 36, type: !19, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, function: i64 (i8*, i8*, i64)* @strlcpy, variables: !26)
!18 = !DIFile(filename: "/home/gleison/tf/Benchmarks/bots/serial/alignment/tmp.c", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!19 = !DISubroutineType(types: !20)
!20 = !{!21, !13, !22, !24}
!21 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!23 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !25, line: 62, baseType: !21)
!25 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!26 = !{}
!27 = !DISubprogram(name: "fill_chartab", scope: !18, file: !18, line: 63, type: !28, isLocal: false, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @fill_chartab, variables: !26)
!28 = !DISubroutineType(types: !29)
!29 = !{null, !13}
!30 = !DISubprogram(name: "encode", scope: !18, file: !18, line: 78, type: !31, isLocal: false, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, i8*, i32)* @encode, variables: !26)
!31 = !DISubroutineType(types: !32)
!32 = !{null, !13, !13, !10}
!33 = !DISubprogram(name: "alloc_aln", scope: !18, file: !18, line: 105, type: !34, isLocal: false, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: false, function: void (i32)* @alloc_aln, variables: !26)
!34 = !DISubroutineType(types: !35)
!35 = !{null, !10}
!36 = !DISubprogram(name: "get_seq", scope: !18, file: !18, line: 121, type: !37, isLocal: false, isDefinition: true, scopeLine: 121, flags: DIFlagPrototyped, isOptimized: false, function: i8* (i8*, i32*, i8*, %struct._IO_FILE*)* @get_seq, variables: !26)
!37 = !DISubroutineType(types: !38)
!38 = !{!13, !13, !14, !13, !39}
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64, align: 64)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !41, line: 48, baseType: !42)
!41 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !43, line: 241, size: 1728, align: 64, elements: !44)
!43 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!44 = !{!45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !65, !66, !67, !68, !72, !74, !76, !80, !83, !85, !86, !87, !88, !89, !90, !91}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !42, file: !43, line: 242, baseType: !10, size: 32, align: 32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !42, file: !43, line: 247, baseType: !13, size: 64, align: 64, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !42, file: !43, line: 248, baseType: !13, size: 64, align: 64, offset: 128)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !42, file: !43, line: 249, baseType: !13, size: 64, align: 64, offset: 192)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !42, file: !43, line: 250, baseType: !13, size: 64, align: 64, offset: 256)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !42, file: !43, line: 251, baseType: !13, size: 64, align: 64, offset: 320)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !42, file: !43, line: 252, baseType: !13, size: 64, align: 64, offset: 384)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !42, file: !43, line: 253, baseType: !13, size: 64, align: 64, offset: 448)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !42, file: !43, line: 254, baseType: !13, size: 64, align: 64, offset: 512)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !42, file: !43, line: 256, baseType: !13, size: 64, align: 64, offset: 576)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !42, file: !43, line: 257, baseType: !13, size: 64, align: 64, offset: 640)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !42, file: !43, line: 258, baseType: !13, size: 64, align: 64, offset: 704)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !42, file: !43, line: 260, baseType: !58, size: 64, align: 64, offset: 768)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !43, line: 156, size: 192, align: 64, elements: !60)
!60 = !{!61, !62, !64}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !59, file: !43, line: 157, baseType: !58, size: 64, align: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !59, file: !43, line: 158, baseType: !63, size: 64, align: 64, offset: 64)
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !59, file: !43, line: 162, baseType: !10, size: 32, align: 32, offset: 128)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !42, file: !43, line: 262, baseType: !63, size: 64, align: 64, offset: 832)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !42, file: !43, line: 264, baseType: !10, size: 32, align: 32, offset: 896)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !42, file: !43, line: 268, baseType: !10, size: 32, align: 32, offset: 928)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !42, file: !43, line: 270, baseType: !69, size: 64, align: 64, offset: 960)
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !70, line: 131, baseType: !71)
!70 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/alignment")
!71 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !42, file: !43, line: 274, baseType: !73, size: 16, align: 16, offset: 1024)
!73 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !42, file: !43, line: 275, baseType: !75, size: 8, align: 8, offset: 1040)
!75 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !42, file: !43, line: 276, baseType: !77, size: 8, align: 8, offset: 1048)
!77 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 8, align: 8, elements: !78)
!78 = !{!79}
!79 = !DISubrange(count: 1)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !42, file: !43, line: 280, baseType: !81, size: 64, align: 64, offset: 1088)
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 64, align: 64)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !43, line: 150, baseType: null)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !42, file: !43, line: 289, baseType: !84, size: 64, align: 64, offset: 1152)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !70, line: 132, baseType: !71)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !42, file: !43, line: 297, baseType: !15, size: 64, align: 64, offset: 1216)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !42, file: !43, line: 298, baseType: !15, size: 64, align: 64, offset: 1280)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !42, file: !43, line: 299, baseType: !15, size: 64, align: 64, offset: 1344)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !42, file: !43, line: 300, baseType: !15, size: 64, align: 64, offset: 1408)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !42, file: !43, line: 302, baseType: !24, size: 64, align: 64, offset: 1472)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !42, file: !43, line: 303, baseType: !10, size: 32, align: 32, offset: 1536)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !42, file: !43, line: 305, baseType: !92, size: 160, align: 8, offset: 1568)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 160, align: 8, elements: !93)
!93 = !{!94}
!94 = !DISubrange(count: 20)
!95 = !DISubprogram(name: "readseqs", scope: !18, file: !18, line: 164, type: !96, isLocal: false, isDefinition: true, scopeLine: 164, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i8*)* @readseqs, variables: !26)
!96 = !DISubroutineType(types: !97)
!97 = !{!10, !13}
!98 = !{!99}
!99 = !DIGlobalVariable(name: "line", scope: !36, file: !18, line: 124, type: !100, isLocal: true, isDefinition: true, variable: [513 x i8]* @get_seq.line)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 4104, align: 8, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 513)
!103 = !{i32 2, !"Dwarf Version", i32 4}
!104 = !{i32 2, !"Debug Info Version", i32 3}
!105 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dst", arg: 1, scope: !17, file: !18, line: 36, type: !13)
!107 = !DIExpression()
!108 = !DILocation(line: 36, column: 22, scope: !17)
!109 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "src", arg: 2, scope: !17, file: !18, line: 36, type: !22)
!110 = !DILocation(line: 36, column: 39, scope: !17)
!111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "siz", arg: 3, scope: !17, file: !18, line: 36, type: !24)
!112 = !DILocation(line: 36, column: 51, scope: !17)
!113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !17, file: !18, line: 37, type: !13)
!114 = !DILocation(line: 37, column: 9, scope: !17)
!115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !17, file: !18, line: 38, type: !22)
!116 = !DILocation(line: 38, column: 15, scope: !17)
!117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !17, file: !18, line: 39, type: !24)
!118 = !DILocation(line: 39, column: 10, scope: !17)
!119 = !DILocation(line: 42, column: 9, scope: !120)
!120 = distinct !DILexicalBlock(scope: !17, file: !18, line: 42, column: 7)
!121 = !DILocation(line: 42, column: 7, scope: !17)
!122 = !DILocation(line: 43, column: 5, scope: !123)
!123 = distinct !DILexicalBlock(scope: !120, file: !18, line: 42, column: 15)
!124 = !DILocation(line: 43, column: 12, scope: !125)
!125 = !DILexicalBlockFile(scope: !126, file: !18, discriminator: 2)
!126 = !DILexicalBlockFile(scope: !123, file: !18, discriminator: 1)
!127 = !DILocation(line: 43, column: 16, scope: !123)
!128 = !DILocation(line: 44, column: 21, scope: !129)
!129 = distinct !DILexicalBlock(scope: !130, file: !18, line: 44, column: 11)
!130 = distinct !DILexicalBlock(scope: !123, file: !18, line: 43, column: 22)
!131 = !DILocation(line: 44, column: 19, scope: !129)
!132 = !DILocation(line: 44, column: 14, scope: !129)
!133 = !DILocation(line: 44, column: 17, scope: !129)
!134 = !DILocation(line: 44, column: 11, scope: !129)
!135 = !DILocation(line: 44, column: 25, scope: !129)
!136 = !DILocation(line: 44, column: 11, scope: !130)
!137 = !DILocation(line: 45, column: 9, scope: !129)
!138 = !DILocation(line: 47, column: 3, scope: !123)
!139 = !DILocation(line: 50, column: 9, scope: !140)
!140 = distinct !DILexicalBlock(scope: !17, file: !18, line: 50, column: 7)
!141 = !DILocation(line: 50, column: 7, scope: !17)
!142 = !DILocation(line: 51, column: 13, scope: !143)
!143 = distinct !DILexicalBlock(scope: !144, file: !18, line: 51, column: 9)
!144 = distinct !DILexicalBlock(scope: !140, file: !18, line: 50, column: 15)
!145 = !DILocation(line: 51, column: 9, scope: !144)
!146 = !DILocation(line: 52, column: 10, scope: !143)
!147 = !DILocation(line: 52, column: 7, scope: !143)
!148 = !DILocation(line: 53, column: 5, scope: !144)
!149 = !DILocation(line: 53, column: 14, scope: !150)
!150 = !DILexicalBlockFile(scope: !151, file: !18, discriminator: 3)
!151 = !DILexicalBlockFile(scope: !144, file: !18, discriminator: 1)
!152 = !DILocation(line: 53, column: 12, scope: !144)
!153 = !DILocation(line: 53, column: 5, scope: !154)
!154 = !DILexicalBlockFile(scope: !144, file: !18, discriminator: 2)
!155 = !DILocation(line: 55, column: 3, scope: !144)
!156 = !DILocation(line: 57, column: 13, scope: !17)
!157 = !DILocation(line: 57, column: 19, scope: !17)
!158 = !DILocation(line: 57, column: 3, scope: !17)
!159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "chartab", arg: 1, scope: !27, file: !18, line: 63, type: !13)
!160 = !DILocation(line: 63, column: 25, scope: !27)
!161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !27, file: !18, line: 64, type: !10)
!162 = !DILocation(line: 64, column: 7, scope: !27)
!163 = !DILocation(line: 66, column: 3, scope: !164)
!164 = distinct !DILexicalBlock(scope: !27, file: !18, line: 66, column: 3)
!165 = !DILocation(line: 66, column: 8, scope: !164)
!166 = !DILocation(line: 66, column: 17, scope: !167)
!167 = distinct !DILexicalBlock(scope: !164, file: !18, line: 66, column: 3)
!168 = !DILocation(line: 67, column: 5, scope: !167)
!169 = !DILocation(line: 67, column: 16, scope: !167)
!170 = !DILocation(line: 66, column: 25, scope: !167)
!171 = !DILocation(line: 66, column: 3, scope: !167)
!172 = !DILocation(line: 69, column: 8, scope: !173)
!173 = distinct !DILexicalBlock(scope: !27, file: !18, line: 69, column: 3)
!174 = !DILocation(line: 69, column: 17, scope: !175)
!175 = distinct !DILexicalBlock(scope: !173, file: !18, line: 69, column: 3)
!176 = !DILocation(line: 69, column: 3, scope: !173)
!177 = !DILocation(line: 70, column: 14, scope: !178)
!178 = distinct !DILexicalBlock(scope: !175, file: !18, line: 69, column: 28)
!179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !178, file: !18, line: 70, type: !11)
!180 = !DILocation(line: 70, column: 10, scope: !178)
!181 = !DILocation(line: 71, column: 39, scope: !178)
!182 = !DILocation(line: 71, column: 31, scope: !178)
!183 = !DILocation(line: 71, column: 23, scope: !178)
!184 = !DILocation(line: 71, column: 43, scope: !178)
!185 = !DILocation(line: 71, column: 13, scope: !178)
!186 = !DILocation(line: 71, column: 5, scope: !178)
!187 = !DILocation(line: 71, column: 21, scope: !178)
!188 = !DILocation(line: 72, column: 3, scope: !178)
!189 = !DILocation(line: 69, column: 24, scope: !175)
!190 = !DILocation(line: 69, column: 3, scope: !175)
!191 = !DILocation(line: 73, column: 1, scope: !27)
!192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seq", arg: 1, scope: !30, file: !18, line: 78, type: !13)
!193 = !DILocation(line: 78, column: 19, scope: !30)
!194 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "naseq", arg: 2, scope: !30, file: !18, line: 78, type: !13)
!195 = !DILocation(line: 78, column: 30, scope: !30)
!196 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l", arg: 3, scope: !30, file: !18, line: 78, type: !10)
!197 = !DILocation(line: 78, column: 41, scope: !30)
!198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !30, file: !18, line: 79, type: !10)
!199 = !DILocation(line: 79, column: 7, scope: !30)
!200 = !DILocation(line: 82, column: 8, scope: !201)
!201 = distinct !DILexicalBlock(scope: !30, file: !18, line: 82, column: 3)
!202 = !DILocation(line: 82, column: 17, scope: !203)
!203 = distinct !DILexicalBlock(scope: !201, file: !18, line: 82, column: 3)
!204 = !DILocation(line: 82, column: 3, scope: !201)
!205 = !DILocation(line: 83, column: 9, scope: !206)
!206 = distinct !DILexicalBlock(scope: !203, file: !18, line: 83, column: 9)
!207 = !DILocation(line: 83, column: 16, scope: !206)
!208 = !DILocation(line: 83, column: 9, scope: !203)
!209 = !DILocation(line: 84, column: 24, scope: !210)
!210 = distinct !DILexicalBlock(scope: !206, file: !18, line: 83, column: 24)
!211 = !DILocation(line: 84, column: 18, scope: !210)
!212 = !DILocation(line: 84, column: 7, scope: !210)
!213 = !DILocation(line: 84, column: 16, scope: !210)
!214 = !DILocation(line: 85, column: 5, scope: !210)
!215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !30, file: !18, line: 79, type: !10)
!216 = !DILocation(line: 79, column: 10, scope: !30)
!217 = !DILocation(line: 87, column: 11, scope: !218)
!218 = distinct !DILexicalBlock(scope: !206, file: !18, line: 85, column: 12)
!219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !30, file: !18, line: 80, type: !11)
!220 = !DILocation(line: 80, column: 8, scope: !30)
!221 = !DILocation(line: 88, column: 11, scope: !218)
!222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !30, file: !18, line: 80, type: !13)
!223 = !DILocation(line: 80, column: 12, scope: !30)
!224 = !DILocation(line: 89, column: 7, scope: !218)
!225 = !DILocation(line: 89, column: 16, scope: !218)
!226 = !DILocation(line: 90, column: 7, scope: !218)
!227 = !DILocation(line: 90, column: 14, scope: !218)
!228 = !DILocation(line: 91, column: 13, scope: !229)
!229 = distinct !DILexicalBlock(scope: !230, file: !18, line: 91, column: 13)
!230 = distinct !DILexicalBlock(scope: !218, file: !18, line: 90, column: 20)
!231 = !DILocation(line: 91, column: 21, scope: !229)
!232 = !DILocation(line: 91, column: 18, scope: !229)
!233 = !DILocation(line: 91, column: 13, scope: !230)
!234 = !DILocation(line: 92, column: 22, scope: !235)
!235 = distinct !DILexicalBlock(scope: !229, file: !18, line: 91, column: 24)
!236 = !DILocation(line: 92, column: 11, scope: !235)
!237 = !DILocation(line: 92, column: 20, scope: !235)
!238 = !DILocation(line: 93, column: 11, scope: !235)
!239 = !DILocation(line: 95, column: 10, scope: !230)
!240 = !DILocation(line: 83, column: 19, scope: !206)
!241 = !DILocation(line: 82, column: 24, scope: !203)
!242 = !DILocation(line: 82, column: 3, scope: !203)
!243 = !DILocation(line: 99, column: 11, scope: !30)
!244 = !DILocation(line: 99, column: 3, scope: !30)
!245 = !DILocation(line: 99, column: 16, scope: !30)
!246 = !DILocation(line: 100, column: 1, scope: !30)
!247 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nseqs", arg: 1, scope: !33, file: !18, line: 105, type: !10)
!248 = !DILocation(line: 105, column: 20, scope: !33)
!249 = !DILocation(line: 108, column: 34, scope: !33)
!250 = !DILocation(line: 108, column: 27, scope: !33)
!251 = !DILocation(line: 108, column: 39, scope: !33)
!252 = !DILocation(line: 108, column: 20, scope: !33)
!253 = !DILocation(line: 108, column: 11, scope: !33)
!254 = !DILocation(line: 108, column: 9, scope: !33)
!255 = !DILocation(line: 109, column: 38, scope: !33)
!256 = !DILocation(line: 109, column: 31, scope: !33)
!257 = !DILocation(line: 109, column: 43, scope: !33)
!258 = !DILocation(line: 109, column: 24, scope: !33)
!259 = !DILocation(line: 109, column: 15, scope: !33)
!260 = !DILocation(line: 109, column: 13, scope: !33)
!261 = !DILocation(line: 110, column: 39, scope: !33)
!262 = !DILocation(line: 110, column: 32, scope: !33)
!263 = !DILocation(line: 110, column: 44, scope: !33)
!264 = !DILocation(line: 110, column: 25, scope: !33)
!265 = !DILocation(line: 110, column: 18, scope: !33)
!266 = !DILocation(line: 110, column: 16, scope: !33)
!267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !33, file: !18, line: 106, type: !10)
!268 = !DILocation(line: 106, column: 7, scope: !33)
!269 = !DILocation(line: 112, column: 8, scope: !270)
!270 = distinct !DILexicalBlock(scope: !33, file: !18, line: 112, column: 3)
!271 = !DILocation(line: 112, column: 25, scope: !272)
!272 = distinct !DILexicalBlock(scope: !270, file: !18, line: 112, column: 3)
!273 = !DILocation(line: 112, column: 17, scope: !272)
!274 = !DILocation(line: 112, column: 3, scope: !270)
!275 = !DILocation(line: 113, column: 24, scope: !276)
!276 = distinct !DILexicalBlock(scope: !272, file: !18, line: 112, column: 35)
!277 = !DILocation(line: 113, column: 5, scope: !276)
!278 = !DILocation(line: 113, column: 14, scope: !276)
!279 = !DILocation(line: 114, column: 5, scope: !276)
!280 = !DILocation(line: 114, column: 18, scope: !276)
!281 = !DILocation(line: 115, column: 3, scope: !276)
!282 = !DILocation(line: 112, column: 31, scope: !272)
!283 = !DILocation(line: 112, column: 3, scope: !272)
!284 = !DILocation(line: 116, column: 1, scope: !33)
!285 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sname", arg: 1, scope: !36, file: !18, line: 121, type: !13)
!286 = !DILocation(line: 121, column: 21, scope: !36)
!287 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !36, file: !18, line: 121, type: !14)
!288 = !DILocation(line: 121, column: 33, scope: !36)
!289 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "chartab", arg: 3, scope: !36, file: !18, line: 121, type: !13)
!290 = !DILocation(line: 121, column: 44, scope: !36)
!291 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fin", arg: 4, scope: !36, file: !18, line: 121, type: !39)
!292 = !DILocation(line: 121, column: 59, scope: !36)
!293 = !DILocation(line: 126, column: 8, scope: !36)
!294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq", scope: !36, file: !18, line: 123, type: !13)
!295 = !DILocation(line: 123, column: 12, scope: !36)
!296 = !DILocation(line: 129, column: 3, scope: !36)
!297 = !DILocation(line: 129, column: 10, scope: !298)
!298 = !DILexicalBlockFile(scope: !299, file: !18, discriminator: 5)
!299 = !DILexicalBlockFile(scope: !36, file: !18, discriminator: 1)
!300 = !DILocation(line: 129, column: 16, scope: !36)
!301 = !DILocation(line: 129, column: 23, scope: !36)
!302 = !DILocation(line: 129, column: 26, scope: !36)
!303 = !DILocation(line: 129, column: 56, scope: !36)
!304 = !DILocation(line: 129, column: 3, scope: !305)
!305 = !DILexicalBlockFile(scope: !36, file: !18, discriminator: 3)
!306 = !DILocation(line: 129, column: 3, scope: !307)
!307 = !DILexicalBlockFile(scope: !36, file: !18, discriminator: 4)
!308 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !36, file: !18, line: 122, type: !10)
!309 = !DILocation(line: 122, column: 7, scope: !36)
!310 = !DILocation(line: 131, column: 8, scope: !311)
!311 = distinct !DILexicalBlock(scope: !36, file: !18, line: 131, column: 3)
!312 = !DILocation(line: 131, column: 15, scope: !313)
!313 = !DILexicalBlockFile(scope: !314, file: !18, discriminator: 2)
!314 = !DILexicalBlockFile(scope: !315, file: !18, discriminator: 1)
!315 = distinct !DILexicalBlock(scope: !311, file: !18, line: 131, column: 3)
!316 = !DILocation(line: 131, column: 20, scope: !315)
!317 = !DILocation(line: 131, column: 17, scope: !315)
!318 = !DILocation(line: 131, column: 3, scope: !311)
!319 = !DILocation(line: 132, column: 9, scope: !320)
!320 = distinct !DILexicalBlock(scope: !315, file: !18, line: 132, column: 9)
!321 = !DILocation(line: 132, column: 17, scope: !320)
!322 = !DILocation(line: 132, column: 9, scope: !315)
!323 = !DILocation(line: 133, column: 7, scope: !320)
!324 = !DILocation(line: 132, column: 20, scope: !325)
!325 = !DILexicalBlockFile(scope: !320, file: !18, discriminator: 1)
!326 = !DILocation(line: 131, column: 35, scope: !315)
!327 = !DILocation(line: 131, column: 3, scope: !315)
!328 = !DILocation(line: 122, column: 10, scope: !36)
!329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !36, file: !18, line: 122, type: !10)
!330 = !DILocation(line: 134, column: 8, scope: !331)
!331 = distinct !DILexicalBlock(scope: !36, file: !18, line: 134, column: 3)
!332 = !DILocation(line: 134, column: 15, scope: !333)
!333 = !DILexicalBlockFile(scope: !334, file: !18, discriminator: 2)
!334 = !DILexicalBlockFile(scope: !335, file: !18, discriminator: 1)
!335 = distinct !DILexicalBlock(scope: !331, file: !18, line: 134, column: 3)
!336 = !DILocation(line: 134, column: 20, scope: !335)
!337 = !DILocation(line: 134, column: 17, scope: !335)
!338 = !DILocation(line: 134, column: 3, scope: !331)
!339 = !DILocation(line: 135, column: 9, scope: !340)
!340 = distinct !DILexicalBlock(scope: !335, file: !18, line: 135, column: 9)
!341 = !DILocation(line: 135, column: 17, scope: !340)
!342 = !DILocation(line: 135, column: 9, scope: !335)
!343 = !DILocation(line: 136, column: 7, scope: !340)
!344 = !DILocation(line: 135, column: 20, scope: !345)
!345 = !DILexicalBlockFile(scope: !340, file: !18, discriminator: 1)
!346 = !DILocation(line: 134, column: 35, scope: !335)
!347 = !DILocation(line: 134, column: 3, scope: !335)
!348 = !DILocation(line: 138, column: 23, scope: !36)
!349 = !DILocation(line: 138, column: 30, scope: !36)
!350 = !DILocation(line: 138, column: 34, scope: !36)
!351 = !DILocation(line: 138, column: 28, scope: !36)
!352 = !DILocation(line: 138, column: 3, scope: !36)
!353 = !DILocation(line: 140, column: 11, scope: !36)
!354 = !DILocation(line: 140, column: 3, scope: !36)
!355 = !DILocation(line: 140, column: 16, scope: !36)
!356 = !DILocation(line: 142, column: 3, scope: !36)
!357 = !DILocation(line: 142, column: 10, scope: !36)
!358 = !DILocation(line: 142, column: 40, scope: !36)
!359 = !DILocation(line: 143, column: 13, scope: !360)
!360 = distinct !DILexicalBlock(scope: !361, file: !18, line: 143, column: 9)
!361 = distinct !DILexicalBlock(scope: !36, file: !18, line: 142, column: 49)
!362 = !DILocation(line: 143, column: 9, scope: !361)
!363 = !DILocation(line: 144, column: 21, scope: !360)
!364 = !DILocation(line: 144, column: 7, scope: !360)
!365 = !DILocation(line: 146, column: 36, scope: !360)
!366 = !DILocation(line: 146, column: 42, scope: !360)
!367 = !DILocation(line: 146, column: 52, scope: !360)
!368 = !DILocation(line: 146, column: 34, scope: !360)
!369 = !DILocation(line: 146, column: 57, scope: !360)
!370 = !DILocation(line: 146, column: 21, scope: !360)
!371 = !DILocation(line: 147, column: 10, scope: !372)
!372 = distinct !DILexicalBlock(scope: !361, file: !18, line: 147, column: 5)
!373 = !DILocation(line: 147, column: 19, scope: !374)
!374 = distinct !DILexicalBlock(scope: !372, file: !18, line: 147, column: 5)
!375 = !DILocation(line: 147, column: 5, scope: !372)
!376 = !DILocation(line: 148, column: 11, scope: !377)
!377 = distinct !DILexicalBlock(scope: !374, file: !18, line: 147, column: 36)
!378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !36, file: !18, line: 123, type: !11)
!379 = !DILocation(line: 123, column: 8, scope: !36)
!380 = !DILocation(line: 149, column: 11, scope: !381)
!381 = distinct !DILexicalBlock(scope: !377, file: !18, line: 149, column: 11)
!382 = !DILocation(line: 149, column: 13, scope: !381)
!383 = !DILocation(line: 149, column: 21, scope: !381)
!384 = !DILocation(line: 149, column: 24, scope: !385)
!385 = !DILexicalBlockFile(scope: !381, file: !18, discriminator: 1)
!386 = !DILocation(line: 149, column: 26, scope: !381)
!387 = !DILocation(line: 149, column: 33, scope: !381)
!388 = !DILocation(line: 149, column: 36, scope: !389)
!389 = !DILexicalBlockFile(scope: !381, file: !18, discriminator: 2)
!390 = !DILocation(line: 149, column: 38, scope: !381)
!391 = !DILocation(line: 149, column: 11, scope: !377)
!392 = !DILocation(line: 150, column: 9, scope: !381)
!393 = !DILocation(line: 151, column: 11, scope: !394)
!394 = distinct !DILexicalBlock(scope: !377, file: !18, line: 151, column: 11)
!395 = !DILocation(line: 151, column: 24, scope: !394)
!396 = !DILocation(line: 151, column: 16, scope: !394)
!397 = !DILocation(line: 151, column: 13, scope: !394)
!398 = !DILocation(line: 151, column: 11, scope: !377)
!399 = !DILocation(line: 152, column: 14, scope: !400)
!400 = distinct !DILexicalBlock(scope: !394, file: !18, line: 151, column: 33)
!401 = !DILocation(line: 153, column: 13, scope: !400)
!402 = !DILocation(line: 153, column: 9, scope: !400)
!403 = !DILocation(line: 153, column: 19, scope: !400)
!404 = !DILocation(line: 154, column: 7, scope: !400)
!405 = !DILocation(line: 155, column: 5, scope: !377)
!406 = !DILocation(line: 147, column: 32, scope: !374)
!407 = !DILocation(line: 147, column: 5, scope: !374)
!408 = !DILocation(line: 156, column: 9, scope: !409)
!409 = distinct !DILexicalBlock(scope: !361, file: !18, line: 156, column: 9)
!410 = !DILocation(line: 156, column: 11, scope: !409)
!411 = !DILocation(line: 156, column: 9, scope: !361)
!412 = !DILocation(line: 157, column: 7, scope: !409)
!413 = !DILocation(line: 160, column: 7, scope: !36)
!414 = !DILocation(line: 160, column: 12, scope: !36)
!415 = !DILocation(line: 160, column: 3, scope: !36)
!416 = !DILocation(line: 160, column: 17, scope: !36)
!417 = !DILocation(line: 161, column: 3, scope: !36)
!418 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 1, scope: !95, file: !18, line: 164, type: !13)
!419 = !DILocation(line: 164, column: 20, scope: !95)
!420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l1", scope: !95, file: !18, line: 165, type: !10)
!421 = !DILocation(line: 165, column: 10, scope: !95)
!422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "no_seqs", scope: !95, file: !18, line: 165, type: !10)
!423 = !DILocation(line: 165, column: 14, scope: !95)
!424 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chartab", scope: !95, file: !18, line: 167, type: !425)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 1024, align: 8, elements: !426)
!426 = !{!427}
!427 = !DISubrange(count: 128)
!428 = !DILocation(line: 167, column: 15, scope: !95)
!429 = !DILocation(line: 169, column: 14, scope: !430)
!430 = distinct !DILexicalBlock(scope: !95, file: !18, line: 169, column: 7)
!431 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fin", scope: !95, file: !18, line: 166, type: !39)
!432 = !DILocation(line: 166, column: 9, scope: !95)
!433 = !DILocation(line: 169, column: 36, scope: !430)
!434 = !DILocation(line: 169, column: 7, scope: !95)
!435 = !DILocation(line: 170, column: 5, scope: !436)
!436 = distinct !DILexicalBlock(scope: !437, file: !18, line: 170, column: 5)
!437 = distinct !DILexicalBlock(scope: !438, file: !18, line: 170, column: 5)
!438 = distinct !DILexicalBlock(scope: !430, file: !18, line: 169, column: 45)
!439 = !DILocation(line: 170, column: 5, scope: !437)
!440 = !DILocation(line: 170, column: 5, scope: !441)
!441 = !DILexicalBlockFile(scope: !442, file: !18, discriminator: 1)
!442 = distinct !DILexicalBlock(scope: !436, file: !18, line: 170, column: 5)
!443 = !DILocation(line: 171, column: 5, scope: !438)
!444 = !DILocation(line: 174, column: 7, scope: !445)
!445 = distinct !DILexicalBlock(scope: !95, file: !18, line: 174, column: 7)
!446 = !DILocation(line: 174, column: 58, scope: !445)
!447 = !DILocation(line: 174, column: 7, scope: !95)
!448 = !DILocation(line: 175, column: 5, scope: !449)
!449 = distinct !DILexicalBlock(scope: !450, file: !18, line: 175, column: 5)
!450 = distinct !DILexicalBlock(scope: !451, file: !18, line: 175, column: 5)
!451 = distinct !DILexicalBlock(scope: !445, file: !18, line: 174, column: 66)
!452 = !DILocation(line: 175, column: 5, scope: !450)
!453 = !DILocation(line: 175, column: 5, scope: !454)
!454 = !DILexicalBlockFile(scope: !455, file: !18, discriminator: 1)
!455 = distinct !DILexicalBlock(scope: !449, file: !18, line: 175, column: 5)
!456 = !DILocation(line: 176, column: 5, scope: !451)
!457 = !DILocation(line: 179, column: 16, scope: !95)
!458 = !DILocation(line: 179, column: 3, scope: !95)
!459 = !DILocation(line: 180, column: 3, scope: !460)
!460 = distinct !DILexicalBlock(scope: !461, file: !18, line: 180, column: 3)
!461 = distinct !DILexicalBlock(scope: !95, file: !18, line: 180, column: 3)
!462 = !DILocation(line: 180, column: 3, scope: !461)
!463 = !DILocation(line: 180, column: 3, scope: !464)
!464 = !DILexicalBlockFile(scope: !465, file: !18, discriminator: 1)
!465 = distinct !DILexicalBlock(scope: !460, file: !18, line: 180, column: 3)
!466 = !DILocation(line: 182, column: 13, scope: !95)
!467 = !DILocation(line: 182, column: 3, scope: !95)
!468 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !95, file: !18, line: 165, type: !10)
!469 = !DILocation(line: 165, column: 7, scope: !95)
!470 = !DILocation(line: 184, column: 8, scope: !471)
!471 = distinct !DILexicalBlock(scope: !95, file: !18, line: 184, column: 3)
!472 = !DILocation(line: 184, column: 20, scope: !473)
!473 = distinct !DILexicalBlock(scope: !471, file: !18, line: 184, column: 3)
!474 = !DILocation(line: 184, column: 17, scope: !473)
!475 = !DILocation(line: 184, column: 3, scope: !471)
!476 = !DILocation(line: 185, column: 20, scope: !477)
!477 = distinct !DILexicalBlock(scope: !473, file: !18, line: 184, column: 34)
!478 = !DILocation(line: 185, column: 35, scope: !477)
!479 = !DILocation(line: 185, column: 12, scope: !477)
!480 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seq1", scope: !95, file: !18, line: 167, type: !13)
!481 = !DILocation(line: 167, column: 9, scope: !95)
!482 = !DILocation(line: 187, column: 23, scope: !477)
!483 = !DILocation(line: 187, column: 5, scope: !477)
!484 = !DILocation(line: 187, column: 21, scope: !477)
!485 = !DILocation(line: 188, column: 36, scope: !477)
!486 = !DILocation(line: 188, column: 39, scope: !477)
!487 = !DILocation(line: 188, column: 35, scope: !477)
!488 = !DILocation(line: 188, column: 44, scope: !477)
!489 = !DILocation(line: 188, column: 28, scope: !477)
!490 = !DILocation(line: 188, column: 5, scope: !477)
!491 = !DILocation(line: 188, column: 18, scope: !477)
!492 = !DILocation(line: 190, column: 18, scope: !477)
!493 = !DILocation(line: 190, column: 32, scope: !477)
!494 = !DILocation(line: 190, column: 5, scope: !477)
!495 = !DILocation(line: 192, column: 5, scope: !477)
!496 = !DILocation(line: 193, column: 3, scope: !477)
!497 = !DILocation(line: 184, column: 30, scope: !473)
!498 = !DILocation(line: 184, column: 3, scope: !473)
!499 = !DILocation(line: 195, column: 10, scope: !95)
!500 = !DILocation(line: 195, column: 3, scope: !95)
