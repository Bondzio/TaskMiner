; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@bots_sequential_flag = global i32 0, align 4
@bots_check_flag = global i32 0, align 4
@bots_verbose_mode = global i32 1, align 4
@bots_result = global i32 3, align 4
@bots_output_format = global i32 1, align 4
@bots_print_header = global i32 0, align 4
@bots_repetitions = global i32 1, align 4
@bots_time_program = global double 0.000000e+00, align 8
@bots_time_sequential = global double 0.000000e+00, align 8
@bots_number_of_tasks = global i64 0, align 8
@bots_arg_size = global i32 1024, align 4
@bots_arg_block = global i32 32, align 4
@bots_app_cutoff_value = global i32 64, align 4
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Usage: %s -[options]\0A\00", align 1
@bots_execname = common global [256 x i8] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [20 x i8] c"Where options are:\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"  -n <size>  : Matrix Size\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"  -y <value> : Strassen Cutoff(default=%d)\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"  -r <value>   : Number of runs of each kernel.\0A\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"  -e <str>   : Include 'str' execution message.\0A\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"  -v <level> : Set verbose level (default = 1).\0A\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"               0 - none.\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"               1 - default.\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"               2 - debug.\0A\00", align 1
@.str.11 = private unnamed_addr constant [54 x i8] c"  -o <value> : Set output format mode (default = 1).\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"               0 - no benchmark output.\0A\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"               1 - detailed list format.\0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"               2 - detailed row format.\0A\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"               3 - abridged list format.\0A\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"               4 - abridged row format.\0A\00", align 1
@.str.17 = private unnamed_addr constant [70 x i8] c"  -z         : Print row header (if output format is a row variant).\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"  -c         : Check mode ON.\0A\00", align 1
@.str.19 = private unnamed_addr constant [51 x i8] c"  -h         : Print program's usage (this help).\0A\00", align 1
@bots_exec_date = common global [256 x i8] zeroinitializer, align 16
@bots_exec_message = common global [256 x i8] zeroinitializer, align 16
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Error: Unrecognized parameter.\0A\00", align 1
@bots_name = common global [256 x i8] zeroinitializer, align 16
@.str.22 = private unnamed_addr constant [9 x i8] c"Strassen\00", align 1
@bots_parameters = common global [256 x i8] zeroinitializer, align 16
@.str.23 = private unnamed_addr constant [10 x i8] c"N=%d:Y=%d\00", align 1
@bots_model = common global [256 x i8] zeroinitializer, align 16
@.str.24 = private unnamed_addr constant [7 x i8] c"Serial\00", align 1
@bots_resources = common global [256 x i8] zeroinitializer, align 16
@.str.25 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@bots_comp_date = common global [256 x i8] zeroinitializer, align 16
@bots_comp_message = common global [256 x i8] zeroinitializer, align 16
@bots_cc = common global [256 x i8] zeroinitializer, align 16
@bots_cflags = common global [256 x i8] zeroinitializer, align 16
@bots_ld = common global [256 x i8] zeroinitializer, align 16
@bots_ldflags = common global [256 x i8] zeroinitializer, align 16
@bots_cutoff = common global [256 x i8] zeroinitializer, align 16
@.str.26 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.27 = private unnamed_addr constant [67 x i8] c"Error: matrix size (%d) must be a power of 2 and a multiple of %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @bots_print_usage() #0 {
entry:
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !66
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !67
  %tmp1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !68
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_execname, i32 0, i32 0)), !dbg !69
  %tmp2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !70
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !71
  %tmp3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !72
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0)), !dbg !73
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !74
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0)), !dbg !75
  %tmp5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !76
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i32 64), !dbg !77
  %tmp6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !78
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !79
  %tmp7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !80
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i32 0, i32 0)), !dbg !81
  %tmp8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !82
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i32 0, i32 0)), !dbg !83
  %tmp9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !84
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)), !dbg !85
  %tmp10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !86
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)), !dbg !87
  %tmp11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !88
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0)), !dbg !89
  %tmp12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !90
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0)), !dbg !91
  %tmp13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !92
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11, i32 0, i32 0)), !dbg !93
  %tmp14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !94
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0)), !dbg !95
  %tmp15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !96
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp15, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i32 0, i32 0)), !dbg !97
  %tmp16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !98
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i32 0, i32 0)), !dbg !99
  %tmp17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !100
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp17, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i32 0, i32 0)), !dbg !101
  %tmp18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !102
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i32 0, i32 0)), !dbg !103
  %tmp19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !104
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp19, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i32 0, i32 0)), !dbg !105
  %tmp20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !106
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !107
  %tmp21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !108
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)), !dbg !109
  %tmp22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !110
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !111
  %tmp23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !112
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp23, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19, i32 0, i32 0)), !dbg !113
  %tmp24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !114
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !115
  ret void, !dbg !116
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @bots_get_params_common(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !117, metadata !118), !dbg !119
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !120, metadata !118), !dbg !121
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 0, !dbg !122
  %tmp1 = load i8*, i8** %arrayidx, align 8, !dbg !122
  %call = call i8* @__xpg_basename(i8* %tmp1) #6, !dbg !123
  %call1 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_execname, i32 0, i32 0), i8* %call) #6, !dbg !124
  call void @bots_get_date(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_date, i32 0, i32 0)), !dbg !125
  %call2 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !126
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !127, metadata !118), !dbg !128
  br label %for.cond, !dbg !129

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc95, %for.inc ]
  %cmp = icmp slt i32 %i.0, %argc, !dbg !131
  br i1 %cmp, label %for.body, label %for.end, !dbg !133

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !134
  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom, !dbg !134
  %tmp6 = load i8*, i8** %arrayidx3, align 8, !dbg !134
  %arrayidx4 = getelementptr inbounds i8, i8* %tmp6, i64 0, !dbg !134
  %tmp7 = load i8, i8* %arrayidx4, align 1, !dbg !134
  %conv = sext i8 %tmp7 to i32, !dbg !134
  %cmp5 = icmp eq i32 %conv, 45, !dbg !137
  br i1 %cmp5, label %if.then, label %if.else, !dbg !138

if.then:                                          ; preds = %for.body
  %idxprom7 = sext i32 %i.0 to i64, !dbg !139
  %arrayidx8 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom7, !dbg !139
  %tmp10 = load i8*, i8** %arrayidx8, align 8, !dbg !139
  %arrayidx9 = getelementptr inbounds i8, i8* %tmp10, i64 1, !dbg !139
  %tmp11 = load i8, i8* %arrayidx9, align 1, !dbg !139
  %conv10 = sext i8 %tmp11 to i32, !dbg !139
  switch i32 %conv10, label %sw.default [
    i32 114, label %sw.bb
    i32 99, label %sw.bb.20
    i32 101, label %sw.bb.24
    i32 104, label %sw.bb.36
    i32 110, label %sw.bb.40
    i32 111, label %sw.bb.52
    i32 118, label %sw.bb.64
    i32 121, label %sw.bb.76
    i32 122, label %sw.bb.88
  ], !dbg !141

sw.bb:                                            ; preds = %if.then
  %idxprom11 = sext i32 %i.0 to i64, !dbg !142
  %arrayidx12 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom11, !dbg !142
  %tmp14 = load i8*, i8** %arrayidx12, align 8, !dbg !142
  %arrayidx13 = getelementptr inbounds i8, i8* %tmp14, i64 1, !dbg !142
  store i8 42, i8* %arrayidx13, align 1, !dbg !144
  %inc = add nsw i32 %i.0, 1, !dbg !145
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !127, metadata !118), !dbg !128
  %cmp14 = icmp eq i32 %argc, %inc, !dbg !146
  br i1 %cmp14, label %if.then.16, label %if.end, !dbg !148

if.then.16:                                       ; preds = %sw.bb
  call void @bots_print_usage(), !dbg !149
  call void @exit(i32 100) #7, !dbg !151
  unreachable, !dbg !151

if.end:                                           ; preds = %sw.bb
  %idxprom17 = sext i32 %inc to i64, !dbg !152
  %arrayidx18 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom17, !dbg !152
  %tmp20 = load i8*, i8** %arrayidx18, align 8, !dbg !152
  %call19 = call i32 @atoi(i8* %tmp20) #8, !dbg !153
  store i32 %call19, i32* @bots_repetitions, align 4, !dbg !154
  br label %sw.epilog, !dbg !155

sw.bb.20:                                         ; preds = %if.then
  %idxprom21 = sext i32 %i.0 to i64, !dbg !156
  %arrayidx22 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom21, !dbg !156
  %tmp23 = load i8*, i8** %arrayidx22, align 8, !dbg !156
  %arrayidx23 = getelementptr inbounds i8, i8* %tmp23, i64 1, !dbg !156
  store i8 42, i8* %arrayidx23, align 1, !dbg !157
  store i32 1, i32* @bots_check_flag, align 4, !dbg !158
  br label %sw.epilog, !dbg !159

sw.bb.24:                                         ; preds = %if.then
  %idxprom25 = sext i32 %i.0 to i64, !dbg !160
  %arrayidx26 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom25, !dbg !160
  %tmp26 = load i8*, i8** %arrayidx26, align 8, !dbg !160
  %arrayidx27 = getelementptr inbounds i8, i8* %tmp26, i64 1, !dbg !160
  store i8 42, i8* %arrayidx27, align 1, !dbg !161
  %inc28 = add nsw i32 %i.0, 1, !dbg !162
  call void @llvm.dbg.value(metadata i32 %inc28, i64 0, metadata !127, metadata !118), !dbg !128
  %cmp29 = icmp eq i32 %argc, %inc28, !dbg !163
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !165

if.then.31:                                       ; preds = %sw.bb.24
  call void @bots_print_usage(), !dbg !166
  call void @exit(i32 100) #7, !dbg !168
  unreachable, !dbg !168

if.end.32:                                        ; preds = %sw.bb.24
  %idxprom33 = sext i32 %inc28 to i64, !dbg !169
  %arrayidx34 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom33, !dbg !169
  %tmp32 = load i8*, i8** %arrayidx34, align 8, !dbg !169
  %call35 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0), i8* %tmp32) #6, !dbg !170
  br label %sw.epilog, !dbg !171

sw.bb.36:                                         ; preds = %if.then
  %i.0.lcssa80 = phi i32 [ %i.0, %if.then ]
  %idxprom37 = sext i32 %i.0.lcssa80 to i64, !dbg !172
  %arrayidx38 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom37, !dbg !172
  %tmp35 = load i8*, i8** %arrayidx38, align 8, !dbg !172
  %arrayidx39 = getelementptr inbounds i8, i8* %tmp35, i64 1, !dbg !172
  store i8 42, i8* %arrayidx39, align 1, !dbg !173
  call void @bots_print_usage(), !dbg !174
  call void @exit(i32 100) #7, !dbg !175
  unreachable, !dbg !175

sw.bb.40:                                         ; preds = %if.then
  %idxprom41 = sext i32 %i.0 to i64, !dbg !176
  %arrayidx42 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom41, !dbg !176
  %tmp38 = load i8*, i8** %arrayidx42, align 8, !dbg !176
  %arrayidx43 = getelementptr inbounds i8, i8* %tmp38, i64 1, !dbg !176
  store i8 42, i8* %arrayidx43, align 1, !dbg !177
  %inc44 = add nsw i32 %i.0, 1, !dbg !178
  call void @llvm.dbg.value(metadata i32 %inc44, i64 0, metadata !127, metadata !118), !dbg !128
  %cmp45 = icmp eq i32 %argc, %inc44, !dbg !179
  br i1 %cmp45, label %if.then.47, label %if.end.48, !dbg !181

if.then.47:                                       ; preds = %sw.bb.40
  call void @bots_print_usage(), !dbg !182
  call void @exit(i32 100) #7, !dbg !184
  unreachable, !dbg !184

if.end.48:                                        ; preds = %sw.bb.40
  %idxprom49 = sext i32 %inc44 to i64, !dbg !185
  %arrayidx50 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom49, !dbg !185
  %tmp44 = load i8*, i8** %arrayidx50, align 8, !dbg !185
  %call51 = call i32 @atoi(i8* %tmp44) #8, !dbg !186
  store i32 %call51, i32* @bots_arg_size, align 4, !dbg !187
  br label %sw.epilog, !dbg !188

sw.bb.52:                                         ; preds = %if.then
  %idxprom53 = sext i32 %i.0 to i64, !dbg !189
  %arrayidx54 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom53, !dbg !189
  %tmp47 = load i8*, i8** %arrayidx54, align 8, !dbg !189
  %arrayidx55 = getelementptr inbounds i8, i8* %tmp47, i64 1, !dbg !189
  store i8 42, i8* %arrayidx55, align 1, !dbg !190
  %inc56 = add nsw i32 %i.0, 1, !dbg !191
  call void @llvm.dbg.value(metadata i32 %inc56, i64 0, metadata !127, metadata !118), !dbg !128
  %cmp57 = icmp eq i32 %argc, %inc56, !dbg !192
  br i1 %cmp57, label %if.then.59, label %if.end.60, !dbg !194

if.then.59:                                       ; preds = %sw.bb.52
  call void @bots_print_usage(), !dbg !195
  call void @exit(i32 100) #7, !dbg !197
  unreachable, !dbg !197

if.end.60:                                        ; preds = %sw.bb.52
  %idxprom61 = sext i32 %inc56 to i64, !dbg !198
  %arrayidx62 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom61, !dbg !198
  %tmp53 = load i8*, i8** %arrayidx62, align 8, !dbg !198
  %call63 = call i32 @atoi(i8* %tmp53) #8, !dbg !199
  store i32 %call63, i32* @bots_output_format, align 4, !dbg !200
  br label %sw.epilog, !dbg !201

sw.bb.64:                                         ; preds = %if.then
  %idxprom65 = sext i32 %i.0 to i64, !dbg !202
  %arrayidx66 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom65, !dbg !202
  %tmp56 = load i8*, i8** %arrayidx66, align 8, !dbg !202
  %arrayidx67 = getelementptr inbounds i8, i8* %tmp56, i64 1, !dbg !202
  store i8 42, i8* %arrayidx67, align 1, !dbg !203
  %inc68 = add nsw i32 %i.0, 1, !dbg !204
  call void @llvm.dbg.value(metadata i32 %inc68, i64 0, metadata !127, metadata !118), !dbg !128
  %cmp69 = icmp eq i32 %argc, %inc68, !dbg !205
  br i1 %cmp69, label %if.then.71, label %if.end.72, !dbg !207

if.then.71:                                       ; preds = %sw.bb.64
  call void @bots_print_usage(), !dbg !208
  call void @exit(i32 100) #7, !dbg !210
  unreachable, !dbg !210

if.end.72:                                        ; preds = %sw.bb.64
  %idxprom73 = sext i32 %inc68 to i64, !dbg !211
  %arrayidx74 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom73, !dbg !211
  %tmp62 = load i8*, i8** %arrayidx74, align 8, !dbg !211
  %call75 = call i32 @atoi(i8* %tmp62) #8, !dbg !212
  store i32 %call75, i32* @bots_verbose_mode, align 4, !dbg !213
  br label %sw.epilog, !dbg !214

sw.bb.76:                                         ; preds = %if.then
  %idxprom77 = sext i32 %i.0 to i64, !dbg !215
  %arrayidx78 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom77, !dbg !215
  %tmp65 = load i8*, i8** %arrayidx78, align 8, !dbg !215
  %arrayidx79 = getelementptr inbounds i8, i8* %tmp65, i64 1, !dbg !215
  store i8 42, i8* %arrayidx79, align 1, !dbg !216
  %inc80 = add nsw i32 %i.0, 1, !dbg !217
  call void @llvm.dbg.value(metadata i32 %inc80, i64 0, metadata !127, metadata !118), !dbg !128
  %cmp81 = icmp eq i32 %argc, %inc80, !dbg !218
  br i1 %cmp81, label %if.then.83, label %if.end.84, !dbg !220

if.then.83:                                       ; preds = %sw.bb.76
  call void @bots_print_usage(), !dbg !221
  call void @exit(i32 100) #7, !dbg !223
  unreachable, !dbg !223

if.end.84:                                        ; preds = %sw.bb.76
  %idxprom85 = sext i32 %inc80 to i64, !dbg !224
  %arrayidx86 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom85, !dbg !224
  %tmp71 = load i8*, i8** %arrayidx86, align 8, !dbg !224
  %call87 = call i32 @atoi(i8* %tmp71) #8, !dbg !225
  store i32 %call87, i32* @bots_app_cutoff_value, align 4, !dbg !226
  br label %sw.epilog, !dbg !227

sw.bb.88:                                         ; preds = %if.then
  %idxprom89 = sext i32 %i.0 to i64, !dbg !228
  %arrayidx90 = getelementptr inbounds i8*, i8** %argv, i64 %idxprom89, !dbg !228
  %tmp74 = load i8*, i8** %arrayidx90, align 8, !dbg !228
  %arrayidx91 = getelementptr inbounds i8, i8* %tmp74, i64 1, !dbg !228
  store i8 42, i8* %arrayidx91, align 1, !dbg !229
  store i32 1, i32* @bots_print_header, align 4, !dbg !230
  br label %sw.epilog, !dbg !231

sw.default:                                       ; preds = %if.then
  %tmp75 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !232
  %call92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp75, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !233
  call void @bots_print_usage(), !dbg !234
  call void @exit(i32 100) #7, !dbg !235
  unreachable, !dbg !235

sw.epilog:                                        ; preds = %sw.bb.88, %if.end.84, %if.end.72, %if.end.60, %if.end.48, %if.end.32, %sw.bb.20, %if.end
  %i.1 = phi i32 [ %i.0, %sw.bb.88 ], [ %inc80, %if.end.84 ], [ %inc68, %if.end.72 ], [ %inc56, %if.end.60 ], [ %inc44, %if.end.48 ], [ %inc28, %if.end.32 ], [ %i.0, %sw.bb.20 ], [ %inc, %if.end ]
  br label %if.end.94, !dbg !236

if.else:                                          ; preds = %for.body
  %tmp76 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !237
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp76, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !239
  call void @bots_print_usage(), !dbg !240
  call void @exit(i32 100) #7, !dbg !241
  unreachable, !dbg !241

if.end.94:                                        ; preds = %sw.epilog
  br label %for.inc, !dbg !242

for.inc:                                          ; preds = %if.end.94
  %inc95 = add nsw i32 %i.1, 1, !dbg !243
  call void @llvm.dbg.value(metadata i32 %inc95, i64 0, metadata !127, metadata !118), !dbg !128
  br label %for.cond, !dbg !244

for.end:                                          ; preds = %for.cond
  ret void, !dbg !245
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind
declare i8* @__xpg_basename(i8*) #3

declare void @bots_get_date(i8*) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind uwtable
define void @bots_get_params(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !246, metadata !118), !dbg !247
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !248, metadata !118), !dbg !249
  call void @bots_get_params_common(i32 %argc, i8** %argv), !dbg !250
  ret void, !dbg !251
}

; Function Attrs: nounwind uwtable
define void @bots_set_info() #0 {
entry:
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_name, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0)) #6, !dbg !252
  %tmp = load i32, i32* @bots_arg_size, align 4, !dbg !253
  %tmp1 = load i32, i32* @bots_app_cutoff_value, align 4, !dbg !253
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_parameters, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32 %tmp, i32 %tmp1) #6, !dbg !254
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_model, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)) #6, !dbg !255
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_resources, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i32 1) #6, !dbg !256
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_date, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !257
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_message, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !258
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cc, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !259
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cflags, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !260
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ld, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !261
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ldflags, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !262
  %call10 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cutoff, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0)) #6, !dbg !263
  ret void, !dbg !264
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !265, metadata !118), !dbg !266
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !267, metadata !118), !dbg !268
  call void @bots_get_params(i32 %argc, i8** %argv), !dbg !269
  %tmp2 = load i32, i32* @bots_arg_size, align 4, !dbg !270
  %tmp3 = load i32, i32* @bots_arg_size, align 4, !dbg !270
  %sub = sub nsw i32 %tmp3, 1, !dbg !270
  %and = and i32 %tmp2, %sub, !dbg !270
  %cmp = icmp ne i32 %and, 0, !dbg !270
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !270

lor.lhs.false:                                    ; preds = %entry
  %tmp4 = load i32, i32* @bots_arg_size, align 4, !dbg !272
  %rem = srem i32 %tmp4, 16, !dbg !272
  %cmp1 = icmp ne i32 %rem, 0, !dbg !272
  br i1 %cmp1, label %if.then, label %if.end.4, !dbg !274

if.then:                                          ; preds = %lor.lhs.false, %entry
  %tmp5 = load i32, i32* @bots_verbose_mode, align 4, !dbg !275
  %cmp2 = icmp uge i32 %tmp5, 2, !dbg !275
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !281

if.then.3:                                        ; preds = %if.then
  %tmp6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !282
  %tmp7 = load i32, i32* @bots_arg_size, align 4, !dbg !282
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp6, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.27, i32 0, i32 0), i32 %tmp7, i32 16), !dbg !282
  br label %if.end, !dbg !282

if.end:                                           ; preds = %if.then.3, %if.then
  call void @exit(i32 1) #7, !dbg !285
  unreachable, !dbg !285

if.end.4:                                         ; preds = %lor.lhs.false
  %tmp8 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %tmp9 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %mul = mul nsw i32 %tmp8, %tmp9, !dbg !288
  %conv = sext i32 %mul to i64, !dbg !288
  %mul5 = mul i64 %conv, 8, !dbg !288
  %call6 = call noalias i8* @malloc(i64 %mul5) #6, !dbg !288
  %tmp10 = bitcast i8* %call6 to double*, !dbg !288
  call void @llvm.dbg.value(metadata double* %tmp10, i64 0, metadata !290, metadata !118), !dbg !274
  %tmp11 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %tmp12 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %mul7 = mul nsw i32 %tmp11, %tmp12, !dbg !288
  %conv8 = sext i32 %mul7 to i64, !dbg !288
  %mul9 = mul i64 %conv8, 8, !dbg !288
  %call10 = call noalias i8* @malloc(i64 %mul9) #6, !dbg !288
  %tmp13 = bitcast i8* %call10 to double*, !dbg !288
  call void @llvm.dbg.value(metadata double* %tmp13, i64 0, metadata !291, metadata !118), !dbg !274
  %tmp14 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %tmp15 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %mul11 = mul nsw i32 %tmp14, %tmp15, !dbg !288
  %conv12 = sext i32 %mul11 to i64, !dbg !288
  %mul13 = mul i64 %conv12, 8, !dbg !288
  %call14 = call noalias i8* @malloc(i64 %mul13) #6, !dbg !288
  %tmp16 = bitcast i8* %call14 to double*, !dbg !288
  call void @llvm.dbg.value(metadata double* %tmp16, i64 0, metadata !292, metadata !118), !dbg !274
  %tmp17 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %tmp19 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  call void @init_matrix(i32 %tmp17, double* %tmp10, i32 %tmp19), !dbg !288
  %tmp20 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  %tmp22 = load i32, i32* @bots_arg_size, align 4, !dbg !288
  call void @init_matrix(i32 %tmp20, double* %tmp13, i32 %tmp22), !dbg !288
  call void @bots_set_info(), !dbg !293
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !294, metadata !118), !dbg !295
  br label %for.cond, !dbg !296

for.cond:                                         ; preds = %for.inc, %if.end.4
  %ri.0 = phi i32 [ 0, %if.end.4 ], [ %inc, %for.inc ]
  %tmp24 = load i32, i32* @bots_repetitions, align 4, !dbg !298
  %cmp15 = icmp slt i32 %ri.0, %tmp24, !dbg !300
  br i1 %cmp15, label %for.body, label %for.end, !dbg !301

for.body:                                         ; preds = %for.cond
  %call17 = call i64 (...) @bots_usecs(), !dbg !302
  call void @llvm.dbg.value(metadata i64 %call17, i64 0, metadata !304, metadata !118), !dbg !306
  %tmp28 = load i32, i32* @bots_arg_size, align 4, !dbg !307
  call void @strassen_main(double* %tmp16, double* %tmp10, double* %tmp13, i32 %tmp28), !dbg !307
  %call18 = call i64 (...) @bots_usecs(), !dbg !308
  call void @llvm.dbg.value(metadata i64 %call18, i64 0, metadata !309, metadata !118), !dbg !310
  %sub19 = sub nsw i64 %call18, %call17, !dbg !311
  %conv20 = sitofp i64 %sub19 to double, !dbg !312
  %div = fdiv double %conv20, 1.000000e+06, !dbg !313
  %tmp31 = load double, double* @bots_time_program, align 8, !dbg !314
  %add = fadd double %tmp31, %div, !dbg !314
  store double %add, double* @bots_time_program, align 8, !dbg !314
  br label %for.inc, !dbg !315

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %ri.0, 1, !dbg !316
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !294, metadata !118), !dbg !295
  br label %for.cond, !dbg !317

for.end:                                          ; preds = %for.cond
  %tmp33 = load i32, i32* @bots_check_flag, align 4, !dbg !318
  %tobool = icmp ne i32 %tmp33, 0, !dbg !318
  br i1 %tobool, label %if.then.21, label %if.end.22, !dbg !320

if.then.21:                                       ; preds = %for.end
  store i32 0, i32* @bots_result, align 4, !dbg !321
  br label %if.end.22, !dbg !323

if.end.22:                                        ; preds = %if.then.21, %for.end
  call void @bots_print_results(), !dbg !324
  ret i32 0, !dbg !325
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

declare void @init_matrix(i32, double*, i32) #1

declare i64 @bots_usecs(...) #1

declare void @strassen_main(double*, double*, double*, i32) #1

declare void @bots_print_results() #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!63, !64}
!llvm.ident = !{!65}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !9, subprograms: !13, globals: !31)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/bots/serial/strassen")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 76, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./bots.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/strassen")
!5 = !{!6, !7, !8}
!6 = !DIEnumerator(name: "BOTS_VERBOSE_NONE", value: 0)
!7 = !DIEnumerator(name: "BOTS_VERBOSE_DEFAULT", value: 1)
!8 = !DIEnumerator(name: "BOTS_VERBOSE_DEBUG", value: 2)
!9 = !{!10, !11, !12}
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "bots_verbose_mode_t", file: !4, line: 78, baseType: !3)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!13 = !{!14, !19, !26, !27, !28}
!14 = !DISubprogram(name: "bots_print_usage", scope: !15, file: !15, line: 212, type: !16, isLocal: false, isDefinition: true, scopeLine: 212, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @bots_print_usage, variables: !18)
!15 = !DIFile(filename: "/home/gleison/tf/Benchmarks/bots/serial/strassen/tmp.c", directory: "/home/gleison/tf/Benchmarks/bots/serial/strassen")
!16 = !DISubroutineType(types: !17)
!17 = !{null}
!18 = !{}
!19 = !DISubprogram(name: "bots_get_params_common", scope: !15, file: !15, line: 275, type: !20, isLocal: false, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8**)* @bots_get_params_common, variables: !18)
!20 = !DISubroutineType(types: !21)
!21 = !{null, !22, !23}
!22 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!25 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!26 = !DISubprogram(name: "bots_get_params", scope: !15, file: !15, line: 474, type: !20, isLocal: false, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8**)* @bots_get_params, variables: !18)
!27 = !DISubprogram(name: "bots_set_info", scope: !15, file: !15, line: 482, type: !16, isLocal: false, isDefinition: true, scopeLine: 482, isOptimized: false, function: void ()* @bots_set_info, variables: !18)
!28 = !DISubprogram(name: "main", scope: !15, file: !15, line: 511, type: !29, isLocal: false, isDefinition: true, scopeLine: 511, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !18)
!29 = !DISubroutineType(types: !30)
!30 = !{!22, !22, !23}
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !43, !44, !45, !46, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!32 = !DIGlobalVariable(name: "bots_sequential_flag", scope: !0, file: !15, line: 41, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_sequential_flag)
!33 = !DIGlobalVariable(name: "bots_check_flag", scope: !0, file: !15, line: 42, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_check_flag)
!34 = !DIGlobalVariable(name: "bots_verbose_mode", scope: !0, file: !15, line: 43, type: !10, isLocal: false, isDefinition: true, variable: i32* @bots_verbose_mode)
!35 = !DIGlobalVariable(name: "bots_result", scope: !0, file: !15, line: 44, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_result)
!36 = !DIGlobalVariable(name: "bots_output_format", scope: !0, file: !15, line: 45, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_output_format)
!37 = !DIGlobalVariable(name: "bots_print_header", scope: !0, file: !15, line: 46, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_print_header)
!38 = !DIGlobalVariable(name: "bots_repetitions", scope: !0, file: !15, line: 63, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_repetitions)
!39 = !DIGlobalVariable(name: "bots_time_program", scope: !0, file: !15, line: 66, type: !12, isLocal: false, isDefinition: true, variable: double* @bots_time_program)
!40 = !DIGlobalVariable(name: "bots_time_sequential", scope: !0, file: !15, line: 67, type: !12, isLocal: false, isDefinition: true, variable: double* @bots_time_sequential)
!41 = !DIGlobalVariable(name: "bots_number_of_tasks", scope: !0, file: !15, line: 68, type: !42, isLocal: false, isDefinition: true, variable: i64* @bots_number_of_tasks)
!42 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!43 = !DIGlobalVariable(name: "bots_arg_size", scope: !0, file: !15, line: 125, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_arg_size)
!44 = !DIGlobalVariable(name: "bots_arg_block", scope: !0, file: !15, line: 172, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_arg_block)
!45 = !DIGlobalVariable(name: "bots_app_cutoff_value", scope: !0, file: !15, line: 182, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_app_cutoff_value)
!46 = !DIGlobalVariable(name: "bots_name", scope: !0, file: !15, line: 48, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_name)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 2048, align: 8, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 256)
!50 = !DIGlobalVariable(name: "bots_execname", scope: !0, file: !15, line: 49, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_execname)
!51 = !DIGlobalVariable(name: "bots_parameters", scope: !0, file: !15, line: 50, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_parameters)
!52 = !DIGlobalVariable(name: "bots_model", scope: !0, file: !15, line: 51, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_model)
!53 = !DIGlobalVariable(name: "bots_resources", scope: !0, file: !15, line: 52, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_resources)
!54 = !DIGlobalVariable(name: "bots_exec_date", scope: !0, file: !15, line: 54, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_exec_date)
!55 = !DIGlobalVariable(name: "bots_exec_message", scope: !0, file: !15, line: 55, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_exec_message)
!56 = !DIGlobalVariable(name: "bots_comp_date", scope: !0, file: !15, line: 56, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_comp_date)
!57 = !DIGlobalVariable(name: "bots_comp_message", scope: !0, file: !15, line: 57, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_comp_message)
!58 = !DIGlobalVariable(name: "bots_cc", scope: !0, file: !15, line: 58, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cc)
!59 = !DIGlobalVariable(name: "bots_cflags", scope: !0, file: !15, line: 59, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cflags)
!60 = !DIGlobalVariable(name: "bots_ld", scope: !0, file: !15, line: 60, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_ld)
!61 = !DIGlobalVariable(name: "bots_ldflags", scope: !0, file: !15, line: 61, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_ldflags)
!62 = !DIGlobalVariable(name: "bots_cutoff", scope: !0, file: !15, line: 62, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cutoff)
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!66 = !DILocation(line: 213, column: 11, scope: !14)
!67 = !DILocation(line: 213, column: 3, scope: !14)
!68 = !DILocation(line: 214, column: 11, scope: !14)
!69 = !DILocation(line: 214, column: 3, scope: !14)
!70 = !DILocation(line: 215, column: 11, scope: !14)
!71 = !DILocation(line: 215, column: 3, scope: !14)
!72 = !DILocation(line: 216, column: 11, scope: !14)
!73 = !DILocation(line: 216, column: 3, scope: !14)
!74 = !DILocation(line: 221, column: 11, scope: !14)
!75 = !DILocation(line: 221, column: 3, scope: !14)
!76 = !DILocation(line: 236, column: 11, scope: !14)
!77 = !DILocation(line: 236, column: 3, scope: !14)
!78 = !DILocation(line: 245, column: 11, scope: !14)
!79 = !DILocation(line: 245, column: 3, scope: !14)
!80 = !DILocation(line: 246, column: 11, scope: !14)
!81 = !DILocation(line: 246, column: 3, scope: !14)
!82 = !DILocation(line: 247, column: 11, scope: !14)
!83 = !DILocation(line: 247, column: 3, scope: !14)
!84 = !DILocation(line: 248, column: 11, scope: !14)
!85 = !DILocation(line: 248, column: 3, scope: !14)
!86 = !DILocation(line: 249, column: 11, scope: !14)
!87 = !DILocation(line: 249, column: 3, scope: !14)
!88 = !DILocation(line: 250, column: 11, scope: !14)
!89 = !DILocation(line: 250, column: 3, scope: !14)
!90 = !DILocation(line: 251, column: 11, scope: !14)
!91 = !DILocation(line: 251, column: 3, scope: !14)
!92 = !DILocation(line: 252, column: 11, scope: !14)
!93 = !DILocation(line: 252, column: 3, scope: !14)
!94 = !DILocation(line: 253, column: 11, scope: !14)
!95 = !DILocation(line: 253, column: 3, scope: !14)
!96 = !DILocation(line: 254, column: 11, scope: !14)
!97 = !DILocation(line: 254, column: 3, scope: !14)
!98 = !DILocation(line: 255, column: 11, scope: !14)
!99 = !DILocation(line: 255, column: 3, scope: !14)
!100 = !DILocation(line: 256, column: 11, scope: !14)
!101 = !DILocation(line: 256, column: 3, scope: !14)
!102 = !DILocation(line: 257, column: 11, scope: !14)
!103 = !DILocation(line: 257, column: 3, scope: !14)
!104 = !DILocation(line: 258, column: 11, scope: !14)
!105 = !DILocation(line: 258, column: 3, scope: !14)
!106 = !DILocation(line: 259, column: 11, scope: !14)
!107 = !DILocation(line: 259, column: 3, scope: !14)
!108 = !DILocation(line: 266, column: 11, scope: !14)
!109 = !DILocation(line: 266, column: 3, scope: !14)
!110 = !DILocation(line: 268, column: 11, scope: !14)
!111 = !DILocation(line: 268, column: 3, scope: !14)
!112 = !DILocation(line: 269, column: 11, scope: !14)
!113 = !DILocation(line: 269, column: 3, scope: !14)
!114 = !DILocation(line: 270, column: 11, scope: !14)
!115 = !DILocation(line: 270, column: 3, scope: !14)
!116 = !DILocation(line: 271, column: 1, scope: !14)
!117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !19, file: !15, line: 275, type: !22)
!118 = !DIExpression()
!119 = !DILocation(line: 275, column: 33, scope: !19)
!120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !19, file: !15, line: 275, type: !23)
!121 = !DILocation(line: 275, column: 46, scope: !19)
!122 = !DILocation(line: 277, column: 34, scope: !19)
!123 = !DILocation(line: 277, column: 25, scope: !19)
!124 = !DILocation(line: 277, column: 3, scope: !19)
!125 = !DILocation(line: 278, column: 3, scope: !19)
!126 = !DILocation(line: 279, column: 3, scope: !19)
!127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !19, file: !15, line: 276, type: !22)
!128 = !DILocation(line: 276, column: 7, scope: !19)
!129 = !DILocation(line: 280, column: 8, scope: !130)
!130 = distinct !DILexicalBlock(scope: !19, file: !15, line: 280, column: 3)
!131 = !DILocation(line: 280, column: 17, scope: !132)
!132 = distinct !DILexicalBlock(scope: !130, file: !15, line: 280, column: 3)
!133 = !DILocation(line: 280, column: 3, scope: !130)
!134 = !DILocation(line: 281, column: 9, scope: !135)
!135 = distinct !DILexicalBlock(scope: !136, file: !15, line: 281, column: 9)
!136 = distinct !DILexicalBlock(scope: !132, file: !15, line: 280, column: 30)
!137 = !DILocation(line: 281, column: 20, scope: !135)
!138 = !DILocation(line: 281, column: 9, scope: !136)
!139 = !DILocation(line: 282, column: 15, scope: !140)
!140 = distinct !DILexicalBlock(scope: !135, file: !15, line: 281, column: 28)
!141 = !DILocation(line: 282, column: 7, scope: !140)
!142 = !DILocation(line: 284, column: 9, scope: !143)
!143 = distinct !DILexicalBlock(scope: !140, file: !15, line: 282, column: 27)
!144 = !DILocation(line: 284, column: 20, scope: !143)
!145 = !DILocation(line: 285, column: 10, scope: !143)
!146 = !DILocation(line: 286, column: 18, scope: !147)
!147 = distinct !DILexicalBlock(scope: !143, file: !15, line: 286, column: 13)
!148 = !DILocation(line: 286, column: 13, scope: !143)
!149 = !DILocation(line: 287, column: 11, scope: !150)
!150 = distinct !DILexicalBlock(scope: !147, file: !15, line: 286, column: 24)
!151 = !DILocation(line: 288, column: 11, scope: !150)
!152 = !DILocation(line: 290, column: 33, scope: !143)
!153 = !DILocation(line: 290, column: 28, scope: !143)
!154 = !DILocation(line: 290, column: 26, scope: !143)
!155 = !DILocation(line: 291, column: 9, scope: !143)
!156 = !DILocation(line: 315, column: 9, scope: !143)
!157 = !DILocation(line: 315, column: 20, scope: !143)
!158 = !DILocation(line: 319, column: 25, scope: !143)
!159 = !DILocation(line: 320, column: 9, scope: !143)
!160 = !DILocation(line: 322, column: 9, scope: !143)
!161 = !DILocation(line: 322, column: 20, scope: !143)
!162 = !DILocation(line: 323, column: 10, scope: !143)
!163 = !DILocation(line: 324, column: 18, scope: !164)
!164 = distinct !DILexicalBlock(scope: !143, file: !15, line: 324, column: 13)
!165 = !DILocation(line: 324, column: 13, scope: !143)
!166 = !DILocation(line: 325, column: 11, scope: !167)
!167 = distinct !DILexicalBlock(scope: !164, file: !15, line: 324, column: 24)
!168 = !DILocation(line: 326, column: 11, scope: !167)
!169 = !DILocation(line: 328, column: 35, scope: !143)
!170 = !DILocation(line: 328, column: 9, scope: !143)
!171 = !DILocation(line: 329, column: 9, scope: !143)
!172 = !DILocation(line: 342, column: 9, scope: !143)
!173 = !DILocation(line: 342, column: 20, scope: !143)
!174 = !DILocation(line: 343, column: 9, scope: !143)
!175 = !DILocation(line: 344, column: 9, scope: !143)
!176 = !DILocation(line: 369, column: 9, scope: !143)
!177 = !DILocation(line: 369, column: 20, scope: !143)
!178 = !DILocation(line: 370, column: 10, scope: !143)
!179 = !DILocation(line: 371, column: 18, scope: !180)
!180 = distinct !DILexicalBlock(scope: !143, file: !15, line: 371, column: 13)
!181 = !DILocation(line: 371, column: 13, scope: !143)
!182 = !DILocation(line: 372, column: 11, scope: !183)
!183 = distinct !DILexicalBlock(scope: !180, file: !15, line: 371, column: 24)
!184 = !DILocation(line: 373, column: 11, scope: !183)
!185 = !DILocation(line: 375, column: 30, scope: !143)
!186 = !DILocation(line: 375, column: 25, scope: !143)
!187 = !DILocation(line: 375, column: 23, scope: !143)
!188 = !DILocation(line: 376, column: 9, scope: !143)
!189 = !DILocation(line: 382, column: 9, scope: !143)
!190 = !DILocation(line: 382, column: 20, scope: !143)
!191 = !DILocation(line: 383, column: 10, scope: !143)
!192 = !DILocation(line: 384, column: 18, scope: !193)
!193 = distinct !DILexicalBlock(scope: !143, file: !15, line: 384, column: 13)
!194 = !DILocation(line: 384, column: 13, scope: !143)
!195 = !DILocation(line: 385, column: 11, scope: !196)
!196 = distinct !DILexicalBlock(scope: !193, file: !15, line: 384, column: 24)
!197 = !DILocation(line: 386, column: 11, scope: !196)
!198 = !DILocation(line: 388, column: 35, scope: !143)
!199 = !DILocation(line: 388, column: 30, scope: !143)
!200 = !DILocation(line: 388, column: 28, scope: !143)
!201 = !DILocation(line: 389, column: 9, scope: !143)
!202 = !DILocation(line: 411, column: 9, scope: !143)
!203 = !DILocation(line: 411, column: 20, scope: !143)
!204 = !DILocation(line: 412, column: 10, scope: !143)
!205 = !DILocation(line: 413, column: 18, scope: !206)
!206 = distinct !DILexicalBlock(scope: !143, file: !15, line: 413, column: 13)
!207 = !DILocation(line: 413, column: 13, scope: !143)
!208 = !DILocation(line: 414, column: 11, scope: !209)
!209 = distinct !DILexicalBlock(scope: !206, file: !15, line: 413, column: 24)
!210 = !DILocation(line: 415, column: 11, scope: !209)
!211 = !DILocation(line: 417, column: 55, scope: !143)
!212 = !DILocation(line: 417, column: 50, scope: !143)
!213 = !DILocation(line: 417, column: 27, scope: !143)
!214 = !DILocation(line: 424, column: 9, scope: !143)
!215 = !DILocation(line: 438, column: 9, scope: !143)
!216 = !DILocation(line: 438, column: 20, scope: !143)
!217 = !DILocation(line: 439, column: 10, scope: !143)
!218 = !DILocation(line: 440, column: 18, scope: !219)
!219 = distinct !DILexicalBlock(scope: !143, file: !15, line: 440, column: 13)
!220 = !DILocation(line: 440, column: 13, scope: !143)
!221 = !DILocation(line: 441, column: 11, scope: !222)
!222 = distinct !DILexicalBlock(scope: !219, file: !15, line: 440, column: 24)
!223 = !DILocation(line: 442, column: 11, scope: !222)
!224 = !DILocation(line: 444, column: 38, scope: !143)
!225 = !DILocation(line: 444, column: 33, scope: !143)
!226 = !DILocation(line: 444, column: 31, scope: !143)
!227 = !DILocation(line: 445, column: 9, scope: !143)
!228 = !DILocation(line: 448, column: 9, scope: !143)
!229 = !DILocation(line: 448, column: 20, scope: !143)
!230 = !DILocation(line: 449, column: 27, scope: !143)
!231 = !DILocation(line: 450, column: 9, scope: !143)
!232 = !DILocation(line: 456, column: 17, scope: !143)
!233 = !DILocation(line: 456, column: 9, scope: !143)
!234 = !DILocation(line: 457, column: 9, scope: !143)
!235 = !DILocation(line: 458, column: 9, scope: !143)
!236 = !DILocation(line: 460, column: 5, scope: !140)
!237 = !DILocation(line: 465, column: 15, scope: !238)
!238 = distinct !DILexicalBlock(scope: !135, file: !15, line: 460, column: 12)
!239 = !DILocation(line: 465, column: 7, scope: !238)
!240 = !DILocation(line: 466, column: 7, scope: !238)
!241 = !DILocation(line: 467, column: 7, scope: !238)
!242 = !DILocation(line: 469, column: 3, scope: !136)
!243 = !DILocation(line: 280, column: 26, scope: !132)
!244 = !DILocation(line: 280, column: 3, scope: !132)
!245 = !DILocation(line: 470, column: 1, scope: !19)
!246 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !26, file: !15, line: 474, type: !22)
!247 = !DILocation(line: 474, column: 26, scope: !26)
!248 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !26, file: !15, line: 474, type: !23)
!249 = !DILocation(line: 474, column: 39, scope: !26)
!250 = !DILocation(line: 475, column: 3, scope: !26)
!251 = !DILocation(line: 477, column: 1, scope: !26)
!252 = !DILocation(line: 484, column: 3, scope: !27)
!253 = !DILocation(line: 485, column: 71, scope: !27)
!254 = !DILocation(line: 485, column: 3, scope: !27)
!255 = !DILocation(line: 486, column: 3, scope: !27)
!256 = !DILocation(line: 487, column: 3, scope: !27)
!257 = !DILocation(line: 490, column: 3, scope: !27)
!258 = !DILocation(line: 491, column: 3, scope: !27)
!259 = !DILocation(line: 492, column: 3, scope: !27)
!260 = !DILocation(line: 493, column: 3, scope: !27)
!261 = !DILocation(line: 494, column: 3, scope: !27)
!262 = !DILocation(line: 495, column: 3, scope: !27)
!263 = !DILocation(line: 504, column: 3, scope: !27)
!264 = !DILocation(line: 506, column: 1, scope: !27)
!265 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !28, file: !15, line: 511, type: !22)
!266 = !DILocation(line: 511, column: 14, scope: !28)
!267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !28, file: !15, line: 511, type: !23)
!268 = !DILocation(line: 511, column: 26, scope: !28)
!269 = !DILocation(line: 518, column: 3, scope: !28)
!270 = !DILocation(line: 519, column: 3, scope: !271)
!271 = distinct !DILexicalBlock(scope: !28, file: !15, line: 519, column: 3)
!272 = !DILocation(line: 519, column: 3, scope: !273)
!273 = !DILexicalBlockFile(scope: !271, file: !15, discriminator: 2)
!274 = !DILocation(line: 519, column: 3, scope: !28)
!275 = !DILocation(line: 519, column: 3, scope: !276)
!276 = !DILexicalBlockFile(scope: !277, file: !15, discriminator: 3)
!277 = !DILexicalBlockFile(scope: !278, file: !15, discriminator: 1)
!278 = distinct !DILexicalBlock(scope: !279, file: !15, line: 519, column: 3)
!279 = distinct !DILexicalBlock(scope: !280, file: !15, line: 519, column: 3)
!280 = distinct !DILexicalBlock(scope: !271, file: !15, line: 519, column: 3)
!281 = !DILocation(line: 519, column: 3, scope: !279)
!282 = !DILocation(line: 519, column: 3, scope: !283)
!283 = !DILexicalBlockFile(scope: !284, file: !15, discriminator: 5)
!284 = distinct !DILexicalBlock(scope: !278, file: !15, line: 519, column: 3)
!285 = !DILocation(line: 519, column: 3, scope: !286)
!286 = !DILexicalBlockFile(scope: !287, file: !15, discriminator: 7)
!287 = !DILexicalBlockFile(scope: !280, file: !15, discriminator: 6)
!288 = !DILocation(line: 519, column: 3, scope: !289)
!289 = !DILexicalBlockFile(scope: !28, file: !15, discriminator: 4)
!290 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "A", scope: !28, file: !15, line: 519, type: !11)
!291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "B", scope: !28, file: !15, line: 519, type: !11)
!292 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "C", scope: !28, file: !15, line: 519, type: !11)
!293 = !DILocation(line: 520, column: 3, scope: !28)
!294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ri", scope: !28, file: !15, line: 516, type: !22)
!295 = !DILocation(line: 516, column: 7, scope: !28)
!296 = !DILocation(line: 545, column: 8, scope: !297)
!297 = distinct !DILexicalBlock(scope: !28, file: !15, line: 545, column: 3)
!298 = !DILocation(line: 545, column: 21, scope: !299)
!299 = distinct !DILexicalBlock(scope: !297, file: !15, line: 545, column: 3)
!300 = !DILocation(line: 545, column: 19, scope: !299)
!301 = !DILocation(line: 545, column: 3, scope: !297)
!302 = !DILocation(line: 550, column: 20, scope: !303)
!303 = distinct !DILexicalBlock(scope: !299, file: !15, line: 545, column: 45)
!304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bots_t_start", scope: !28, file: !15, line: 513, type: !305)
!305 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!306 = !DILocation(line: 513, column: 8, scope: !28)
!307 = !DILocation(line: 551, column: 5, scope: !303)
!308 = !DILocation(line: 552, column: 18, scope: !303)
!309 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bots_t_end", scope: !28, file: !15, line: 514, type: !305)
!310 = !DILocation(line: 514, column: 8, scope: !28)
!311 = !DILocation(line: 553, column: 47, scope: !303)
!312 = !DILocation(line: 553, column: 27, scope: !303)
!313 = !DILocation(line: 553, column: 64, scope: !303)
!314 = !DILocation(line: 553, column: 23, scope: !303)
!315 = !DILocation(line: 556, column: 3, scope: !303)
!316 = !DILocation(line: 545, column: 39, scope: !299)
!317 = !DILocation(line: 545, column: 3, scope: !299)
!318 = !DILocation(line: 559, column: 7, scope: !319)
!319 = distinct !DILexicalBlock(scope: !28, file: !15, line: 559, column: 7)
!320 = !DILocation(line: 559, column: 7, scope: !28)
!321 = !DILocation(line: 560, column: 17, scope: !322)
!322 = distinct !DILexicalBlock(scope: !319, file: !15, line: 559, column: 24)
!323 = !DILocation(line: 561, column: 3, scope: !322)
!324 = !DILocation(line: 566, column: 3, scope: !28)
!325 = !DILocation(line: 567, column: 3, scope: !28)
