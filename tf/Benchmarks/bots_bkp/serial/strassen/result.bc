; ModuleID = '/home/gleison/tf/Benchmarks/bots/serial/strassen/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@bots_sequential_flag = global i32 0, align 4
@bots_check_flag = global i32 0, align 4
@bots_verbose_mode = global i32 1, align 4
@bots_result = global i32 3, align 4
@bots_output_format = global i32 1, align 4
@bots_print_header = global i32 0, align 4
@bots_repetitions = global i32 1, align 4
@bots_time_program = global double 0.000000e+00, align 8
@bots_time_sequential = global double 0.000000e+00, align 8
@bots_number_of_tasks = global i64 0, align 8
@bots_arg_size = global i32 1024, align 4
@bots_arg_block = global i32 32, align 4
@bots_app_cutoff_value = global i32 64, align 4
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Usage: %s -[options]\0A\00", align 1
@bots_execname = common global [256 x i8] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [20 x i8] c"Where options are:\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"  -n <size>  : Matrix Size\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"  -y <value> : Strassen Cutoff(default=%d)\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"  -r <value>   : Number of runs of each kernel.\0A\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"  -e <str>   : Include 'str' execution message.\0A\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"  -v <level> : Set verbose level (default = 1).\0A\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"               0 - none.\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"               1 - default.\0A\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"               2 - debug.\0A\00", align 1
@.str.11 = private unnamed_addr constant [54 x i8] c"  -o <value> : Set output format mode (default = 1).\0A\00", align 1
@.str.12 = private unnamed_addr constant [41 x i8] c"               0 - no benchmark output.\0A\00", align 1
@.str.13 = private unnamed_addr constant [42 x i8] c"               1 - detailed list format.\0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"               2 - detailed row format.\0A\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"               3 - abridged list format.\0A\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"               4 - abridged row format.\0A\00", align 1
@.str.17 = private unnamed_addr constant [70 x i8] c"  -z         : Print row header (if output format is a row variant).\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"  -c         : Check mode ON.\0A\00", align 1
@.str.19 = private unnamed_addr constant [51 x i8] c"  -h         : Print program's usage (this help).\0A\00", align 1
@bots_exec_date = common global [256 x i8] zeroinitializer, align 16
@bots_exec_message = common global [256 x i8] zeroinitializer, align 16
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Error: Unrecognized parameter.\0A\00", align 1
@bots_name = common global [256 x i8] zeroinitializer, align 16
@.str.22 = private unnamed_addr constant [9 x i8] c"Strassen\00", align 1
@bots_parameters = common global [256 x i8] zeroinitializer, align 16
@.str.23 = private unnamed_addr constant [10 x i8] c"N=%d:Y=%d\00", align 1
@bots_model = common global [256 x i8] zeroinitializer, align 16
@.str.24 = private unnamed_addr constant [7 x i8] c"Serial\00", align 1
@bots_resources = common global [256 x i8] zeroinitializer, align 16
@.str.25 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@bots_comp_date = common global [256 x i8] zeroinitializer, align 16
@bots_comp_message = common global [256 x i8] zeroinitializer, align 16
@bots_cc = common global [256 x i8] zeroinitializer, align 16
@bots_cflags = common global [256 x i8] zeroinitializer, align 16
@bots_ld = common global [256 x i8] zeroinitializer, align 16
@bots_ldflags = common global [256 x i8] zeroinitializer, align 16
@bots_cutoff = common global [256 x i8] zeroinitializer, align 16
@.str.26 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.27 = private unnamed_addr constant [67 x i8] c"Error: matrix size (%d) must be a power of 2 and a multiple of %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @bots_print_usage() #0 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !66
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !67
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !68
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_execname, i32 0, i32 0)), !dbg !69
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !70
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !71
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !72
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i32 0, i32 0)), !dbg !73
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !74
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0)), !dbg !75
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !76
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i32 64), !dbg !77
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !78
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !79
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !80
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i32 0, i32 0)), !dbg !81
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !82
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i32 0, i32 0)), !dbg !83
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !84
  %call9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i32 0, i32 0)), !dbg !85
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !86
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0)), !dbg !87
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !88
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i32 0, i32 0)), !dbg !89
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !90
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i32 0, i32 0)), !dbg !91
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !92
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11, i32 0, i32 0)), !dbg !93
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !94
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12, i32 0, i32 0)), !dbg !95
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !96
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i32 0, i32 0)), !dbg !97
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !98
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i32 0, i32 0)), !dbg !99
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !100
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i32 0, i32 0)), !dbg !101
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !102
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i32 0, i32 0)), !dbg !103
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !104
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.17, i32 0, i32 0)), !dbg !105
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !106
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !107
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !108
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)), !dbg !109
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !110
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !111
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !112
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19, i32 0, i32 0)), !dbg !113
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !114
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !115
  ret void, !dbg !116
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define void @bots_get_params_common(i32 %argc, i8** %argv) #0 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !117, metadata !118), !dbg !119
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !120, metadata !118), !dbg !121
  call void @llvm.dbg.declare(metadata i32* %i, metadata !122, metadata !118), !dbg !123
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !124
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !124
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !124
  %call = call i8* @__xpg_basename(i8* %1) #6, !dbg !125
  %call1 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_execname, i32 0, i32 0), i8* %call) #6, !dbg !126
  call void @bots_get_date(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_date, i32 0, i32 0)), !dbg !127
  %call2 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !128
  store i32 1, i32* %i, align 4, !dbg !129
  br label %for.cond, !dbg !131

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !132
  %3 = load i32, i32* %argc.addr, align 4, !dbg !136
  %cmp = icmp slt i32 %2, %3, !dbg !137
  br i1 %cmp, label %for.body, label %for.end, !dbg !138

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !139
  %idxprom = sext i32 %4 to i64, !dbg !142
  %5 = load i8**, i8*** %argv.addr, align 8, !dbg !142
  %arrayidx3 = getelementptr inbounds i8*, i8** %5, i64 %idxprom, !dbg !142
  %6 = load i8*, i8** %arrayidx3, align 8, !dbg !142
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 0, !dbg !142
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !142
  %conv = sext i8 %7 to i32, !dbg !142
  %cmp5 = icmp eq i32 %conv, 45, !dbg !143
  br i1 %cmp5, label %if.then, label %if.else, !dbg !144

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !145
  %idxprom7 = sext i32 %8 to i64, !dbg !147
  %9 = load i8**, i8*** %argv.addr, align 8, !dbg !147
  %arrayidx8 = getelementptr inbounds i8*, i8** %9, i64 %idxprom7, !dbg !147
  %10 = load i8*, i8** %arrayidx8, align 8, !dbg !147
  %arrayidx9 = getelementptr inbounds i8, i8* %10, i64 1, !dbg !147
  %11 = load i8, i8* %arrayidx9, align 1, !dbg !147
  %conv10 = sext i8 %11 to i32, !dbg !147
  switch i32 %conv10, label %sw.default [
    i32 114, label %sw.bb
    i32 99, label %sw.bb.20
    i32 101, label %sw.bb.24
    i32 104, label %sw.bb.36
    i32 110, label %sw.bb.40
    i32 111, label %sw.bb.52
    i32 118, label %sw.bb.64
    i32 121, label %sw.bb.76
    i32 122, label %sw.bb.88
  ], !dbg !148

sw.bb:                                            ; preds = %if.then
  %12 = load i32, i32* %i, align 4, !dbg !149
  %idxprom11 = sext i32 %12 to i64, !dbg !151
  %13 = load i8**, i8*** %argv.addr, align 8, !dbg !151
  %arrayidx12 = getelementptr inbounds i8*, i8** %13, i64 %idxprom11, !dbg !151
  %14 = load i8*, i8** %arrayidx12, align 8, !dbg !151
  %arrayidx13 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !151
  store i8 42, i8* %arrayidx13, align 1, !dbg !152
  %15 = load i32, i32* %i, align 4, !dbg !153
  %inc = add nsw i32 %15, 1, !dbg !153
  store i32 %inc, i32* %i, align 4, !dbg !153
  %16 = load i32, i32* %argc.addr, align 4, !dbg !154
  %17 = load i32, i32* %i, align 4, !dbg !156
  %cmp14 = icmp eq i32 %16, %17, !dbg !157
  br i1 %cmp14, label %if.then.16, label %if.end, !dbg !158

if.then.16:                                       ; preds = %sw.bb
  call void @bots_print_usage(), !dbg !159
  call void @exit(i32 100) #7, !dbg !161
  unreachable, !dbg !161

if.end:                                           ; preds = %sw.bb
  %18 = load i32, i32* %i, align 4, !dbg !162
  %idxprom17 = sext i32 %18 to i64, !dbg !163
  %19 = load i8**, i8*** %argv.addr, align 8, !dbg !163
  %arrayidx18 = getelementptr inbounds i8*, i8** %19, i64 %idxprom17, !dbg !163
  %20 = load i8*, i8** %arrayidx18, align 8, !dbg !163
  %call19 = call i32 @atoi(i8* %20) #8, !dbg !164
  store i32 %call19, i32* @bots_repetitions, align 4, !dbg !165
  br label %sw.epilog, !dbg !166

sw.bb.20:                                         ; preds = %if.then
  %21 = load i32, i32* %i, align 4, !dbg !167
  %idxprom21 = sext i32 %21 to i64, !dbg !168
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !168
  %arrayidx22 = getelementptr inbounds i8*, i8** %22, i64 %idxprom21, !dbg !168
  %23 = load i8*, i8** %arrayidx22, align 8, !dbg !168
  %arrayidx23 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !168
  store i8 42, i8* %arrayidx23, align 1, !dbg !169
  store i32 1, i32* @bots_check_flag, align 4, !dbg !170
  br label %sw.epilog, !dbg !171

sw.bb.24:                                         ; preds = %if.then
  %24 = load i32, i32* %i, align 4, !dbg !172
  %idxprom25 = sext i32 %24 to i64, !dbg !173
  %25 = load i8**, i8*** %argv.addr, align 8, !dbg !173
  %arrayidx26 = getelementptr inbounds i8*, i8** %25, i64 %idxprom25, !dbg !173
  %26 = load i8*, i8** %arrayidx26, align 8, !dbg !173
  %arrayidx27 = getelementptr inbounds i8, i8* %26, i64 1, !dbg !173
  store i8 42, i8* %arrayidx27, align 1, !dbg !174
  %27 = load i32, i32* %i, align 4, !dbg !175
  %inc28 = add nsw i32 %27, 1, !dbg !175
  store i32 %inc28, i32* %i, align 4, !dbg !175
  %28 = load i32, i32* %argc.addr, align 4, !dbg !176
  %29 = load i32, i32* %i, align 4, !dbg !178
  %cmp29 = icmp eq i32 %28, %29, !dbg !179
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !180

if.then.31:                                       ; preds = %sw.bb.24
  call void @bots_print_usage(), !dbg !181
  call void @exit(i32 100) #7, !dbg !183
  unreachable, !dbg !183

if.end.32:                                        ; preds = %sw.bb.24
  %30 = load i32, i32* %i, align 4, !dbg !184
  %idxprom33 = sext i32 %30 to i64, !dbg !185
  %31 = load i8**, i8*** %argv.addr, align 8, !dbg !185
  %arrayidx34 = getelementptr inbounds i8*, i8** %31, i64 %idxprom33, !dbg !185
  %32 = load i8*, i8** %arrayidx34, align 8, !dbg !185
  %call35 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_exec_message, i32 0, i32 0), i8* %32) #6, !dbg !186
  br label %sw.epilog, !dbg !187

sw.bb.36:                                         ; preds = %if.then
  %33 = load i32, i32* %i, align 4, !dbg !188
  %idxprom37 = sext i32 %33 to i64, !dbg !189
  %34 = load i8**, i8*** %argv.addr, align 8, !dbg !189
  %arrayidx38 = getelementptr inbounds i8*, i8** %34, i64 %idxprom37, !dbg !189
  %35 = load i8*, i8** %arrayidx38, align 8, !dbg !189
  %arrayidx39 = getelementptr inbounds i8, i8* %35, i64 1, !dbg !189
  store i8 42, i8* %arrayidx39, align 1, !dbg !190
  call void @bots_print_usage(), !dbg !191
  call void @exit(i32 100) #7, !dbg !192
  unreachable, !dbg !192

sw.bb.40:                                         ; preds = %if.then
  %36 = load i32, i32* %i, align 4, !dbg !193
  %idxprom41 = sext i32 %36 to i64, !dbg !194
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !194
  %arrayidx42 = getelementptr inbounds i8*, i8** %37, i64 %idxprom41, !dbg !194
  %38 = load i8*, i8** %arrayidx42, align 8, !dbg !194
  %arrayidx43 = getelementptr inbounds i8, i8* %38, i64 1, !dbg !194
  store i8 42, i8* %arrayidx43, align 1, !dbg !195
  %39 = load i32, i32* %i, align 4, !dbg !196
  %inc44 = add nsw i32 %39, 1, !dbg !196
  store i32 %inc44, i32* %i, align 4, !dbg !196
  %40 = load i32, i32* %argc.addr, align 4, !dbg !197
  %41 = load i32, i32* %i, align 4, !dbg !199
  %cmp45 = icmp eq i32 %40, %41, !dbg !200
  br i1 %cmp45, label %if.then.47, label %if.end.48, !dbg !201

if.then.47:                                       ; preds = %sw.bb.40
  call void @bots_print_usage(), !dbg !202
  call void @exit(i32 100) #7, !dbg !204
  unreachable, !dbg !204

if.end.48:                                        ; preds = %sw.bb.40
  %42 = load i32, i32* %i, align 4, !dbg !205
  %idxprom49 = sext i32 %42 to i64, !dbg !206
  %43 = load i8**, i8*** %argv.addr, align 8, !dbg !206
  %arrayidx50 = getelementptr inbounds i8*, i8** %43, i64 %idxprom49, !dbg !206
  %44 = load i8*, i8** %arrayidx50, align 8, !dbg !206
  %call51 = call i32 @atoi(i8* %44) #8, !dbg !207
  store i32 %call51, i32* @bots_arg_size, align 4, !dbg !208
  br label %sw.epilog, !dbg !209

sw.bb.52:                                         ; preds = %if.then
  %45 = load i32, i32* %i, align 4, !dbg !210
  %idxprom53 = sext i32 %45 to i64, !dbg !211
  %46 = load i8**, i8*** %argv.addr, align 8, !dbg !211
  %arrayidx54 = getelementptr inbounds i8*, i8** %46, i64 %idxprom53, !dbg !211
  %47 = load i8*, i8** %arrayidx54, align 8, !dbg !211
  %arrayidx55 = getelementptr inbounds i8, i8* %47, i64 1, !dbg !211
  store i8 42, i8* %arrayidx55, align 1, !dbg !212
  %48 = load i32, i32* %i, align 4, !dbg !213
  %inc56 = add nsw i32 %48, 1, !dbg !213
  store i32 %inc56, i32* %i, align 4, !dbg !213
  %49 = load i32, i32* %argc.addr, align 4, !dbg !214
  %50 = load i32, i32* %i, align 4, !dbg !216
  %cmp57 = icmp eq i32 %49, %50, !dbg !217
  br i1 %cmp57, label %if.then.59, label %if.end.60, !dbg !218

if.then.59:                                       ; preds = %sw.bb.52
  call void @bots_print_usage(), !dbg !219
  call void @exit(i32 100) #7, !dbg !221
  unreachable, !dbg !221

if.end.60:                                        ; preds = %sw.bb.52
  %51 = load i32, i32* %i, align 4, !dbg !222
  %idxprom61 = sext i32 %51 to i64, !dbg !223
  %52 = load i8**, i8*** %argv.addr, align 8, !dbg !223
  %arrayidx62 = getelementptr inbounds i8*, i8** %52, i64 %idxprom61, !dbg !223
  %53 = load i8*, i8** %arrayidx62, align 8, !dbg !223
  %call63 = call i32 @atoi(i8* %53) #8, !dbg !224
  store i32 %call63, i32* @bots_output_format, align 4, !dbg !225
  br label %sw.epilog, !dbg !226

sw.bb.64:                                         ; preds = %if.then
  %54 = load i32, i32* %i, align 4, !dbg !227
  %idxprom65 = sext i32 %54 to i64, !dbg !228
  %55 = load i8**, i8*** %argv.addr, align 8, !dbg !228
  %arrayidx66 = getelementptr inbounds i8*, i8** %55, i64 %idxprom65, !dbg !228
  %56 = load i8*, i8** %arrayidx66, align 8, !dbg !228
  %arrayidx67 = getelementptr inbounds i8, i8* %56, i64 1, !dbg !228
  store i8 42, i8* %arrayidx67, align 1, !dbg !229
  %57 = load i32, i32* %i, align 4, !dbg !230
  %inc68 = add nsw i32 %57, 1, !dbg !230
  store i32 %inc68, i32* %i, align 4, !dbg !230
  %58 = load i32, i32* %argc.addr, align 4, !dbg !231
  %59 = load i32, i32* %i, align 4, !dbg !233
  %cmp69 = icmp eq i32 %58, %59, !dbg !234
  br i1 %cmp69, label %if.then.71, label %if.end.72, !dbg !235

if.then.71:                                       ; preds = %sw.bb.64
  call void @bots_print_usage(), !dbg !236
  call void @exit(i32 100) #7, !dbg !238
  unreachable, !dbg !238

if.end.72:                                        ; preds = %sw.bb.64
  %60 = load i32, i32* %i, align 4, !dbg !239
  %idxprom73 = sext i32 %60 to i64, !dbg !240
  %61 = load i8**, i8*** %argv.addr, align 8, !dbg !240
  %arrayidx74 = getelementptr inbounds i8*, i8** %61, i64 %idxprom73, !dbg !240
  %62 = load i8*, i8** %arrayidx74, align 8, !dbg !240
  %call75 = call i32 @atoi(i8* %62) #8, !dbg !241
  store i32 %call75, i32* @bots_verbose_mode, align 4, !dbg !242
  br label %sw.epilog, !dbg !243

sw.bb.76:                                         ; preds = %if.then
  %63 = load i32, i32* %i, align 4, !dbg !244
  %idxprom77 = sext i32 %63 to i64, !dbg !245
  %64 = load i8**, i8*** %argv.addr, align 8, !dbg !245
  %arrayidx78 = getelementptr inbounds i8*, i8** %64, i64 %idxprom77, !dbg !245
  %65 = load i8*, i8** %arrayidx78, align 8, !dbg !245
  %arrayidx79 = getelementptr inbounds i8, i8* %65, i64 1, !dbg !245
  store i8 42, i8* %arrayidx79, align 1, !dbg !246
  %66 = load i32, i32* %i, align 4, !dbg !247
  %inc80 = add nsw i32 %66, 1, !dbg !247
  store i32 %inc80, i32* %i, align 4, !dbg !247
  %67 = load i32, i32* %argc.addr, align 4, !dbg !248
  %68 = load i32, i32* %i, align 4, !dbg !250
  %cmp81 = icmp eq i32 %67, %68, !dbg !251
  br i1 %cmp81, label %if.then.83, label %if.end.84, !dbg !252

if.then.83:                                       ; preds = %sw.bb.76
  call void @bots_print_usage(), !dbg !253
  call void @exit(i32 100) #7, !dbg !255
  unreachable, !dbg !255

if.end.84:                                        ; preds = %sw.bb.76
  %69 = load i32, i32* %i, align 4, !dbg !256
  %idxprom85 = sext i32 %69 to i64, !dbg !257
  %70 = load i8**, i8*** %argv.addr, align 8, !dbg !257
  %arrayidx86 = getelementptr inbounds i8*, i8** %70, i64 %idxprom85, !dbg !257
  %71 = load i8*, i8** %arrayidx86, align 8, !dbg !257
  %call87 = call i32 @atoi(i8* %71) #8, !dbg !258
  store i32 %call87, i32* @bots_app_cutoff_value, align 4, !dbg !259
  br label %sw.epilog, !dbg !260

sw.bb.88:                                         ; preds = %if.then
  %72 = load i32, i32* %i, align 4, !dbg !261
  %idxprom89 = sext i32 %72 to i64, !dbg !262
  %73 = load i8**, i8*** %argv.addr, align 8, !dbg !262
  %arrayidx90 = getelementptr inbounds i8*, i8** %73, i64 %idxprom89, !dbg !262
  %74 = load i8*, i8** %arrayidx90, align 8, !dbg !262
  %arrayidx91 = getelementptr inbounds i8, i8* %74, i64 1, !dbg !262
  store i8 42, i8* %arrayidx91, align 1, !dbg !263
  store i32 1, i32* @bots_print_header, align 4, !dbg !264
  br label %sw.epilog, !dbg !265

sw.default:                                       ; preds = %if.then
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !266
  %call92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %75, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !267
  call void @bots_print_usage(), !dbg !268
  call void @exit(i32 100) #7, !dbg !269
  unreachable, !dbg !269

sw.epilog:                                        ; preds = %sw.bb.88, %if.end.84, %if.end.72, %if.end.60, %if.end.48, %if.end.32, %sw.bb.20, %if.end
  br label %if.end.94, !dbg !270

if.else:                                          ; preds = %for.body
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !271
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i32 0, i32 0)), !dbg !273
  call void @bots_print_usage(), !dbg !274
  call void @exit(i32 100) #7, !dbg !275
  unreachable, !dbg !275

if.end.94:                                        ; preds = %sw.epilog
  br label %for.inc, !dbg !276

for.inc:                                          ; preds = %if.end.94
  %77 = load i32, i32* %i, align 4, !dbg !277
  %inc95 = add nsw i32 %77, 1, !dbg !277
  store i32 %inc95, i32* %i, align 4, !dbg !277
  br label %for.cond, !dbg !278

for.end:                                          ; preds = %for.cond
  ret void, !dbg !279
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind
declare i8* @__xpg_basename(i8*) #3

declare void @bots_get_date(i8*) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind uwtable
define void @bots_get_params(i32 %argc, i8** %argv) #0 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !280, metadata !118), !dbg !281
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !282, metadata !118), !dbg !283
  %0 = load i32, i32* %argc.addr, align 4, !dbg !284
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !285
  call void @bots_get_params_common(i32 %0, i8** %1), !dbg !286
  ret void, !dbg !287
}

; Function Attrs: nounwind uwtable
define void @bots_set_info() #0 {
entry:
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_name, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0)) #6, !dbg !288
  %0 = load i32, i32* @bots_arg_size, align 4, !dbg !289
  %1 = load i32, i32* @bots_app_cutoff_value, align 4, !dbg !289
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_parameters, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32 %0, i32 %1) #6, !dbg !290
  %call2 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_model, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i32 0, i32 0)) #6, !dbg !291
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_resources, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i32 1) #6, !dbg !292
  %call4 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_date, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !293
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_comp_message, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !294
  %call6 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cc, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !295
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cflags, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !296
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ld, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !297
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_ldflags, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0)) #6, !dbg !298
  %call10 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @bots_cutoff, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0)) #6, !dbg !299
  ret void, !dbg !300
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %bots_t_start = alloca i64, align 8
  %bots_t_end = alloca i64, align 8
  %ri = alloca i32, align 4
  %A = alloca double*, align 8
  %B = alloca double*, align 8
  %C = alloca double*, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !301, metadata !118), !dbg !302
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !303, metadata !118), !dbg !304
  call void @llvm.dbg.declare(metadata i64* %bots_t_start, metadata !305, metadata !118), !dbg !307
  call void @llvm.dbg.declare(metadata i64* %bots_t_end, metadata !308, metadata !118), !dbg !309
  call void @llvm.dbg.declare(metadata i32* %ri, metadata !310, metadata !118), !dbg !311
  %0 = load i32, i32* %argc.addr, align 4, !dbg !312
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !313
  call void @bots_get_params(i32 %0, i8** %1), !dbg !314
  call void @llvm.dbg.declare(metadata double** %A, metadata !315, metadata !118), !dbg !316
  call void @llvm.dbg.declare(metadata double** %B, metadata !317, metadata !118), !dbg !316
  call void @llvm.dbg.declare(metadata double** %C, metadata !318, metadata !118), !dbg !316
  %2 = load i32, i32* @bots_arg_size, align 4, !dbg !319
  %3 = load i32, i32* @bots_arg_size, align 4, !dbg !319
  %sub = sub nsw i32 %3, 1, !dbg !319
  %and = and i32 %2, %sub, !dbg !319
  %cmp = icmp ne i32 %and, 0, !dbg !319
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !319

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* @bots_arg_size, align 4, !dbg !321
  %rem = srem i32 %4, 16, !dbg !321
  %cmp1 = icmp ne i32 %rem, 0, !dbg !321
  br i1 %cmp1, label %if.then, label %if.end.4, !dbg !316

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* @bots_verbose_mode, align 4, !dbg !323
  %cmp2 = icmp uge i32 %5, 2, !dbg !323
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !329

if.then.3:                                        ; preds = %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !330
  %7 = load i32, i32* @bots_arg_size, align 4, !dbg !330
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.27, i32 0, i32 0), i32 %7, i32 16), !dbg !330
  br label %if.end, !dbg !330

if.end:                                           ; preds = %if.then.3, %if.then
  call void @exit(i32 1) #7, !dbg !333
  unreachable, !dbg !333

if.end.4:                                         ; preds = %lor.lhs.false
  %8 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %9 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %mul = mul nsw i32 %8, %9, !dbg !336
  %conv = sext i32 %mul to i64, !dbg !336
  %mul5 = mul i64 %conv, 8, !dbg !336
  %call6 = call noalias i8* @malloc(i64 %mul5) #6, !dbg !336
  %10 = bitcast i8* %call6 to double*, !dbg !336
  store double* %10, double** %A, align 8, !dbg !336
  %11 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %12 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %mul7 = mul nsw i32 %11, %12, !dbg !336
  %conv8 = sext i32 %mul7 to i64, !dbg !336
  %mul9 = mul i64 %conv8, 8, !dbg !336
  %call10 = call noalias i8* @malloc(i64 %mul9) #6, !dbg !336
  %13 = bitcast i8* %call10 to double*, !dbg !336
  store double* %13, double** %B, align 8, !dbg !336
  %14 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %15 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %mul11 = mul nsw i32 %14, %15, !dbg !336
  %conv12 = sext i32 %mul11 to i64, !dbg !336
  %mul13 = mul i64 %conv12, 8, !dbg !336
  %call14 = call noalias i8* @malloc(i64 %mul13) #6, !dbg !336
  %16 = bitcast i8* %call14 to double*, !dbg !336
  store double* %16, double** %C, align 8, !dbg !336
  %17 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %18 = load double*, double** %A, align 8, !dbg !336
  %19 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  call void @init_matrix(i32 %17, double* %18, i32 %19), !dbg !336
  %20 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  %21 = load double*, double** %B, align 8, !dbg !336
  %22 = load i32, i32* @bots_arg_size, align 4, !dbg !336
  call void @init_matrix(i32 %20, double* %21, i32 %22), !dbg !336
  call void @bots_set_info(), !dbg !338
  store i32 0, i32* %ri, align 4, !dbg !339
  br label %for.cond, !dbg !341

for.cond:                                         ; preds = %for.inc, %if.end.4
  %23 = load i32, i32* %ri, align 4, !dbg !342
  %24 = load i32, i32* @bots_repetitions, align 4, !dbg !346
  %cmp15 = icmp slt i32 %23, %24, !dbg !347
  br i1 %cmp15, label %for.body, label %for.end, !dbg !348

for.body:                                         ; preds = %for.cond
  %call17 = call i64 (...) @bots_usecs(), !dbg !349
  store i64 %call17, i64* %bots_t_start, align 8, !dbg !351
  %25 = load double*, double** %C, align 8, !dbg !352
  %26 = load double*, double** %A, align 8, !dbg !352
  %27 = load double*, double** %B, align 8, !dbg !352
  %28 = load i32, i32* @bots_arg_size, align 4, !dbg !352
  call void @strassen_main(double* %25, double* %26, double* %27, i32 %28), !dbg !352
  %call18 = call i64 (...) @bots_usecs(), !dbg !353
  store i64 %call18, i64* %bots_t_end, align 8, !dbg !354
  %29 = load i64, i64* %bots_t_end, align 8, !dbg !355
  %30 = load i64, i64* %bots_t_start, align 8, !dbg !356
  %sub19 = sub nsw i64 %29, %30, !dbg !357
  %conv20 = sitofp i64 %sub19 to double, !dbg !358
  %div = fdiv double %conv20, 1.000000e+06, !dbg !359
  %31 = load double, double* @bots_time_program, align 8, !dbg !360
  %add = fadd double %31, %div, !dbg !360
  store double %add, double* @bots_time_program, align 8, !dbg !360
  br label %for.inc, !dbg !361

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %ri, align 4, !dbg !362
  %inc = add nsw i32 %32, 1, !dbg !362
  store i32 %inc, i32* %ri, align 4, !dbg !362
  br label %for.cond, !dbg !363

for.end:                                          ; preds = %for.cond
  %33 = load i32, i32* @bots_check_flag, align 4, !dbg !364
  %tobool = icmp ne i32 %33, 0, !dbg !364
  br i1 %tobool, label %if.then.21, label %if.end.22, !dbg !366

if.then.21:                                       ; preds = %for.end
  store i32 0, i32* @bots_result, align 4, !dbg !367
  br label %if.end.22, !dbg !369

if.end.22:                                        ; preds = %if.then.21, %for.end
  call void @bots_print_results(), !dbg !370
  ret i32 0, !dbg !371
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

declare void @init_matrix(i32, double*, i32) #1

declare i64 @bots_usecs(...) #1

declare void @strassen_main(double*, double*, double*, i32) #1

declare void @bots_print_results() #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!63, !64}
!llvm.ident = !{!65}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !9, subprograms: !13, globals: !31)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/bots/serial/strassen")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 76, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./bots.h", directory: "/home/gleison/tf/Benchmarks/bots/serial/strassen")
!5 = !{!6, !7, !8}
!6 = !DIEnumerator(name: "BOTS_VERBOSE_NONE", value: 0)
!7 = !DIEnumerator(name: "BOTS_VERBOSE_DEFAULT", value: 1)
!8 = !DIEnumerator(name: "BOTS_VERBOSE_DEBUG", value: 2)
!9 = !{!10, !11, !12}
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "bots_verbose_mode_t", file: !4, line: 78, baseType: !3)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!13 = !{!14, !19, !26, !27, !28}
!14 = !DISubprogram(name: "bots_print_usage", scope: !15, file: !15, line: 212, type: !16, isLocal: false, isDefinition: true, scopeLine: 212, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @bots_print_usage, variables: !18)
!15 = !DIFile(filename: "/home/gleison/tf/Benchmarks/bots/serial/strassen/tmp.c", directory: "/home/gleison/tf/Benchmarks/bots/serial/strassen")
!16 = !DISubroutineType(types: !17)
!17 = !{null}
!18 = !{}
!19 = !DISubprogram(name: "bots_get_params_common", scope: !15, file: !15, line: 275, type: !20, isLocal: false, isDefinition: true, scopeLine: 275, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8**)* @bots_get_params_common, variables: !18)
!20 = !DISubroutineType(types: !21)
!21 = !{null, !22, !23}
!22 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!25 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!26 = !DISubprogram(name: "bots_get_params", scope: !15, file: !15, line: 474, type: !20, isLocal: false, isDefinition: true, scopeLine: 474, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8**)* @bots_get_params, variables: !18)
!27 = !DISubprogram(name: "bots_set_info", scope: !15, file: !15, line: 482, type: !16, isLocal: false, isDefinition: true, scopeLine: 482, isOptimized: false, function: void ()* @bots_set_info, variables: !18)
!28 = !DISubprogram(name: "main", scope: !15, file: !15, line: 511, type: !29, isLocal: false, isDefinition: true, scopeLine: 511, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !18)
!29 = !DISubroutineType(types: !30)
!30 = !{!22, !22, !23}
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !43, !44, !45, !46, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!32 = !DIGlobalVariable(name: "bots_sequential_flag", scope: !0, file: !15, line: 41, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_sequential_flag)
!33 = !DIGlobalVariable(name: "bots_check_flag", scope: !0, file: !15, line: 42, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_check_flag)
!34 = !DIGlobalVariable(name: "bots_verbose_mode", scope: !0, file: !15, line: 43, type: !10, isLocal: false, isDefinition: true, variable: i32* @bots_verbose_mode)
!35 = !DIGlobalVariable(name: "bots_result", scope: !0, file: !15, line: 44, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_result)
!36 = !DIGlobalVariable(name: "bots_output_format", scope: !0, file: !15, line: 45, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_output_format)
!37 = !DIGlobalVariable(name: "bots_print_header", scope: !0, file: !15, line: 46, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_print_header)
!38 = !DIGlobalVariable(name: "bots_repetitions", scope: !0, file: !15, line: 63, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_repetitions)
!39 = !DIGlobalVariable(name: "bots_time_program", scope: !0, file: !15, line: 66, type: !12, isLocal: false, isDefinition: true, variable: double* @bots_time_program)
!40 = !DIGlobalVariable(name: "bots_time_sequential", scope: !0, file: !15, line: 67, type: !12, isLocal: false, isDefinition: true, variable: double* @bots_time_sequential)
!41 = !DIGlobalVariable(name: "bots_number_of_tasks", scope: !0, file: !15, line: 68, type: !42, isLocal: false, isDefinition: true, variable: i64* @bots_number_of_tasks)
!42 = !DIBasicType(name: "long long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!43 = !DIGlobalVariable(name: "bots_arg_size", scope: !0, file: !15, line: 125, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_arg_size)
!44 = !DIGlobalVariable(name: "bots_arg_block", scope: !0, file: !15, line: 172, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_arg_block)
!45 = !DIGlobalVariable(name: "bots_app_cutoff_value", scope: !0, file: !15, line: 182, type: !22, isLocal: false, isDefinition: true, variable: i32* @bots_app_cutoff_value)
!46 = !DIGlobalVariable(name: "bots_name", scope: !0, file: !15, line: 48, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_name)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 2048, align: 8, elements: !48)
!48 = !{!49}
!49 = !DISubrange(count: 256)
!50 = !DIGlobalVariable(name: "bots_execname", scope: !0, file: !15, line: 49, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_execname)
!51 = !DIGlobalVariable(name: "bots_parameters", scope: !0, file: !15, line: 50, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_parameters)
!52 = !DIGlobalVariable(name: "bots_model", scope: !0, file: !15, line: 51, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_model)
!53 = !DIGlobalVariable(name: "bots_resources", scope: !0, file: !15, line: 52, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_resources)
!54 = !DIGlobalVariable(name: "bots_exec_date", scope: !0, file: !15, line: 54, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_exec_date)
!55 = !DIGlobalVariable(name: "bots_exec_message", scope: !0, file: !15, line: 55, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_exec_message)
!56 = !DIGlobalVariable(name: "bots_comp_date", scope: !0, file: !15, line: 56, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_comp_date)
!57 = !DIGlobalVariable(name: "bots_comp_message", scope: !0, file: !15, line: 57, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_comp_message)
!58 = !DIGlobalVariable(name: "bots_cc", scope: !0, file: !15, line: 58, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cc)
!59 = !DIGlobalVariable(name: "bots_cflags", scope: !0, file: !15, line: 59, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cflags)
!60 = !DIGlobalVariable(name: "bots_ld", scope: !0, file: !15, line: 60, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_ld)
!61 = !DIGlobalVariable(name: "bots_ldflags", scope: !0, file: !15, line: 61, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_ldflags)
!62 = !DIGlobalVariable(name: "bots_cutoff", scope: !0, file: !15, line: 62, type: !47, isLocal: false, isDefinition: true, variable: [256 x i8]* @bots_cutoff)
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!66 = !DILocation(line: 213, column: 11, scope: !14)
!67 = !DILocation(line: 213, column: 3, scope: !14)
!68 = !DILocation(line: 214, column: 11, scope: !14)
!69 = !DILocation(line: 214, column: 3, scope: !14)
!70 = !DILocation(line: 215, column: 11, scope: !14)
!71 = !DILocation(line: 215, column: 3, scope: !14)
!72 = !DILocation(line: 216, column: 11, scope: !14)
!73 = !DILocation(line: 216, column: 3, scope: !14)
!74 = !DILocation(line: 221, column: 11, scope: !14)
!75 = !DILocation(line: 221, column: 3, scope: !14)
!76 = !DILocation(line: 236, column: 11, scope: !14)
!77 = !DILocation(line: 236, column: 3, scope: !14)
!78 = !DILocation(line: 245, column: 11, scope: !14)
!79 = !DILocation(line: 245, column: 3, scope: !14)
!80 = !DILocation(line: 246, column: 11, scope: !14)
!81 = !DILocation(line: 246, column: 3, scope: !14)
!82 = !DILocation(line: 247, column: 11, scope: !14)
!83 = !DILocation(line: 247, column: 3, scope: !14)
!84 = !DILocation(line: 248, column: 11, scope: !14)
!85 = !DILocation(line: 248, column: 3, scope: !14)
!86 = !DILocation(line: 249, column: 11, scope: !14)
!87 = !DILocation(line: 249, column: 3, scope: !14)
!88 = !DILocation(line: 250, column: 11, scope: !14)
!89 = !DILocation(line: 250, column: 3, scope: !14)
!90 = !DILocation(line: 251, column: 11, scope: !14)
!91 = !DILocation(line: 251, column: 3, scope: !14)
!92 = !DILocation(line: 252, column: 11, scope: !14)
!93 = !DILocation(line: 252, column: 3, scope: !14)
!94 = !DILocation(line: 253, column: 11, scope: !14)
!95 = !DILocation(line: 253, column: 3, scope: !14)
!96 = !DILocation(line: 254, column: 11, scope: !14)
!97 = !DILocation(line: 254, column: 3, scope: !14)
!98 = !DILocation(line: 255, column: 11, scope: !14)
!99 = !DILocation(line: 255, column: 3, scope: !14)
!100 = !DILocation(line: 256, column: 11, scope: !14)
!101 = !DILocation(line: 256, column: 3, scope: !14)
!102 = !DILocation(line: 257, column: 11, scope: !14)
!103 = !DILocation(line: 257, column: 3, scope: !14)
!104 = !DILocation(line: 258, column: 11, scope: !14)
!105 = !DILocation(line: 258, column: 3, scope: !14)
!106 = !DILocation(line: 259, column: 11, scope: !14)
!107 = !DILocation(line: 259, column: 3, scope: !14)
!108 = !DILocation(line: 266, column: 11, scope: !14)
!109 = !DILocation(line: 266, column: 3, scope: !14)
!110 = !DILocation(line: 268, column: 11, scope: !14)
!111 = !DILocation(line: 268, column: 3, scope: !14)
!112 = !DILocation(line: 269, column: 11, scope: !14)
!113 = !DILocation(line: 269, column: 3, scope: !14)
!114 = !DILocation(line: 270, column: 11, scope: !14)
!115 = !DILocation(line: 270, column: 3, scope: !14)
!116 = !DILocation(line: 271, column: 1, scope: !14)
!117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !19, file: !15, line: 275, type: !22)
!118 = !DIExpression()
!119 = !DILocation(line: 275, column: 33, scope: !19)
!120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !19, file: !15, line: 275, type: !23)
!121 = !DILocation(line: 275, column: 46, scope: !19)
!122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !19, file: !15, line: 276, type: !22)
!123 = !DILocation(line: 276, column: 7, scope: !19)
!124 = !DILocation(line: 277, column: 34, scope: !19)
!125 = !DILocation(line: 277, column: 25, scope: !19)
!126 = !DILocation(line: 277, column: 3, scope: !19)
!127 = !DILocation(line: 278, column: 3, scope: !19)
!128 = !DILocation(line: 279, column: 3, scope: !19)
!129 = !DILocation(line: 280, column: 10, scope: !130)
!130 = distinct !DILexicalBlock(scope: !19, file: !15, line: 280, column: 3)
!131 = !DILocation(line: 280, column: 8, scope: !130)
!132 = !DILocation(line: 280, column: 15, scope: !133)
!133 = !DILexicalBlockFile(scope: !134, file: !15, discriminator: 2)
!134 = !DILexicalBlockFile(scope: !135, file: !15, discriminator: 1)
!135 = distinct !DILexicalBlock(scope: !130, file: !15, line: 280, column: 3)
!136 = !DILocation(line: 280, column: 19, scope: !135)
!137 = !DILocation(line: 280, column: 17, scope: !135)
!138 = !DILocation(line: 280, column: 3, scope: !130)
!139 = !DILocation(line: 281, column: 14, scope: !140)
!140 = distinct !DILexicalBlock(scope: !141, file: !15, line: 281, column: 9)
!141 = distinct !DILexicalBlock(scope: !135, file: !15, line: 280, column: 30)
!142 = !DILocation(line: 281, column: 9, scope: !140)
!143 = !DILocation(line: 281, column: 20, scope: !140)
!144 = !DILocation(line: 281, column: 9, scope: !141)
!145 = !DILocation(line: 282, column: 20, scope: !146)
!146 = distinct !DILexicalBlock(scope: !140, file: !15, line: 281, column: 28)
!147 = !DILocation(line: 282, column: 15, scope: !146)
!148 = !DILocation(line: 282, column: 7, scope: !146)
!149 = !DILocation(line: 284, column: 14, scope: !150)
!150 = distinct !DILexicalBlock(scope: !146, file: !15, line: 282, column: 27)
!151 = !DILocation(line: 284, column: 9, scope: !150)
!152 = !DILocation(line: 284, column: 20, scope: !150)
!153 = !DILocation(line: 285, column: 10, scope: !150)
!154 = !DILocation(line: 286, column: 13, scope: !155)
!155 = distinct !DILexicalBlock(scope: !150, file: !15, line: 286, column: 13)
!156 = !DILocation(line: 286, column: 21, scope: !155)
!157 = !DILocation(line: 286, column: 18, scope: !155)
!158 = !DILocation(line: 286, column: 13, scope: !150)
!159 = !DILocation(line: 287, column: 11, scope: !160)
!160 = distinct !DILexicalBlock(scope: !155, file: !15, line: 286, column: 24)
!161 = !DILocation(line: 288, column: 11, scope: !160)
!162 = !DILocation(line: 290, column: 38, scope: !150)
!163 = !DILocation(line: 290, column: 33, scope: !150)
!164 = !DILocation(line: 290, column: 28, scope: !150)
!165 = !DILocation(line: 290, column: 26, scope: !150)
!166 = !DILocation(line: 291, column: 9, scope: !150)
!167 = !DILocation(line: 315, column: 14, scope: !150)
!168 = !DILocation(line: 315, column: 9, scope: !150)
!169 = !DILocation(line: 315, column: 20, scope: !150)
!170 = !DILocation(line: 319, column: 25, scope: !150)
!171 = !DILocation(line: 320, column: 9, scope: !150)
!172 = !DILocation(line: 322, column: 14, scope: !150)
!173 = !DILocation(line: 322, column: 9, scope: !150)
!174 = !DILocation(line: 322, column: 20, scope: !150)
!175 = !DILocation(line: 323, column: 10, scope: !150)
!176 = !DILocation(line: 324, column: 13, scope: !177)
!177 = distinct !DILexicalBlock(scope: !150, file: !15, line: 324, column: 13)
!178 = !DILocation(line: 324, column: 21, scope: !177)
!179 = !DILocation(line: 324, column: 18, scope: !177)
!180 = !DILocation(line: 324, column: 13, scope: !150)
!181 = !DILocation(line: 325, column: 11, scope: !182)
!182 = distinct !DILexicalBlock(scope: !177, file: !15, line: 324, column: 24)
!183 = !DILocation(line: 326, column: 11, scope: !182)
!184 = !DILocation(line: 328, column: 40, scope: !150)
!185 = !DILocation(line: 328, column: 35, scope: !150)
!186 = !DILocation(line: 328, column: 9, scope: !150)
!187 = !DILocation(line: 329, column: 9, scope: !150)
!188 = !DILocation(line: 342, column: 14, scope: !150)
!189 = !DILocation(line: 342, column: 9, scope: !150)
!190 = !DILocation(line: 342, column: 20, scope: !150)
!191 = !DILocation(line: 343, column: 9, scope: !150)
!192 = !DILocation(line: 344, column: 9, scope: !150)
!193 = !DILocation(line: 369, column: 14, scope: !150)
!194 = !DILocation(line: 369, column: 9, scope: !150)
!195 = !DILocation(line: 369, column: 20, scope: !150)
!196 = !DILocation(line: 370, column: 10, scope: !150)
!197 = !DILocation(line: 371, column: 13, scope: !198)
!198 = distinct !DILexicalBlock(scope: !150, file: !15, line: 371, column: 13)
!199 = !DILocation(line: 371, column: 21, scope: !198)
!200 = !DILocation(line: 371, column: 18, scope: !198)
!201 = !DILocation(line: 371, column: 13, scope: !150)
!202 = !DILocation(line: 372, column: 11, scope: !203)
!203 = distinct !DILexicalBlock(scope: !198, file: !15, line: 371, column: 24)
!204 = !DILocation(line: 373, column: 11, scope: !203)
!205 = !DILocation(line: 375, column: 35, scope: !150)
!206 = !DILocation(line: 375, column: 30, scope: !150)
!207 = !DILocation(line: 375, column: 25, scope: !150)
!208 = !DILocation(line: 375, column: 23, scope: !150)
!209 = !DILocation(line: 376, column: 9, scope: !150)
!210 = !DILocation(line: 382, column: 14, scope: !150)
!211 = !DILocation(line: 382, column: 9, scope: !150)
!212 = !DILocation(line: 382, column: 20, scope: !150)
!213 = !DILocation(line: 383, column: 10, scope: !150)
!214 = !DILocation(line: 384, column: 13, scope: !215)
!215 = distinct !DILexicalBlock(scope: !150, file: !15, line: 384, column: 13)
!216 = !DILocation(line: 384, column: 21, scope: !215)
!217 = !DILocation(line: 384, column: 18, scope: !215)
!218 = !DILocation(line: 384, column: 13, scope: !150)
!219 = !DILocation(line: 385, column: 11, scope: !220)
!220 = distinct !DILexicalBlock(scope: !215, file: !15, line: 384, column: 24)
!221 = !DILocation(line: 386, column: 11, scope: !220)
!222 = !DILocation(line: 388, column: 40, scope: !150)
!223 = !DILocation(line: 388, column: 35, scope: !150)
!224 = !DILocation(line: 388, column: 30, scope: !150)
!225 = !DILocation(line: 388, column: 28, scope: !150)
!226 = !DILocation(line: 389, column: 9, scope: !150)
!227 = !DILocation(line: 411, column: 14, scope: !150)
!228 = !DILocation(line: 411, column: 9, scope: !150)
!229 = !DILocation(line: 411, column: 20, scope: !150)
!230 = !DILocation(line: 412, column: 10, scope: !150)
!231 = !DILocation(line: 413, column: 13, scope: !232)
!232 = distinct !DILexicalBlock(scope: !150, file: !15, line: 413, column: 13)
!233 = !DILocation(line: 413, column: 21, scope: !232)
!234 = !DILocation(line: 413, column: 18, scope: !232)
!235 = !DILocation(line: 413, column: 13, scope: !150)
!236 = !DILocation(line: 414, column: 11, scope: !237)
!237 = distinct !DILexicalBlock(scope: !232, file: !15, line: 413, column: 24)
!238 = !DILocation(line: 415, column: 11, scope: !237)
!239 = !DILocation(line: 417, column: 60, scope: !150)
!240 = !DILocation(line: 417, column: 55, scope: !150)
!241 = !DILocation(line: 417, column: 50, scope: !150)
!242 = !DILocation(line: 417, column: 27, scope: !150)
!243 = !DILocation(line: 424, column: 9, scope: !150)
!244 = !DILocation(line: 438, column: 14, scope: !150)
!245 = !DILocation(line: 438, column: 9, scope: !150)
!246 = !DILocation(line: 438, column: 20, scope: !150)
!247 = !DILocation(line: 439, column: 10, scope: !150)
!248 = !DILocation(line: 440, column: 13, scope: !249)
!249 = distinct !DILexicalBlock(scope: !150, file: !15, line: 440, column: 13)
!250 = !DILocation(line: 440, column: 21, scope: !249)
!251 = !DILocation(line: 440, column: 18, scope: !249)
!252 = !DILocation(line: 440, column: 13, scope: !150)
!253 = !DILocation(line: 441, column: 11, scope: !254)
!254 = distinct !DILexicalBlock(scope: !249, file: !15, line: 440, column: 24)
!255 = !DILocation(line: 442, column: 11, scope: !254)
!256 = !DILocation(line: 444, column: 43, scope: !150)
!257 = !DILocation(line: 444, column: 38, scope: !150)
!258 = !DILocation(line: 444, column: 33, scope: !150)
!259 = !DILocation(line: 444, column: 31, scope: !150)
!260 = !DILocation(line: 445, column: 9, scope: !150)
!261 = !DILocation(line: 448, column: 14, scope: !150)
!262 = !DILocation(line: 448, column: 9, scope: !150)
!263 = !DILocation(line: 448, column: 20, scope: !150)
!264 = !DILocation(line: 449, column: 27, scope: !150)
!265 = !DILocation(line: 450, column: 9, scope: !150)
!266 = !DILocation(line: 456, column: 17, scope: !150)
!267 = !DILocation(line: 456, column: 9, scope: !150)
!268 = !DILocation(line: 457, column: 9, scope: !150)
!269 = !DILocation(line: 458, column: 9, scope: !150)
!270 = !DILocation(line: 460, column: 5, scope: !146)
!271 = !DILocation(line: 465, column: 15, scope: !272)
!272 = distinct !DILexicalBlock(scope: !140, file: !15, line: 460, column: 12)
!273 = !DILocation(line: 465, column: 7, scope: !272)
!274 = !DILocation(line: 466, column: 7, scope: !272)
!275 = !DILocation(line: 467, column: 7, scope: !272)
!276 = !DILocation(line: 469, column: 3, scope: !141)
!277 = !DILocation(line: 280, column: 26, scope: !135)
!278 = !DILocation(line: 280, column: 3, scope: !135)
!279 = !DILocation(line: 470, column: 1, scope: !19)
!280 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !26, file: !15, line: 474, type: !22)
!281 = !DILocation(line: 474, column: 26, scope: !26)
!282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !26, file: !15, line: 474, type: !23)
!283 = !DILocation(line: 474, column: 39, scope: !26)
!284 = !DILocation(line: 475, column: 26, scope: !26)
!285 = !DILocation(line: 475, column: 32, scope: !26)
!286 = !DILocation(line: 475, column: 3, scope: !26)
!287 = !DILocation(line: 477, column: 1, scope: !26)
!288 = !DILocation(line: 484, column: 3, scope: !27)
!289 = !DILocation(line: 485, column: 71, scope: !27)
!290 = !DILocation(line: 485, column: 3, scope: !27)
!291 = !DILocation(line: 486, column: 3, scope: !27)
!292 = !DILocation(line: 487, column: 3, scope: !27)
!293 = !DILocation(line: 490, column: 3, scope: !27)
!294 = !DILocation(line: 491, column: 3, scope: !27)
!295 = !DILocation(line: 492, column: 3, scope: !27)
!296 = !DILocation(line: 493, column: 3, scope: !27)
!297 = !DILocation(line: 494, column: 3, scope: !27)
!298 = !DILocation(line: 495, column: 3, scope: !27)
!299 = !DILocation(line: 504, column: 3, scope: !27)
!300 = !DILocation(line: 506, column: 1, scope: !27)
!301 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !28, file: !15, line: 511, type: !22)
!302 = !DILocation(line: 511, column: 14, scope: !28)
!303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !28, file: !15, line: 511, type: !23)
!304 = !DILocation(line: 511, column: 26, scope: !28)
!305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bots_t_start", scope: !28, file: !15, line: 513, type: !306)
!306 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!307 = !DILocation(line: 513, column: 8, scope: !28)
!308 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bots_t_end", scope: !28, file: !15, line: 514, type: !306)
!309 = !DILocation(line: 514, column: 8, scope: !28)
!310 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ri", scope: !28, file: !15, line: 516, type: !22)
!311 = !DILocation(line: 516, column: 7, scope: !28)
!312 = !DILocation(line: 518, column: 19, scope: !28)
!313 = !DILocation(line: 518, column: 25, scope: !28)
!314 = !DILocation(line: 518, column: 3, scope: !28)
!315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "A", scope: !28, file: !15, line: 519, type: !11)
!316 = !DILocation(line: 519, column: 3, scope: !28)
!317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "B", scope: !28, file: !15, line: 519, type: !11)
!318 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "C", scope: !28, file: !15, line: 519, type: !11)
!319 = !DILocation(line: 519, column: 3, scope: !320)
!320 = distinct !DILexicalBlock(scope: !28, file: !15, line: 519, column: 3)
!321 = !DILocation(line: 519, column: 3, scope: !322)
!322 = !DILexicalBlockFile(scope: !320, file: !15, discriminator: 2)
!323 = !DILocation(line: 519, column: 3, scope: !324)
!324 = !DILexicalBlockFile(scope: !325, file: !15, discriminator: 3)
!325 = !DILexicalBlockFile(scope: !326, file: !15, discriminator: 1)
!326 = distinct !DILexicalBlock(scope: !327, file: !15, line: 519, column: 3)
!327 = distinct !DILexicalBlock(scope: !328, file: !15, line: 519, column: 3)
!328 = distinct !DILexicalBlock(scope: !320, file: !15, line: 519, column: 3)
!329 = !DILocation(line: 519, column: 3, scope: !327)
!330 = !DILocation(line: 519, column: 3, scope: !331)
!331 = !DILexicalBlockFile(scope: !332, file: !15, discriminator: 5)
!332 = distinct !DILexicalBlock(scope: !326, file: !15, line: 519, column: 3)
!333 = !DILocation(line: 519, column: 3, scope: !334)
!334 = !DILexicalBlockFile(scope: !335, file: !15, discriminator: 7)
!335 = !DILexicalBlockFile(scope: !328, file: !15, discriminator: 6)
!336 = !DILocation(line: 519, column: 3, scope: !337)
!337 = !DILexicalBlockFile(scope: !28, file: !15, discriminator: 4)
!338 = !DILocation(line: 520, column: 3, scope: !28)
!339 = !DILocation(line: 545, column: 11, scope: !340)
!340 = distinct !DILexicalBlock(scope: !28, file: !15, line: 545, column: 3)
!341 = !DILocation(line: 545, column: 8, scope: !340)
!342 = !DILocation(line: 545, column: 16, scope: !343)
!343 = !DILexicalBlockFile(scope: !344, file: !15, discriminator: 2)
!344 = !DILexicalBlockFile(scope: !345, file: !15, discriminator: 1)
!345 = distinct !DILexicalBlock(scope: !340, file: !15, line: 545, column: 3)
!346 = !DILocation(line: 545, column: 21, scope: !345)
!347 = !DILocation(line: 545, column: 19, scope: !345)
!348 = !DILocation(line: 545, column: 3, scope: !340)
!349 = !DILocation(line: 550, column: 20, scope: !350)
!350 = distinct !DILexicalBlock(scope: !345, file: !15, line: 545, column: 45)
!351 = !DILocation(line: 550, column: 18, scope: !350)
!352 = !DILocation(line: 551, column: 5, scope: !350)
!353 = !DILocation(line: 552, column: 18, scope: !350)
!354 = !DILocation(line: 552, column: 16, scope: !350)
!355 = !DILocation(line: 553, column: 36, scope: !350)
!356 = !DILocation(line: 553, column: 49, scope: !350)
!357 = !DILocation(line: 553, column: 47, scope: !350)
!358 = !DILocation(line: 553, column: 27, scope: !350)
!359 = !DILocation(line: 553, column: 64, scope: !350)
!360 = !DILocation(line: 553, column: 23, scope: !350)
!361 = !DILocation(line: 556, column: 3, scope: !350)
!362 = !DILocation(line: 545, column: 39, scope: !345)
!363 = !DILocation(line: 545, column: 3, scope: !345)
!364 = !DILocation(line: 559, column: 7, scope: !365)
!365 = distinct !DILexicalBlock(scope: !28, file: !15, line: 559, column: 7)
!366 = !DILocation(line: 559, column: 7, scope: !28)
!367 = !DILocation(line: 560, column: 17, scope: !368)
!368 = distinct !DILexicalBlock(scope: !365, file: !15, line: 559, column: 24)
!369 = !DILocation(line: 561, column: 3, scope: !368)
!370 = !DILocation(line: 566, column: 3, scope: !28)
!371 = !DILocation(line: 567, column: 3, scope: !28)
