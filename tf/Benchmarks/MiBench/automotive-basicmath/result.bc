; ModuleID = '/home/gleison/tf/Benchmarks/MiBench/automotive-basicmath/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define double @rad2deg(double %rad) #0 {
entry:
  %rad.addr = alloca double, align 8
  store double %rad, double* %rad.addr, align 8
  call void @llvm.dbg.declare(metadata double* %rad.addr, metadata !13, metadata !14), !dbg !15
  %0 = load double, double* %rad.addr, align 8, !dbg !16
  %mul = fmul double 1.800000e+02, %0, !dbg !17
  %call = call double @atan(double 1.000000e+00) #3, !dbg !18
  %mul1 = fmul double 4.000000e+00, %call, !dbg !18
  %div = fdiv double %mul, %mul1, !dbg !19
  ret double %div, !dbg !20
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare double @atan(double) #2

; Function Attrs: nounwind uwtable
define double @deg2rad(double %deg) #0 {
entry:
  %deg.addr = alloca double, align 8
  store double %deg, double* %deg.addr, align 8
  call void @llvm.dbg.declare(metadata double* %deg.addr, metadata !21, metadata !14), !dbg !22
  %call = call double @atan(double 1.000000e+00) #3, !dbg !23
  %mul = fmul double 4.000000e+00, %call, !dbg !23
  %0 = load double, double* %deg.addr, align 8, !dbg !24
  %mul1 = fmul double %mul, %0, !dbg !25
  %div = fdiv double %mul1, 1.800000e+02, !dbg !26
  ret double %div, !dbg !27
}

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10, !11}
!llvm.ident = !{!12}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/MiBench/automotive-basicmath")
!2 = !{}
!3 = !{!4, !9}
!4 = !DISubprogram(name: "rad2deg", scope: !5, file: !5, line: 13, type: !6, isLocal: false, isDefinition: true, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: false, function: double (double)* @rad2deg, variables: !2)
!5 = !DIFile(filename: "/home/gleison/tf/Benchmarks/MiBench/automotive-basicmath/tmp.c", directory: "/home/gleison/tf/Benchmarks/MiBench/automotive-basicmath")
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !8}
!8 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!9 = !DISubprogram(name: "deg2rad", scope: !5, file: !5, line: 17, type: !6, isLocal: false, isDefinition: true, scopeLine: 17, flags: DIFlagPrototyped, isOptimized: false, function: double (double)* @deg2rad, variables: !2)
!10 = !{i32 2, !"Dwarf Version", i32 4}
!11 = !{i32 2, !"Debug Info Version", i32 3}
!12 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!13 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rad", arg: 1, scope: !4, file: !5, line: 13, type: !8)
!14 = !DIExpression()
!15 = !DILocation(line: 13, column: 23, scope: !4)
!16 = !DILocation(line: 14, column: 19, scope: !4)
!17 = !DILocation(line: 14, column: 17, scope: !4)
!18 = !DILocation(line: 14, column: 26, scope: !4)
!19 = !DILocation(line: 14, column: 23, scope: !4)
!20 = !DILocation(line: 14, column: 3, scope: !4)
!21 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "deg", arg: 1, scope: !9, file: !5, line: 17, type: !8)
!22 = !DILocation(line: 17, column: 23, scope: !9)
!23 = !DILocation(line: 18, column: 11, scope: !9)
!24 = !DILocation(line: 18, column: 16, scope: !9)
!25 = !DILocation(line: 18, column: 14, scope: !9)
!26 = !DILocation(line: 18, column: 20, scope: !9)
!27 = !DILocation(line: 18, column: 3, scope: !9)
