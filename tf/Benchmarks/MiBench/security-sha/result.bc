; ModuleID = '/home/gleison/tf/Benchmarks/MiBench/security-sha/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.SHA_INFO = type { [5 x i32], i32, i32, [16 x i32] }

@stdin = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"error opening %s for reading\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %fin = alloca %struct._IO_FILE*, align 8
  %sha_info = alloca %struct.SHA_INFO, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !17, metadata !18), !dbg !19
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !20, metadata !18), !dbg !21
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fin, metadata !22, metadata !18), !dbg !82
  call void @llvm.dbg.declare(metadata %struct.SHA_INFO* %sha_info, metadata !83, metadata !18), !dbg !102
  %0 = load i32, i32* %argc.addr, align 4, !dbg !103
  %cmp = icmp slt i32 %0, 2, !dbg !105
  br i1 %cmp, label %if.then, label %if.else, !dbg !106

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !107
  store %struct._IO_FILE* %1, %struct._IO_FILE** %fin, align 8, !dbg !109
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 8, !dbg !110
  call void @sha_stream(%struct.SHA_INFO* %sha_info, %struct._IO_FILE* %2), !dbg !111
  call void @sha_print(%struct.SHA_INFO* %sha_info), !dbg !112
  br label %if.end.6, !dbg !113

if.else:                                          ; preds = %entry
  br label %while.cond, !dbg !114

while.cond:                                       ; preds = %if.end, %if.else
  %3 = load i32, i32* %argc.addr, align 4, !dbg !116
  %dec = add nsw i32 %3, -1, !dbg !116
  store i32 %dec, i32* %argc.addr, align 4, !dbg !116
  %tobool = icmp ne i32 %dec, 0, !dbg !114
  br i1 %tobool, label %while.body, label %while.end, !dbg !114

while.body:                                       ; preds = %while.cond
  %4 = load i8**, i8*** %argv.addr, align 8, !dbg !119
  %incdec.ptr = getelementptr inbounds i8*, i8** %4, i32 1, !dbg !119
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !119
  %5 = load i8*, i8** %incdec.ptr, align 8, !dbg !121
  %call = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !122
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fin, align 8, !dbg !123
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 8, !dbg !124
  %cmp1 = icmp eq %struct._IO_FILE* %6, null, !dbg !126
  br i1 %cmp1, label %if.then.2, label %if.else.4, !dbg !127

if.then.2:                                        ; preds = %while.body
  %7 = load i8**, i8*** %argv.addr, align 8, !dbg !128
  %8 = load i8*, i8** %7, align 8, !dbg !130
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i8* %8), !dbg !131
  br label %if.end, !dbg !132

if.else.4:                                        ; preds = %while.body
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 8, !dbg !133
  call void @sha_stream(%struct.SHA_INFO* %sha_info, %struct._IO_FILE* %9), !dbg !135
  call void @sha_print(%struct.SHA_INFO* %sha_info), !dbg !136
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fin, align 8, !dbg !137
  %call5 = call i32 @fclose(%struct._IO_FILE* %10), !dbg !138
  br label %if.end

if.end:                                           ; preds = %if.else.4, %if.then.2
  br label %while.cond, !dbg !114

while.end:                                        ; preds = %while.cond
  br label %if.end.6

if.end.6:                                         ; preds = %while.end, %if.then
  ret i32 0, !dbg !139
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @sha_stream(%struct.SHA_INFO*, %struct._IO_FILE*) #2

declare void @sha_print(%struct.SHA_INFO*) #2

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @printf(i8*, ...) #2

declare i32 @fclose(%struct._IO_FILE*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!14, !15}
!llvm.ident = !{!16}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !{!6}
!6 = !DISubprogram(name: "main", scope: !7, file: !7, line: 9, type: !8, isLocal: false, isDefinition: true, scopeLine: 9, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!7 = !DIFile(filename: "/home/gleison/tf/Benchmarks/MiBench/security-sha/tmp.c", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!8 = !DISubroutineType(types: !9)
!9 = !{!10, !10, !11}
!10 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!14 = !{i32 2, !"Dwarf Version", i32 4}
!15 = !{i32 2, !"Debug Info Version", i32 3}
!16 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!17 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !6, file: !7, line: 9, type: !10)
!18 = !DIExpression()
!19 = !DILocation(line: 9, column: 14, scope: !6)
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !6, file: !7, line: 9, type: !11)
!21 = !DILocation(line: 9, column: 27, scope: !6)
!22 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fin", scope: !6, file: !7, line: 10, type: !23)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !25, line: 48, baseType: !26)
!25 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!26 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !27, line: 241, size: 1728, align: 64, elements: !28)
!27 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!28 = !{!29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !49, !50, !51, !52, !56, !58, !60, !64, !67, !69, !70, !71, !72, !73, !77, !78}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !26, file: !27, line: 242, baseType: !10, size: 32, align: 32)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !26, file: !27, line: 247, baseType: !12, size: 64, align: 64, offset: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !26, file: !27, line: 248, baseType: !12, size: 64, align: 64, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !26, file: !27, line: 249, baseType: !12, size: 64, align: 64, offset: 192)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !26, file: !27, line: 250, baseType: !12, size: 64, align: 64, offset: 256)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !26, file: !27, line: 251, baseType: !12, size: 64, align: 64, offset: 320)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !26, file: !27, line: 252, baseType: !12, size: 64, align: 64, offset: 384)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !26, file: !27, line: 253, baseType: !12, size: 64, align: 64, offset: 448)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !26, file: !27, line: 254, baseType: !12, size: 64, align: 64, offset: 512)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !26, file: !27, line: 256, baseType: !12, size: 64, align: 64, offset: 576)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !26, file: !27, line: 257, baseType: !12, size: 64, align: 64, offset: 640)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !26, file: !27, line: 258, baseType: !12, size: 64, align: 64, offset: 704)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !26, file: !27, line: 260, baseType: !42, size: 64, align: 64, offset: 768)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!43 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !27, line: 156, size: 192, align: 64, elements: !44)
!44 = !{!45, !46, !48}
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !43, file: !27, line: 157, baseType: !42, size: 64, align: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !43, file: !27, line: 158, baseType: !47, size: 64, align: 64, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64, align: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !43, file: !27, line: 162, baseType: !10, size: 32, align: 32, offset: 128)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !26, file: !27, line: 262, baseType: !47, size: 64, align: 64, offset: 832)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !26, file: !27, line: 264, baseType: !10, size: 32, align: 32, offset: 896)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !26, file: !27, line: 268, baseType: !10, size: 32, align: 32, offset: 928)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !26, file: !27, line: 270, baseType: !53, size: 64, align: 64, offset: 960)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !54, line: 131, baseType: !55)
!54 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!55 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !26, file: !27, line: 274, baseType: !57, size: 16, align: 16, offset: 1024)
!57 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !26, file: !27, line: 275, baseType: !59, size: 8, align: 8, offset: 1040)
!59 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !26, file: !27, line: 276, baseType: !61, size: 8, align: 8, offset: 1048)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 8, align: 8, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 1)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !26, file: !27, line: 280, baseType: !65, size: 64, align: 64, offset: 1088)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !27, line: 150, baseType: null)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !26, file: !27, line: 289, baseType: !68, size: 64, align: 64, offset: 1152)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !54, line: 132, baseType: !55)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !26, file: !27, line: 297, baseType: !4, size: 64, align: 64, offset: 1216)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !26, file: !27, line: 298, baseType: !4, size: 64, align: 64, offset: 1280)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !26, file: !27, line: 299, baseType: !4, size: 64, align: 64, offset: 1344)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !26, file: !27, line: 300, baseType: !4, size: 64, align: 64, offset: 1408)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !26, file: !27, line: 302, baseType: !74, size: 64, align: 64, offset: 1472)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !75, line: 62, baseType: !76)
!75 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!76 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !26, file: !27, line: 303, baseType: !10, size: 32, align: 32, offset: 1536)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !26, file: !27, line: 305, baseType: !79, size: 160, align: 8, offset: 1568)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 160, align: 8, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 20)
!82 = !DILocation(line: 10, column: 9, scope: !6)
!83 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sha_info", scope: !6, file: !7, line: 11, type: !84)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "SHA_INFO", file: !85, line: 21, baseType: !86)
!85 = !DIFile(filename: "./sha.h", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!86 = !DICompositeType(tag: DW_TAG_structure_type, file: !85, line: 17, size: 736, align: 32, elements: !87)
!87 = !{!88, !96, !97, !98}
!88 = !DIDerivedType(tag: DW_TAG_member, name: "digest", scope: !86, file: !85, line: 18, baseType: !89, size: 160, align: 32)
!89 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 160, align: 32, elements: !94)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "LONG", file: !85, line: 12, baseType: !91)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !92, line: 51, baseType: !93)
!92 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gleison/tf/Benchmarks/MiBench/security-sha")
!93 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!94 = !{!95}
!95 = !DISubrange(count: 5)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "count_lo", scope: !86, file: !85, line: 19, baseType: !90, size: 32, align: 32, offset: 160)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "count_hi", scope: !86, file: !85, line: 19, baseType: !90, size: 32, align: 32, offset: 192)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !86, file: !85, line: 20, baseType: !99, size: 512, align: 32, offset: 224)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 512, align: 32, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 16)
!102 = !DILocation(line: 11, column: 12, scope: !6)
!103 = !DILocation(line: 13, column: 7, scope: !104)
!104 = distinct !DILexicalBlock(scope: !6, file: !7, line: 13, column: 7)
!105 = !DILocation(line: 13, column: 12, scope: !104)
!106 = !DILocation(line: 13, column: 7, scope: !6)
!107 = !DILocation(line: 14, column: 11, scope: !108)
!108 = distinct !DILexicalBlock(scope: !104, file: !7, line: 13, column: 17)
!109 = !DILocation(line: 14, column: 9, scope: !108)
!110 = !DILocation(line: 15, column: 27, scope: !108)
!111 = !DILocation(line: 15, column: 5, scope: !108)
!112 = !DILocation(line: 16, column: 5, scope: !108)
!113 = !DILocation(line: 17, column: 3, scope: !108)
!114 = !DILocation(line: 18, column: 5, scope: !115)
!115 = distinct !DILexicalBlock(scope: !104, file: !7, line: 17, column: 10)
!116 = !DILocation(line: 18, column: 12, scope: !117)
!117 = !DILexicalBlockFile(scope: !118, file: !7, discriminator: 2)
!118 = !DILexicalBlockFile(scope: !115, file: !7, discriminator: 1)
!119 = !DILocation(line: 19, column: 21, scope: !120)
!120 = distinct !DILexicalBlock(scope: !115, file: !7, line: 18, column: 20)
!121 = !DILocation(line: 19, column: 19, scope: !120)
!122 = !DILocation(line: 19, column: 13, scope: !120)
!123 = !DILocation(line: 19, column: 11, scope: !120)
!124 = !DILocation(line: 20, column: 11, scope: !125)
!125 = distinct !DILexicalBlock(scope: !120, file: !7, line: 20, column: 11)
!126 = !DILocation(line: 20, column: 15, scope: !125)
!127 = !DILocation(line: 20, column: 11, scope: !120)
!128 = !DILocation(line: 21, column: 51, scope: !129)
!129 = distinct !DILexicalBlock(scope: !125, file: !7, line: 20, column: 24)
!130 = !DILocation(line: 21, column: 50, scope: !129)
!131 = !DILocation(line: 21, column: 9, scope: !129)
!132 = !DILocation(line: 22, column: 7, scope: !129)
!133 = !DILocation(line: 23, column: 31, scope: !134)
!134 = distinct !DILexicalBlock(scope: !125, file: !7, line: 22, column: 14)
!135 = !DILocation(line: 23, column: 9, scope: !134)
!136 = !DILocation(line: 24, column: 9, scope: !134)
!137 = !DILocation(line: 25, column: 16, scope: !134)
!138 = !DILocation(line: 25, column: 9, scope: !134)
!139 = !DILocation(line: 29, column: 3, scope: !6)
