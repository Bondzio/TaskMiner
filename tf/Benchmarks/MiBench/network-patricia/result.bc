; ModuleID = '/home/gleison/tf/Benchmarks/MiBench/network-patricia/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.ptree = type { i64, %struct.ptree_mask*, i8, i8, %struct.ptree*, %struct.ptree* }
%struct.ptree_mask = type { i64, i8* }
%struct.in_addr = type { i32 }
%struct.MyNode = type { i32, double }

@.str = private unnamed_addr constant [24 x i8] c"Usage: %s <TCP stream>\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"File %s doesn't seem to exist\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"Allocating p-trie node\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Allocating p-trie mask data\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"Allocating p-trie mask's node data\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%f %d\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"%f %08x: \00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"Found.\0A\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.9 = private unnamed_addr constant [22 x i8] c"Failed on pat_insert\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %phead = alloca %struct.ptree*, align 8
  %p = alloca %struct.ptree*, align 8
  %pfind = alloca %struct.ptree*, align 8
  %pm = alloca %struct.ptree_mask*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %line = alloca [128 x i8], align 16
  %addr_str = alloca [16 x i8], align 16
  %addr = alloca %struct.in_addr, align 4
  %mask = alloca i64, align 8
  %time = alloca float, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !42, metadata !43), !dbg !44
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !45, metadata !43), !dbg !46
  call void @llvm.dbg.declare(metadata %struct.ptree** %phead, metadata !47, metadata !43), !dbg !48
  call void @llvm.dbg.declare(metadata %struct.ptree** %p, metadata !49, metadata !43), !dbg !50
  call void @llvm.dbg.declare(metadata %struct.ptree** %pfind, metadata !51, metadata !43), !dbg !52
  call void @llvm.dbg.declare(metadata %struct.ptree_mask** %pm, metadata !53, metadata !43), !dbg !54
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !55, metadata !43), !dbg !114
  call void @llvm.dbg.declare(metadata [128 x i8]* %line, metadata !115, metadata !43), !dbg !119
  call void @llvm.dbg.declare(metadata [16 x i8]* %addr_str, metadata !120, metadata !43), !dbg !124
  call void @llvm.dbg.declare(metadata %struct.in_addr* %addr, metadata !125, metadata !43), !dbg !133
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !134, metadata !43), !dbg !135
  store i64 4294967295, i64* %mask, align 8, !dbg !135
  call void @llvm.dbg.declare(metadata float* %time, metadata !136, metadata !43), !dbg !138
  %0 = load i32, i32* %argc.addr, align 4, !dbg !139
  %cmp = icmp slt i32 %0, 2, !dbg !141
  br i1 %cmp, label %if.then, label %if.end, !dbg !142

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !143
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 0, !dbg !143
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !143
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0), i8* %2), !dbg !145
  call void @exit(i32 -1) #7, !dbg !146
  unreachable, !dbg !146

if.end:                                           ; preds = %entry
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !147
  %arrayidx1 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !147
  %4 = load i8*, i8** %arrayidx1, align 8, !dbg !147
  %call2 = call %struct._IO_FILE* @fopen(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)), !dbg !149
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %fp, align 8, !dbg !150
  %cmp3 = icmp eq %struct._IO_FILE* %call2, null, !dbg !151
  br i1 %cmp3, label %if.then.4, label %if.end.7, !dbg !152

if.then.4:                                        ; preds = %if.end
  %5 = load i8**, i8*** %argv.addr, align 8, !dbg !153
  %arrayidx5 = getelementptr inbounds i8*, i8** %5, i64 1, !dbg !153
  %6 = load i8*, i8** %arrayidx5, align 8, !dbg !153
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i32 0, i32 0), i8* %6), !dbg !155
  call void @exit(i32 1) #7, !dbg !156
  unreachable, !dbg !156

if.end.7:                                         ; preds = %if.end
  %call8 = call noalias i8* @malloc(i64 40) #5, !dbg !157
  %7 = bitcast i8* %call8 to %struct.ptree*, !dbg !158
  store %struct.ptree* %7, %struct.ptree** %phead, align 8, !dbg !159
  %8 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !160
  %tobool = icmp ne %struct.ptree* %8, null, !dbg !160
  br i1 %tobool, label %if.end.10, label %if.then.9, !dbg !162

if.then.9:                                        ; preds = %if.end.7
  call void @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0)), !dbg !163
  call void @exit(i32 1) #7, !dbg !165
  unreachable, !dbg !165

if.end.10:                                        ; preds = %if.end.7
  %9 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !166
  %10 = bitcast %struct.ptree* %9 to i8*, !dbg !167
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 40, i32 8, i1 false), !dbg !167
  %call11 = call noalias i8* @malloc(i64 16) #5, !dbg !168
  %11 = bitcast i8* %call11 to %struct.ptree_mask*, !dbg !169
  %12 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !170
  %p_m = getelementptr inbounds %struct.ptree, %struct.ptree* %12, i32 0, i32 1, !dbg !171
  store %struct.ptree_mask* %11, %struct.ptree_mask** %p_m, align 8, !dbg !172
  %13 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !173
  %p_m12 = getelementptr inbounds %struct.ptree, %struct.ptree* %13, i32 0, i32 1, !dbg !175
  %14 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m12, align 8, !dbg !175
  %tobool13 = icmp ne %struct.ptree_mask* %14, null, !dbg !173
  br i1 %tobool13, label %if.end.15, label %if.then.14, !dbg !176

if.then.14:                                       ; preds = %if.end.10
  call void @perror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0)), !dbg !177
  call void @exit(i32 1) #7, !dbg !179
  unreachable, !dbg !179

if.end.15:                                        ; preds = %if.end.10
  %15 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !180
  %p_m16 = getelementptr inbounds %struct.ptree, %struct.ptree* %15, i32 0, i32 1, !dbg !181
  %16 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m16, align 8, !dbg !181
  %17 = bitcast %struct.ptree_mask* %16 to i8*, !dbg !182
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 16, i32 8, i1 false), !dbg !182
  %18 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !183
  %p_m17 = getelementptr inbounds %struct.ptree, %struct.ptree* %18, i32 0, i32 1, !dbg !184
  %19 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m17, align 8, !dbg !184
  store %struct.ptree_mask* %19, %struct.ptree_mask** %pm, align 8, !dbg !185
  %call18 = call noalias i8* @malloc(i64 16) #5, !dbg !186
  %20 = bitcast i8* %call18 to %struct.MyNode*, !dbg !187
  %21 = bitcast %struct.MyNode* %20 to i8*, !dbg !187
  %22 = load %struct.ptree_mask*, %struct.ptree_mask** %pm, align 8, !dbg !188
  %pm_data = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %22, i32 0, i32 1, !dbg !189
  store i8* %21, i8** %pm_data, align 8, !dbg !190
  %23 = load %struct.ptree_mask*, %struct.ptree_mask** %pm, align 8, !dbg !191
  %pm_data19 = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %23, i32 0, i32 1, !dbg !193
  %24 = load i8*, i8** %pm_data19, align 8, !dbg !193
  %tobool20 = icmp ne i8* %24, null, !dbg !191
  br i1 %tobool20, label %if.end.22, label %if.then.21, !dbg !194

if.then.21:                                       ; preds = %if.end.15
  call void @perror(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i32 0, i32 0)), !dbg !195
  call void @exit(i32 1) #7, !dbg !197
  unreachable, !dbg !197

if.end.22:                                        ; preds = %if.end.15
  %25 = load %struct.ptree_mask*, %struct.ptree_mask** %pm, align 8, !dbg !198
  %pm_data23 = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %25, i32 0, i32 1, !dbg !199
  %26 = load i8*, i8** %pm_data23, align 8, !dbg !199
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 1, i32 1, i1 false), !dbg !200
  %27 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !201
  %p_mlen = getelementptr inbounds %struct.ptree, %struct.ptree* %27, i32 0, i32 2, !dbg !202
  store i8 1, i8* %p_mlen, align 1, !dbg !203
  %28 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !204
  %29 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !205
  %p_right = getelementptr inbounds %struct.ptree, %struct.ptree* %29, i32 0, i32 5, !dbg !206
  store %struct.ptree* %28, %struct.ptree** %p_right, align 8, !dbg !207
  %30 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !208
  %p_left = getelementptr inbounds %struct.ptree, %struct.ptree* %30, i32 0, i32 4, !dbg !209
  store %struct.ptree* %28, %struct.ptree** %p_left, align 8, !dbg !210
  br label %while.cond, !dbg !211

while.cond:                                       ; preds = %if.end.69, %if.end.22
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %line, i32 0, i32 0, !dbg !212
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !215
  %call24 = call i8* @fgets(i8* %arraydecay, i32 128, %struct._IO_FILE* %31), !dbg !216
  %tobool25 = icmp ne i8* %call24, null, !dbg !211
  br i1 %tobool25, label %while.body, label %while.end, !dbg !211

while.body:                                       ; preds = %while.cond
  %arraydecay26 = getelementptr inbounds [128 x i8], [128 x i8]* %line, i32 0, i32 0, !dbg !217
  %32 = bitcast %struct.in_addr* %addr to i32*, !dbg !219
  %call27 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %arraydecay26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), float* %time, i32* %32) #5, !dbg !220
  %call28 = call noalias i8* @malloc(i64 40) #5, !dbg !221
  %33 = bitcast i8* %call28 to %struct.ptree*, !dbg !222
  store %struct.ptree* %33, %struct.ptree** %p, align 8, !dbg !223
  %34 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !224
  %tobool29 = icmp ne %struct.ptree* %34, null, !dbg !224
  br i1 %tobool29, label %if.end.31, label %if.then.30, !dbg !226

if.then.30:                                       ; preds = %while.body
  call void @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0)), !dbg !227
  call void @exit(i32 1) #7, !dbg !229
  unreachable, !dbg !229

if.end.31:                                        ; preds = %while.body
  %35 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !230
  %36 = bitcast %struct.ptree* %35 to i8*, !dbg !231
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 40, i32 8, i1 false), !dbg !231
  %call32 = call noalias i8* @malloc(i64 16) #5, !dbg !232
  %37 = bitcast i8* %call32 to %struct.ptree_mask*, !dbg !233
  %38 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !234
  %p_m33 = getelementptr inbounds %struct.ptree, %struct.ptree* %38, i32 0, i32 1, !dbg !235
  store %struct.ptree_mask* %37, %struct.ptree_mask** %p_m33, align 8, !dbg !236
  %39 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !237
  %p_m34 = getelementptr inbounds %struct.ptree, %struct.ptree* %39, i32 0, i32 1, !dbg !239
  %40 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m34, align 8, !dbg !239
  %tobool35 = icmp ne %struct.ptree_mask* %40, null, !dbg !237
  br i1 %tobool35, label %if.end.37, label %if.then.36, !dbg !240

if.then.36:                                       ; preds = %if.end.31
  call void @perror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0)), !dbg !241
  call void @exit(i32 1) #7, !dbg !243
  unreachable, !dbg !243

if.end.37:                                        ; preds = %if.end.31
  %41 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !244
  %p_m38 = getelementptr inbounds %struct.ptree, %struct.ptree* %41, i32 0, i32 1, !dbg !245
  %42 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m38, align 8, !dbg !245
  %43 = bitcast %struct.ptree_mask* %42 to i8*, !dbg !246
  call void @llvm.memset.p0i8.i64(i8* %43, i8 0, i64 16, i32 8, i1 false), !dbg !246
  %44 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !247
  %p_m39 = getelementptr inbounds %struct.ptree, %struct.ptree* %44, i32 0, i32 1, !dbg !248
  %45 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m39, align 8, !dbg !248
  store %struct.ptree_mask* %45, %struct.ptree_mask** %pm, align 8, !dbg !249
  %call40 = call noalias i8* @malloc(i64 16) #5, !dbg !250
  %46 = bitcast i8* %call40 to %struct.MyNode*, !dbg !251
  %47 = bitcast %struct.MyNode* %46 to i8*, !dbg !251
  %48 = load %struct.ptree_mask*, %struct.ptree_mask** %pm, align 8, !dbg !252
  %pm_data41 = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %48, i32 0, i32 1, !dbg !253
  store i8* %47, i8** %pm_data41, align 8, !dbg !254
  %49 = load %struct.ptree_mask*, %struct.ptree_mask** %pm, align 8, !dbg !255
  %pm_data42 = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %49, i32 0, i32 1, !dbg !257
  %50 = load i8*, i8** %pm_data42, align 8, !dbg !257
  %tobool43 = icmp ne i8* %50, null, !dbg !255
  br i1 %tobool43, label %if.end.45, label %if.then.44, !dbg !258

if.then.44:                                       ; preds = %if.end.37
  call void @perror(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i32 0, i32 0)), !dbg !259
  call void @exit(i32 1) #7, !dbg !261
  unreachable, !dbg !261

if.end.45:                                        ; preds = %if.end.37
  %51 = load %struct.ptree_mask*, %struct.ptree_mask** %pm, align 8, !dbg !262
  %pm_data46 = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %51, i32 0, i32 1, !dbg !263
  %52 = load i8*, i8** %pm_data46, align 8, !dbg !263
  call void @llvm.memset.p0i8.i64(i8* %52, i8 0, i64 1, i32 1, i1 false), !dbg !264
  %s_addr = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !dbg !265
  %53 = load i32, i32* %s_addr, align 4, !dbg !265
  %conv = zext i32 %53 to i64, !dbg !266
  %54 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !267
  %p_key = getelementptr inbounds %struct.ptree, %struct.ptree* %54, i32 0, i32 0, !dbg !268
  store i64 %conv, i64* %p_key, align 8, !dbg !269
  %55 = load i64, i64* %mask, align 8, !dbg !270
  %conv47 = trunc i64 %55 to i32, !dbg !270
  %call48 = call i32 @htonl(i32 %conv47) #1, !dbg !271
  %conv49 = zext i32 %call48 to i64, !dbg !271
  %56 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !272
  %p_m50 = getelementptr inbounds %struct.ptree, %struct.ptree* %56, i32 0, i32 1, !dbg !273
  %57 = load %struct.ptree_mask*, %struct.ptree_mask** %p_m50, align 8, !dbg !273
  %pm_mask = getelementptr inbounds %struct.ptree_mask, %struct.ptree_mask* %57, i32 0, i32 0, !dbg !274
  store i64 %conv49, i64* %pm_mask, align 8, !dbg !275
  %s_addr51 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !dbg !276
  %58 = load i32, i32* %s_addr51, align 4, !dbg !276
  %conv52 = zext i32 %58 to i64, !dbg !277
  %59 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !278
  %call53 = call %struct.ptree* @pat_search(i64 %conv52, %struct.ptree* %59), !dbg !279
  store %struct.ptree* %call53, %struct.ptree** %pfind, align 8, !dbg !280
  %60 = load %struct.ptree*, %struct.ptree** %pfind, align 8, !dbg !281
  %p_key54 = getelementptr inbounds %struct.ptree, %struct.ptree* %60, i32 0, i32 0, !dbg !283
  %61 = load i64, i64* %p_key54, align 8, !dbg !283
  %s_addr55 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !dbg !284
  %62 = load i32, i32* %s_addr55, align 4, !dbg !284
  %conv56 = zext i32 %62 to i64, !dbg !285
  %cmp57 = icmp eq i64 %61, %conv56, !dbg !286
  br i1 %cmp57, label %if.then.59, label %if.else, !dbg !287

if.then.59:                                       ; preds = %if.end.45
  %63 = load float, float* %time, align 4, !dbg !288
  %conv60 = fpext float %63 to double, !dbg !288
  %s_addr61 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %addr, i32 0, i32 0, !dbg !290
  %64 = load i32, i32* %s_addr61, align 4, !dbg !290
  %call62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), double %conv60, i32 %64), !dbg !291
  %call63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)), !dbg !292
  br label %if.end.65, !dbg !293

if.else:                                          ; preds = %if.end.45
  %65 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !294
  %66 = load %struct.ptree*, %struct.ptree** %phead, align 8, !dbg !296
  %call64 = call %struct.ptree* @pat_insert(%struct.ptree* %65, %struct.ptree* %66), !dbg !297
  store %struct.ptree* %call64, %struct.ptree** %p, align 8, !dbg !298
  br label %if.end.65

if.end.65:                                        ; preds = %if.else, %if.then.59
  %67 = load %struct.ptree*, %struct.ptree** %p, align 8, !dbg !299
  %tobool66 = icmp ne %struct.ptree* %67, null, !dbg !299
  br i1 %tobool66, label %if.end.69, label %if.then.67, !dbg !301

if.then.67:                                       ; preds = %if.end.65
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !302
  %call68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i32 0, i32 0)), !dbg !304
  call void @exit(i32 1) #7, !dbg !305
  unreachable, !dbg !305

if.end.69:                                        ; preds = %if.end.65
  br label %while.cond, !dbg !211

while.end:                                        ; preds = %while.cond
  call void @exit(i32 0) #7, !dbg !306
  unreachable, !dbg !306

return:                                           ; No predecessors!
  %69 = load i32, i32* %retval, !dbg !307
  ret i32 %69, !dbg !307
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

declare void @perror(i8*) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #5

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #4

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #6

declare %struct.ptree* @pat_search(i64, %struct.ptree*) #2

declare %struct.ptree* @pat_insert(%struct.ptree*, %struct.ptree*) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!39, !40}
!llvm.ident = !{!41}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !33)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!2 = !{}
!3 = !{!4, !5, !12, !23, !31}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptree", file: !7, line: 43, size: 320, align: 64, elements: !8)
!7 = !DIFile(filename: "./patricia.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!8 = !{!9, !11, !17, !19, !21, !22}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "p_key", scope: !6, file: !7, line: 44, baseType: !10, size: 64, align: 64)
!10 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "p_m", scope: !6, file: !7, line: 45, baseType: !12, size: 64, align: 64, offset: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptree_mask", file: !7, line: 34, size: 128, align: 64, elements: !14)
!14 = !{!15, !16}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "pm_mask", scope: !13, file: !7, line: 35, baseType: !10, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "pm_data", scope: !13, file: !7, line: 36, baseType: !4, size: 64, align: 64, offset: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "p_mlen", scope: !6, file: !7, line: 46, baseType: !18, size: 8, align: 8, offset: 128)
!18 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "p_b", scope: !6, file: !7, line: 47, baseType: !20, size: 8, align: 8, offset: 136)
!20 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "p_left", scope: !6, file: !7, line: 48, baseType: !5, size: 64, align: 64, offset: 192)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "p_right", scope: !6, file: !7, line: 49, baseType: !5, size: 64, align: 64, offset: 256)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!24 = !DICompositeType(tag: DW_TAG_structure_type, name: "MyNode", file: !25, line: 51, size: 128, align: 64, elements: !26)
!25 = !DIFile(filename: "/home/gleison/tf/Benchmarks/MiBench/network-patricia/tmp.c", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!26 = !{!27, !29}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !24, file: !25, line: 52, baseType: !28, size: 32, align: 32)
!28 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "bar", scope: !24, file: !25, line: 53, baseType: !30, size: 64, align: 64, offset: 64)
!30 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64, align: 64)
!32 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!33 = !{!34}
!34 = !DISubprogram(name: "main", scope: !25, file: !25, line: 56, type: !35, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!35 = !DISubroutineType(types: !36)
!36 = !{!28, !28, !37}
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!39 = !{i32 2, !"Dwarf Version", i32 4}
!40 = !{i32 2, !"Debug Info Version", i32 3}
!41 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!42 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !34, file: !25, line: 56, type: !28)
!43 = !DIExpression()
!44 = !DILocation(line: 56, column: 14, scope: !34)
!45 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !34, file: !25, line: 56, type: !37)
!46 = !DILocation(line: 56, column: 27, scope: !34)
!47 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "phead", scope: !34, file: !25, line: 57, type: !5)
!48 = !DILocation(line: 57, column: 17, scope: !34)
!49 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !34, file: !25, line: 58, type: !5)
!50 = !DILocation(line: 58, column: 17, scope: !34)
!51 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pfind", scope: !34, file: !25, line: 58, type: !5)
!52 = !DILocation(line: 58, column: 21, scope: !34)
!53 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pm", scope: !34, file: !25, line: 59, type: !12)
!54 = !DILocation(line: 59, column: 22, scope: !34)
!55 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !34, file: !25, line: 60, type: !56)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !58, line: 48, baseType: !59)
!58 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !60, line: 241, size: 1728, align: 64, elements: !61)
!60 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!61 = !{!62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !82, !83, !84, !85, !89, !91, !93, !97, !100, !102, !103, !104, !105, !106, !109, !110}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !59, file: !60, line: 242, baseType: !28, size: 32, align: 32)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !59, file: !60, line: 247, baseType: !38, size: 64, align: 64, offset: 64)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !59, file: !60, line: 248, baseType: !38, size: 64, align: 64, offset: 128)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !59, file: !60, line: 249, baseType: !38, size: 64, align: 64, offset: 192)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !59, file: !60, line: 250, baseType: !38, size: 64, align: 64, offset: 256)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !59, file: !60, line: 251, baseType: !38, size: 64, align: 64, offset: 320)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !59, file: !60, line: 252, baseType: !38, size: 64, align: 64, offset: 384)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !59, file: !60, line: 253, baseType: !38, size: 64, align: 64, offset: 448)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !59, file: !60, line: 254, baseType: !38, size: 64, align: 64, offset: 512)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !59, file: !60, line: 256, baseType: !38, size: 64, align: 64, offset: 576)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !59, file: !60, line: 257, baseType: !38, size: 64, align: 64, offset: 640)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !59, file: !60, line: 258, baseType: !38, size: 64, align: 64, offset: 704)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !59, file: !60, line: 260, baseType: !75, size: 64, align: 64, offset: 768)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64, align: 64)
!76 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !60, line: 156, size: 192, align: 64, elements: !77)
!77 = !{!78, !79, !81}
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !76, file: !60, line: 157, baseType: !75, size: 64, align: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !76, file: !60, line: 158, baseType: !80, size: 64, align: 64, offset: 64)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64, align: 64)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !76, file: !60, line: 162, baseType: !28, size: 32, align: 32, offset: 128)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !59, file: !60, line: 262, baseType: !80, size: 64, align: 64, offset: 832)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !59, file: !60, line: 264, baseType: !28, size: 32, align: 32, offset: 896)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !59, file: !60, line: 268, baseType: !28, size: 32, align: 32, offset: 928)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !59, file: !60, line: 270, baseType: !86, size: 64, align: 64, offset: 960)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !87, line: 131, baseType: !88)
!87 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!88 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !59, file: !60, line: 274, baseType: !90, size: 16, align: 16, offset: 1024)
!90 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !59, file: !60, line: 275, baseType: !92, size: 8, align: 8, offset: 1040)
!92 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !59, file: !60, line: 276, baseType: !94, size: 8, align: 8, offset: 1048)
!94 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 8, align: 8, elements: !95)
!95 = !{!96}
!96 = !DISubrange(count: 1)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !59, file: !60, line: 280, baseType: !98, size: 64, align: 64, offset: 1088)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64, align: 64)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !60, line: 150, baseType: null)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !59, file: !60, line: 289, baseType: !101, size: 64, align: 64, offset: 1152)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !87, line: 132, baseType: !88)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !59, file: !60, line: 297, baseType: !4, size: 64, align: 64, offset: 1216)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !59, file: !60, line: 298, baseType: !4, size: 64, align: 64, offset: 1280)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !59, file: !60, line: 299, baseType: !4, size: 64, align: 64, offset: 1344)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !59, file: !60, line: 300, baseType: !4, size: 64, align: 64, offset: 1408)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !59, file: !60, line: 302, baseType: !107, size: 64, align: 64, offset: 1472)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !108, line: 62, baseType: !10)
!108 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!109 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !59, file: !60, line: 303, baseType: !28, size: 32, align: 32, offset: 1536)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !59, file: !60, line: 305, baseType: !111, size: 160, align: 8, offset: 1568)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 160, align: 8, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 20)
!114 = !DILocation(line: 60, column: 9, scope: !34)
!115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "line", scope: !34, file: !25, line: 61, type: !116)
!116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 1024, align: 8, elements: !117)
!117 = !{!118}
!118 = !DISubrange(count: 128)
!119 = !DILocation(line: 61, column: 8, scope: !34)
!120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "addr_str", scope: !34, file: !25, line: 62, type: !121)
!121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 128, align: 8, elements: !122)
!122 = !{!123}
!123 = !DISubrange(count: 16)
!124 = !DILocation(line: 62, column: 8, scope: !34)
!125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "addr", scope: !34, file: !25, line: 63, type: !126)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !127, line: 31, size: 32, align: 32, elements: !128)
!127 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!128 = !{!129}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !126, file: !127, line: 33, baseType: !130, size: 32, align: 32)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !127, line: 30, baseType: !131)
!131 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !132, line: 51, baseType: !32)
!132 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gleison/tf/Benchmarks/MiBench/network-patricia")
!133 = !DILocation(line: 63, column: 18, scope: !34)
!134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mask", scope: !34, file: !25, line: 64, type: !10)
!135 = !DILocation(line: 64, column: 17, scope: !34)
!136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !34, file: !25, line: 65, type: !137)
!137 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!138 = !DILocation(line: 65, column: 9, scope: !34)
!139 = !DILocation(line: 67, column: 7, scope: !140)
!140 = distinct !DILexicalBlock(scope: !34, file: !25, line: 67, column: 7)
!141 = !DILocation(line: 67, column: 12, scope: !140)
!142 = !DILocation(line: 67, column: 7, scope: !34)
!143 = !DILocation(line: 68, column: 40, scope: !144)
!144 = distinct !DILexicalBlock(scope: !140, file: !25, line: 67, column: 17)
!145 = !DILocation(line: 68, column: 5, scope: !144)
!146 = !DILocation(line: 69, column: 5, scope: !144)
!147 = !DILocation(line: 76, column: 19, scope: !148)
!148 = distinct !DILexicalBlock(scope: !34, file: !25, line: 76, column: 7)
!149 = !DILocation(line: 76, column: 13, scope: !148)
!150 = !DILocation(line: 76, column: 11, scope: !148)
!151 = !DILocation(line: 76, column: 34, scope: !148)
!152 = !DILocation(line: 76, column: 7, scope: !34)
!153 = !DILocation(line: 77, column: 47, scope: !154)
!154 = distinct !DILexicalBlock(scope: !148, file: !25, line: 76, column: 43)
!155 = !DILocation(line: 77, column: 5, scope: !154)
!156 = !DILocation(line: 78, column: 5, scope: !154)
!157 = !DILocation(line: 91, column: 27, scope: !34)
!158 = !DILocation(line: 91, column: 11, scope: !34)
!159 = !DILocation(line: 91, column: 9, scope: !34)
!160 = !DILocation(line: 92, column: 8, scope: !161)
!161 = distinct !DILexicalBlock(scope: !34, file: !25, line: 92, column: 7)
!162 = !DILocation(line: 92, column: 7, scope: !34)
!163 = !DILocation(line: 93, column: 5, scope: !164)
!164 = distinct !DILexicalBlock(scope: !161, file: !25, line: 92, column: 15)
!165 = !DILocation(line: 94, column: 5, scope: !164)
!166 = !DILocation(line: 96, column: 9, scope: !34)
!167 = !DILocation(line: 96, column: 3, scope: !34)
!168 = !DILocation(line: 97, column: 37, scope: !34)
!169 = !DILocation(line: 97, column: 16, scope: !34)
!170 = !DILocation(line: 97, column: 3, scope: !34)
!171 = !DILocation(line: 97, column: 10, scope: !34)
!172 = !DILocation(line: 97, column: 14, scope: !34)
!173 = !DILocation(line: 99, column: 8, scope: !174)
!174 = distinct !DILexicalBlock(scope: !34, file: !25, line: 99, column: 7)
!175 = !DILocation(line: 99, column: 15, scope: !174)
!176 = !DILocation(line: 99, column: 7, scope: !34)
!177 = !DILocation(line: 100, column: 5, scope: !178)
!178 = distinct !DILexicalBlock(scope: !174, file: !25, line: 99, column: 20)
!179 = !DILocation(line: 101, column: 5, scope: !178)
!180 = !DILocation(line: 103, column: 9, scope: !34)
!181 = !DILocation(line: 103, column: 16, scope: !34)
!182 = !DILocation(line: 103, column: 3, scope: !34)
!183 = !DILocation(line: 104, column: 8, scope: !34)
!184 = !DILocation(line: 104, column: 15, scope: !34)
!185 = !DILocation(line: 104, column: 6, scope: !34)
!186 = !DILocation(line: 105, column: 34, scope: !34)
!187 = !DILocation(line: 105, column: 17, scope: !34)
!188 = !DILocation(line: 105, column: 3, scope: !34)
!189 = !DILocation(line: 105, column: 7, scope: !34)
!190 = !DILocation(line: 105, column: 15, scope: !34)
!191 = !DILocation(line: 106, column: 8, scope: !192)
!192 = distinct !DILexicalBlock(scope: !34, file: !25, line: 106, column: 7)
!193 = !DILocation(line: 106, column: 12, scope: !192)
!194 = !DILocation(line: 106, column: 7, scope: !34)
!195 = !DILocation(line: 107, column: 5, scope: !196)
!196 = distinct !DILexicalBlock(scope: !192, file: !25, line: 106, column: 21)
!197 = !DILocation(line: 108, column: 5, scope: !196)
!198 = !DILocation(line: 110, column: 9, scope: !34)
!199 = !DILocation(line: 110, column: 13, scope: !34)
!200 = !DILocation(line: 110, column: 3, scope: !34)
!201 = !DILocation(line: 116, column: 3, scope: !34)
!202 = !DILocation(line: 116, column: 10, scope: !34)
!203 = !DILocation(line: 116, column: 17, scope: !34)
!204 = !DILocation(line: 117, column: 36, scope: !34)
!205 = !DILocation(line: 117, column: 19, scope: !34)
!206 = !DILocation(line: 117, column: 26, scope: !34)
!207 = !DILocation(line: 117, column: 34, scope: !34)
!208 = !DILocation(line: 117, column: 3, scope: !34)
!209 = !DILocation(line: 117, column: 10, scope: !34)
!210 = !DILocation(line: 117, column: 17, scope: !34)
!211 = !DILocation(line: 122, column: 3, scope: !34)
!212 = !DILocation(line: 122, column: 16, scope: !213)
!213 = !DILexicalBlockFile(scope: !214, file: !25, discriminator: 2)
!214 = !DILexicalBlockFile(scope: !34, file: !25, discriminator: 1)
!215 = !DILocation(line: 122, column: 27, scope: !34)
!216 = !DILocation(line: 122, column: 10, scope: !34)
!217 = !DILocation(line: 127, column: 12, scope: !218)
!218 = distinct !DILexicalBlock(scope: !34, file: !25, line: 122, column: 32)
!219 = !DILocation(line: 127, column: 34, scope: !218)
!220 = !DILocation(line: 127, column: 5, scope: !218)
!221 = !DILocation(line: 133, column: 25, scope: !218)
!222 = !DILocation(line: 133, column: 9, scope: !218)
!223 = !DILocation(line: 133, column: 7, scope: !218)
!224 = !DILocation(line: 134, column: 10, scope: !225)
!225 = distinct !DILexicalBlock(scope: !218, file: !25, line: 134, column: 9)
!226 = !DILocation(line: 134, column: 9, scope: !218)
!227 = !DILocation(line: 135, column: 7, scope: !228)
!228 = distinct !DILexicalBlock(scope: !225, file: !25, line: 134, column: 13)
!229 = !DILocation(line: 136, column: 7, scope: !228)
!230 = !DILocation(line: 138, column: 11, scope: !218)
!231 = !DILocation(line: 138, column: 5, scope: !218)
!232 = !DILocation(line: 143, column: 35, scope: !218)
!233 = !DILocation(line: 143, column: 14, scope: !218)
!234 = !DILocation(line: 143, column: 5, scope: !218)
!235 = !DILocation(line: 143, column: 8, scope: !218)
!236 = !DILocation(line: 143, column: 12, scope: !218)
!237 = !DILocation(line: 145, column: 10, scope: !238)
!238 = distinct !DILexicalBlock(scope: !218, file: !25, line: 145, column: 9)
!239 = !DILocation(line: 145, column: 13, scope: !238)
!240 = !DILocation(line: 145, column: 9, scope: !218)
!241 = !DILocation(line: 146, column: 7, scope: !242)
!242 = distinct !DILexicalBlock(scope: !238, file: !25, line: 145, column: 18)
!243 = !DILocation(line: 147, column: 7, scope: !242)
!244 = !DILocation(line: 149, column: 11, scope: !218)
!245 = !DILocation(line: 149, column: 14, scope: !218)
!246 = !DILocation(line: 149, column: 5, scope: !218)
!247 = !DILocation(line: 155, column: 10, scope: !218)
!248 = !DILocation(line: 155, column: 13, scope: !218)
!249 = !DILocation(line: 155, column: 8, scope: !218)
!250 = !DILocation(line: 156, column: 36, scope: !218)
!251 = !DILocation(line: 156, column: 19, scope: !218)
!252 = !DILocation(line: 156, column: 5, scope: !218)
!253 = !DILocation(line: 156, column: 9, scope: !218)
!254 = !DILocation(line: 156, column: 17, scope: !218)
!255 = !DILocation(line: 157, column: 10, scope: !256)
!256 = distinct !DILexicalBlock(scope: !218, file: !25, line: 157, column: 9)
!257 = !DILocation(line: 157, column: 14, scope: !256)
!258 = !DILocation(line: 157, column: 9, scope: !218)
!259 = !DILocation(line: 158, column: 7, scope: !260)
!260 = distinct !DILexicalBlock(scope: !256, file: !25, line: 157, column: 23)
!261 = !DILocation(line: 159, column: 7, scope: !260)
!262 = !DILocation(line: 161, column: 11, scope: !218)
!263 = !DILocation(line: 161, column: 15, scope: !218)
!264 = !DILocation(line: 161, column: 5, scope: !218)
!265 = !DILocation(line: 167, column: 21, scope: !218)
!266 = !DILocation(line: 167, column: 16, scope: !218)
!267 = !DILocation(line: 167, column: 5, scope: !218)
!268 = !DILocation(line: 167, column: 8, scope: !218)
!269 = !DILocation(line: 167, column: 14, scope: !218)
!270 = !DILocation(line: 168, column: 29, scope: !218)
!271 = !DILocation(line: 168, column: 23, scope: !218)
!272 = !DILocation(line: 168, column: 5, scope: !218)
!273 = !DILocation(line: 168, column: 8, scope: !218)
!274 = !DILocation(line: 168, column: 13, scope: !218)
!275 = !DILocation(line: 168, column: 21, scope: !218)
!276 = !DILocation(line: 170, column: 29, scope: !218)
!277 = !DILocation(line: 170, column: 24, scope: !218)
!278 = !DILocation(line: 170, column: 37, scope: !218)
!279 = !DILocation(line: 170, column: 13, scope: !218)
!280 = !DILocation(line: 170, column: 11, scope: !218)
!281 = !DILocation(line: 173, column: 9, scope: !282)
!282 = distinct !DILexicalBlock(scope: !218, file: !25, line: 173, column: 9)
!283 = !DILocation(line: 173, column: 16, scope: !282)
!284 = !DILocation(line: 173, column: 30, scope: !282)
!285 = !DILocation(line: 173, column: 25, scope: !282)
!286 = !DILocation(line: 173, column: 22, scope: !282)
!287 = !DILocation(line: 173, column: 9, scope: !218)
!288 = !DILocation(line: 174, column: 27, scope: !289)
!289 = distinct !DILexicalBlock(scope: !282, file: !25, line: 173, column: 38)
!290 = !DILocation(line: 174, column: 38, scope: !289)
!291 = !DILocation(line: 174, column: 7, scope: !289)
!292 = !DILocation(line: 175, column: 7, scope: !289)
!293 = !DILocation(line: 176, column: 5, scope: !289)
!294 = !DILocation(line: 183, column: 22, scope: !295)
!295 = distinct !DILexicalBlock(scope: !282, file: !25, line: 176, column: 12)
!296 = !DILocation(line: 183, column: 25, scope: !295)
!297 = !DILocation(line: 183, column: 11, scope: !295)
!298 = !DILocation(line: 183, column: 9, scope: !295)
!299 = !DILocation(line: 185, column: 10, scope: !300)
!300 = distinct !DILexicalBlock(scope: !218, file: !25, line: 185, column: 9)
!301 = !DILocation(line: 185, column: 9, scope: !218)
!302 = !DILocation(line: 186, column: 15, scope: !303)
!303 = distinct !DILexicalBlock(scope: !300, file: !25, line: 185, column: 13)
!304 = !DILocation(line: 186, column: 7, scope: !303)
!305 = !DILocation(line: 187, column: 7, scope: !303)
!306 = !DILocation(line: 191, column: 3, scope: !34)
!307 = !DILocation(line: 192, column: 1, scope: !34)
