; ModuleID = '/home/gleison/tf/Benchmarks/McCat/04-bisect/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [40 x i8] c"bisect: Couldn't allocate memory for wu\00", align 1
@stderr = external global %struct._IO_FILE*, align 8

; Function Attrs: nounwind uwtable
define i32 @sturm(i32 %n, double* %c, double* %b, double* %beta, double %x) #0 {
entry:
  %n.addr = alloca i32, align 4
  %c.addr = alloca double*, align 8
  %b.addr = alloca double*, align 8
  %beta.addr = alloca double*, align 8
  %x.addr = alloca double, align 8
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %q = alloca double, align 8
  %iq = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20, metadata !21), !dbg !22
  store double* %c, double** %c.addr, align 8
  call void @llvm.dbg.declare(metadata double** %c.addr, metadata !23, metadata !21), !dbg !24
  store double* %b, double** %b.addr, align 8
  call void @llvm.dbg.declare(metadata double** %b.addr, metadata !25, metadata !21), !dbg !26
  store double* %beta, double** %beta.addr, align 8
  call void @llvm.dbg.declare(metadata double** %beta.addr, metadata !27, metadata !21), !dbg !28
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !29, metadata !21), !dbg !30
  call void @llvm.dbg.declare(metadata i32* %i, metadata !31, metadata !21), !dbg !32
  call void @llvm.dbg.declare(metadata i32* %a, metadata !33, metadata !21), !dbg !34
  call void @llvm.dbg.declare(metadata double* %q, metadata !35, metadata !21), !dbg !36
  call void @llvm.dbg.declare(metadata double* %iq, metadata !37, metadata !21), !dbg !38
  store i32 0, i32* %a, align 4, !dbg !39
  store double 1.000000e+00, double* %q, align 8, !dbg !40
  store i32 0, i32* %i, align 4, !dbg !41
  br label %for.cond, !dbg !43

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !44
  %1 = load i32, i32* %n.addr, align 4, !dbg !48
  %cmp = icmp slt i32 %0, %1, !dbg !49
  br i1 %cmp, label %for.body, label %for.end, !dbg !50

for.body:                                         ; preds = %for.cond
  %2 = load double, double* %q, align 8, !dbg !51
  %cmp1 = fcmp une double %2, 0.000000e+00, !dbg !54
  br i1 %cmp1, label %if.then, label %if.else, !dbg !55

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !56
  %idxprom = sext i32 %3 to i64, !dbg !58
  %4 = load double*, double** %c.addr, align 8, !dbg !58
  %arrayidx = getelementptr inbounds double, double* %4, i64 %idxprom, !dbg !58
  %5 = load double, double* %arrayidx, align 8, !dbg !58
  %6 = load double, double* %x.addr, align 8, !dbg !59
  %sub = fsub double %5, %6, !dbg !60
  %7 = load i32, i32* %i, align 4, !dbg !61
  %idxprom2 = sext i32 %7 to i64, !dbg !62
  %8 = load double*, double** %beta.addr, align 8, !dbg !62
  %arrayidx3 = getelementptr inbounds double, double* %8, i64 %idxprom2, !dbg !62
  %9 = load double, double* %arrayidx3, align 8, !dbg !62
  %10 = load double, double* %q, align 8, !dbg !63
  %div = fdiv double %9, %10, !dbg !64
  %sub4 = fsub double %sub, %div, !dbg !65
  store double %sub4, double* %q, align 8, !dbg !66
  br label %if.end, !dbg !67

if.else:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !68
  %idxprom5 = sext i32 %11 to i64, !dbg !70
  %12 = load double*, double** %c.addr, align 8, !dbg !70
  %arrayidx6 = getelementptr inbounds double, double* %12, i64 %idxprom5, !dbg !70
  %13 = load double, double* %arrayidx6, align 8, !dbg !70
  %14 = load double, double* %x.addr, align 8, !dbg !71
  %sub7 = fsub double %13, %14, !dbg !72
  %15 = load i32, i32* %i, align 4, !dbg !73
  %idxprom8 = sext i32 %15 to i64, !dbg !74
  %16 = load double*, double** %b.addr, align 8, !dbg !74
  %arrayidx9 = getelementptr inbounds double, double* %16, i64 %idxprom8, !dbg !74
  %17 = load double, double* %arrayidx9, align 8, !dbg !74
  %call = call double @fabs(double %17) #1, !dbg !75
  %div10 = fdiv double %call, 0x3CB0000000000000, !dbg !76
  %sub11 = fsub double %sub7, %div10, !dbg !77
  store double %sub11, double* %q, align 8, !dbg !78
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load double, double* %q, align 8, !dbg !79
  %cmp12 = fcmp olt double %18, 0.000000e+00, !dbg !81
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !82

if.then.13:                                       ; preds = %if.end
  %19 = load i32, i32* %a, align 4, !dbg !83
  %add = add nsw i32 %19, 1, !dbg !84
  store i32 %add, i32* %a, align 4, !dbg !85
  br label %if.end.14, !dbg !86

if.end.14:                                        ; preds = %if.then.13, %if.end
  br label %for.inc, !dbg !87

for.inc:                                          ; preds = %if.end.14
  %20 = load i32, i32* %i, align 4, !dbg !88
  %inc = add nsw i32 %20, 1, !dbg !88
  store i32 %inc, i32* %i, align 4, !dbg !88
  br label %for.cond, !dbg !89

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %a, align 4, !dbg !90
  ret i32 %21, !dbg !91
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone
declare double @fabs(double) #2

; Function Attrs: nounwind uwtable
define void @dbisect(double* %c, double* %b, double* %beta, i32 %n, i32 %m1, i32 %m2, double %eps1, double* %eps2, i32* %z, double* %x) #0 {
entry:
  %c.addr = alloca double*, align 8
  %b.addr = alloca double*, align 8
  %beta.addr = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %m1.addr = alloca i32, align 4
  %m2.addr = alloca i32, align 4
  %eps1.addr = alloca double, align 8
  %eps2.addr = alloca double*, align 8
  %z.addr = alloca i32*, align 8
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %h = alloca double, align 8
  %xmin = alloca double, align 8
  %xmax = alloca double, align 8
  %a = alloca i32, align 4
  %k = alloca i32, align 4
  %x1 = alloca double, align 8
  %xu = alloca double, align 8
  %x0 = alloca double, align 8
  %wu = alloca double*, align 8
  store double* %c, double** %c.addr, align 8
  call void @llvm.dbg.declare(metadata double** %c.addr, metadata !92, metadata !21), !dbg !93
  store double* %b, double** %b.addr, align 8
  call void @llvm.dbg.declare(metadata double** %b.addr, metadata !94, metadata !21), !dbg !95
  store double* %beta, double** %beta.addr, align 8
  call void @llvm.dbg.declare(metadata double** %beta.addr, metadata !96, metadata !21), !dbg !97
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !98, metadata !21), !dbg !99
  store i32 %m1, i32* %m1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m1.addr, metadata !100, metadata !21), !dbg !101
  store i32 %m2, i32* %m2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m2.addr, metadata !102, metadata !21), !dbg !103
  store double %eps1, double* %eps1.addr, align 8
  call void @llvm.dbg.declare(metadata double* %eps1.addr, metadata !104, metadata !21), !dbg !105
  store double* %eps2, double** %eps2.addr, align 8
  call void @llvm.dbg.declare(metadata double** %eps2.addr, metadata !106, metadata !21), !dbg !107
  store i32* %z, i32** %z.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %z.addr, metadata !108, metadata !21), !dbg !109
  store double* %x, double** %x.addr, align 8
  call void @llvm.dbg.declare(metadata double** %x.addr, metadata !110, metadata !21), !dbg !111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !112, metadata !21), !dbg !113
  call void @llvm.dbg.declare(metadata double* %h, metadata !114, metadata !21), !dbg !115
  call void @llvm.dbg.declare(metadata double* %xmin, metadata !116, metadata !21), !dbg !117
  call void @llvm.dbg.declare(metadata double* %xmax, metadata !118, metadata !21), !dbg !119
  %0 = load double*, double** %b.addr, align 8, !dbg !120
  %arrayidx = getelementptr inbounds double, double* %0, i64 0, !dbg !120
  store double 0.000000e+00, double* %arrayidx, align 8, !dbg !121
  %1 = load double*, double** %beta.addr, align 8, !dbg !122
  %arrayidx1 = getelementptr inbounds double, double* %1, i64 0, !dbg !122
  store double 0.000000e+00, double* %arrayidx1, align 8, !dbg !123
  %2 = load i32, i32* %n.addr, align 4, !dbg !124
  %sub = sub nsw i32 %2, 1, !dbg !125
  %idxprom = sext i32 %sub to i64, !dbg !126
  %3 = load double*, double** %c.addr, align 8, !dbg !126
  %arrayidx2 = getelementptr inbounds double, double* %3, i64 %idxprom, !dbg !126
  %4 = load double, double* %arrayidx2, align 8, !dbg !126
  %5 = load i32, i32* %n.addr, align 4, !dbg !127
  %sub3 = sub nsw i32 %5, 1, !dbg !128
  %idxprom4 = sext i32 %sub3 to i64, !dbg !129
  %6 = load double*, double** %b.addr, align 8, !dbg !129
  %arrayidx5 = getelementptr inbounds double, double* %6, i64 %idxprom4, !dbg !129
  %7 = load double, double* %arrayidx5, align 8, !dbg !129
  %call = call double @fabs(double %7) #1, !dbg !130
  %mul = fmul double 1.010000e+00, %call, !dbg !131
  %sub6 = fsub double %4, %mul, !dbg !132
  store double %sub6, double* %xmin, align 8, !dbg !133
  %8 = load i32, i32* %n.addr, align 4, !dbg !134
  %sub7 = sub nsw i32 %8, 1, !dbg !135
  %idxprom8 = sext i32 %sub7 to i64, !dbg !136
  %9 = load double*, double** %c.addr, align 8, !dbg !136
  %arrayidx9 = getelementptr inbounds double, double* %9, i64 %idxprom8, !dbg !136
  %10 = load double, double* %arrayidx9, align 8, !dbg !136
  %11 = load i32, i32* %n.addr, align 4, !dbg !137
  %sub10 = sub nsw i32 %11, 1, !dbg !138
  %idxprom11 = sext i32 %sub10 to i64, !dbg !139
  %12 = load double*, double** %b.addr, align 8, !dbg !139
  %arrayidx12 = getelementptr inbounds double, double* %12, i64 %idxprom11, !dbg !139
  %13 = load double, double* %arrayidx12, align 8, !dbg !139
  %call13 = call double @fabs(double %13) #1, !dbg !140
  %mul14 = fmul double 1.010000e+00, %call13, !dbg !141
  %add = fadd double %10, %mul14, !dbg !142
  store double %add, double* %xmax, align 8, !dbg !143
  %14 = load i32, i32* %n.addr, align 4, !dbg !144
  %sub15 = sub nsw i32 %14, 2, !dbg !146
  store i32 %sub15, i32* %i, align 4, !dbg !147
  br label %for.cond, !dbg !148

for.cond:                                         ; preds = %for.inc, %entry
  %15 = load i32, i32* %i, align 4, !dbg !149
  %cmp = icmp sge i32 %15, 0, !dbg !153
  br i1 %cmp, label %for.body, label %for.end, !dbg !154

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %i, align 4, !dbg !155
  %idxprom16 = sext i32 %16 to i64, !dbg !157
  %17 = load double*, double** %b.addr, align 8, !dbg !157
  %arrayidx17 = getelementptr inbounds double, double* %17, i64 %idxprom16, !dbg !157
  %18 = load double, double* %arrayidx17, align 8, !dbg !157
  %call18 = call double @fabs(double %18) #1, !dbg !158
  %19 = load i32, i32* %i, align 4, !dbg !159
  %add19 = add nsw i32 %19, 1, !dbg !160
  %idxprom20 = sext i32 %add19 to i64, !dbg !161
  %20 = load double*, double** %b.addr, align 8, !dbg !161
  %arrayidx21 = getelementptr inbounds double, double* %20, i64 %idxprom20, !dbg !161
  %21 = load double, double* %arrayidx21, align 8, !dbg !161
  %call22 = call double @fabs(double %21) #1, !dbg !162
  %add23 = fadd double %call18, %call22, !dbg !163
  %mul24 = fmul double 1.010000e+00, %add23, !dbg !164
  store double %mul24, double* %h, align 8, !dbg !165
  %22 = load i32, i32* %i, align 4, !dbg !166
  %idxprom25 = sext i32 %22 to i64, !dbg !168
  %23 = load double*, double** %c.addr, align 8, !dbg !168
  %arrayidx26 = getelementptr inbounds double, double* %23, i64 %idxprom25, !dbg !168
  %24 = load double, double* %arrayidx26, align 8, !dbg !168
  %25 = load double, double* %h, align 8, !dbg !169
  %add27 = fadd double %24, %25, !dbg !170
  %26 = load double, double* %xmax, align 8, !dbg !171
  %cmp28 = fcmp ogt double %add27, %26, !dbg !172
  br i1 %cmp28, label %if.then, label %if.end, !dbg !173

if.then:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !174
  %idxprom29 = sext i32 %27 to i64, !dbg !175
  %28 = load double*, double** %c.addr, align 8, !dbg !175
  %arrayidx30 = getelementptr inbounds double, double* %28, i64 %idxprom29, !dbg !175
  %29 = load double, double* %arrayidx30, align 8, !dbg !175
  %30 = load double, double* %h, align 8, !dbg !176
  %add31 = fadd double %29, %30, !dbg !177
  store double %add31, double* %xmax, align 8, !dbg !178
  br label %if.end, !dbg !179

if.end:                                           ; preds = %if.then, %for.body
  %31 = load i32, i32* %i, align 4, !dbg !180
  %idxprom32 = sext i32 %31 to i64, !dbg !182
  %32 = load double*, double** %c.addr, align 8, !dbg !182
  %arrayidx33 = getelementptr inbounds double, double* %32, i64 %idxprom32, !dbg !182
  %33 = load double, double* %arrayidx33, align 8, !dbg !182
  %34 = load double, double* %h, align 8, !dbg !183
  %sub34 = fsub double %33, %34, !dbg !184
  %35 = load double, double* %xmin, align 8, !dbg !185
  %cmp35 = fcmp olt double %sub34, %35, !dbg !186
  br i1 %cmp35, label %if.then.36, label %if.end.40, !dbg !187

if.then.36:                                       ; preds = %if.end
  %36 = load i32, i32* %i, align 4, !dbg !188
  %idxprom37 = sext i32 %36 to i64, !dbg !189
  %37 = load double*, double** %c.addr, align 8, !dbg !189
  %arrayidx38 = getelementptr inbounds double, double* %37, i64 %idxprom37, !dbg !189
  %38 = load double, double* %arrayidx38, align 8, !dbg !189
  %39 = load double, double* %h, align 8, !dbg !190
  %sub39 = fsub double %38, %39, !dbg !191
  store double %sub39, double* %xmin, align 8, !dbg !192
  br label %if.end.40, !dbg !193

if.end.40:                                        ; preds = %if.then.36, %if.end
  br label %for.inc, !dbg !194

for.inc:                                          ; preds = %if.end.40
  %40 = load i32, i32* %i, align 4, !dbg !195
  %dec = add nsw i32 %40, -1, !dbg !195
  store i32 %dec, i32* %i, align 4, !dbg !195
  br label %for.cond, !dbg !196

for.end:                                          ; preds = %for.cond
  %41 = load double, double* %xmin, align 8, !dbg !197
  %42 = load double, double* %xmax, align 8, !dbg !198
  %add41 = fadd double %41, %42, !dbg !199
  %cmp42 = fcmp ogt double %add41, 0.000000e+00, !dbg !200
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !197

cond.true:                                        ; preds = %for.end
  %43 = load double, double* %xmax, align 8, !dbg !201
  br label %cond.end, !dbg !197

cond.false:                                       ; preds = %for.end
  %44 = load double, double* %xmin, align 8, !dbg !203
  %sub43 = fsub double -0.000000e+00, %44, !dbg !205
  br label %cond.end, !dbg !197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %43, %cond.true ], [ %sub43, %cond.false ], !dbg !197
  %mul44 = fmul double 0x3CB0000000000000, %cond, !dbg !206
  %45 = load double*, double** %eps2.addr, align 8, !dbg !209
  store double %mul44, double* %45, align 8, !dbg !210
  %46 = load double, double* %eps1.addr, align 8, !dbg !211
  %cmp45 = fcmp ole double %46, 0.000000e+00, !dbg !213
  br i1 %cmp45, label %if.then.46, label %if.end.47, !dbg !214

if.then.46:                                       ; preds = %cond.end
  %47 = load double*, double** %eps2.addr, align 8, !dbg !215
  %48 = load double, double* %47, align 8, !dbg !216
  store double %48, double* %eps1.addr, align 8, !dbg !217
  br label %if.end.47, !dbg !218

if.end.47:                                        ; preds = %if.then.46, %cond.end
  %49 = load double, double* %eps1.addr, align 8, !dbg !219
  %mul48 = fmul double 5.000000e-01, %49, !dbg !220
  %50 = load double*, double** %eps2.addr, align 8, !dbg !221
  %51 = load double, double* %50, align 8, !dbg !222
  %mul49 = fmul double 7.000000e+00, %51, !dbg !223
  %add50 = fadd double %mul48, %mul49, !dbg !224
  %52 = load double*, double** %eps2.addr, align 8, !dbg !225
  store double %add50, double* %52, align 8, !dbg !226
  call void @llvm.dbg.declare(metadata i32* %a, metadata !227, metadata !21), !dbg !229
  call void @llvm.dbg.declare(metadata i32* %k, metadata !230, metadata !21), !dbg !231
  call void @llvm.dbg.declare(metadata double* %x1, metadata !232, metadata !21), !dbg !233
  call void @llvm.dbg.declare(metadata double* %xu, metadata !234, metadata !21), !dbg !235
  call void @llvm.dbg.declare(metadata double* %x0, metadata !236, metadata !21), !dbg !237
  call void @llvm.dbg.declare(metadata double** %wu, metadata !238, metadata !21), !dbg !239
  %53 = load i32, i32* %n.addr, align 4, !dbg !240
  %add51 = add nsw i32 %53, 1, !dbg !242
  %conv = sext i32 %add51 to i64, !dbg !240
  %call52 = call noalias i8* @calloc(i64 %conv, i64 8) #6, !dbg !243
  %54 = bitcast i8* %call52 to double*, !dbg !244
  store double* %54, double** %wu, align 8, !dbg !245
  %cmp53 = icmp eq double* %54, null, !dbg !246
  br i1 %cmp53, label %if.then.55, label %if.end.57, !dbg !247

if.then.55:                                       ; preds = %if.end.47
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !248
  %call56 = call i32 @fputs(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i32 0, i32 0), %struct._IO_FILE* %55), !dbg !250
  call void @exit(i32 1) #7, !dbg !251
  unreachable, !dbg !251

if.end.57:                                        ; preds = %if.end.47
  %56 = load double, double* %xmax, align 8, !dbg !252
  store double %56, double* %x0, align 8, !dbg !253
  %57 = load i32, i32* %m2.addr, align 4, !dbg !254
  store i32 %57, i32* %i, align 4, !dbg !256
  br label %for.cond.58, !dbg !257

for.cond.58:                                      ; preds = %for.inc.66, %if.end.57
  %58 = load i32, i32* %i, align 4, !dbg !258
  %59 = load i32, i32* %m1.addr, align 4, !dbg !262
  %cmp59 = icmp sge i32 %58, %59, !dbg !263
  br i1 %cmp59, label %for.body.61, label %for.end.68, !dbg !264

for.body.61:                                      ; preds = %for.cond.58
  %60 = load double, double* %xmax, align 8, !dbg !265
  %61 = load i32, i32* %i, align 4, !dbg !267
  %idxprom62 = sext i32 %61 to i64, !dbg !268
  %62 = load double*, double** %x.addr, align 8, !dbg !268
  %arrayidx63 = getelementptr inbounds double, double* %62, i64 %idxprom62, !dbg !268
  store double %60, double* %arrayidx63, align 8, !dbg !269
  %63 = load double, double* %xmin, align 8, !dbg !270
  %64 = load i32, i32* %i, align 4, !dbg !271
  %idxprom64 = sext i32 %64 to i64, !dbg !272
  %65 = load double*, double** %wu, align 8, !dbg !272
  %arrayidx65 = getelementptr inbounds double, double* %65, i64 %idxprom64, !dbg !272
  store double %63, double* %arrayidx65, align 8, !dbg !273
  br label %for.inc.66, !dbg !274

for.inc.66:                                       ; preds = %for.body.61
  %66 = load i32, i32* %i, align 4, !dbg !275
  %dec67 = add nsw i32 %66, -1, !dbg !275
  store i32 %dec67, i32* %i, align 4, !dbg !275
  br label %for.cond.58, !dbg !276

for.end.68:                                       ; preds = %for.cond.58
  %67 = load i32*, i32** %z.addr, align 8, !dbg !277
  store i32 0, i32* %67, align 4, !dbg !278
  %68 = load i32, i32* %m2.addr, align 4, !dbg !279
  store i32 %68, i32* %k, align 4, !dbg !281
  br label %for.cond.69, !dbg !282

for.cond.69:                                      ; preds = %for.inc.135, %for.end.68
  %69 = load i32, i32* %k, align 4, !dbg !283
  %70 = load i32, i32* %m1.addr, align 4, !dbg !287
  %cmp70 = icmp sge i32 %69, %70, !dbg !288
  br i1 %cmp70, label %for.body.72, label %for.end.137, !dbg !289

for.body.72:                                      ; preds = %for.cond.69
  %71 = load double, double* %xmin, align 8, !dbg !290
  store double %71, double* %xu, align 8, !dbg !292
  %72 = load i32, i32* %k, align 4, !dbg !293
  store i32 %72, i32* %i, align 4, !dbg !295
  br label %for.cond.73, !dbg !296

for.cond.73:                                      ; preds = %for.inc.85, %for.body.72
  %73 = load i32, i32* %i, align 4, !dbg !297
  %74 = load i32, i32* %m1.addr, align 4, !dbg !301
  %cmp74 = icmp sge i32 %73, %74, !dbg !302
  br i1 %cmp74, label %for.body.76, label %for.end.87, !dbg !303

for.body.76:                                      ; preds = %for.cond.73
  %75 = load double, double* %xu, align 8, !dbg !304
  %76 = load i32, i32* %i, align 4, !dbg !307
  %idxprom77 = sext i32 %76 to i64, !dbg !308
  %77 = load double*, double** %wu, align 8, !dbg !308
  %arrayidx78 = getelementptr inbounds double, double* %77, i64 %idxprom77, !dbg !308
  %78 = load double, double* %arrayidx78, align 8, !dbg !308
  %cmp79 = fcmp olt double %75, %78, !dbg !309
  br i1 %cmp79, label %if.then.81, label %if.end.84, !dbg !310

if.then.81:                                       ; preds = %for.body.76
  %79 = load i32, i32* %i, align 4, !dbg !311
  %idxprom82 = sext i32 %79 to i64, !dbg !313
  %80 = load double*, double** %wu, align 8, !dbg !313
  %arrayidx83 = getelementptr inbounds double, double* %80, i64 %idxprom82, !dbg !313
  %81 = load double, double* %arrayidx83, align 8, !dbg !313
  store double %81, double* %xu, align 8, !dbg !314
  br label %for.end.87, !dbg !315

if.end.84:                                        ; preds = %for.body.76
  br label %for.inc.85, !dbg !316

for.inc.85:                                       ; preds = %if.end.84
  %82 = load i32, i32* %i, align 4, !dbg !317
  %dec86 = add nsw i32 %82, -1, !dbg !317
  store i32 %dec86, i32* %i, align 4, !dbg !317
  br label %for.cond.73, !dbg !318

for.end.87:                                       ; preds = %if.then.81, %for.cond.73
  %83 = load double, double* %x0, align 8, !dbg !319
  %84 = load i32, i32* %k, align 4, !dbg !321
  %idxprom88 = sext i32 %84 to i64, !dbg !322
  %85 = load double*, double** %x.addr, align 8, !dbg !322
  %arrayidx89 = getelementptr inbounds double, double* %85, i64 %idxprom88, !dbg !322
  %86 = load double, double* %arrayidx89, align 8, !dbg !322
  %cmp90 = fcmp ogt double %83, %86, !dbg !323
  br i1 %cmp90, label %if.then.92, label %if.end.95, !dbg !324

if.then.92:                                       ; preds = %for.end.87
  %87 = load i32, i32* %k, align 4, !dbg !325
  %idxprom93 = sext i32 %87 to i64, !dbg !326
  %88 = load double*, double** %x.addr, align 8, !dbg !326
  %arrayidx94 = getelementptr inbounds double, double* %88, i64 %idxprom93, !dbg !326
  %89 = load double, double* %arrayidx94, align 8, !dbg !326
  store double %89, double* %x0, align 8, !dbg !327
  br label %if.end.95, !dbg !328

if.end.95:                                        ; preds = %if.then.92, %for.end.87
  %90 = load double, double* %xu, align 8, !dbg !329
  %91 = load double, double* %x0, align 8, !dbg !330
  %add96 = fadd double %90, %91, !dbg !331
  %div = fdiv double %add96, 2.000000e+00, !dbg !332
  store double %div, double* %x1, align 8, !dbg !333
  br label %while.cond, !dbg !334

while.cond:                                       ; preds = %if.end.128, %if.end.95
  %92 = load double, double* %x0, align 8, !dbg !335
  %93 = load double, double* %xu, align 8, !dbg !338
  %sub97 = fsub double %92, %93, !dbg !339
  %94 = load double, double* %xu, align 8, !dbg !340
  %call98 = call double @fabs(double %94) #1, !dbg !341
  %95 = load double, double* %x0, align 8, !dbg !342
  %call99 = call double @fabs(double %95) #1, !dbg !343
  %add100 = fadd double %call98, %call99, !dbg !344
  %mul101 = fmul double 0x3CC0000000000000, %add100, !dbg !345
  %96 = load double, double* %eps1.addr, align 8, !dbg !346
  %add102 = fadd double %mul101, %96, !dbg !347
  %cmp103 = fcmp ogt double %sub97, %add102, !dbg !348
  br i1 %cmp103, label %while.body, label %while.end, !dbg !334

while.body:                                       ; preds = %while.cond
  %97 = load i32*, i32** %z.addr, align 8, !dbg !349
  %98 = load i32, i32* %97, align 4, !dbg !351
  %add105 = add nsw i32 %98, 1, !dbg !352
  %99 = load i32*, i32** %z.addr, align 8, !dbg !353
  store i32 %add105, i32* %99, align 4, !dbg !354
  %100 = load i32, i32* %n.addr, align 4, !dbg !355
  %101 = load double*, double** %c.addr, align 8, !dbg !356
  %102 = load double*, double** %b.addr, align 8, !dbg !357
  %103 = load double*, double** %beta.addr, align 8, !dbg !358
  %104 = load double, double* %x1, align 8, !dbg !359
  %call106 = call i32 @sturm(i32 %100, double* %101, double* %102, double* %103, double %104), !dbg !360
  store i32 %call106, i32* %a, align 4, !dbg !361
  %105 = load i32, i32* %a, align 4, !dbg !362
  %106 = load i32, i32* %k, align 4, !dbg !364
  %cmp107 = icmp slt i32 %105, %106, !dbg !365
  br i1 %cmp107, label %if.then.109, label %if.else.127, !dbg !366

if.then.109:                                      ; preds = %while.body
  %107 = load i32, i32* %a, align 4, !dbg !367
  %108 = load i32, i32* %m1.addr, align 4, !dbg !370
  %cmp110 = icmp slt i32 %107, %108, !dbg !371
  br i1 %cmp110, label %if.then.112, label %if.else, !dbg !372

if.then.112:                                      ; preds = %if.then.109
  %109 = load double, double* %x1, align 8, !dbg !373
  %110 = load i32, i32* %m1.addr, align 4, !dbg !374
  %idxprom113 = sext i32 %110 to i64, !dbg !375
  %111 = load double*, double** %wu, align 8, !dbg !375
  %arrayidx114 = getelementptr inbounds double, double* %111, i64 %idxprom113, !dbg !375
  store double %109, double* %arrayidx114, align 8, !dbg !376
  store double %109, double* %xu, align 8, !dbg !377
  br label %if.end.126, !dbg !378

if.else:                                          ; preds = %if.then.109
  %112 = load double, double* %x1, align 8, !dbg !379
  %113 = load i32, i32* %a, align 4, !dbg !381
  %add115 = add nsw i32 %113, 1, !dbg !382
  %idxprom116 = sext i32 %add115 to i64, !dbg !383
  %114 = load double*, double** %wu, align 8, !dbg !383
  %arrayidx117 = getelementptr inbounds double, double* %114, i64 %idxprom116, !dbg !383
  store double %112, double* %arrayidx117, align 8, !dbg !384
  store double %112, double* %xu, align 8, !dbg !385
  %115 = load i32, i32* %a, align 4, !dbg !386
  %idxprom118 = sext i32 %115 to i64, !dbg !388
  %116 = load double*, double** %x.addr, align 8, !dbg !388
  %arrayidx119 = getelementptr inbounds double, double* %116, i64 %idxprom118, !dbg !388
  %117 = load double, double* %arrayidx119, align 8, !dbg !388
  %118 = load double, double* %x1, align 8, !dbg !389
  %cmp120 = fcmp ogt double %117, %118, !dbg !390
  br i1 %cmp120, label %if.then.122, label %if.end.125, !dbg !391

if.then.122:                                      ; preds = %if.else
  %119 = load double, double* %x1, align 8, !dbg !392
  %120 = load i32, i32* %a, align 4, !dbg !393
  %idxprom123 = sext i32 %120 to i64, !dbg !394
  %121 = load double*, double** %x.addr, align 8, !dbg !394
  %arrayidx124 = getelementptr inbounds double, double* %121, i64 %idxprom123, !dbg !394
  store double %119, double* %arrayidx124, align 8, !dbg !395
  br label %if.end.125, !dbg !394

if.end.125:                                       ; preds = %if.then.122, %if.else
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125, %if.then.112
  br label %if.end.128, !dbg !396

if.else.127:                                      ; preds = %while.body
  %122 = load double, double* %x1, align 8, !dbg !397
  store double %122, double* %x0, align 8, !dbg !399
  br label %if.end.128

if.end.128:                                       ; preds = %if.else.127, %if.end.126
  %123 = load double, double* %xu, align 8, !dbg !400
  %124 = load double, double* %x0, align 8, !dbg !401
  %add129 = fadd double %123, %124, !dbg !402
  %div130 = fdiv double %add129, 2.000000e+00, !dbg !403
  store double %div130, double* %x1, align 8, !dbg !404
  br label %while.cond, !dbg !334

while.end:                                        ; preds = %while.cond
  %125 = load double, double* %xu, align 8, !dbg !405
  %126 = load double, double* %x0, align 8, !dbg !406
  %add131 = fadd double %125, %126, !dbg !407
  %div132 = fdiv double %add131, 2.000000e+00, !dbg !408
  %127 = load i32, i32* %k, align 4, !dbg !409
  %idxprom133 = sext i32 %127 to i64, !dbg !410
  %128 = load double*, double** %x.addr, align 8, !dbg !410
  %arrayidx134 = getelementptr inbounds double, double* %128, i64 %idxprom133, !dbg !410
  store double %div132, double* %arrayidx134, align 8, !dbg !411
  br label %for.inc.135, !dbg !412

for.inc.135:                                      ; preds = %while.end
  %129 = load i32, i32* %k, align 4, !dbg !413
  %dec136 = add nsw i32 %129, -1, !dbg !413
  store i32 %dec136, i32* %k, align 4, !dbg !413
  br label %for.cond.69, !dbg !414

for.end.137:                                      ; preds = %for.cond.69
  %130 = load double*, double** %wu, align 8, !dbg !415
  %131 = bitcast double* %130 to i8*, !dbg !415
  call void @free(i8* %131) #6, !dbg !416
  ret void, !dbg !417
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare i32 @fputs(i8*, %struct._IO_FILE*) #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #5

; Function Attrs: nounwind
declare void @free(i8*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!17, !18}
!llvm.ident = !{!19}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !7)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/04-bisect")
!2 = !{}
!3 = !{!4, !5, !6}
!4 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!7 = !{!8, !13}
!8 = !DISubprogram(name: "sturm", scope: !9, file: !9, line: 24, type: !10, isLocal: false, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, double*, double*, double*, double)* @sturm, variables: !2)
!9 = !DIFile(filename: "/home/gleison/tf/Benchmarks/McCat/04-bisect/tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/04-bisect")
!10 = !DISubroutineType(types: !11)
!11 = !{!12, !12, !5, !5, !5, !4}
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DISubprogram(name: "dbisect", scope: !9, file: !9, line: 154, type: !14, isLocal: false, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, function: void (double*, double*, double*, i32, i32, i32, double, double*, i32*, double*)* @dbisect, variables: !2)
!14 = !DISubroutineType(types: !15)
!15 = !{null, !5, !5, !5, !12, !12, !12, !4, !5, !16, !5}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!17 = !{i32 2, !"Dwarf Version", i32 4}
!18 = !{i32 2, !"Debug Info Version", i32 3}
!19 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !8, file: !9, line: 24, type: !12)
!21 = !DIExpression()
!22 = !DILocation(line: 24, column: 15, scope: !8)
!23 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !8, file: !9, line: 24, type: !5)
!24 = !DILocation(line: 24, column: 25, scope: !8)
!25 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !8, file: !9, line: 24, type: !5)
!26 = !DILocation(line: 24, column: 37, scope: !8)
!27 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "beta", arg: 4, scope: !8, file: !9, line: 24, type: !5)
!28 = !DILocation(line: 24, column: 49, scope: !8)
!29 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 5, scope: !8, file: !9, line: 24, type: !4)
!30 = !DILocation(line: 24, column: 64, scope: !8)
!31 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !8, file: !9, line: 78, type: !12)
!32 = !DILocation(line: 78, column: 7, scope: !8)
!33 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !8, file: !9, line: 79, type: !12)
!34 = !DILocation(line: 79, column: 7, scope: !8)
!35 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !8, file: !9, line: 80, type: !4)
!36 = !DILocation(line: 80, column: 10, scope: !8)
!37 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iq", scope: !8, file: !9, line: 80, type: !4)
!38 = !DILocation(line: 80, column: 13, scope: !8)
!39 = !DILocation(line: 82, column: 5, scope: !8)
!40 = !DILocation(line: 83, column: 5, scope: !8)
!41 = !DILocation(line: 85, column: 10, scope: !42)
!42 = distinct !DILexicalBlock(scope: !8, file: !9, line: 85, column: 3)
!43 = !DILocation(line: 85, column: 8, scope: !42)
!44 = !DILocation(line: 85, column: 15, scope: !45)
!45 = !DILexicalBlockFile(scope: !46, file: !9, discriminator: 2)
!46 = !DILexicalBlockFile(scope: !47, file: !9, discriminator: 1)
!47 = distinct !DILexicalBlock(scope: !42, file: !9, line: 85, column: 3)
!48 = !DILocation(line: 85, column: 19, scope: !47)
!49 = !DILocation(line: 85, column: 17, scope: !47)
!50 = !DILocation(line: 85, column: 3, scope: !42)
!51 = !DILocation(line: 89, column: 9, scope: !52)
!52 = distinct !DILexicalBlock(scope: !53, file: !9, line: 89, column: 9)
!53 = distinct !DILexicalBlock(scope: !47, file: !9, line: 85, column: 27)
!54 = !DILocation(line: 89, column: 11, scope: !52)
!55 = !DILocation(line: 89, column: 9, scope: !53)
!56 = !DILocation(line: 92, column: 14, scope: !57)
!57 = distinct !DILexicalBlock(scope: !52, file: !9, line: 89, column: 19)
!58 = !DILocation(line: 92, column: 12, scope: !57)
!59 = !DILocation(line: 92, column: 19, scope: !57)
!60 = !DILocation(line: 92, column: 17, scope: !57)
!61 = !DILocation(line: 92, column: 29, scope: !57)
!62 = !DILocation(line: 92, column: 24, scope: !57)
!63 = !DILocation(line: 92, column: 34, scope: !57)
!64 = !DILocation(line: 92, column: 32, scope: !57)
!65 = !DILocation(line: 92, column: 22, scope: !57)
!66 = !DILocation(line: 92, column: 9, scope: !57)
!67 = !DILocation(line: 104, column: 5, scope: !57)
!68 = !DILocation(line: 105, column: 14, scope: !69)
!69 = distinct !DILexicalBlock(scope: !52, file: !9, line: 104, column: 12)
!70 = !DILocation(line: 105, column: 12, scope: !69)
!71 = !DILocation(line: 105, column: 19, scope: !69)
!72 = !DILocation(line: 105, column: 17, scope: !69)
!73 = !DILocation(line: 105, column: 31, scope: !69)
!74 = !DILocation(line: 105, column: 29, scope: !69)
!75 = !DILocation(line: 105, column: 24, scope: !69)
!76 = !DILocation(line: 105, column: 35, scope: !69)
!77 = !DILocation(line: 105, column: 22, scope: !69)
!78 = !DILocation(line: 105, column: 9, scope: !69)
!79 = !DILocation(line: 108, column: 9, scope: !80)
!80 = distinct !DILexicalBlock(scope: !53, file: !9, line: 108, column: 9)
!81 = !DILocation(line: 108, column: 11, scope: !80)
!82 = !DILocation(line: 108, column: 9, scope: !53)
!83 = !DILocation(line: 109, column: 11, scope: !80)
!84 = !DILocation(line: 109, column: 13, scope: !80)
!85 = !DILocation(line: 109, column: 9, scope: !80)
!86 = !DILocation(line: 109, column: 7, scope: !80)
!87 = !DILocation(line: 110, column: 3, scope: !53)
!88 = !DILocation(line: 85, column: 23, scope: !47)
!89 = !DILocation(line: 85, column: 3, scope: !47)
!90 = !DILocation(line: 151, column: 10, scope: !8)
!91 = !DILocation(line: 151, column: 3, scope: !8)
!92 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 1, scope: !13, file: !9, line: 154, type: !5)
!93 = !DILocation(line: 154, column: 21, scope: !13)
!94 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !13, file: !9, line: 154, type: !5)
!95 = !DILocation(line: 154, column: 33, scope: !13)
!96 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "beta", arg: 3, scope: !13, file: !9, line: 154, type: !5)
!97 = !DILocation(line: 154, column: 45, scope: !13)
!98 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 4, scope: !13, file: !9, line: 155, type: !12)
!99 = !DILocation(line: 155, column: 18, scope: !13)
!100 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m1", arg: 5, scope: !13, file: !9, line: 155, type: !12)
!101 = !DILocation(line: 155, column: 25, scope: !13)
!102 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m2", arg: 6, scope: !13, file: !9, line: 155, type: !12)
!103 = !DILocation(line: 155, column: 33, scope: !13)
!104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eps1", arg: 7, scope: !13, file: !9, line: 155, type: !4)
!105 = !DILocation(line: 155, column: 44, scope: !13)
!106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eps2", arg: 8, scope: !13, file: !9, line: 155, type: !5)
!107 = !DILocation(line: 155, column: 58, scope: !13)
!108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z", arg: 9, scope: !13, file: !9, line: 155, type: !16)
!109 = !DILocation(line: 155, column: 69, scope: !13)
!110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 10, scope: !13, file: !9, line: 156, type: !5)
!111 = !DILocation(line: 156, column: 21, scope: !13)
!112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !13, file: !9, line: 214, type: !12)
!113 = !DILocation(line: 214, column: 7, scope: !13)
!114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !13, file: !9, line: 215, type: !4)
!115 = !DILocation(line: 215, column: 10, scope: !13)
!116 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xmin", scope: !13, file: !9, line: 215, type: !4)
!117 = !DILocation(line: 215, column: 13, scope: !13)
!118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xmax", scope: !13, file: !9, line: 215, type: !4)
!119 = !DILocation(line: 215, column: 19, scope: !13)
!120 = !DILocation(line: 216, column: 13, scope: !13)
!121 = !DILocation(line: 216, column: 18, scope: !13)
!122 = !DILocation(line: 216, column: 3, scope: !13)
!123 = !DILocation(line: 216, column: 11, scope: !13)
!124 = !DILocation(line: 219, column: 12, scope: !13)
!125 = !DILocation(line: 219, column: 14, scope: !13)
!126 = !DILocation(line: 219, column: 10, scope: !13)
!127 = !DILocation(line: 219, column: 36, scope: !13)
!128 = !DILocation(line: 219, column: 38, scope: !13)
!129 = !DILocation(line: 219, column: 34, scope: !13)
!130 = !DILocation(line: 219, column: 29, scope: !13)
!131 = !DILocation(line: 219, column: 27, scope: !13)
!132 = !DILocation(line: 219, column: 19, scope: !13)
!133 = !DILocation(line: 219, column: 8, scope: !13)
!134 = !DILocation(line: 220, column: 12, scope: !13)
!135 = !DILocation(line: 220, column: 14, scope: !13)
!136 = !DILocation(line: 220, column: 10, scope: !13)
!137 = !DILocation(line: 220, column: 36, scope: !13)
!138 = !DILocation(line: 220, column: 38, scope: !13)
!139 = !DILocation(line: 220, column: 34, scope: !13)
!140 = !DILocation(line: 220, column: 29, scope: !13)
!141 = !DILocation(line: 220, column: 27, scope: !13)
!142 = !DILocation(line: 220, column: 19, scope: !13)
!143 = !DILocation(line: 220, column: 8, scope: !13)
!144 = !DILocation(line: 221, column: 12, scope: !145)
!145 = distinct !DILexicalBlock(scope: !13, file: !9, line: 221, column: 3)
!146 = !DILocation(line: 221, column: 14, scope: !145)
!147 = !DILocation(line: 221, column: 10, scope: !145)
!148 = !DILocation(line: 221, column: 8, scope: !145)
!149 = !DILocation(line: 221, column: 19, scope: !150)
!150 = !DILexicalBlockFile(scope: !151, file: !9, discriminator: 2)
!151 = !DILexicalBlockFile(scope: !152, file: !9, discriminator: 1)
!152 = distinct !DILexicalBlock(scope: !145, file: !9, line: 221, column: 3)
!153 = !DILocation(line: 221, column: 21, scope: !152)
!154 = !DILocation(line: 221, column: 3, scope: !145)
!155 = !DILocation(line: 222, column: 25, scope: !156)
!156 = distinct !DILexicalBlock(scope: !152, file: !9, line: 221, column: 32)
!157 = !DILocation(line: 222, column: 23, scope: !156)
!158 = !DILocation(line: 222, column: 18, scope: !156)
!159 = !DILocation(line: 222, column: 38, scope: !156)
!160 = !DILocation(line: 222, column: 40, scope: !156)
!161 = !DILocation(line: 222, column: 36, scope: !156)
!162 = !DILocation(line: 222, column: 31, scope: !156)
!163 = !DILocation(line: 222, column: 29, scope: !156)
!164 = !DILocation(line: 222, column: 15, scope: !156)
!165 = !DILocation(line: 222, column: 7, scope: !156)
!166 = !DILocation(line: 223, column: 11, scope: !167)
!167 = distinct !DILexicalBlock(scope: !156, file: !9, line: 223, column: 9)
!168 = !DILocation(line: 223, column: 9, scope: !167)
!169 = !DILocation(line: 223, column: 16, scope: !167)
!170 = !DILocation(line: 223, column: 14, scope: !167)
!171 = !DILocation(line: 223, column: 20, scope: !167)
!172 = !DILocation(line: 223, column: 18, scope: !167)
!173 = !DILocation(line: 223, column: 9, scope: !156)
!174 = !DILocation(line: 224, column: 16, scope: !167)
!175 = !DILocation(line: 224, column: 14, scope: !167)
!176 = !DILocation(line: 224, column: 21, scope: !167)
!177 = !DILocation(line: 224, column: 19, scope: !167)
!178 = !DILocation(line: 224, column: 12, scope: !167)
!179 = !DILocation(line: 224, column: 7, scope: !167)
!180 = !DILocation(line: 225, column: 11, scope: !181)
!181 = distinct !DILexicalBlock(scope: !156, file: !9, line: 225, column: 9)
!182 = !DILocation(line: 225, column: 9, scope: !181)
!183 = !DILocation(line: 225, column: 16, scope: !181)
!184 = !DILocation(line: 225, column: 14, scope: !181)
!185 = !DILocation(line: 225, column: 20, scope: !181)
!186 = !DILocation(line: 225, column: 18, scope: !181)
!187 = !DILocation(line: 225, column: 9, scope: !156)
!188 = !DILocation(line: 226, column: 16, scope: !181)
!189 = !DILocation(line: 226, column: 14, scope: !181)
!190 = !DILocation(line: 226, column: 21, scope: !181)
!191 = !DILocation(line: 226, column: 19, scope: !181)
!192 = !DILocation(line: 226, column: 12, scope: !181)
!193 = !DILocation(line: 226, column: 7, scope: !181)
!194 = !DILocation(line: 227, column: 3, scope: !156)
!195 = !DILocation(line: 221, column: 28, scope: !152)
!196 = !DILocation(line: 221, column: 3, scope: !152)
!197 = !DILocation(line: 232, column: 26, scope: !13)
!198 = !DILocation(line: 232, column: 33, scope: !13)
!199 = !DILocation(line: 232, column: 31, scope: !13)
!200 = !DILocation(line: 232, column: 38, scope: !13)
!201 = !DILocation(line: 232, column: 44, scope: !202)
!202 = !DILexicalBlockFile(scope: !13, file: !9, discriminator: 1)
!203 = !DILocation(line: 232, column: 52, scope: !204)
!204 = !DILexicalBlockFile(scope: !13, file: !9, discriminator: 2)
!205 = !DILocation(line: 232, column: 51, scope: !13)
!206 = !DILocation(line: 232, column: 23, scope: !207)
!207 = !DILexicalBlockFile(scope: !208, file: !9, discriminator: 4)
!208 = !DILexicalBlockFile(scope: !13, file: !9, discriminator: 3)
!209 = !DILocation(line: 232, column: 4, scope: !13)
!210 = !DILocation(line: 232, column: 9, scope: !13)
!211 = !DILocation(line: 233, column: 7, scope: !212)
!212 = distinct !DILexicalBlock(scope: !13, file: !9, line: 233, column: 7)
!213 = !DILocation(line: 233, column: 12, scope: !212)
!214 = !DILocation(line: 233, column: 7, scope: !13)
!215 = !DILocation(line: 234, column: 13, scope: !212)
!216 = !DILocation(line: 234, column: 12, scope: !212)
!217 = !DILocation(line: 234, column: 10, scope: !212)
!218 = !DILocation(line: 234, column: 5, scope: !212)
!219 = !DILocation(line: 235, column: 17, scope: !13)
!220 = !DILocation(line: 235, column: 15, scope: !13)
!221 = !DILocation(line: 235, column: 29, scope: !13)
!222 = !DILocation(line: 235, column: 28, scope: !13)
!223 = !DILocation(line: 235, column: 26, scope: !13)
!224 = !DILocation(line: 235, column: 22, scope: !13)
!225 = !DILocation(line: 235, column: 4, scope: !13)
!226 = !DILocation(line: 235, column: 9, scope: !13)
!227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !228, file: !9, line: 237, type: !12)
!228 = distinct !DILexicalBlock(scope: !13, file: !9, line: 236, column: 3)
!229 = !DILocation(line: 237, column: 9, scope: !228)
!230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !228, file: !9, line: 237, type: !12)
!231 = !DILocation(line: 237, column: 12, scope: !228)
!232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x1", scope: !228, file: !9, line: 238, type: !4)
!233 = !DILocation(line: 238, column: 12, scope: !228)
!234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xu", scope: !228, file: !9, line: 238, type: !4)
!235 = !DILocation(line: 238, column: 16, scope: !228)
!236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x0", scope: !228, file: !9, line: 238, type: !4)
!237 = !DILocation(line: 238, column: 20, scope: !228)
!238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wu", scope: !228, file: !9, line: 239, type: !5)
!239 = !DILocation(line: 239, column: 13, scope: !228)
!240 = !DILocation(line: 241, column: 32, scope: !241)
!241 = distinct !DILexicalBlock(scope: !228, file: !9, line: 241, column: 9)
!242 = !DILocation(line: 241, column: 34, scope: !241)
!243 = !DILocation(line: 241, column: 25, scope: !241)
!244 = !DILocation(line: 241, column: 15, scope: !241)
!245 = !DILocation(line: 241, column: 13, scope: !241)
!246 = !DILocation(line: 241, column: 56, scope: !241)
!247 = !DILocation(line: 241, column: 9, scope: !228)
!248 = !DILocation(line: 242, column: 56, scope: !249)
!249 = distinct !DILexicalBlock(scope: !241, file: !9, line: 241, column: 65)
!250 = !DILocation(line: 242, column: 7, scope: !249)
!251 = !DILocation(line: 243, column: 7, scope: !249)
!252 = !DILocation(line: 247, column: 10, scope: !228)
!253 = !DILocation(line: 247, column: 8, scope: !228)
!254 = !DILocation(line: 248, column: 14, scope: !255)
!255 = distinct !DILexicalBlock(scope: !228, file: !9, line: 248, column: 5)
!256 = !DILocation(line: 248, column: 12, scope: !255)
!257 = !DILocation(line: 248, column: 10, scope: !255)
!258 = !DILocation(line: 248, column: 18, scope: !259)
!259 = !DILexicalBlockFile(scope: !260, file: !9, discriminator: 2)
!260 = !DILexicalBlockFile(scope: !261, file: !9, discriminator: 1)
!261 = distinct !DILexicalBlock(scope: !255, file: !9, line: 248, column: 5)
!262 = !DILocation(line: 248, column: 23, scope: !261)
!263 = !DILocation(line: 248, column: 20, scope: !261)
!264 = !DILocation(line: 248, column: 5, scope: !255)
!265 = !DILocation(line: 249, column: 14, scope: !266)
!266 = distinct !DILexicalBlock(scope: !261, file: !9, line: 248, column: 32)
!267 = !DILocation(line: 249, column: 9, scope: !266)
!268 = !DILocation(line: 249, column: 7, scope: !266)
!269 = !DILocation(line: 249, column: 12, scope: !266)
!270 = !DILocation(line: 250, column: 15, scope: !266)
!271 = !DILocation(line: 250, column: 10, scope: !266)
!272 = !DILocation(line: 250, column: 7, scope: !266)
!273 = !DILocation(line: 250, column: 13, scope: !266)
!274 = !DILocation(line: 251, column: 5, scope: !266)
!275 = !DILocation(line: 248, column: 28, scope: !261)
!276 = !DILocation(line: 248, column: 5, scope: !261)
!277 = !DILocation(line: 252, column: 6, scope: !228)
!278 = !DILocation(line: 252, column: 8, scope: !228)
!279 = !DILocation(line: 254, column: 14, scope: !280)
!280 = distinct !DILexicalBlock(scope: !228, file: !9, line: 254, column: 5)
!281 = !DILocation(line: 254, column: 12, scope: !280)
!282 = !DILocation(line: 254, column: 10, scope: !280)
!283 = !DILocation(line: 254, column: 18, scope: !284)
!284 = !DILexicalBlockFile(scope: !285, file: !9, discriminator: 2)
!285 = !DILexicalBlockFile(scope: !286, file: !9, discriminator: 1)
!286 = distinct !DILexicalBlock(scope: !280, file: !9, line: 254, column: 5)
!287 = !DILocation(line: 254, column: 23, scope: !286)
!288 = !DILocation(line: 254, column: 20, scope: !286)
!289 = !DILocation(line: 254, column: 5, scope: !280)
!290 = !DILocation(line: 255, column: 12, scope: !291)
!291 = distinct !DILexicalBlock(scope: !286, file: !9, line: 254, column: 32)
!292 = !DILocation(line: 255, column: 10, scope: !291)
!293 = !DILocation(line: 256, column: 16, scope: !294)
!294 = distinct !DILexicalBlock(scope: !291, file: !9, line: 256, column: 7)
!295 = !DILocation(line: 256, column: 14, scope: !294)
!296 = !DILocation(line: 256, column: 12, scope: !294)
!297 = !DILocation(line: 256, column: 19, scope: !298)
!298 = !DILexicalBlockFile(scope: !299, file: !9, discriminator: 2)
!299 = !DILexicalBlockFile(scope: !300, file: !9, discriminator: 1)
!300 = distinct !DILexicalBlock(scope: !294, file: !9, line: 256, column: 7)
!301 = !DILocation(line: 256, column: 24, scope: !300)
!302 = !DILocation(line: 256, column: 21, scope: !300)
!303 = !DILocation(line: 256, column: 7, scope: !294)
!304 = !DILocation(line: 257, column: 13, scope: !305)
!305 = distinct !DILexicalBlock(scope: !306, file: !9, line: 257, column: 13)
!306 = distinct !DILexicalBlock(scope: !300, file: !9, line: 256, column: 33)
!307 = !DILocation(line: 257, column: 21, scope: !305)
!308 = !DILocation(line: 257, column: 18, scope: !305)
!309 = !DILocation(line: 257, column: 16, scope: !305)
!310 = !DILocation(line: 257, column: 13, scope: !306)
!311 = !DILocation(line: 258, column: 19, scope: !312)
!312 = distinct !DILexicalBlock(scope: !305, file: !9, line: 257, column: 25)
!313 = !DILocation(line: 258, column: 16, scope: !312)
!314 = !DILocation(line: 258, column: 14, scope: !312)
!315 = !DILocation(line: 259, column: 11, scope: !312)
!316 = !DILocation(line: 261, column: 7, scope: !306)
!317 = !DILocation(line: 256, column: 29, scope: !300)
!318 = !DILocation(line: 256, column: 7, scope: !300)
!319 = !DILocation(line: 262, column: 11, scope: !320)
!320 = distinct !DILexicalBlock(scope: !291, file: !9, line: 262, column: 11)
!321 = !DILocation(line: 262, column: 18, scope: !320)
!322 = !DILocation(line: 262, column: 16, scope: !320)
!323 = !DILocation(line: 262, column: 14, scope: !320)
!324 = !DILocation(line: 262, column: 11, scope: !291)
!325 = !DILocation(line: 263, column: 16, scope: !320)
!326 = !DILocation(line: 263, column: 14, scope: !320)
!327 = !DILocation(line: 263, column: 12, scope: !320)
!328 = !DILocation(line: 263, column: 9, scope: !320)
!329 = !DILocation(line: 265, column: 13, scope: !291)
!330 = !DILocation(line: 265, column: 18, scope: !291)
!331 = !DILocation(line: 265, column: 16, scope: !291)
!332 = !DILocation(line: 265, column: 22, scope: !291)
!333 = !DILocation(line: 265, column: 10, scope: !291)
!334 = !DILocation(line: 266, column: 7, scope: !291)
!335 = !DILocation(line: 266, column: 14, scope: !336)
!336 = !DILexicalBlockFile(scope: !337, file: !9, discriminator: 2)
!337 = !DILexicalBlockFile(scope: !291, file: !9, discriminator: 1)
!338 = !DILocation(line: 266, column: 19, scope: !291)
!339 = !DILocation(line: 266, column: 17, scope: !291)
!340 = !DILocation(line: 266, column: 48, scope: !291)
!341 = !DILocation(line: 266, column: 43, scope: !291)
!342 = !DILocation(line: 266, column: 59, scope: !291)
!343 = !DILocation(line: 266, column: 54, scope: !291)
!344 = !DILocation(line: 266, column: 52, scope: !291)
!345 = !DILocation(line: 266, column: 40, scope: !291)
!346 = !DILocation(line: 266, column: 66, scope: !291)
!347 = !DILocation(line: 266, column: 64, scope: !291)
!348 = !DILocation(line: 266, column: 22, scope: !291)
!349 = !DILocation(line: 267, column: 15, scope: !350)
!350 = distinct !DILexicalBlock(scope: !291, file: !9, line: 266, column: 72)
!351 = !DILocation(line: 267, column: 14, scope: !350)
!352 = !DILocation(line: 267, column: 17, scope: !350)
!353 = !DILocation(line: 267, column: 10, scope: !350)
!354 = !DILocation(line: 267, column: 12, scope: !350)
!355 = !DILocation(line: 271, column: 19, scope: !350)
!356 = !DILocation(line: 271, column: 22, scope: !350)
!357 = !DILocation(line: 271, column: 25, scope: !350)
!358 = !DILocation(line: 271, column: 28, scope: !350)
!359 = !DILocation(line: 271, column: 34, scope: !350)
!360 = !DILocation(line: 271, column: 13, scope: !350)
!361 = !DILocation(line: 271, column: 11, scope: !350)
!362 = !DILocation(line: 274, column: 13, scope: !363)
!363 = distinct !DILexicalBlock(scope: !350, file: !9, line: 274, column: 13)
!364 = !DILocation(line: 274, column: 17, scope: !363)
!365 = !DILocation(line: 274, column: 15, scope: !363)
!366 = !DILocation(line: 274, column: 13, scope: !350)
!367 = !DILocation(line: 275, column: 15, scope: !368)
!368 = distinct !DILexicalBlock(scope: !369, file: !9, line: 275, column: 15)
!369 = distinct !DILexicalBlock(scope: !363, file: !9, line: 274, column: 20)
!370 = !DILocation(line: 275, column: 19, scope: !368)
!371 = !DILocation(line: 275, column: 17, scope: !368)
!372 = !DILocation(line: 275, column: 15, scope: !369)
!373 = !DILocation(line: 276, column: 27, scope: !368)
!374 = !DILocation(line: 276, column: 21, scope: !368)
!375 = !DILocation(line: 276, column: 18, scope: !368)
!376 = !DILocation(line: 276, column: 25, scope: !368)
!377 = !DILocation(line: 276, column: 16, scope: !368)
!378 = !DILocation(line: 276, column: 13, scope: !368)
!379 = !DILocation(line: 278, column: 30, scope: !380)
!380 = distinct !DILexicalBlock(scope: !368, file: !9, line: 277, column: 16)
!381 = !DILocation(line: 278, column: 21, scope: !380)
!382 = !DILocation(line: 278, column: 23, scope: !380)
!383 = !DILocation(line: 278, column: 18, scope: !380)
!384 = !DILocation(line: 278, column: 28, scope: !380)
!385 = !DILocation(line: 278, column: 16, scope: !380)
!386 = !DILocation(line: 279, column: 19, scope: !387)
!387 = distinct !DILexicalBlock(scope: !380, file: !9, line: 279, column: 17)
!388 = !DILocation(line: 279, column: 17, scope: !387)
!389 = !DILocation(line: 279, column: 24, scope: !387)
!390 = !DILocation(line: 279, column: 22, scope: !387)
!391 = !DILocation(line: 279, column: 17, scope: !380)
!392 = !DILocation(line: 280, column: 22, scope: !387)
!393 = !DILocation(line: 280, column: 17, scope: !387)
!394 = !DILocation(line: 280, column: 15, scope: !387)
!395 = !DILocation(line: 280, column: 20, scope: !387)
!396 = !DILocation(line: 282, column: 9, scope: !369)
!397 = !DILocation(line: 283, column: 16, scope: !398)
!398 = distinct !DILexicalBlock(scope: !363, file: !9, line: 282, column: 16)
!399 = !DILocation(line: 283, column: 14, scope: !398)
!400 = !DILocation(line: 285, column: 15, scope: !350)
!401 = !DILocation(line: 285, column: 20, scope: !350)
!402 = !DILocation(line: 285, column: 18, scope: !350)
!403 = !DILocation(line: 285, column: 24, scope: !350)
!404 = !DILocation(line: 285, column: 12, scope: !350)
!405 = !DILocation(line: 287, column: 15, scope: !291)
!406 = !DILocation(line: 287, column: 20, scope: !291)
!407 = !DILocation(line: 287, column: 18, scope: !291)
!408 = !DILocation(line: 287, column: 24, scope: !291)
!409 = !DILocation(line: 287, column: 9, scope: !291)
!410 = !DILocation(line: 287, column: 7, scope: !291)
!411 = !DILocation(line: 287, column: 12, scope: !291)
!412 = !DILocation(line: 288, column: 5, scope: !291)
!413 = !DILocation(line: 254, column: 28, scope: !286)
!414 = !DILocation(line: 254, column: 5, scope: !286)
!415 = !DILocation(line: 289, column: 10, scope: !228)
!416 = !DILocation(line: 289, column: 5, scope: !228)
!417 = !DILocation(line: 291, column: 1, scope: !13)
