; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [40 x i8] c"bisect: Couldn't allocate memory for wu\00", align 1
@stderr = external global %struct._IO_FILE*, align 8

; Function Attrs: nounwind uwtable
define i32 @sturm(i32 %n, double* %c, double* %b, double* %beta, double %x) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !20, metadata !21), !dbg !22
  call void @llvm.dbg.value(metadata double* %c, i64 0, metadata !23, metadata !21), !dbg !24
  call void @llvm.dbg.value(metadata double* %b, i64 0, metadata !25, metadata !21), !dbg !26
  call void @llvm.dbg.value(metadata double* %beta, i64 0, metadata !27, metadata !21), !dbg !28
  call void @llvm.dbg.value(metadata double %x, i64 0, metadata !29, metadata !21), !dbg !30
  call void @llvm.dbg.declare(metadata !2, metadata !31, metadata !21), !dbg !32
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !33, metadata !21), !dbg !34
  call void @llvm.dbg.value(metadata double 1.000000e+00, i64 0, metadata !35, metadata !21), !dbg !36
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !37, metadata !21), !dbg !38
  %0 = ptrtoint double* %beta to i64
  %1 = ptrtoint double* %b to i64
  %c26 = ptrtoint double* %c to i64
  %beta28 = ptrtoint double* %beta to i64
  %b27 = ptrtoint double* %b to i64
  %2 = ptrtoint double* undef to i64
  %3 = add i64 %b27, 8, !dbg !39
  %4 = add i64 %b27, 8, !dbg !39
  %5 = add i64 %beta28, 8, !dbg !39
  %6 = add i64 %beta28, 8, !dbg !39
  %7 = add i64 %1, 8, !dbg !39
  %8 = add i64 %1, 8, !dbg !39
  %9 = add i64 %0, 8, !dbg !39
  %10 = add i64 %0, 8, !dbg !39
  br label %for.cond, !dbg !41

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %a.0 = phi i32 [ 0, %entry ], [ %a.1, %for.inc ]
  %q.0 = phi double [ 1.000000e+00, %entry ], [ %q.1, %for.inc ]
  %cmp = icmp slt i32 %i.0, %n, !dbg !42
  %11 = icmp ult double* %c, %c, !dbg !39
  %umin = select i1 %11, double* %c, double* %c, !dbg !39
  %12 = icmp ugt double* %c, %c, !dbg !39
  %umax = select i1 %12, double* %c, double* %c, !dbg !39
  %umax22 = ptrtoint double* %umax to i64
  %13 = add i64 %umax22, 8, !dbg !39
  %14 = icmp ult double* %c, %c, !dbg !39
  %umin23 = select i1 %14, double* %c, double* %c, !dbg !39
  %15 = icmp ugt double* %c, %c, !dbg !39
  %umax24 = select i1 %15, double* %c, double* %c, !dbg !39
  %umax2425 = ptrtoint double* %umax24 to i64
  %16 = add i64 %umax2425, 8, !dbg !39
  %17 = icmp sgt i32 %n, 0, !dbg !39
  %smax = select i1 %17, i32 %n, i32 0, !dbg !39
  %18 = mul i32 1, %smax, !dbg !39
  %19 = add i32 0, %18, !dbg !39
  %20 = ptrtoint double* %umin to i64, !dbg !39
  %21 = sub i64 %13, %20, !dbg !39
  %22 = ptrtoint double* undef to i64, !dbg !39
  %23 = sub i64 %3, %1, !dbg !39
  %24 = ptrtoint double* undef to i64, !dbg !39
  %25 = sub i64 %5, %0, !dbg !39
  %26 = icmp ult double* %c, %c, !dbg !39
  %umin29 = select i1 %26, double* %c, double* %c, !dbg !39
  %27 = icmp ugt double* %c, %c, !dbg !39
  %umax30 = select i1 %27, double* %c, double* %c, !dbg !39
  %umax3031 = ptrtoint double* %umax30 to i64
  %28 = add i64 %umax3031, 8, !dbg !39
  %29 = icmp ult double* %c, %c, !dbg !39
  %umin32 = select i1 %29, double* %c, double* %c, !dbg !39
  %30 = icmp ugt double* %c, %c, !dbg !39
  %umax33 = select i1 %30, double* %c, double* %c, !dbg !39
  %umax3334 = ptrtoint double* %umax33 to i64
  %31 = add i64 %umax3334, 8, !dbg !39
  %32 = icmp sgt i32 %n, 0, !dbg !39
  %smax35 = select i1 %32, i32 %n, i32 0, !dbg !39
  %33 = mul i32 1, %smax35, !dbg !39
  %34 = add i32 0, %33, !dbg !39
  %35 = ptrtoint double* %umin29 to i64, !dbg !39
  %36 = sub i64 %28, %35, !dbg !39
  %37 = ptrtoint double* %b to i64, !dbg !39
  %38 = sub i64 %7, %37, !dbg !39
  %39 = ptrtoint double* %beta to i64, !dbg !39
  %40 = sub i64 %9, %39, !dbg !39
  br i1 %cmp, label %for.body, label %for.end, !dbg !39

for.body:                                         ; preds = %for.cond
  %cmp1 = fcmp une double %q.0, 0.000000e+00, !dbg !44
  br i1 %cmp1, label %if.then, label %if.else, !dbg !47

if.then:                                          ; preds = %for.body
  %idxprom = sext i32 %i.0 to i64, !dbg !48
  %arrayidx = getelementptr inbounds double, double* %c, i64 %idxprom, !dbg !48
  %tmp5 = load double, double* %arrayidx, align 8, !dbg !48
  %sub = fsub double %tmp5, %x, !dbg !50
  %idxprom2 = sext i32 %i.0 to i64, !dbg !51
  %arrayidx3 = getelementptr inbounds double, double* %beta, i64 %idxprom2, !dbg !51
  %tmp9 = load double, double* %arrayidx3, align 8, !dbg !51
  %div = fdiv double %tmp9, %q.0, !dbg !52
  %sub4 = fsub double %sub, %div, !dbg !53
  call void @llvm.dbg.value(metadata double %sub4, i64 0, metadata !35, metadata !21), !dbg !36
  br label %if.end, !dbg !54

if.else:                                          ; preds = %for.body
  %idxprom5 = sext i32 %i.0 to i64, !dbg !55
  %arrayidx6 = getelementptr inbounds double, double* %c, i64 %idxprom5, !dbg !55
  %tmp13 = load double, double* %arrayidx6, align 8, !dbg !55
  %sub7 = fsub double %tmp13, %x, !dbg !57
  %idxprom8 = sext i32 %i.0 to i64, !dbg !58
  %arrayidx9 = getelementptr inbounds double, double* %b, i64 %idxprom8, !dbg !58
  %tmp17 = load double, double* %arrayidx9, align 8, !dbg !58
  %call = call double @fabs(double %tmp17) #1, !dbg !59
  %div10 = fdiv double %call, 0x3CB0000000000000, !dbg !60
  %sub11 = fsub double %sub7, %div10, !dbg !61
  call void @llvm.dbg.value(metadata double %sub11, i64 0, metadata !35, metadata !21), !dbg !36
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %q.1 = phi double [ %sub4, %if.then ], [ %sub11, %if.else ]
  %cmp12 = fcmp olt double %q.1, 0.000000e+00, !dbg !62
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !64

if.then.13:                                       ; preds = %if.end
  %add = add nsw i32 %a.0, 1, !dbg !65
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !33, metadata !21), !dbg !34
  br label %if.end.14, !dbg !66

if.end.14:                                        ; preds = %if.then.13, %if.end
  %a.1 = phi i32 [ %add, %if.then.13 ], [ %a.0, %if.end ]
  br label %for.inc, !dbg !67

for.inc:                                          ; preds = %if.end.14
  %inc = add nsw i32 %i.0, 1, !dbg !68
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !37, metadata !21), !dbg !38
  br label %for.cond, !dbg !69

for.end:                                          ; preds = %for.cond
  %a.0.lcssa = phi i32 [ %a.0, %for.cond ]
  ret i32 %a.0.lcssa, !dbg !70
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone
declare double @fabs(double) #2

; Function Attrs: nounwind uwtable
define void @dbisect(double* %c, double* %b, double* %beta, i32 %n, i32 %m1, i32 %m2, double %eps1, double* %eps2, i32* %z, double* %x) #0 {
entry:
  call void @llvm.dbg.value(metadata double* %c, i64 0, metadata !71, metadata !21), !dbg !72
  call void @llvm.dbg.value(metadata double* %b, i64 0, metadata !73, metadata !21), !dbg !74
  call void @llvm.dbg.value(metadata double* %beta, i64 0, metadata !75, metadata !21), !dbg !76
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !77, metadata !21), !dbg !78
  call void @llvm.dbg.value(metadata i32 %m1, i64 0, metadata !79, metadata !21), !dbg !80
  call void @llvm.dbg.value(metadata i32 %m2, i64 0, metadata !81, metadata !21), !dbg !82
  call void @llvm.dbg.value(metadata double %eps1, i64 0, metadata !83, metadata !21), !dbg !84
  call void @llvm.dbg.value(metadata double* %eps2, i64 0, metadata !85, metadata !21), !dbg !86
  call void @llvm.dbg.value(metadata i32* %z, i64 0, metadata !87, metadata !21), !dbg !88
  call void @llvm.dbg.value(metadata double* %x, i64 0, metadata !89, metadata !21), !dbg !90
  %arrayidx = getelementptr inbounds double, double* %b, i64 0, !dbg !91
  store double 0.000000e+00, double* %arrayidx, align 8, !dbg !92
  %arrayidx1 = getelementptr inbounds double, double* %beta, i64 0, !dbg !93
  store double 0.000000e+00, double* %arrayidx1, align 8, !dbg !94
  %sub = sub nsw i32 %n, 1, !dbg !95
  %idxprom = sext i32 %sub to i64, !dbg !96
  %arrayidx2 = getelementptr inbounds double, double* %c, i64 %idxprom, !dbg !96
  %tmp4 = load double, double* %arrayidx2, align 8, !dbg !96
  %sub3 = sub nsw i32 %n, 1, !dbg !97
  %idxprom4 = sext i32 %sub3 to i64, !dbg !98
  %arrayidx5 = getelementptr inbounds double, double* %b, i64 %idxprom4, !dbg !98
  %tmp7 = load double, double* %arrayidx5, align 8, !dbg !98
  %call = call double @fabs(double %tmp7) #1, !dbg !99
  %mul = fmul double 1.010000e+00, %call, !dbg !100
  %sub6 = fsub double %tmp4, %mul, !dbg !101
  call void @llvm.dbg.value(metadata double %sub6, i64 0, metadata !102, metadata !21), !dbg !103
  %sub7 = sub nsw i32 %n, 1, !dbg !104
  %idxprom8 = sext i32 %sub7 to i64, !dbg !105
  %arrayidx9 = getelementptr inbounds double, double* %c, i64 %idxprom8, !dbg !105
  %tmp10 = load double, double* %arrayidx9, align 8, !dbg !105
  %sub10 = sub nsw i32 %n, 1, !dbg !106
  %idxprom11 = sext i32 %sub10 to i64, !dbg !107
  %arrayidx12 = getelementptr inbounds double, double* %b, i64 %idxprom11, !dbg !107
  %tmp13 = load double, double* %arrayidx12, align 8, !dbg !107
  %call13 = call double @fabs(double %tmp13) #1, !dbg !108
  %mul14 = fmul double 1.010000e+00, %call13, !dbg !109
  %add = fadd double %tmp10, %mul14, !dbg !110
  call void @llvm.dbg.value(metadata double %add, i64 0, metadata !111, metadata !21), !dbg !112
  %sub15 = sub nsw i32 %n, 2, !dbg !113
  call void @llvm.dbg.value(metadata i32 %sub15, i64 0, metadata !115, metadata !21), !dbg !116
  %0 = add i32 %n, -2, !dbg !117
  %1 = add i32 %n, -2, !dbg !117
  %2 = add i32 %n, -1, !dbg !117
  %3 = add i32 %n, -1, !dbg !117
  %4 = add i32 %n, -2, !dbg !117
  %5 = add i32 %n, -2, !dbg !117
  %6 = add i32 %n, -1, !dbg !117
  %7 = add i32 %n, -1, !dbg !117
  br label %for.cond, !dbg !118

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ %sub15, %entry ], [ %dec, %for.inc ]
  %xmin.0 = phi double [ %sub6, %entry ], [ %xmin.1, %for.inc ]
  %xmax.0 = phi double [ %add, %entry ], [ %xmax.1, %for.inc ]
  %cmp = icmp sge i32 %i.0, 0, !dbg !119
  %8 = sext i32 %0 to i64, !dbg !117
  %9 = mul i64 8, %8, !dbg !117
  %scevgep = getelementptr double, double* %c, i64 %8, !dbg !117
  %scevgep147 = ptrtoint double* %scevgep to i64
  %10 = icmp ult double* %scevgep, %scevgep, !dbg !117
  %umin = select i1 %10, double* %scevgep, double* %scevgep, !dbg !117
  %11 = icmp ult double* %scevgep, %umin, !dbg !117
  %umin133 = select i1 %11, double* %scevgep, double* %umin, !dbg !117
  %12 = icmp ult double* %scevgep, %umin133, !dbg !117
  %umin134 = select i1 %12, double* %scevgep, double* %umin133, !dbg !117
  %13 = sext i32 %1 to i64, !dbg !117
  %14 = mul i64 8, %13, !dbg !117
  %scevgep135 = getelementptr double, double* %c, i64 %13, !dbg !117
  %scevgep135146 = ptrtoint double* %scevgep135 to i64
  %15 = icmp ugt double* %scevgep135, %scevgep135, !dbg !117
  %umax = select i1 %15, double* %scevgep135, double* %scevgep135, !dbg !117
  %16 = icmp ugt double* %scevgep135, %umax, !dbg !117
  %umax136 = select i1 %16, double* %scevgep135, double* %umax, !dbg !117
  %17 = icmp ugt double* %scevgep135, %umax136, !dbg !117
  %umax137 = select i1 %17, double* %scevgep135, double* %umax136, !dbg !117
  %umax137138 = ptrtoint double* %umax137 to i64
  %18 = add i64 %umax137138, 8, !dbg !117
  %19 = icmp ult double* %scevgep, %scevgep, !dbg !117
  %umin139 = select i1 %19, double* %scevgep, double* %scevgep, !dbg !117
  %20 = icmp ult double* %scevgep, %umin139, !dbg !117
  %umin140 = select i1 %20, double* %scevgep, double* %umin139, !dbg !117
  %21 = icmp ult double* %scevgep, %umin140, !dbg !117
  %umin141 = select i1 %21, double* %scevgep, double* %umin140, !dbg !117
  %22 = icmp ugt double* %scevgep135, %scevgep135, !dbg !117
  %umax142 = select i1 %22, double* %scevgep135, double* %scevgep135, !dbg !117
  %23 = icmp ugt double* %scevgep135, %umax142, !dbg !117
  %umax143 = select i1 %23, double* %scevgep135, double* %umax142, !dbg !117
  %24 = icmp ugt double* %scevgep135, %umax143, !dbg !117
  %umax144 = select i1 %24, double* %scevgep135, double* %umax143, !dbg !117
  %umax144145 = ptrtoint double* %umax144 to i64
  %25 = add i64 %umax144145, 8, !dbg !117
  %scevgep148 = getelementptr double, double* %b, i64 %8, !dbg !117
  %scevgep148159 = ptrtoint double* %scevgep148 to i64
  %26 = sext i32 %2 to i64, !dbg !117
  %27 = mul i64 8, %26, !dbg !117
  %scevgep149 = getelementptr double, double* %b, i64 %26, !dbg !117
  %28 = icmp ult double* %scevgep149, %scevgep148, !dbg !117
  %umin150 = select i1 %28, double* %scevgep149, double* %scevgep148, !dbg !117
  %scevgep151 = getelementptr double, double* %b, i64 %13, !dbg !117
  %scevgep151158 = ptrtoint double* %scevgep151 to i64
  %29 = sext i32 %3 to i64, !dbg !117
  %30 = mul i64 8, %29, !dbg !117
  %scevgep152 = getelementptr double, double* %b, i64 %29, !dbg !117
  %31 = icmp ugt double* %scevgep152, %scevgep151, !dbg !117
  %umax153 = select i1 %31, double* %scevgep152, double* %scevgep151, !dbg !117
  %umax153154 = ptrtoint double* %umax153 to i64
  %32 = add i64 %umax153154, 8, !dbg !117
  %33 = icmp ult double* %scevgep149, %scevgep148, !dbg !117
  %umin155 = select i1 %33, double* %scevgep149, double* %scevgep148, !dbg !117
  %34 = icmp ugt double* %scevgep152, %scevgep151, !dbg !117
  %umax156 = select i1 %34, double* %scevgep152, double* %scevgep151, !dbg !117
  %umax156157 = ptrtoint double* %umax156 to i64
  %35 = add i64 %umax156157, 8, !dbg !117
  %36 = sext i32 %4 to i64, !dbg !117
  %37 = mul i64 8, %36, !dbg !117
  %scevgep160 = getelementptr double, double* %c, i64 %36, !dbg !117
  %scevgep160177 = ptrtoint double* %scevgep160 to i64
  %38 = icmp ult double* %scevgep160, %scevgep160, !dbg !117
  %umin161 = select i1 %38, double* %scevgep160, double* %scevgep160, !dbg !117
  %39 = icmp ult double* %scevgep160, %umin161, !dbg !117
  %umin162 = select i1 %39, double* %scevgep160, double* %umin161, !dbg !117
  %40 = icmp ult double* %scevgep160, %umin162, !dbg !117
  %umin163 = select i1 %40, double* %scevgep160, double* %umin162, !dbg !117
  %41 = sext i32 %5 to i64, !dbg !117
  %42 = mul i64 8, %41, !dbg !117
  %scevgep164 = getelementptr double, double* %c, i64 %41, !dbg !117
  %scevgep164176 = ptrtoint double* %scevgep164 to i64
  %43 = icmp ugt double* %scevgep164, %scevgep164, !dbg !117
  %umax165 = select i1 %43, double* %scevgep164, double* %scevgep164, !dbg !117
  %44 = icmp ugt double* %scevgep164, %umax165, !dbg !117
  %umax166 = select i1 %44, double* %scevgep164, double* %umax165, !dbg !117
  %45 = icmp ugt double* %scevgep164, %umax166, !dbg !117
  %umax167 = select i1 %45, double* %scevgep164, double* %umax166, !dbg !117
  %umax167168 = ptrtoint double* %umax167 to i64
  %46 = add i64 %umax167168, 8, !dbg !117
  %47 = icmp ult double* %scevgep160, %scevgep160, !dbg !117
  %umin169 = select i1 %47, double* %scevgep160, double* %scevgep160, !dbg !117
  %48 = icmp ult double* %scevgep160, %umin169, !dbg !117
  %umin170 = select i1 %48, double* %scevgep160, double* %umin169, !dbg !117
  %49 = icmp ult double* %scevgep160, %umin170, !dbg !117
  %umin171 = select i1 %49, double* %scevgep160, double* %umin170, !dbg !117
  %50 = icmp ugt double* %scevgep164, %scevgep164, !dbg !117
  %umax172 = select i1 %50, double* %scevgep164, double* %scevgep164, !dbg !117
  %51 = icmp ugt double* %scevgep164, %umax172, !dbg !117
  %umax173 = select i1 %51, double* %scevgep164, double* %umax172, !dbg !117
  %52 = icmp ugt double* %scevgep164, %umax173, !dbg !117
  %umax174 = select i1 %52, double* %scevgep164, double* %umax173, !dbg !117
  %umax174175 = ptrtoint double* %umax174 to i64
  %53 = add i64 %umax174175, 8, !dbg !117
  %scevgep178 = getelementptr double, double* %b, i64 %36, !dbg !117
  %scevgep178189 = ptrtoint double* %scevgep178 to i64
  %54 = sext i32 %6 to i64, !dbg !117
  %55 = mul i64 8, %54, !dbg !117
  %scevgep179 = getelementptr double, double* %b, i64 %54, !dbg !117
  %56 = icmp ult double* %scevgep179, %scevgep178, !dbg !117
  %umin180 = select i1 %56, double* %scevgep179, double* %scevgep178, !dbg !117
  %scevgep181 = getelementptr double, double* %b, i64 %41, !dbg !117
  %scevgep181188 = ptrtoint double* %scevgep181 to i64
  %57 = sext i32 %7 to i64, !dbg !117
  %58 = mul i64 8, %57, !dbg !117
  %scevgep182 = getelementptr double, double* %b, i64 %57, !dbg !117
  %59 = icmp ugt double* %scevgep182, %scevgep181, !dbg !117
  %umax183 = select i1 %59, double* %scevgep182, double* %scevgep181, !dbg !117
  %umax183184 = ptrtoint double* %umax183 to i64
  %60 = add i64 %umax183184, 8, !dbg !117
  %61 = icmp ult double* %scevgep179, %scevgep178, !dbg !117
  %umin185 = select i1 %61, double* %scevgep179, double* %scevgep178, !dbg !117
  %62 = icmp ugt double* %scevgep182, %scevgep181, !dbg !117
  %umax186 = select i1 %62, double* %scevgep182, double* %scevgep181, !dbg !117
  %umax186187 = ptrtoint double* %umax186 to i64
  %63 = add i64 %umax186187, 8, !dbg !117
  br i1 %cmp, label %for.body, label %for.end, !dbg !117

for.body:                                         ; preds = %for.cond
  %idxprom16 = sext i32 %i.0 to i64, !dbg !121
  %arrayidx17 = getelementptr inbounds double, double* %b, i64 %idxprom16, !dbg !121
  %tmp18 = load double, double* %arrayidx17, align 8, !dbg !121
  %call18 = call double @fabs(double %tmp18) #1, !dbg !123
  %add19 = add nsw i32 %i.0, 1, !dbg !124
  %idxprom20 = sext i32 %add19 to i64, !dbg !125
  %arrayidx21 = getelementptr inbounds double, double* %b, i64 %idxprom20, !dbg !125
  %tmp21 = load double, double* %arrayidx21, align 8, !dbg !125
  %call22 = call double @fabs(double %tmp21) #1, !dbg !126
  %add23 = fadd double %call18, %call22, !dbg !127
  %mul24 = fmul double 1.010000e+00, %add23, !dbg !128
  call void @llvm.dbg.value(metadata double %mul24, i64 0, metadata !129, metadata !21), !dbg !130
  %idxprom25 = sext i32 %i.0 to i64, !dbg !131
  %arrayidx26 = getelementptr inbounds double, double* %c, i64 %idxprom25, !dbg !131
  %tmp24 = load double, double* %arrayidx26, align 8, !dbg !131
  %add27 = fadd double %tmp24, %mul24, !dbg !133
  %cmp28 = fcmp ogt double %add27, %xmax.0, !dbg !134
  br i1 %cmp28, label %if.then, label %if.end, !dbg !135

if.then:                                          ; preds = %for.body
  %idxprom29 = sext i32 %i.0 to i64, !dbg !136
  %arrayidx30 = getelementptr inbounds double, double* %c, i64 %idxprom29, !dbg !136
  %tmp29 = load double, double* %arrayidx30, align 8, !dbg !136
  %add31 = fadd double %tmp29, %mul24, !dbg !137
  call void @llvm.dbg.value(metadata double %add31, i64 0, metadata !111, metadata !21), !dbg !112
  br label %if.end, !dbg !138

if.end:                                           ; preds = %if.then, %for.body
  %xmax.1 = phi double [ %add31, %if.then ], [ %xmax.0, %for.body ]
  %idxprom32 = sext i32 %i.0 to i64, !dbg !139
  %arrayidx33 = getelementptr inbounds double, double* %c, i64 %idxprom32, !dbg !139
  %tmp33 = load double, double* %arrayidx33, align 8, !dbg !139
  %sub34 = fsub double %tmp33, %mul24, !dbg !141
  %cmp35 = fcmp olt double %sub34, %xmin.0, !dbg !142
  br i1 %cmp35, label %if.then.36, label %if.end.40, !dbg !143

if.then.36:                                       ; preds = %if.end
  %idxprom37 = sext i32 %i.0 to i64, !dbg !144
  %arrayidx38 = getelementptr inbounds double, double* %c, i64 %idxprom37, !dbg !144
  %tmp38 = load double, double* %arrayidx38, align 8, !dbg !144
  %sub39 = fsub double %tmp38, %mul24, !dbg !145
  call void @llvm.dbg.value(metadata double %sub39, i64 0, metadata !102, metadata !21), !dbg !103
  br label %if.end.40, !dbg !146

if.end.40:                                        ; preds = %if.then.36, %if.end
  %xmin.1 = phi double [ %sub39, %if.then.36 ], [ %xmin.0, %if.end ]
  br label %for.inc, !dbg !147

for.inc:                                          ; preds = %if.end.40
  %dec = add nsw i32 %i.0, -1, !dbg !148
  call void @llvm.dbg.value(metadata i32 %dec, i64 0, metadata !115, metadata !21), !dbg !116
  br label %for.cond, !dbg !149

for.end:                                          ; preds = %for.cond
  %xmax.0.lcssa = phi double [ %xmax.0, %for.cond ]
  %xmin.0.lcssa = phi double [ %xmin.0, %for.cond ]
  %add41 = fadd double %xmin.0.lcssa, %xmax.0.lcssa, !dbg !150
  %cmp42 = fcmp ogt double %add41, 0.000000e+00, !dbg !151
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !152

cond.true:                                        ; preds = %for.end
  br label %cond.end, !dbg !152

cond.false:                                       ; preds = %for.end
  %sub43 = fsub double -0.000000e+00, %xmin.0.lcssa, !dbg !153
  br label %cond.end, !dbg !152

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %xmax.0.lcssa, %cond.true ], [ %sub43, %cond.false ], !dbg !152
  %mul44 = fmul double 0x3CB0000000000000, %cond, !dbg !154
  store double %mul44, double* %eps2, align 8, !dbg !157
  %cmp45 = fcmp ole double %eps1, 0.000000e+00, !dbg !158
  br i1 %cmp45, label %if.then.46, label %if.end.47, !dbg !160

if.then.46:                                       ; preds = %cond.end
  %tmp48 = load double, double* %eps2, align 8, !dbg !161
  call void @llvm.dbg.value(metadata double %tmp48, i64 0, metadata !83, metadata !21), !dbg !84
  br label %if.end.47, !dbg !162

if.end.47:                                        ; preds = %if.then.46, %cond.end
  %eps1.addr.0 = phi double [ %tmp48, %if.then.46 ], [ %eps1, %cond.end ]
  %mul48 = fmul double 5.000000e-01, %eps1.addr.0, !dbg !163
  %tmp51 = load double, double* %eps2, align 8, !dbg !164
  %mul49 = fmul double 7.000000e+00, %tmp51, !dbg !165
  %add50 = fadd double %mul48, %mul49, !dbg !166
  store double %add50, double* %eps2, align 8, !dbg !167
  %add51 = add nsw i32 %n, 1, !dbg !168
  %conv = sext i32 %add51 to i64, !dbg !171
  %call52 = call noalias i8* @calloc(i64 %conv, i64 8) #6, !dbg !172
  %tmp54 = bitcast i8* %call52 to double*, !dbg !173
  call void @llvm.dbg.value(metadata double* %tmp54, i64 0, metadata !174, metadata !21), !dbg !175
  %cmp53 = icmp eq double* %tmp54, null, !dbg !176
  br i1 %cmp53, label %if.then.55, label %if.end.57, !dbg !177

if.then.55:                                       ; preds = %if.end.47
  %tmp55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !178
  %call56 = call i32 @fputs(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i32 0, i32 0), %struct._IO_FILE* %tmp55), !dbg !180
  call void @exit(i32 1) #7, !dbg !181
  unreachable, !dbg !181

if.end.57:                                        ; preds = %if.end.47
  call void @llvm.dbg.value(metadata double %xmax.0, i64 0, metadata !182, metadata !21), !dbg !183
  call void @llvm.dbg.value(metadata i32 %m2, i64 0, metadata !115, metadata !21), !dbg !116
  br label %for.cond.58, !dbg !184

for.cond.58:                                      ; preds = %for.inc.66, %if.end.57
  %i.1 = phi i32 [ %m2, %if.end.57 ], [ %dec67, %for.inc.66 ]
  %cmp59 = icmp sge i32 %i.1, %m1, !dbg !186
  br i1 %cmp59, label %for.body.61, label %for.end.68, !dbg !188

for.body.61:                                      ; preds = %for.cond.58
  %idxprom62 = sext i32 %i.1 to i64, !dbg !189
  %arrayidx63 = getelementptr inbounds double, double* %x, i64 %idxprom62, !dbg !189
  store double %xmax.0.lcssa, double* %arrayidx63, align 8, !dbg !191
  %idxprom64 = sext i32 %i.1 to i64, !dbg !192
  %arrayidx65 = getelementptr inbounds double, double* %tmp54, i64 %idxprom64, !dbg !192
  store double %xmin.0.lcssa, double* %arrayidx65, align 8, !dbg !193
  br label %for.inc.66, !dbg !194

for.inc.66:                                       ; preds = %for.body.61
  %dec67 = add nsw i32 %i.1, -1, !dbg !195
  call void @llvm.dbg.value(metadata i32 %dec67, i64 0, metadata !115, metadata !21), !dbg !116
  br label %for.cond.58, !dbg !196

for.end.68:                                       ; preds = %for.cond.58
  store i32 0, i32* %z, align 4, !dbg !197
  call void @llvm.dbg.value(metadata i32 %m2, i64 0, metadata !198, metadata !21), !dbg !199
  br label %for.cond.69, !dbg !200

for.cond.69:                                      ; preds = %for.inc.135, %for.end.68
  %k.0 = phi i32 [ %m2, %for.end.68 ], [ %dec136, %for.inc.135 ]
  %x0.0 = phi double [ %xmax.0.lcssa, %for.end.68 ], [ %x0.2.lcssa, %for.inc.135 ]
  %cmp70 = icmp sge i32 %k.0, %m1, !dbg !202
  br i1 %cmp70, label %for.body.72, label %for.end.137, !dbg !204

for.body.72:                                      ; preds = %for.cond.69
  call void @llvm.dbg.value(metadata double %xmin.0, i64 0, metadata !205, metadata !21), !dbg !206
  call void @llvm.dbg.value(metadata i32 %k.0, i64 0, metadata !115, metadata !21), !dbg !116
  br label %for.cond.73, !dbg !207

for.cond.73:                                      ; preds = %for.inc.85, %for.body.72
  %i.2 = phi i32 [ %k.0, %for.body.72 ], [ %dec86, %for.inc.85 ]
  %cmp74 = icmp sge i32 %i.2, %m1, !dbg !210
  br i1 %cmp74, label %for.body.76, label %for.end.87.loopexit, !dbg !212

for.body.76:                                      ; preds = %for.cond.73
  %idxprom77 = sext i32 %i.2 to i64, !dbg !213
  %arrayidx78 = getelementptr inbounds double, double* %tmp54, i64 %idxprom77, !dbg !213
  %tmp78 = load double, double* %arrayidx78, align 8, !dbg !213
  %cmp79 = fcmp olt double %xmin.0.lcssa, %tmp78, !dbg !216
  br i1 %cmp79, label %if.then.81, label %if.end.84, !dbg !217

if.then.81:                                       ; preds = %for.body.76
  %i.2.lcssa132 = phi i32 [ %i.2, %for.body.76 ]
  %idxprom82 = sext i32 %i.2.lcssa132 to i64, !dbg !218
  %arrayidx83 = getelementptr inbounds double, double* %tmp54, i64 %idxprom82, !dbg !218
  %tmp81 = load double, double* %arrayidx83, align 8, !dbg !218
  call void @llvm.dbg.value(metadata double %tmp81, i64 0, metadata !205, metadata !21), !dbg !206
  br label %for.end.87, !dbg !220

if.end.84:                                        ; preds = %for.body.76
  br label %for.inc.85, !dbg !221

for.inc.85:                                       ; preds = %if.end.84
  %dec86 = add nsw i32 %i.2, -1, !dbg !222
  call void @llvm.dbg.value(metadata i32 %dec86, i64 0, metadata !115, metadata !21), !dbg !116
  br label %for.cond.73, !dbg !223

for.end.87.loopexit:                              ; preds = %for.cond.73
  br label %for.end.87, !dbg !224

for.end.87:                                       ; preds = %for.end.87.loopexit, %if.then.81
  %xu.0 = phi double [ %tmp81, %if.then.81 ], [ %xmin.0.lcssa, %for.end.87.loopexit ]
  %idxprom88 = sext i32 %k.0 to i64, !dbg !224
  %arrayidx89 = getelementptr inbounds double, double* %x, i64 %idxprom88, !dbg !224
  %tmp86 = load double, double* %arrayidx89, align 8, !dbg !224
  %cmp90 = fcmp ogt double %x0.0, %tmp86, !dbg !226
  br i1 %cmp90, label %if.then.92, label %if.end.95, !dbg !227

if.then.92:                                       ; preds = %for.end.87
  %idxprom93 = sext i32 %k.0 to i64, !dbg !228
  %arrayidx94 = getelementptr inbounds double, double* %x, i64 %idxprom93, !dbg !228
  %tmp89 = load double, double* %arrayidx94, align 8, !dbg !228
  call void @llvm.dbg.value(metadata double %tmp89, i64 0, metadata !182, metadata !21), !dbg !183
  br label %if.end.95, !dbg !229

if.end.95:                                        ; preds = %if.then.92, %for.end.87
  %x0.1 = phi double [ %tmp89, %if.then.92 ], [ %x0.0, %for.end.87 ]
  %add96 = fadd double %xu.0, %x0.1, !dbg !230
  %div = fdiv double %add96, 2.000000e+00, !dbg !231
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !232, metadata !21), !dbg !233
  br label %while.cond, !dbg !234

while.cond:                                       ; preds = %if.end.128, %if.end.95
  %x1.0 = phi double [ %div, %if.end.95 ], [ %div130, %if.end.128 ]
  %xu.1 = phi double [ %xu.0, %if.end.95 ], [ %xu.3, %if.end.128 ]
  %x0.2 = phi double [ %x0.1, %if.end.95 ], [ %x0.3, %if.end.128 ]
  %sub97 = fsub double %x0.2, %xu.1, !dbg !235
  %call98 = call double @fabs(double %xu.1) #1, !dbg !236
  %call99 = call double @fabs(double %x0.2) #1, !dbg !237
  %add100 = fadd double %call98, %call99, !dbg !238
  %mul101 = fmul double 0x3CC0000000000000, %add100, !dbg !239
  %add102 = fadd double %mul101, %eps1.addr.0, !dbg !240
  %cmp103 = fcmp ogt double %sub97, %add102, !dbg !241
  br i1 %cmp103, label %while.body, label %while.end, !dbg !234

while.body:                                       ; preds = %while.cond
  %tmp98 = load i32, i32* %z, align 4, !dbg !242
  %add105 = add nsw i32 %tmp98, 1, !dbg !244
  store i32 %add105, i32* %z, align 4, !dbg !245
  %call106 = call i32 @sturm(i32 %n, double* %c, double* %b, double* %beta, double %x1.0), !dbg !246
  call void @llvm.dbg.value(metadata i32 %call106, i64 0, metadata !247, metadata !21), !dbg !248
  %cmp107 = icmp slt i32 %call106, %k.0, !dbg !249
  br i1 %cmp107, label %if.then.109, label %if.else.127, !dbg !251

if.then.109:                                      ; preds = %while.body
  %cmp110 = icmp slt i32 %call106, %m1, !dbg !252
  br i1 %cmp110, label %if.then.112, label %if.else, !dbg !255

if.then.112:                                      ; preds = %if.then.109
  %idxprom113 = sext i32 %m1 to i64, !dbg !256
  %arrayidx114 = getelementptr inbounds double, double* %tmp54, i64 %idxprom113, !dbg !256
  store double %x1.0, double* %arrayidx114, align 8, !dbg !257
  call void @llvm.dbg.value(metadata double %x1.0, i64 0, metadata !205, metadata !21), !dbg !206
  br label %if.end.126, !dbg !258

if.else:                                          ; preds = %if.then.109
  %add115 = add nsw i32 %call106, 1, !dbg !259
  %idxprom116 = sext i32 %add115 to i64, !dbg !261
  %arrayidx117 = getelementptr inbounds double, double* %tmp54, i64 %idxprom116, !dbg !261
  store double %x1.0, double* %arrayidx117, align 8, !dbg !262
  call void @llvm.dbg.value(metadata double %x1.0, i64 0, metadata !205, metadata !21), !dbg !206
  %idxprom118 = sext i32 %call106 to i64, !dbg !263
  %arrayidx119 = getelementptr inbounds double, double* %x, i64 %idxprom118, !dbg !263
  %tmp117 = load double, double* %arrayidx119, align 8, !dbg !263
  %cmp120 = fcmp ogt double %tmp117, %x1.0, !dbg !265
  br i1 %cmp120, label %if.then.122, label %if.end.125, !dbg !266

if.then.122:                                      ; preds = %if.else
  %idxprom123 = sext i32 %call106 to i64, !dbg !267
  %arrayidx124 = getelementptr inbounds double, double* %x, i64 %idxprom123, !dbg !267
  store double %x1.0, double* %arrayidx124, align 8, !dbg !268
  br label %if.end.125, !dbg !267

if.end.125:                                       ; preds = %if.then.122, %if.else
  br label %if.end.126

if.end.126:                                       ; preds = %if.end.125, %if.then.112
  br label %if.end.128, !dbg !269

if.else.127:                                      ; preds = %while.body
  call void @llvm.dbg.value(metadata double %x1.0, i64 0, metadata !182, metadata !21), !dbg !183
  br label %if.end.128

if.end.128:                                       ; preds = %if.else.127, %if.end.126
  %xu.3 = phi double [ %x1.0, %if.end.126 ], [ %xu.1, %if.else.127 ]
  %x0.3 = phi double [ %x0.2, %if.end.126 ], [ %x1.0, %if.else.127 ]
  %add129 = fadd double %xu.3, %x0.3, !dbg !270
  %div130 = fdiv double %add129, 2.000000e+00, !dbg !271
  call void @llvm.dbg.value(metadata double %div130, i64 0, metadata !232, metadata !21), !dbg !233
  br label %while.cond, !dbg !234

while.end:                                        ; preds = %while.cond
  %x0.2.lcssa = phi double [ %x0.2, %while.cond ]
  %xu.1.lcssa = phi double [ %xu.1, %while.cond ]
  %add131 = fadd double %xu.1.lcssa, %x0.2.lcssa, !dbg !272
  %div132 = fdiv double %add131, 2.000000e+00, !dbg !273
  %idxprom133 = sext i32 %k.0 to i64, !dbg !274
  %arrayidx134 = getelementptr inbounds double, double* %x, i64 %idxprom133, !dbg !274
  store double %div132, double* %arrayidx134, align 8, !dbg !275
  br label %for.inc.135, !dbg !276

for.inc.135:                                      ; preds = %while.end
  %dec136 = add nsw i32 %k.0, -1, !dbg !277
  call void @llvm.dbg.value(metadata i32 %dec136, i64 0, metadata !198, metadata !21), !dbg !199
  br label %for.cond.69, !dbg !278

for.end.137:                                      ; preds = %for.cond.69
  %tmp131 = bitcast double* %tmp54 to i8*, !dbg !279
  call void @free(i8* %tmp131) #6, !dbg !280
  ret void, !dbg !281
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

declare i32 @fputs(i8*, %struct._IO_FILE*) #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #5

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!17, !18}
!llvm.ident = !{!19}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !7)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/04-bisect")
!2 = !{}
!3 = !{!4, !5, !6}
!4 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!7 = !{!8, !13}
!8 = !DISubprogram(name: "sturm", scope: !9, file: !9, line: 24, type: !10, isLocal: false, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, double*, double*, double*, double)* @sturm, variables: !2)
!9 = !DIFile(filename: "/home/gleison/tf/Benchmarks/McCat/04-bisect/tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/04-bisect")
!10 = !DISubroutineType(types: !11)
!11 = !{!12, !12, !5, !5, !5, !4}
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DISubprogram(name: "dbisect", scope: !9, file: !9, line: 154, type: !14, isLocal: false, isDefinition: true, scopeLine: 213, flags: DIFlagPrototyped, isOptimized: false, function: void (double*, double*, double*, i32, i32, i32, double, double*, i32*, double*)* @dbisect, variables: !2)
!14 = !DISubroutineType(types: !15)
!15 = !{null, !5, !5, !5, !12, !12, !12, !4, !5, !16, !5}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!17 = !{i32 2, !"Dwarf Version", i32 4}
!18 = !{i32 2, !"Debug Info Version", i32 3}
!19 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !8, file: !9, line: 24, type: !12)
!21 = !DIExpression()
!22 = !DILocation(line: 24, column: 15, scope: !8)
!23 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !8, file: !9, line: 24, type: !5)
!24 = !DILocation(line: 24, column: 25, scope: !8)
!25 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !8, file: !9, line: 24, type: !5)
!26 = !DILocation(line: 24, column: 37, scope: !8)
!27 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "beta", arg: 4, scope: !8, file: !9, line: 24, type: !5)
!28 = !DILocation(line: 24, column: 49, scope: !8)
!29 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 5, scope: !8, file: !9, line: 24, type: !4)
!30 = !DILocation(line: 24, column: 64, scope: !8)
!31 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iq", scope: !8, file: !9, line: 80, type: !4)
!32 = !DILocation(line: 80, column: 13, scope: !8)
!33 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !8, file: !9, line: 79, type: !12)
!34 = !DILocation(line: 79, column: 7, scope: !8)
!35 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !8, file: !9, line: 80, type: !4)
!36 = !DILocation(line: 80, column: 10, scope: !8)
!37 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !8, file: !9, line: 78, type: !12)
!38 = !DILocation(line: 78, column: 7, scope: !8)
!39 = !DILocation(line: 85, column: 3, scope: !40)
!40 = distinct !DILexicalBlock(scope: !8, file: !9, line: 85, column: 3)
!41 = !DILocation(line: 85, column: 8, scope: !40)
!42 = !DILocation(line: 85, column: 17, scope: !43)
!43 = distinct !DILexicalBlock(scope: !40, file: !9, line: 85, column: 3)
!44 = !DILocation(line: 89, column: 11, scope: !45)
!45 = distinct !DILexicalBlock(scope: !46, file: !9, line: 89, column: 9)
!46 = distinct !DILexicalBlock(scope: !43, file: !9, line: 85, column: 27)
!47 = !DILocation(line: 89, column: 9, scope: !46)
!48 = !DILocation(line: 92, column: 12, scope: !49)
!49 = distinct !DILexicalBlock(scope: !45, file: !9, line: 89, column: 19)
!50 = !DILocation(line: 92, column: 17, scope: !49)
!51 = !DILocation(line: 92, column: 24, scope: !49)
!52 = !DILocation(line: 92, column: 32, scope: !49)
!53 = !DILocation(line: 92, column: 22, scope: !49)
!54 = !DILocation(line: 104, column: 5, scope: !49)
!55 = !DILocation(line: 105, column: 12, scope: !56)
!56 = distinct !DILexicalBlock(scope: !45, file: !9, line: 104, column: 12)
!57 = !DILocation(line: 105, column: 17, scope: !56)
!58 = !DILocation(line: 105, column: 29, scope: !56)
!59 = !DILocation(line: 105, column: 24, scope: !56)
!60 = !DILocation(line: 105, column: 35, scope: !56)
!61 = !DILocation(line: 105, column: 22, scope: !56)
!62 = !DILocation(line: 108, column: 11, scope: !63)
!63 = distinct !DILexicalBlock(scope: !46, file: !9, line: 108, column: 9)
!64 = !DILocation(line: 108, column: 9, scope: !46)
!65 = !DILocation(line: 109, column: 13, scope: !63)
!66 = !DILocation(line: 109, column: 7, scope: !63)
!67 = !DILocation(line: 110, column: 3, scope: !46)
!68 = !DILocation(line: 85, column: 23, scope: !43)
!69 = !DILocation(line: 85, column: 3, scope: !43)
!70 = !DILocation(line: 151, column: 3, scope: !8)
!71 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 1, scope: !13, file: !9, line: 154, type: !5)
!72 = !DILocation(line: 154, column: 21, scope: !13)
!73 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !13, file: !9, line: 154, type: !5)
!74 = !DILocation(line: 154, column: 33, scope: !13)
!75 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "beta", arg: 3, scope: !13, file: !9, line: 154, type: !5)
!76 = !DILocation(line: 154, column: 45, scope: !13)
!77 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 4, scope: !13, file: !9, line: 155, type: !12)
!78 = !DILocation(line: 155, column: 18, scope: !13)
!79 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m1", arg: 5, scope: !13, file: !9, line: 155, type: !12)
!80 = !DILocation(line: 155, column: 25, scope: !13)
!81 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m2", arg: 6, scope: !13, file: !9, line: 155, type: !12)
!82 = !DILocation(line: 155, column: 33, scope: !13)
!83 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eps1", arg: 7, scope: !13, file: !9, line: 155, type: !4)
!84 = !DILocation(line: 155, column: 44, scope: !13)
!85 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eps2", arg: 8, scope: !13, file: !9, line: 155, type: !5)
!86 = !DILocation(line: 155, column: 58, scope: !13)
!87 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z", arg: 9, scope: !13, file: !9, line: 155, type: !16)
!88 = !DILocation(line: 155, column: 69, scope: !13)
!89 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 10, scope: !13, file: !9, line: 156, type: !5)
!90 = !DILocation(line: 156, column: 21, scope: !13)
!91 = !DILocation(line: 216, column: 13, scope: !13)
!92 = !DILocation(line: 216, column: 18, scope: !13)
!93 = !DILocation(line: 216, column: 3, scope: !13)
!94 = !DILocation(line: 216, column: 11, scope: !13)
!95 = !DILocation(line: 219, column: 14, scope: !13)
!96 = !DILocation(line: 219, column: 10, scope: !13)
!97 = !DILocation(line: 219, column: 38, scope: !13)
!98 = !DILocation(line: 219, column: 34, scope: !13)
!99 = !DILocation(line: 219, column: 29, scope: !13)
!100 = !DILocation(line: 219, column: 27, scope: !13)
!101 = !DILocation(line: 219, column: 19, scope: !13)
!102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xmin", scope: !13, file: !9, line: 215, type: !4)
!103 = !DILocation(line: 215, column: 13, scope: !13)
!104 = !DILocation(line: 220, column: 14, scope: !13)
!105 = !DILocation(line: 220, column: 10, scope: !13)
!106 = !DILocation(line: 220, column: 38, scope: !13)
!107 = !DILocation(line: 220, column: 34, scope: !13)
!108 = !DILocation(line: 220, column: 29, scope: !13)
!109 = !DILocation(line: 220, column: 27, scope: !13)
!110 = !DILocation(line: 220, column: 19, scope: !13)
!111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xmax", scope: !13, file: !9, line: 215, type: !4)
!112 = !DILocation(line: 215, column: 19, scope: !13)
!113 = !DILocation(line: 221, column: 14, scope: !114)
!114 = distinct !DILexicalBlock(scope: !13, file: !9, line: 221, column: 3)
!115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !13, file: !9, line: 214, type: !12)
!116 = !DILocation(line: 214, column: 7, scope: !13)
!117 = !DILocation(line: 221, column: 3, scope: !114)
!118 = !DILocation(line: 221, column: 8, scope: !114)
!119 = !DILocation(line: 221, column: 21, scope: !120)
!120 = distinct !DILexicalBlock(scope: !114, file: !9, line: 221, column: 3)
!121 = !DILocation(line: 222, column: 23, scope: !122)
!122 = distinct !DILexicalBlock(scope: !120, file: !9, line: 221, column: 32)
!123 = !DILocation(line: 222, column: 18, scope: !122)
!124 = !DILocation(line: 222, column: 40, scope: !122)
!125 = !DILocation(line: 222, column: 36, scope: !122)
!126 = !DILocation(line: 222, column: 31, scope: !122)
!127 = !DILocation(line: 222, column: 29, scope: !122)
!128 = !DILocation(line: 222, column: 15, scope: !122)
!129 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !13, file: !9, line: 215, type: !4)
!130 = !DILocation(line: 215, column: 10, scope: !13)
!131 = !DILocation(line: 223, column: 9, scope: !132)
!132 = distinct !DILexicalBlock(scope: !122, file: !9, line: 223, column: 9)
!133 = !DILocation(line: 223, column: 14, scope: !132)
!134 = !DILocation(line: 223, column: 18, scope: !132)
!135 = !DILocation(line: 223, column: 9, scope: !122)
!136 = !DILocation(line: 224, column: 14, scope: !132)
!137 = !DILocation(line: 224, column: 19, scope: !132)
!138 = !DILocation(line: 224, column: 7, scope: !132)
!139 = !DILocation(line: 225, column: 9, scope: !140)
!140 = distinct !DILexicalBlock(scope: !122, file: !9, line: 225, column: 9)
!141 = !DILocation(line: 225, column: 14, scope: !140)
!142 = !DILocation(line: 225, column: 18, scope: !140)
!143 = !DILocation(line: 225, column: 9, scope: !122)
!144 = !DILocation(line: 226, column: 14, scope: !140)
!145 = !DILocation(line: 226, column: 19, scope: !140)
!146 = !DILocation(line: 226, column: 7, scope: !140)
!147 = !DILocation(line: 227, column: 3, scope: !122)
!148 = !DILocation(line: 221, column: 28, scope: !120)
!149 = !DILocation(line: 221, column: 3, scope: !120)
!150 = !DILocation(line: 232, column: 31, scope: !13)
!151 = !DILocation(line: 232, column: 38, scope: !13)
!152 = !DILocation(line: 232, column: 26, scope: !13)
!153 = !DILocation(line: 232, column: 51, scope: !13)
!154 = !DILocation(line: 232, column: 23, scope: !155)
!155 = !DILexicalBlockFile(scope: !156, file: !9, discriminator: 4)
!156 = !DILexicalBlockFile(scope: !13, file: !9, discriminator: 3)
!157 = !DILocation(line: 232, column: 9, scope: !13)
!158 = !DILocation(line: 233, column: 12, scope: !159)
!159 = distinct !DILexicalBlock(scope: !13, file: !9, line: 233, column: 7)
!160 = !DILocation(line: 233, column: 7, scope: !13)
!161 = !DILocation(line: 234, column: 12, scope: !159)
!162 = !DILocation(line: 234, column: 5, scope: !159)
!163 = !DILocation(line: 235, column: 15, scope: !13)
!164 = !DILocation(line: 235, column: 28, scope: !13)
!165 = !DILocation(line: 235, column: 26, scope: !13)
!166 = !DILocation(line: 235, column: 22, scope: !13)
!167 = !DILocation(line: 235, column: 9, scope: !13)
!168 = !DILocation(line: 241, column: 34, scope: !169)
!169 = distinct !DILexicalBlock(scope: !170, file: !9, line: 241, column: 9)
!170 = distinct !DILexicalBlock(scope: !13, file: !9, line: 236, column: 3)
!171 = !DILocation(line: 241, column: 32, scope: !169)
!172 = !DILocation(line: 241, column: 25, scope: !169)
!173 = !DILocation(line: 241, column: 15, scope: !169)
!174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wu", scope: !170, file: !9, line: 239, type: !5)
!175 = !DILocation(line: 239, column: 13, scope: !170)
!176 = !DILocation(line: 241, column: 56, scope: !169)
!177 = !DILocation(line: 241, column: 9, scope: !170)
!178 = !DILocation(line: 242, column: 56, scope: !179)
!179 = distinct !DILexicalBlock(scope: !169, file: !9, line: 241, column: 65)
!180 = !DILocation(line: 242, column: 7, scope: !179)
!181 = !DILocation(line: 243, column: 7, scope: !179)
!182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x0", scope: !170, file: !9, line: 238, type: !4)
!183 = !DILocation(line: 238, column: 20, scope: !170)
!184 = !DILocation(line: 248, column: 10, scope: !185)
!185 = distinct !DILexicalBlock(scope: !170, file: !9, line: 248, column: 5)
!186 = !DILocation(line: 248, column: 20, scope: !187)
!187 = distinct !DILexicalBlock(scope: !185, file: !9, line: 248, column: 5)
!188 = !DILocation(line: 248, column: 5, scope: !185)
!189 = !DILocation(line: 249, column: 7, scope: !190)
!190 = distinct !DILexicalBlock(scope: !187, file: !9, line: 248, column: 32)
!191 = !DILocation(line: 249, column: 12, scope: !190)
!192 = !DILocation(line: 250, column: 7, scope: !190)
!193 = !DILocation(line: 250, column: 13, scope: !190)
!194 = !DILocation(line: 251, column: 5, scope: !190)
!195 = !DILocation(line: 248, column: 28, scope: !187)
!196 = !DILocation(line: 248, column: 5, scope: !187)
!197 = !DILocation(line: 252, column: 8, scope: !170)
!198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !170, file: !9, line: 237, type: !12)
!199 = !DILocation(line: 237, column: 12, scope: !170)
!200 = !DILocation(line: 254, column: 10, scope: !201)
!201 = distinct !DILexicalBlock(scope: !170, file: !9, line: 254, column: 5)
!202 = !DILocation(line: 254, column: 20, scope: !203)
!203 = distinct !DILexicalBlock(scope: !201, file: !9, line: 254, column: 5)
!204 = !DILocation(line: 254, column: 5, scope: !201)
!205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "xu", scope: !170, file: !9, line: 238, type: !4)
!206 = !DILocation(line: 238, column: 16, scope: !170)
!207 = !DILocation(line: 256, column: 12, scope: !208)
!208 = distinct !DILexicalBlock(scope: !209, file: !9, line: 256, column: 7)
!209 = distinct !DILexicalBlock(scope: !203, file: !9, line: 254, column: 32)
!210 = !DILocation(line: 256, column: 21, scope: !211)
!211 = distinct !DILexicalBlock(scope: !208, file: !9, line: 256, column: 7)
!212 = !DILocation(line: 256, column: 7, scope: !208)
!213 = !DILocation(line: 257, column: 18, scope: !214)
!214 = distinct !DILexicalBlock(scope: !215, file: !9, line: 257, column: 13)
!215 = distinct !DILexicalBlock(scope: !211, file: !9, line: 256, column: 33)
!216 = !DILocation(line: 257, column: 16, scope: !214)
!217 = !DILocation(line: 257, column: 13, scope: !215)
!218 = !DILocation(line: 258, column: 16, scope: !219)
!219 = distinct !DILexicalBlock(scope: !214, file: !9, line: 257, column: 25)
!220 = !DILocation(line: 259, column: 11, scope: !219)
!221 = !DILocation(line: 261, column: 7, scope: !215)
!222 = !DILocation(line: 256, column: 29, scope: !211)
!223 = !DILocation(line: 256, column: 7, scope: !211)
!224 = !DILocation(line: 262, column: 16, scope: !225)
!225 = distinct !DILexicalBlock(scope: !209, file: !9, line: 262, column: 11)
!226 = !DILocation(line: 262, column: 14, scope: !225)
!227 = !DILocation(line: 262, column: 11, scope: !209)
!228 = !DILocation(line: 263, column: 14, scope: !225)
!229 = !DILocation(line: 263, column: 9, scope: !225)
!230 = !DILocation(line: 265, column: 16, scope: !209)
!231 = !DILocation(line: 265, column: 22, scope: !209)
!232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x1", scope: !170, file: !9, line: 238, type: !4)
!233 = !DILocation(line: 238, column: 12, scope: !170)
!234 = !DILocation(line: 266, column: 7, scope: !209)
!235 = !DILocation(line: 266, column: 17, scope: !209)
!236 = !DILocation(line: 266, column: 43, scope: !209)
!237 = !DILocation(line: 266, column: 54, scope: !209)
!238 = !DILocation(line: 266, column: 52, scope: !209)
!239 = !DILocation(line: 266, column: 40, scope: !209)
!240 = !DILocation(line: 266, column: 64, scope: !209)
!241 = !DILocation(line: 266, column: 22, scope: !209)
!242 = !DILocation(line: 267, column: 14, scope: !243)
!243 = distinct !DILexicalBlock(scope: !209, file: !9, line: 266, column: 72)
!244 = !DILocation(line: 267, column: 17, scope: !243)
!245 = !DILocation(line: 267, column: 12, scope: !243)
!246 = !DILocation(line: 271, column: 13, scope: !243)
!247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !170, file: !9, line: 237, type: !12)
!248 = !DILocation(line: 237, column: 9, scope: !170)
!249 = !DILocation(line: 274, column: 15, scope: !250)
!250 = distinct !DILexicalBlock(scope: !243, file: !9, line: 274, column: 13)
!251 = !DILocation(line: 274, column: 13, scope: !243)
!252 = !DILocation(line: 275, column: 17, scope: !253)
!253 = distinct !DILexicalBlock(scope: !254, file: !9, line: 275, column: 15)
!254 = distinct !DILexicalBlock(scope: !250, file: !9, line: 274, column: 20)
!255 = !DILocation(line: 275, column: 15, scope: !254)
!256 = !DILocation(line: 276, column: 18, scope: !253)
!257 = !DILocation(line: 276, column: 25, scope: !253)
!258 = !DILocation(line: 276, column: 13, scope: !253)
!259 = !DILocation(line: 278, column: 23, scope: !260)
!260 = distinct !DILexicalBlock(scope: !253, file: !9, line: 277, column: 16)
!261 = !DILocation(line: 278, column: 18, scope: !260)
!262 = !DILocation(line: 278, column: 28, scope: !260)
!263 = !DILocation(line: 279, column: 17, scope: !264)
!264 = distinct !DILexicalBlock(scope: !260, file: !9, line: 279, column: 17)
!265 = !DILocation(line: 279, column: 22, scope: !264)
!266 = !DILocation(line: 279, column: 17, scope: !260)
!267 = !DILocation(line: 280, column: 15, scope: !264)
!268 = !DILocation(line: 280, column: 20, scope: !264)
!269 = !DILocation(line: 282, column: 9, scope: !254)
!270 = !DILocation(line: 285, column: 18, scope: !243)
!271 = !DILocation(line: 285, column: 24, scope: !243)
!272 = !DILocation(line: 287, column: 18, scope: !209)
!273 = !DILocation(line: 287, column: 24, scope: !209)
!274 = !DILocation(line: 287, column: 7, scope: !209)
!275 = !DILocation(line: 287, column: 12, scope: !209)
!276 = !DILocation(line: 288, column: 5, scope: !209)
!277 = !DILocation(line: 254, column: 28, scope: !203)
!278 = !DILocation(line: 254, column: 5, scope: !203)
!279 = !DILocation(line: 289, column: 10, scope: !170)
!280 = !DILocation(line: 289, column: 5, scope: !170)
!281 = !DILocation(line: 291, column: 1, scope: !13)
