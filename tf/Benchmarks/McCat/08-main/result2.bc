; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.HPointStruct = type { double, double, double, double }
%struct.ObjPointStruct = type { double, double, double, double, double, double }

@.str = private unnamed_addr constant [30 x i8] c" [[ %.2f, %.2f, %.2f, %.2f] \0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"  [ %.2f, %.2f, %.2f, %.2f] \0A\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"  [ %.2f, %.2f, %.2f, %.2f]]\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @MultMatrixMatrix([4 x [4 x double]]* %A, [4 x [4 x double]]* %B, [4 x [4 x double]]* %C) #0 {
entry:
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %A, i64 0, metadata !59, metadata !60), !dbg !61
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %B, i64 0, metadata !62, metadata !60), !dbg !63
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %C, i64 0, metadata !64, metadata !60), !dbg !65
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !66, metadata !60), !dbg !68
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !69, metadata !60), !dbg !70
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !71, metadata !60), !dbg !72
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !66, metadata !60), !dbg !68
  %C24 = ptrtoint [4 x [4 x double]]* %C to i64
  %0 = ptrtoint [4 x [4 x double]]* %B to i64
  %1 = ptrtoint [4 x [4 x double]]* %A to i64
  %2 = ptrtoint [4 x [4 x double]]* undef to i64
  %3 = ptrtoint [4 x [4 x double]]* %B to i64
  %4 = ptrtoint [4 x [4 x double]]* undef to i64
  %5 = ptrtoint [4 x [4 x double]]* undef to i64
  %6 = ptrtoint [4 x [4 x double]]* undef to i64
  %7 = ptrtoint [4 x [4 x double]]* %A to i64
  %8 = ptrtoint [4 x [4 x double]]* undef to i64
  %9 = ptrtoint [4 x [4 x double]]* %B to i64
  %10 = ptrtoint [4 x [4 x double]]* %A to i64
  %11 = ptrtoint [4 x [4 x double]]* undef to i64
  %B22 = ptrtoint [4 x [4 x double]]* %B to i64
  %12 = ptrtoint [4 x [4 x double]]* undef to i64
  %13 = ptrtoint [4 x [4 x double]]* undef to i64
  %14 = ptrtoint [4 x [4 x double]]* undef to i64
  %A21 = ptrtoint [4 x [4 x double]]* %A to i64
  %15 = add i64 %A21, 32, !dbg !73
  %16 = add i64 %15, 8, !dbg !73
  %17 = add i64 %15, 8, !dbg !73
  %18 = add i64 %B22, 32, !dbg !73
  %19 = add i64 %18, 128, !dbg !73
  %20 = add i64 %19, 8, !dbg !73
  %21 = add i64 %19, 8, !dbg !73
  %22 = add i64 %C24, 32, !dbg !73
  %23 = add i64 %10, 128, !dbg !75
  %24 = add i64 %23, 32, !dbg !75
  %25 = add i64 %24, 8, !dbg !75
  %26 = add i64 %24, 8, !dbg !75
  %27 = add i64 %B22, 128, !dbg !75
  %28 = add i64 %27, 8, !dbg !75
  %29 = add i64 %27, 8, !dbg !75
  %30 = add i64 %C24, 128, !dbg !75
  %31 = add i64 %10, 128, !dbg !79
  %32 = add i64 %31, 8, !dbg !79
  %33 = add i64 %31, 8, !dbg !79
  %34 = add i64 %9, 32, !dbg !79
  %35 = add i64 %34, 8, !dbg !79
  %36 = add i64 %34, 8, !dbg !79
  %37 = add i64 %C24, 128, !dbg !79
  %38 = add i64 %37, 32, !dbg !79
  %39 = add i64 %7, 32, !dbg !73
  %40 = add i64 %39, 8, !dbg !73
  %41 = add i64 %39, 8, !dbg !73
  %42 = add i64 %3, 32, !dbg !73
  %43 = add i64 %42, 128, !dbg !73
  %44 = add i64 %43, 8, !dbg !73
  %45 = add i64 %43, 8, !dbg !73
  %46 = add i64 %C24, 32, !dbg !73
  %47 = add i64 %1, 128, !dbg !75
  %48 = add i64 %47, 32, !dbg !75
  %49 = add i64 %48, 8, !dbg !75
  %50 = add i64 %48, 8, !dbg !75
  %51 = add i64 %3, 128, !dbg !75
  %52 = add i64 %51, 8, !dbg !75
  %53 = add i64 %51, 8, !dbg !75
  %54 = add i64 %C24, 128, !dbg !75
  %55 = add i64 %1, 128, !dbg !79
  %56 = add i64 %55, 8, !dbg !79
  %57 = add i64 %55, 8, !dbg !79
  %58 = add i64 %0, 32, !dbg !79
  %59 = add i64 %58, 8, !dbg !79
  %60 = add i64 %58, 8, !dbg !79
  %61 = add i64 %C24, 128, !dbg !79
  %62 = add i64 %61, 32, !dbg !79
  br label %for.cond, !dbg !83

for.cond:                                         ; preds = %for.inc.24, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc25, %for.inc.24 ]
  %cmp = icmp slt i32 %i.0, 4, !dbg !84
  %63 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !73
  %64 = sub i64 %16, %10, !dbg !73
  %65 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !73
  %umin = select i1 %65, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !73
  %66 = icmp ult [4 x [4 x double]]* %C, %umin, !dbg !73
  %umin23 = select i1 %66, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin, !dbg !73
  %67 = icmp ugt i64 %22, %22, !dbg !73
  %umax = select i1 %67, i64 %22, i64 %22, !dbg !73
  %68 = icmp ugt i64 %22, %umax, !dbg !73
  %umax25 = select i1 %68, i64 %22, i64 %umax, !dbg !73
  %69 = add i64 %umax25, 8, !dbg !73
  %70 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !73
  %umin26 = select i1 %70, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !73
  %71 = icmp ult [4 x [4 x double]]* %C, %umin26, !dbg !73
  %umin27 = select i1 %71, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin26, !dbg !73
  %72 = icmp ugt i64 %22, %22, !dbg !73
  %umax28 = select i1 %72, i64 %22, i64 %22, !dbg !73
  %73 = icmp ugt i64 %22, %umax28, !dbg !73
  %umax29 = select i1 %73, i64 %22, i64 %umax28, !dbg !73
  %74 = add i64 %umax29, 8, !dbg !73
  %75 = ptrtoint [4 x [4 x double]]* %umin23 to i64, !dbg !73
  %76 = sub i64 %69, %75, !dbg !73
  %77 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !73
  %78 = sub i64 %40, %1, !dbg !73
  %79 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !73
  %umin46 = select i1 %79, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !73
  %80 = icmp ult [4 x [4 x double]]* %C, %umin46, !dbg !73
  %umin47 = select i1 %80, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin46, !dbg !73
  %81 = icmp ugt i64 %46, %46, !dbg !73
  %umax48 = select i1 %81, i64 %46, i64 %46, !dbg !73
  %82 = icmp ugt i64 %46, %umax48, !dbg !73
  %umax49 = select i1 %82, i64 %46, i64 %umax48, !dbg !73
  %83 = add i64 %umax49, 8, !dbg !73
  %84 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !73
  %umin50 = select i1 %84, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !73
  %85 = icmp ult [4 x [4 x double]]* %C, %umin50, !dbg !73
  %umin51 = select i1 %85, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin50, !dbg !73
  %86 = icmp ugt i64 %46, %46, !dbg !73
  %umax52 = select i1 %86, i64 %46, i64 %46, !dbg !73
  %87 = icmp ugt i64 %46, %umax52, !dbg !73
  %umax53 = select i1 %87, i64 %46, i64 %umax52, !dbg !73
  %88 = add i64 %umax53, 8, !dbg !73
  %89 = ptrtoint [4 x [4 x double]]* %umin47 to i64, !dbg !73
  %90 = sub i64 %83, %89, !dbg !73
  br i1 %cmp, label %for.body, label %for.end.26, !dbg !73

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !69, metadata !60), !dbg !70
  br label %for.cond.1, !dbg !85

for.cond.1:                                       ; preds = %for.inc.21, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc22, %for.inc.21 ]
  %cmp2 = icmp slt i32 %j.0, 4, !dbg !86
  %91 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !75
  %92 = sub i64 %28, %9, !dbg !75
  %93 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !75
  %umin30 = select i1 %93, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !75
  %94 = icmp ult [4 x [4 x double]]* %C, %umin30, !dbg !75
  %umin31 = select i1 %94, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin30, !dbg !75
  %95 = icmp ugt i64 %30, %30, !dbg !75
  %umax32 = select i1 %95, i64 %30, i64 %30, !dbg !75
  %96 = icmp ugt i64 %30, %umax32, !dbg !75
  %umax33 = select i1 %96, i64 %30, i64 %umax32, !dbg !75
  %97 = add i64 %umax33, 8, !dbg !75
  %98 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !75
  %umin34 = select i1 %98, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !75
  %99 = icmp ult [4 x [4 x double]]* %C, %umin34, !dbg !75
  %umin35 = select i1 %99, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin34, !dbg !75
  %100 = icmp ugt i64 %30, %30, !dbg !75
  %umax36 = select i1 %100, i64 %30, i64 %30, !dbg !75
  %101 = icmp ugt i64 %30, %umax36, !dbg !75
  %umax37 = select i1 %101, i64 %30, i64 %umax36, !dbg !75
  %102 = add i64 %umax37, 8, !dbg !75
  %103 = ptrtoint [4 x [4 x double]]* %umin31 to i64, !dbg !75
  %104 = sub i64 %97, %103, !dbg !75
  %105 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !75
  %106 = sub i64 %52, %0, !dbg !75
  %107 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !75
  %umin54 = select i1 %107, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !75
  %108 = icmp ult [4 x [4 x double]]* %C, %umin54, !dbg !75
  %umin55 = select i1 %108, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin54, !dbg !75
  %109 = icmp ugt i64 %54, %54, !dbg !75
  %umax56 = select i1 %109, i64 %54, i64 %54, !dbg !75
  %110 = icmp ugt i64 %54, %umax56, !dbg !75
  %umax57 = select i1 %110, i64 %54, i64 %umax56, !dbg !75
  %111 = add i64 %umax57, 8, !dbg !75
  %112 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !75
  %umin58 = select i1 %112, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !75
  %113 = icmp ult [4 x [4 x double]]* %C, %umin58, !dbg !75
  %umin59 = select i1 %113, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin58, !dbg !75
  %114 = icmp ugt i64 %54, %54, !dbg !75
  %umax60 = select i1 %114, i64 %54, i64 %54, !dbg !75
  %115 = icmp ugt i64 %54, %umax60, !dbg !75
  %umax61 = select i1 %115, i64 %54, i64 %umax60, !dbg !75
  %116 = add i64 %umax61, 8, !dbg !75
  %117 = ptrtoint [4 x [4 x double]]* %umin55 to i64, !dbg !75
  %118 = sub i64 %111, %117, !dbg !75
  br i1 %cmp2, label %for.body.3, label %for.end.23, !dbg !75

for.body.3:                                       ; preds = %for.cond.1
  %idxprom = sext i32 %j.0 to i64, !dbg !87
  %idxprom4 = sext i32 %i.0 to i64, !dbg !87
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %C, i32 0, i64 %idxprom4, !dbg !87
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 %idxprom, !dbg !87
  store double 0.000000e+00, double* %arrayidx5, align 8, !dbg !88
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !71, metadata !60), !dbg !72
  br label %for.cond.6, !dbg !89

for.cond.6:                                       ; preds = %for.inc, %for.body.3
  %k.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %cmp7 = icmp slt i32 %k.0, 4, !dbg !90
  %119 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !79
  %120 = sub i64 %32, %7, !dbg !79
  %121 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !79
  %122 = sub i64 %35, %3, !dbg !79
  %123 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !79
  %umin38 = select i1 %123, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !79
  %124 = icmp ult [4 x [4 x double]]* %C, %umin38, !dbg !79
  %umin39 = select i1 %124, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin38, !dbg !79
  %125 = icmp ugt i64 %38, %38, !dbg !79
  %umax40 = select i1 %125, i64 %38, i64 %38, !dbg !79
  %126 = icmp ugt i64 %38, %umax40, !dbg !79
  %umax41 = select i1 %126, i64 %38, i64 %umax40, !dbg !79
  %127 = add i64 %umax41, 8, !dbg !79
  %128 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !79
  %umin42 = select i1 %128, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !79
  %129 = icmp ult [4 x [4 x double]]* %C, %umin42, !dbg !79
  %umin43 = select i1 %129, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin42, !dbg !79
  %130 = icmp ugt i64 %38, %38, !dbg !79
  %umax44 = select i1 %130, i64 %38, i64 %38, !dbg !79
  %131 = icmp ugt i64 %38, %umax44, !dbg !79
  %umax45 = select i1 %131, i64 %38, i64 %umax44, !dbg !79
  %132 = add i64 %umax45, 8, !dbg !79
  %133 = ptrtoint [4 x [4 x double]]* %A to i64, !dbg !79
  %134 = sub i64 %56, %133, !dbg !79
  %135 = ptrtoint [4 x [4 x double]]* %B to i64, !dbg !79
  %136 = sub i64 %59, %135, !dbg !79
  %137 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !79
  %umin62 = select i1 %137, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !79
  %138 = icmp ult [4 x [4 x double]]* %C, %umin62, !dbg !79
  %umin63 = select i1 %138, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin62, !dbg !79
  %139 = icmp ugt i64 %62, %62, !dbg !79
  %umax64 = select i1 %139, i64 %62, i64 %62, !dbg !79
  %140 = icmp ugt i64 %62, %umax64, !dbg !79
  %umax65 = select i1 %140, i64 %62, i64 %umax64, !dbg !79
  %141 = add i64 %umax65, 8, !dbg !79
  %142 = icmp ult [4 x [4 x double]]* %C, %C, !dbg !79
  %umin66 = select i1 %142, [4 x [4 x double]]* %C, [4 x [4 x double]]* %C, !dbg !79
  %143 = icmp ult [4 x [4 x double]]* %C, %umin66, !dbg !79
  %umin67 = select i1 %143, [4 x [4 x double]]* %C, [4 x [4 x double]]* %umin66, !dbg !79
  %144 = icmp ugt i64 %62, %62, !dbg !79
  %umax68 = select i1 %144, i64 %62, i64 %62, !dbg !79
  %145 = icmp ugt i64 %62, %umax68, !dbg !79
  %umax69 = select i1 %145, i64 %62, i64 %umax68, !dbg !79
  %146 = add i64 %umax69, 8, !dbg !79
  br i1 %cmp7, label %for.body.8, label %for.end, !dbg !79

for.body.8:                                       ; preds = %for.cond.6
  %idxprom9 = sext i32 %k.0 to i64, !dbg !92
  %idxprom10 = sext i32 %i.0 to i64, !dbg !92
  %arrayidx11 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %A, i32 0, i64 %idxprom10, !dbg !92
  %arrayidx12 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx11, i32 0, i64 %idxprom9, !dbg !92
  %tmp9 = load double, double* %arrayidx12, align 8, !dbg !92
  %idxprom13 = sext i32 %j.0 to i64, !dbg !94
  %idxprom14 = sext i32 %k.0 to i64, !dbg !94
  %arrayidx15 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %B, i32 0, i64 %idxprom14, !dbg !94
  %arrayidx16 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx15, i32 0, i64 %idxprom13, !dbg !94
  %tmp13 = load double, double* %arrayidx16, align 8, !dbg !94
  %mul = fmul double %tmp9, %tmp13, !dbg !95
  %idxprom17 = sext i32 %j.0 to i64, !dbg !96
  %idxprom18 = sext i32 %i.0 to i64, !dbg !96
  %arrayidx19 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %C, i32 0, i64 %idxprom18, !dbg !96
  %arrayidx20 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx19, i32 0, i64 %idxprom17, !dbg !96
  %tmp17 = load double, double* %arrayidx20, align 8, !dbg !97
  %add = fadd double %tmp17, %mul, !dbg !97
  store double %add, double* %arrayidx20, align 8, !dbg !97
  br label %for.inc, !dbg !98

for.inc:                                          ; preds = %for.body.8
  %inc = add nsw i32 %k.0, 1, !dbg !99
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !71, metadata !60), !dbg !72
  br label %for.cond.6, !dbg !100

for.end:                                          ; preds = %for.cond.6
  br label %for.inc.21, !dbg !101

for.inc.21:                                       ; preds = %for.end
  %inc22 = add nsw i32 %j.0, 1, !dbg !102
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !69, metadata !60), !dbg !70
  br label %for.cond.1, !dbg !103

for.end.23:                                       ; preds = %for.cond.1
  br label %for.inc.24, !dbg !104

for.inc.24:                                       ; preds = %for.end.23
  %inc25 = add nsw i32 %i.0, 1, !dbg !105
  call void @llvm.dbg.value(metadata i32 %inc25, i64 0, metadata !66, metadata !60), !dbg !68
  br label %for.cond, !dbg !106

for.end.26:                                       ; preds = %for.cond
  ret void, !dbg !107
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @MultMatrixHPoint(%struct.HPointStruct* noalias sret %agg.result, [4 x [4 x double]]* %mat, %struct.HPointStruct* byval align 8 %P) #0 {
entry:
  %Res = alloca %struct.HPointStruct, align 8
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %mat, i64 0, metadata !108, metadata !60), !dbg !109
  call void @llvm.dbg.declare(metadata %struct.HPointStruct* %P, metadata !110, metadata !60), !dbg !111
  call void @llvm.dbg.declare(metadata %struct.HPointStruct* %Res, metadata !112, metadata !60), !dbg !113
  %x = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 0, !dbg !114
  %tmp = load double, double* %x, align 8, !dbg !114
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 0, !dbg !115
  %arrayidx1 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 0, !dbg !115
  %tmp2 = load double, double* %arrayidx1, align 8, !dbg !115
  %mul = fmul double %tmp, %tmp2, !dbg !116
  %y = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 1, !dbg !117
  %tmp3 = load double, double* %y, align 8, !dbg !117
  %arrayidx2 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 0, !dbg !118
  %arrayidx3 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx2, i32 0, i64 1, !dbg !118
  %tmp5 = load double, double* %arrayidx3, align 8, !dbg !118
  %mul4 = fmul double %tmp3, %tmp5, !dbg !119
  %add = fadd double %mul, %mul4, !dbg !120
  %z = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 2, !dbg !121
  %tmp6 = load double, double* %z, align 8, !dbg !121
  %arrayidx5 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 0, !dbg !122
  %arrayidx6 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx5, i32 0, i64 2, !dbg !122
  %tmp8 = load double, double* %arrayidx6, align 8, !dbg !122
  %mul7 = fmul double %tmp6, %tmp8, !dbg !123
  %add8 = fadd double %add, %mul7, !dbg !124
  %w = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 3, !dbg !125
  %tmp9 = load double, double* %w, align 8, !dbg !125
  %arrayidx9 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 0, !dbg !126
  %arrayidx10 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx9, i32 0, i64 3, !dbg !126
  %tmp11 = load double, double* %arrayidx10, align 8, !dbg !126
  %mul11 = fmul double %tmp9, %tmp11, !dbg !127
  %add12 = fadd double %add8, %mul11, !dbg !128
  %x13 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %Res, i32 0, i32 0, !dbg !129
  store double %add12, double* %x13, align 8, !dbg !130
  %x14 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 0, !dbg !131
  %tmp12 = load double, double* %x14, align 8, !dbg !131
  %arrayidx15 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 1, !dbg !132
  %arrayidx16 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx15, i32 0, i64 0, !dbg !132
  %tmp14 = load double, double* %arrayidx16, align 8, !dbg !132
  %mul17 = fmul double %tmp12, %tmp14, !dbg !133
  %y18 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 1, !dbg !134
  %tmp15 = load double, double* %y18, align 8, !dbg !134
  %arrayidx19 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 1, !dbg !135
  %arrayidx20 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx19, i32 0, i64 1, !dbg !135
  %tmp17 = load double, double* %arrayidx20, align 8, !dbg !135
  %mul21 = fmul double %tmp15, %tmp17, !dbg !136
  %add22 = fadd double %mul17, %mul21, !dbg !137
  %z23 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 2, !dbg !138
  %tmp18 = load double, double* %z23, align 8, !dbg !138
  %arrayidx24 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 1, !dbg !139
  %arrayidx25 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx24, i32 0, i64 2, !dbg !139
  %tmp20 = load double, double* %arrayidx25, align 8, !dbg !139
  %mul26 = fmul double %tmp18, %tmp20, !dbg !140
  %add27 = fadd double %add22, %mul26, !dbg !141
  %w28 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 3, !dbg !142
  %tmp21 = load double, double* %w28, align 8, !dbg !142
  %arrayidx29 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 1, !dbg !143
  %arrayidx30 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx29, i32 0, i64 3, !dbg !143
  %tmp23 = load double, double* %arrayidx30, align 8, !dbg !143
  %mul31 = fmul double %tmp21, %tmp23, !dbg !144
  %add32 = fadd double %add27, %mul31, !dbg !145
  %y33 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %Res, i32 0, i32 1, !dbg !146
  store double %add32, double* %y33, align 8, !dbg !147
  %x34 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 0, !dbg !148
  %tmp24 = load double, double* %x34, align 8, !dbg !148
  %arrayidx35 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 2, !dbg !149
  %arrayidx36 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx35, i32 0, i64 0, !dbg !149
  %tmp26 = load double, double* %arrayidx36, align 8, !dbg !149
  %mul37 = fmul double %tmp24, %tmp26, !dbg !150
  %y38 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 1, !dbg !151
  %tmp27 = load double, double* %y38, align 8, !dbg !151
  %arrayidx39 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 2, !dbg !152
  %arrayidx40 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx39, i32 0, i64 1, !dbg !152
  %tmp29 = load double, double* %arrayidx40, align 8, !dbg !152
  %mul41 = fmul double %tmp27, %tmp29, !dbg !153
  %add42 = fadd double %mul37, %mul41, !dbg !154
  %z43 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 2, !dbg !155
  %tmp30 = load double, double* %z43, align 8, !dbg !155
  %arrayidx44 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 2, !dbg !156
  %arrayidx45 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx44, i32 0, i64 2, !dbg !156
  %tmp32 = load double, double* %arrayidx45, align 8, !dbg !156
  %mul46 = fmul double %tmp30, %tmp32, !dbg !157
  %add47 = fadd double %add42, %mul46, !dbg !158
  %w48 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 3, !dbg !159
  %tmp33 = load double, double* %w48, align 8, !dbg !159
  %arrayidx49 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 2, !dbg !160
  %arrayidx50 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx49, i32 0, i64 3, !dbg !160
  %tmp35 = load double, double* %arrayidx50, align 8, !dbg !160
  %mul51 = fmul double %tmp33, %tmp35, !dbg !161
  %add52 = fadd double %add47, %mul51, !dbg !162
  %z53 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %Res, i32 0, i32 2, !dbg !163
  store double %add52, double* %z53, align 8, !dbg !164
  %x54 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 0, !dbg !165
  %tmp36 = load double, double* %x54, align 8, !dbg !165
  %arrayidx55 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 3, !dbg !166
  %arrayidx56 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx55, i32 0, i64 0, !dbg !166
  %tmp38 = load double, double* %arrayidx56, align 8, !dbg !166
  %mul57 = fmul double %tmp36, %tmp38, !dbg !167
  %y58 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 1, !dbg !168
  %tmp39 = load double, double* %y58, align 8, !dbg !168
  %arrayidx59 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 3, !dbg !169
  %arrayidx60 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx59, i32 0, i64 1, !dbg !169
  %tmp41 = load double, double* %arrayidx60, align 8, !dbg !169
  %mul61 = fmul double %tmp39, %tmp41, !dbg !170
  %add62 = fadd double %mul57, %mul61, !dbg !171
  %z63 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 2, !dbg !172
  %tmp42 = load double, double* %z63, align 8, !dbg !172
  %arrayidx64 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 3, !dbg !173
  %arrayidx65 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx64, i32 0, i64 2, !dbg !173
  %tmp44 = load double, double* %arrayidx65, align 8, !dbg !173
  %mul66 = fmul double %tmp42, %tmp44, !dbg !174
  %add67 = fadd double %add62, %mul66, !dbg !175
  %w68 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %P, i32 0, i32 3, !dbg !176
  %tmp45 = load double, double* %w68, align 8, !dbg !176
  %arrayidx69 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %mat, i32 0, i64 3, !dbg !177
  %arrayidx70 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx69, i32 0, i64 3, !dbg !177
  %tmp47 = load double, double* %arrayidx70, align 8, !dbg !177
  %mul71 = fmul double %tmp45, %tmp47, !dbg !178
  %add72 = fadd double %add67, %mul71, !dbg !179
  %w73 = getelementptr inbounds %struct.HPointStruct, %struct.HPointStruct* %Res, i32 0, i32 3, !dbg !180
  store double %add72, double* %w73, align 8, !dbg !181
  %tmp48 = bitcast %struct.HPointStruct* %agg.result to i8*, !dbg !182
  %tmp49 = bitcast %struct.HPointStruct* %Res to i8*, !dbg !182
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp48, i8* %tmp49, i64 32, i32 8, i1 false), !dbg !182
  ret void, !dbg !183
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define [4 x [4 x double]]* @CopyMatrix([4 x [4 x double]]* %Mat) #0 {
entry:
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %Mat, i64 0, metadata !184, metadata !60), !dbg !185
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* null, i64 0, metadata !186, metadata !60), !dbg !187
  %0 = ptrtoint [4 x [4 x double]]* %Mat to i64
  %1 = ptrtoint [4 x [4 x double]]* %Mat to i64
  %2 = ptrtoint [4 x [4 x double]]* %Mat to i64
  %Mat14 = ptrtoint [4 x [4 x double]]* %Mat to i64
  %cmp = icmp ne [4 x [4 x double]]* %Mat, null, !dbg !188
  br i1 %cmp, label %if.then, label %if.end, !dbg !190

if.then:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 128) #2, !dbg !191
  %3 = ptrtoint i8* %call to i64
  %4 = ptrtoint i8* %call to i64
  %5 = ptrtoint i8* %call to i64
  %call15 = ptrtoint i8* %call to i64
  %tmp1 = bitcast i8* %call to [4 x [4 x double]]*, !dbg !191
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %tmp1, i64 0, metadata !186, metadata !60), !dbg !187
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !193, metadata !60), !dbg !194
  %6 = add i64 %Mat14, 32, !dbg !195
  %7 = add i64 %6, 8, !dbg !195
  %8 = add i64 %6, 8, !dbg !195
  %9 = add i64 %call15, 32, !dbg !195
  %10 = add i64 %9, 1, !dbg !195
  %11 = add i64 %9, 1, !dbg !195
  %12 = add i64 %2, 128, !dbg !197
  %13 = add i64 %12, 8, !dbg !197
  %14 = add i64 %12, 8, !dbg !197
  %15 = add i64 %5, 128, !dbg !197
  %16 = add i64 %15, 1, !dbg !197
  %17 = add i64 %15, 1, !dbg !197
  %18 = add i64 %1, 32, !dbg !195
  %19 = add i64 %18, 8, !dbg !195
  %20 = add i64 %18, 8, !dbg !195
  %21 = add i64 %4, 32, !dbg !195
  %22 = add i64 %21, 1, !dbg !195
  %23 = add i64 %21, 1, !dbg !195
  %24 = add i64 %0, 128, !dbg !197
  %25 = add i64 %24, 8, !dbg !197
  %26 = add i64 %24, 8, !dbg !197
  %27 = add i64 %3, 128, !dbg !197
  %28 = add i64 %27, 1, !dbg !197
  %29 = add i64 %27, 1, !dbg !197
  br label %for.cond, !dbg !201

for.cond:                                         ; preds = %for.inc.11, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc12, %for.inc.11 ]
  %cmp1 = icmp slt i32 %i.0, 4, !dbg !202
  %30 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !195
  %31 = sub i64 %7, %2, !dbg !195
  %32 = ptrtoint i8* undef to i64, !dbg !195
  %33 = sub i64 %10, %5, !dbg !195
  %34 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !195
  %35 = sub i64 %19, %0, !dbg !195
  %36 = ptrtoint i8* undef to i64, !dbg !195
  %37 = sub i64 %22, %3, !dbg !195
  br i1 %cmp1, label %for.body, label %for.end.13, !dbg !195

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !203, metadata !60), !dbg !204
  br label %for.cond.2, !dbg !205

for.cond.2:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp3 = icmp slt i32 %j.0, 4, !dbg !206
  %38 = ptrtoint [4 x [4 x double]]* undef to i64, !dbg !197
  %39 = sub i64 %13, %1, !dbg !197
  %40 = ptrtoint i8* undef to i64, !dbg !197
  %41 = sub i64 %16, %4, !dbg !197
  %42 = ptrtoint [4 x [4 x double]]* %Mat to i64, !dbg !197
  %43 = sub i64 %25, %42, !dbg !197
  %44 = ptrtoint i8* %call to i64, !dbg !197
  %45 = sub i64 %28, %44, !dbg !197
  br i1 %cmp3, label %for.body.4, label %for.end, !dbg !197

for.body.4:                                       ; preds = %for.cond.2
  %idxprom = sext i32 %j.0 to i64, !dbg !208
  %idxprom5 = sext i32 %i.0 to i64, !dbg !208
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %Mat, i32 0, i64 %idxprom5, !dbg !208
  %arrayidx6 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 %idxprom, !dbg !208
  %tmp7 = load double, double* %arrayidx6, align 8, !dbg !208
  %idxprom7 = sext i32 %j.0 to i64, !dbg !210
  %idxprom8 = sext i32 %i.0 to i64, !dbg !210
  %arrayidx9 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %tmp1, i32 0, i64 %idxprom8, !dbg !210
  %arrayidx10 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx9, i32 0, i64 %idxprom7, !dbg !210
  store double %tmp7, double* %arrayidx10, align 8, !dbg !211
  br label %for.inc, !dbg !212

for.inc:                                          ; preds = %for.body.4
  %inc = add nsw i32 %j.0, 1, !dbg !213
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !203, metadata !60), !dbg !204
  br label %for.cond.2, !dbg !214

for.end:                                          ; preds = %for.cond.2
  br label %for.inc.11, !dbg !215

for.inc.11:                                       ; preds = %for.end
  %inc12 = add nsw i32 %i.0, 1, !dbg !216
  call void @llvm.dbg.value(metadata i32 %inc12, i64 0, metadata !193, metadata !60), !dbg !194
  br label %for.cond, !dbg !217

for.end.13:                                       ; preds = %for.cond
  br label %if.end, !dbg !218

if.end:                                           ; preds = %for.end.13, %entry
  %Res.0 = phi [4 x [4 x double]]* [ %tmp1, %for.end.13 ], [ null, %entry ]
  ret [4 x [4 x double]]* %Res.0, !dbg !219
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #3

; Function Attrs: nounwind uwtable
define [4 x [4 x double]]* @IdentMatrix() #0 {
entry:
  %SI = alloca [4 x [4 x double]], align 16
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %SI, metadata !220, metadata !60), !dbg !221
  %tmp = bitcast [4 x [4 x double]]* %SI to i8*, !dbg !221
  call void @llvm.memset.p0i8.i64(i8* %tmp, i8 0, i64 128, i32 16, i1 false), !dbg !221
  %tmp1 = bitcast i8* %tmp to [4 x [4 x double]]*, !dbg !221
  %tmp2 = getelementptr [4 x [4 x double]], [4 x [4 x double]]* %tmp1, i32 0, i32 0, !dbg !221
  %tmp3 = getelementptr [4 x double], [4 x double]* %tmp2, i32 0, i32 0, !dbg !221
  store double 1.000000e+00, double* %tmp3, !dbg !221
  %tmp4 = getelementptr [4 x [4 x double]], [4 x [4 x double]]* %tmp1, i32 0, i32 1, !dbg !221
  %tmp5 = getelementptr [4 x double], [4 x double]* %tmp4, i32 0, i32 1, !dbg !221
  store double 1.000000e+00, double* %tmp5, !dbg !221
  %tmp6 = getelementptr [4 x [4 x double]], [4 x [4 x double]]* %tmp1, i32 0, i32 2, !dbg !221
  %tmp7 = getelementptr [4 x double], [4 x double]* %tmp6, i32 0, i32 2, !dbg !221
  store double 1.000000e+00, double* %tmp7, !dbg !221
  %tmp8 = getelementptr [4 x [4 x double]], [4 x [4 x double]]* %tmp1, i32 0, i32 3, !dbg !221
  %tmp9 = getelementptr [4 x double], [4 x double]* %tmp8, i32 0, i32 3, !dbg !221
  store double 1.000000e+00, double* %tmp9, !dbg !221
  %call = call noalias i8* @malloc(i64 128) #2, !dbg !222
  %tmp10 = bitcast i8* %call to [4 x [4 x double]]*, !dbg !222
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %tmp10, i64 0, metadata !223, metadata !60), !dbg !224
  %call1 = call [4 x [4 x double]]* @CopyMatrix([4 x [4 x double]]* %SI), !dbg !225
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call1, i64 0, metadata !223, metadata !60), !dbg !224
  ret [4 x [4 x double]]* %call1, !dbg !226
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define [4 x [4 x double]]* @TranslateMatrix(double %dx, double %dy, double %dz) #0 {
entry:
  call void @llvm.dbg.value(metadata double %dx, i64 0, metadata !227, metadata !60), !dbg !228
  call void @llvm.dbg.value(metadata double %dy, i64 0, metadata !229, metadata !60), !dbg !230
  call void @llvm.dbg.value(metadata double %dz, i64 0, metadata !231, metadata !60), !dbg !232
  %call = call [4 x [4 x double]]* @IdentMatrix(), !dbg !233
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call, i64 0, metadata !234, metadata !60), !dbg !235
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call, i32 0, i64 0, !dbg !236
  %arrayidx1 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 3, !dbg !236
  store double %dx, double* %arrayidx1, align 8, !dbg !237
  %arrayidx2 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call, i32 0, i64 1, !dbg !238
  %arrayidx3 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx2, i32 0, i64 3, !dbg !238
  store double %dy, double* %arrayidx3, align 8, !dbg !239
  %arrayidx4 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call, i32 0, i64 2, !dbg !240
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx4, i32 0, i64 3, !dbg !240
  store double %dz, double* %arrayidx5, align 8, !dbg !241
  ret [4 x [4 x double]]* %call, !dbg !242
}

; Function Attrs: nounwind uwtable
define [4 x [4 x double]]* @RotateMatrix(double %rx, double %ry, double %rz) #0 {
entry:
  call void @llvm.dbg.value(metadata double %rx, i64 0, metadata !243, metadata !60), !dbg !244
  call void @llvm.dbg.value(metadata double %ry, i64 0, metadata !245, metadata !60), !dbg !246
  call void @llvm.dbg.value(metadata double %rz, i64 0, metadata !247, metadata !60), !dbg !248
  %mul = fmul double 0x3F91DF46A2529E84, %rx, !dbg !249
  %call = call double @cos(double %mul) #2, !dbg !250
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !251, metadata !60), !dbg !252
  %mul1 = fmul double 0x3F91DF46A2529E84, %rx, !dbg !253
  %call2 = call double @sin(double %mul1) #2, !dbg !254
  call void @llvm.dbg.value(metadata double %call2, i64 0, metadata !255, metadata !60), !dbg !256
  %mul3 = fmul double 0x3F91DF46A2529E84, %ry, !dbg !257
  %call4 = call double @cos(double %mul3) #2, !dbg !258
  call void @llvm.dbg.value(metadata double %call4, i64 0, metadata !259, metadata !60), !dbg !260
  %mul5 = fmul double 0x3F91DF46A2529E84, %ry, !dbg !261
  %call6 = call double @sin(double %mul5) #2, !dbg !262
  call void @llvm.dbg.value(metadata double %call6, i64 0, metadata !263, metadata !60), !dbg !264
  %mul7 = fmul double 0x3F91DF46A2529E84, %rz, !dbg !265
  %call8 = call double @cos(double %mul7) #2, !dbg !266
  call void @llvm.dbg.value(metadata double %call8, i64 0, metadata !267, metadata !60), !dbg !268
  %mul9 = fmul double 0x3F91DF46A2529E84, %rz, !dbg !269
  %call10 = call double @sin(double %mul9) #2, !dbg !270
  call void @llvm.dbg.value(metadata double %call10, i64 0, metadata !271, metadata !60), !dbg !272
  %call11 = call [4 x [4 x double]]* @IdentMatrix(), !dbg !273
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call11, i64 0, metadata !274, metadata !60), !dbg !275
  %call12 = call [4 x [4 x double]]* @IdentMatrix(), !dbg !276
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call12, i64 0, metadata !277, metadata !60), !dbg !278
  %call13 = call [4 x [4 x double]]* @IdentMatrix(), !dbg !279
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call13, i64 0, metadata !280, metadata !60), !dbg !281
  %call14 = call [4 x [4 x double]]* @IdentMatrix(), !dbg !282
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call14, i64 0, metadata !283, metadata !60), !dbg !284
  %call15 = call [4 x [4 x double]]* @IdentMatrix(), !dbg !285
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call15, i64 0, metadata !286, metadata !60), !dbg !287
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call11, i32 0, i64 1, !dbg !288
  %arrayidx16 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 1, !dbg !288
  store double %call, double* %arrayidx16, align 8, !dbg !289
  %sub = fsub double -0.000000e+00, %call2, !dbg !290
  %arrayidx17 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call11, i32 0, i64 1, !dbg !291
  %arrayidx18 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx17, i32 0, i64 2, !dbg !291
  store double %sub, double* %arrayidx18, align 8, !dbg !292
  %arrayidx19 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call11, i32 0, i64 2, !dbg !293
  %arrayidx20 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx19, i32 0, i64 1, !dbg !293
  store double %call2, double* %arrayidx20, align 8, !dbg !294
  %arrayidx21 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call11, i32 0, i64 2, !dbg !295
  %arrayidx22 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx21, i32 0, i64 2, !dbg !295
  store double %call, double* %arrayidx22, align 8, !dbg !296
  %arrayidx23 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call12, i32 0, i64 0, !dbg !297
  %arrayidx24 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx23, i32 0, i64 0, !dbg !297
  store double %call4, double* %arrayidx24, align 8, !dbg !298
  %arrayidx25 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call12, i32 0, i64 0, !dbg !299
  %arrayidx26 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx25, i32 0, i64 2, !dbg !299
  store double %call6, double* %arrayidx26, align 8, !dbg !300
  %sub27 = fsub double -0.000000e+00, %call6, !dbg !301
  %arrayidx28 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call12, i32 0, i64 2, !dbg !302
  %arrayidx29 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx28, i32 0, i64 0, !dbg !302
  store double %sub27, double* %arrayidx29, align 8, !dbg !303
  %arrayidx30 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call12, i32 0, i64 2, !dbg !304
  %arrayidx31 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx30, i32 0, i64 2, !dbg !304
  store double %call4, double* %arrayidx31, align 8, !dbg !305
  %arrayidx32 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call13, i32 0, i64 0, !dbg !306
  %arrayidx33 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx32, i32 0, i64 0, !dbg !306
  store double %call8, double* %arrayidx33, align 8, !dbg !307
  %sub34 = fsub double -0.000000e+00, %call10, !dbg !308
  %arrayidx35 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call13, i32 0, i64 0, !dbg !309
  %arrayidx36 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx35, i32 0, i64 1, !dbg !309
  store double %sub34, double* %arrayidx36, align 8, !dbg !310
  %arrayidx37 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call13, i32 0, i64 1, !dbg !311
  %arrayidx38 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx37, i32 0, i64 0, !dbg !311
  store double %call10, double* %arrayidx38, align 8, !dbg !312
  %arrayidx39 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call13, i32 0, i64 1, !dbg !313
  %arrayidx40 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx39, i32 0, i64 1, !dbg !313
  store double %call8, double* %arrayidx40, align 8, !dbg !314
  call void @MultMatrixMatrix([4 x [4 x double]]* %call11, [4 x [4 x double]]* %call12, [4 x [4 x double]]* %call14), !dbg !315
  call void @MultMatrixMatrix([4 x [4 x double]]* %call14, [4 x [4 x double]]* %call13, [4 x [4 x double]]* %call15), !dbg !316
  ret [4 x [4 x double]]* %call15, !dbg !317
}

; Function Attrs: nounwind
declare double @cos(double) #3

; Function Attrs: nounwind
declare double @sin(double) #3

; Function Attrs: nounwind uwtable
define [4 x [4 x double]]* @ScaleMatrix(double %sx, double %sy, double %sz) #0 {
entry:
  call void @llvm.dbg.value(metadata double %sx, i64 0, metadata !318, metadata !60), !dbg !319
  call void @llvm.dbg.value(metadata double %sy, i64 0, metadata !320, metadata !60), !dbg !321
  call void @llvm.dbg.value(metadata double %sz, i64 0, metadata !322, metadata !60), !dbg !323
  %call = call [4 x [4 x double]]* @IdentMatrix(), !dbg !324
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call, i64 0, metadata !325, metadata !60), !dbg !326
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call, i32 0, i64 0, !dbg !327
  %arrayidx1 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 0, !dbg !327
  store double %sx, double* %arrayidx1, align 8, !dbg !328
  %arrayidx2 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call, i32 0, i64 1, !dbg !329
  %arrayidx3 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx2, i32 0, i64 1, !dbg !329
  store double %sy, double* %arrayidx3, align 8, !dbg !330
  %arrayidx4 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %call, i32 0, i64 2, !dbg !331
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx4, i32 0, i64 2, !dbg !331
  store double %sz, double* %arrayidx5, align 8, !dbg !332
  ret [4 x [4 x double]]* %call, !dbg !333
}

; Function Attrs: nounwind uwtable
define void @RotatePoint(%struct.ObjPointStruct* noalias sret %agg.result, %struct.ObjPointStruct* byval align 8 %a, double %rx, double %ry, double %rz) #0 {
entry:
  %A = alloca %struct.HPointStruct, align 8
  %tmp = alloca %struct.HPointStruct, align 8
  %tmp1 = alloca %struct.HPointStruct, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjPointStruct* %a, metadata !334, metadata !60), !dbg !335
  call void @llvm.dbg.value(metadata double %rx, i64 0, metadata !336, metadata !60), !dbg !337
  call void @llvm.dbg.value(metadata double %ry, i64 0, metadata !338, metadata !60), !dbg !339
  call void @llvm.dbg.value(metadata double %rz, i64 0, metadata !340, metadata !60), !dbg !341
  call void @llvm.dbg.declare(metadata %struct.HPointStruct* %A, metadata !342, metadata !60), !dbg !343
  call void @PointToHPoint(%struct.HPointStruct* sret %tmp, %struct.ObjPointStruct* byval align 8 %a), !dbg !344
  %tmp2 = bitcast %struct.HPointStruct* %A to i8*, !dbg !344
  %tmp3 = bitcast %struct.HPointStruct* %tmp to i8*, !dbg !344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp2, i8* %tmp3, i64 32, i32 8, i1 false), !dbg !344
  %call = call [4 x [4 x double]]* @RotateMatrix(double %rx, double %ry, double %rz), !dbg !345
  call void @llvm.dbg.value(metadata [4 x [4 x double]]* %call, i64 0, metadata !346, metadata !60), !dbg !347
  call void @MultMatrixHPoint(%struct.HPointStruct* sret %tmp1, [4 x [4 x double]]* %call, %struct.HPointStruct* byval align 8 %A), !dbg !348
  %tmp8 = bitcast %struct.HPointStruct* %A to i8*, !dbg !348
  %tmp9 = bitcast %struct.HPointStruct* %tmp1 to i8*, !dbg !348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp8, i8* %tmp9, i64 32, i32 8, i1 false), !dbg !348
  %tmp10 = bitcast %struct.ObjPointStruct* %agg.result to i8*, !dbg !349
  %tmp11 = bitcast %struct.ObjPointStruct* %a to i8*, !dbg !349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp10, i8* %tmp11, i64 48, i32 8, i1 false), !dbg !349
  ret void, !dbg !350
}

declare void @PointToHPoint(%struct.HPointStruct* sret, %struct.ObjPointStruct* byval align 8) #4

; Function Attrs: nounwind uwtable
define void @PrintMatrix([4 x double]* %Mat) #0 {
entry:
  call void @llvm.dbg.value(metadata [4 x double]* %Mat, i64 0, metadata !351, metadata !60), !dbg !352
  %arrayidx = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 0, !dbg !353
  %arrayidx1 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 0, !dbg !353
  %tmp1 = load double, double* %arrayidx1, align 8, !dbg !353
  %arrayidx2 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 0, !dbg !354
  %arrayidx3 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx2, i32 0, i64 1, !dbg !354
  %tmp3 = load double, double* %arrayidx3, align 8, !dbg !354
  %arrayidx4 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 0, !dbg !355
  %arrayidx5 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx4, i32 0, i64 2, !dbg !355
  %tmp5 = load double, double* %arrayidx5, align 8, !dbg !355
  %arrayidx6 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 0, !dbg !356
  %arrayidx7 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx6, i32 0, i64 3, !dbg !356
  %tmp7 = load double, double* %arrayidx7, align 8, !dbg !356
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i32 0, i32 0), double %tmp1, double %tmp3, double %tmp5, double %tmp7), !dbg !357
  %arrayidx8 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 1, !dbg !358
  %arrayidx9 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx8, i32 0, i64 0, !dbg !358
  %tmp9 = load double, double* %arrayidx9, align 8, !dbg !358
  %arrayidx10 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 1, !dbg !359
  %arrayidx11 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx10, i32 0, i64 1, !dbg !359
  %tmp11 = load double, double* %arrayidx11, align 8, !dbg !359
  %arrayidx12 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 1, !dbg !360
  %arrayidx13 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx12, i32 0, i64 2, !dbg !360
  %tmp13 = load double, double* %arrayidx13, align 8, !dbg !360
  %arrayidx14 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 1, !dbg !361
  %arrayidx15 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx14, i32 0, i64 3, !dbg !361
  %tmp15 = load double, double* %arrayidx15, align 8, !dbg !361
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), double %tmp9, double %tmp11, double %tmp13, double %tmp15), !dbg !362
  %arrayidx17 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 2, !dbg !363
  %arrayidx18 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx17, i32 0, i64 0, !dbg !363
  %tmp17 = load double, double* %arrayidx18, align 8, !dbg !363
  %arrayidx19 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 2, !dbg !364
  %arrayidx20 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx19, i32 0, i64 1, !dbg !364
  %tmp19 = load double, double* %arrayidx20, align 8, !dbg !364
  %arrayidx21 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 2, !dbg !365
  %arrayidx22 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx21, i32 0, i64 2, !dbg !365
  %tmp21 = load double, double* %arrayidx22, align 8, !dbg !365
  %arrayidx23 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 2, !dbg !366
  %arrayidx24 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx23, i32 0, i64 3, !dbg !366
  %tmp23 = load double, double* %arrayidx24, align 8, !dbg !366
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), double %tmp17, double %tmp19, double %tmp21, double %tmp23), !dbg !367
  %arrayidx26 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 3, !dbg !368
  %arrayidx27 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx26, i32 0, i64 0, !dbg !368
  %tmp25 = load double, double* %arrayidx27, align 8, !dbg !368
  %arrayidx28 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 3, !dbg !369
  %arrayidx29 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx28, i32 0, i64 1, !dbg !369
  %tmp27 = load double, double* %arrayidx29, align 8, !dbg !369
  %arrayidx30 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 3, !dbg !370
  %arrayidx31 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx30, i32 0, i64 2, !dbg !370
  %tmp29 = load double, double* %arrayidx31, align 8, !dbg !370
  %arrayidx32 = getelementptr inbounds [4 x double], [4 x double]* %Mat, i64 3, !dbg !371
  %arrayidx33 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx32, i32 0, i64 3, !dbg !371
  %tmp31 = load double, double* %arrayidx33, align 8, !dbg !371
  %call34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0), double %tmp25, double %tmp27, double %tmp29, double %tmp31), !dbg !372
  ret void, !dbg !373
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!56, !57}
!llvm.ident = !{!58}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/08-main")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !{!6, !17, !27, !30, !33, !36, !37, !38, !50}
!6 = !DISubprogram(name: "MultMatrixMatrix", scope: !7, file: !7, line: 21, type: !8, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: false, function: void ([4 x [4 x double]]*, [4 x [4 x double]]*, [4 x [4 x double]]*)* @MultMatrixMatrix, variables: !2)
!7 = !DIFile(filename: "/home/gleison/tf/Benchmarks/McCat/08-main/tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/08-main")
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !10, !10}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "Matrix", file: !12, line: 37, baseType: !13)
!12 = !DIFile(filename: "./types.h", directory: "/home/gleison/tf/Benchmarks/McCat/08-main")
!13 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 1024, align: 64, elements: !15)
!14 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!15 = !{!16, !16}
!16 = !DISubrange(count: 4)
!17 = !DISubprogram(name: "MultMatrixHPoint", scope: !7, file: !7, line: 34, type: !18, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.HPointStruct*, [4 x [4 x double]]*, %struct.HPointStruct*)* @MultMatrixHPoint, variables: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{!20, !10, !20}
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "HPoint", file: !12, line: 29, baseType: !21)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "HPointStruct", file: !12, line: 23, size: 256, align: 64, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !21, file: !12, line: 25, baseType: !14, size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !21, file: !12, line: 26, baseType: !14, size: 64, align: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !21, file: !12, line: 27, baseType: !14, size: 64, align: 64, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !21, file: !12, line: 28, baseType: !14, size: 64, align: 64, offset: 192)
!27 = !DISubprogram(name: "CopyMatrix", scope: !7, file: !7, line: 48, type: !28, isLocal: false, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, function: [4 x [4 x double]]* ([4 x [4 x double]]*)* @CopyMatrix, variables: !2)
!28 = !DISubroutineType(types: !29)
!29 = !{!10, !10}
!30 = !DISubprogram(name: "IdentMatrix", scope: !7, file: !7, line: 62, type: !31, isLocal: false, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, function: [4 x [4 x double]]* ()* @IdentMatrix, variables: !2)
!31 = !DISubroutineType(types: !32)
!32 = !{!10}
!33 = !DISubprogram(name: "TranslateMatrix", scope: !7, file: !7, line: 75, type: !34, isLocal: false, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, function: [4 x [4 x double]]* (double, double, double)* @TranslateMatrix, variables: !2)
!34 = !DISubroutineType(types: !35)
!35 = !{!10, !14, !14, !14}
!36 = !DISubprogram(name: "RotateMatrix", scope: !7, file: !7, line: 83, type: !34, isLocal: false, isDefinition: true, scopeLine: 83, flags: DIFlagPrototyped, isOptimized: false, function: [4 x [4 x double]]* (double, double, double)* @RotateMatrix, variables: !2)
!37 = !DISubprogram(name: "ScaleMatrix", scope: !7, file: !7, line: 124, type: !34, isLocal: false, isDefinition: true, scopeLine: 124, flags: DIFlagPrototyped, isOptimized: false, function: [4 x [4 x double]]* (double, double, double)* @ScaleMatrix, variables: !2)
!38 = !DISubprogram(name: "RotatePoint", scope: !7, file: !7, line: 133, type: !39, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.ObjPointStruct*, %struct.ObjPointStruct*, double, double, double)* @RotatePoint, variables: !2)
!39 = !DISubroutineType(types: !40)
!40 = !{!41, !41, !14, !14, !14}
!41 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjPoint", file: !12, line: 21, baseType: !42)
!42 = !DICompositeType(tag: DW_TAG_structure_type, name: "ObjPointStruct", file: !12, line: 13, size: 384, align: 64, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !42, file: !12, line: 15, baseType: !14, size: 64, align: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !42, file: !12, line: 16, baseType: !14, size: 64, align: 64, offset: 64)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !42, file: !12, line: 17, baseType: !14, size: 64, align: 64, offset: 128)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !42, file: !12, line: 18, baseType: !14, size: 64, align: 64, offset: 192)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !42, file: !12, line: 19, baseType: !14, size: 64, align: 64, offset: 256)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "tz", scope: !42, file: !12, line: 20, baseType: !14, size: 64, align: 64, offset: 320)
!50 = !DISubprogram(name: "PrintMatrix", scope: !7, file: !7, line: 142, type: !51, isLocal: false, isDefinition: true, scopeLine: 142, flags: DIFlagPrototyped, isOptimized: false, function: void ([4 x double]*)* @PrintMatrix, variables: !2)
!51 = !DISubroutineType(types: !52)
!52 = !{null, !53}
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 256, align: 64, elements: !55)
!55 = !{!16}
!56 = !{i32 2, !"Dwarf Version", i32 4}
!57 = !{i32 2, !"Debug Info Version", i32 3}
!58 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!59 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !6, file: !7, line: 21, type: !10)
!60 = !DIExpression()
!61 = !DILocation(line: 21, column: 31, scope: !6)
!62 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "B", arg: 2, scope: !6, file: !7, line: 21, type: !10)
!63 = !DILocation(line: 21, column: 42, scope: !6)
!64 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C", arg: 3, scope: !6, file: !7, line: 21, type: !10)
!65 = !DILocation(line: 21, column: 53, scope: !6)
!66 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !6, file: !7, line: 22, type: !67)
!67 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!68 = !DILocation(line: 22, column: 7, scope: !6)
!69 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !6, file: !7, line: 22, type: !67)
!70 = !DILocation(line: 22, column: 14, scope: !6)
!71 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !6, file: !7, line: 22, type: !67)
!72 = !DILocation(line: 22, column: 21, scope: !6)
!73 = !DILocation(line: 23, column: 3, scope: !74)
!74 = distinct !DILexicalBlock(scope: !6, file: !7, line: 23, column: 3)
!75 = !DILocation(line: 24, column: 5, scope: !76)
!76 = distinct !DILexicalBlock(scope: !77, file: !7, line: 24, column: 5)
!77 = distinct !DILexicalBlock(scope: !78, file: !7, line: 23, column: 27)
!78 = distinct !DILexicalBlock(scope: !74, file: !7, line: 23, column: 3)
!79 = !DILocation(line: 26, column: 7, scope: !80)
!80 = distinct !DILexicalBlock(scope: !81, file: !7, line: 26, column: 7)
!81 = distinct !DILexicalBlock(scope: !82, file: !7, line: 24, column: 29)
!82 = distinct !DILexicalBlock(scope: !76, file: !7, line: 24, column: 5)
!83 = !DILocation(line: 23, column: 8, scope: !74)
!84 = !DILocation(line: 23, column: 17, scope: !78)
!85 = !DILocation(line: 24, column: 10, scope: !76)
!86 = !DILocation(line: 24, column: 19, scope: !82)
!87 = !DILocation(line: 25, column: 7, scope: !81)
!88 = !DILocation(line: 25, column: 18, scope: !81)
!89 = !DILocation(line: 26, column: 12, scope: !80)
!90 = !DILocation(line: 26, column: 21, scope: !91)
!91 = distinct !DILexicalBlock(scope: !80, file: !7, line: 26, column: 7)
!92 = !DILocation(line: 28, column: 23, scope: !93)
!93 = distinct !DILexicalBlock(scope: !91, file: !7, line: 26, column: 31)
!94 = !DILocation(line: 28, column: 36, scope: !93)
!95 = !DILocation(line: 28, column: 34, scope: !93)
!96 = !DILocation(line: 28, column: 9, scope: !93)
!97 = !DILocation(line: 28, column: 20, scope: !93)
!98 = !DILocation(line: 29, column: 7, scope: !93)
!99 = !DILocation(line: 26, column: 27, scope: !91)
!100 = !DILocation(line: 26, column: 7, scope: !91)
!101 = !DILocation(line: 30, column: 5, scope: !81)
!102 = !DILocation(line: 24, column: 25, scope: !82)
!103 = !DILocation(line: 24, column: 5, scope: !82)
!104 = !DILocation(line: 31, column: 3, scope: !77)
!105 = !DILocation(line: 23, column: 23, scope: !78)
!106 = !DILocation(line: 23, column: 3, scope: !78)
!107 = !DILocation(line: 32, column: 1, scope: !6)
!108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mat", arg: 1, scope: !17, file: !7, line: 34, type: !10)
!109 = !DILocation(line: 34, column: 33, scope: !17)
!110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "P", arg: 2, scope: !17, file: !7, line: 35, type: !20)
!111 = !DILocation(line: 35, column: 32, scope: !17)
!112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Res", scope: !17, file: !7, line: 37, type: !20)
!113 = !DILocation(line: 37, column: 10, scope: !17)
!114 = !DILocation(line: 38, column: 13, scope: !17)
!115 = !DILocation(line: 38, column: 17, scope: !17)
!116 = !DILocation(line: 38, column: 15, scope: !17)
!117 = !DILocation(line: 38, column: 34, scope: !17)
!118 = !DILocation(line: 38, column: 38, scope: !17)
!119 = !DILocation(line: 38, column: 36, scope: !17)
!120 = !DILocation(line: 38, column: 30, scope: !17)
!121 = !DILocation(line: 38, column: 55, scope: !17)
!122 = !DILocation(line: 38, column: 59, scope: !17)
!123 = !DILocation(line: 38, column: 57, scope: !17)
!124 = !DILocation(line: 38, column: 51, scope: !17)
!125 = !DILocation(line: 39, column: 13, scope: !17)
!126 = !DILocation(line: 39, column: 17, scope: !17)
!127 = !DILocation(line: 39, column: 15, scope: !17)
!128 = !DILocation(line: 38, column: 72, scope: !17)
!129 = !DILocation(line: 38, column: 7, scope: !17)
!130 = !DILocation(line: 38, column: 9, scope: !17)
!131 = !DILocation(line: 40, column: 13, scope: !17)
!132 = !DILocation(line: 40, column: 17, scope: !17)
!133 = !DILocation(line: 40, column: 15, scope: !17)
!134 = !DILocation(line: 40, column: 34, scope: !17)
!135 = !DILocation(line: 40, column: 38, scope: !17)
!136 = !DILocation(line: 40, column: 36, scope: !17)
!137 = !DILocation(line: 40, column: 30, scope: !17)
!138 = !DILocation(line: 40, column: 55, scope: !17)
!139 = !DILocation(line: 40, column: 59, scope: !17)
!140 = !DILocation(line: 40, column: 57, scope: !17)
!141 = !DILocation(line: 40, column: 51, scope: !17)
!142 = !DILocation(line: 41, column: 13, scope: !17)
!143 = !DILocation(line: 41, column: 17, scope: !17)
!144 = !DILocation(line: 41, column: 15, scope: !17)
!145 = !DILocation(line: 40, column: 72, scope: !17)
!146 = !DILocation(line: 40, column: 7, scope: !17)
!147 = !DILocation(line: 40, column: 9, scope: !17)
!148 = !DILocation(line: 42, column: 13, scope: !17)
!149 = !DILocation(line: 42, column: 17, scope: !17)
!150 = !DILocation(line: 42, column: 15, scope: !17)
!151 = !DILocation(line: 42, column: 34, scope: !17)
!152 = !DILocation(line: 42, column: 38, scope: !17)
!153 = !DILocation(line: 42, column: 36, scope: !17)
!154 = !DILocation(line: 42, column: 30, scope: !17)
!155 = !DILocation(line: 42, column: 55, scope: !17)
!156 = !DILocation(line: 42, column: 59, scope: !17)
!157 = !DILocation(line: 42, column: 57, scope: !17)
!158 = !DILocation(line: 42, column: 51, scope: !17)
!159 = !DILocation(line: 43, column: 13, scope: !17)
!160 = !DILocation(line: 43, column: 17, scope: !17)
!161 = !DILocation(line: 43, column: 15, scope: !17)
!162 = !DILocation(line: 42, column: 72, scope: !17)
!163 = !DILocation(line: 42, column: 7, scope: !17)
!164 = !DILocation(line: 42, column: 9, scope: !17)
!165 = !DILocation(line: 44, column: 13, scope: !17)
!166 = !DILocation(line: 44, column: 17, scope: !17)
!167 = !DILocation(line: 44, column: 15, scope: !17)
!168 = !DILocation(line: 44, column: 34, scope: !17)
!169 = !DILocation(line: 44, column: 38, scope: !17)
!170 = !DILocation(line: 44, column: 36, scope: !17)
!171 = !DILocation(line: 44, column: 30, scope: !17)
!172 = !DILocation(line: 44, column: 55, scope: !17)
!173 = !DILocation(line: 44, column: 59, scope: !17)
!174 = !DILocation(line: 44, column: 57, scope: !17)
!175 = !DILocation(line: 44, column: 51, scope: !17)
!176 = !DILocation(line: 45, column: 13, scope: !17)
!177 = !DILocation(line: 45, column: 17, scope: !17)
!178 = !DILocation(line: 45, column: 15, scope: !17)
!179 = !DILocation(line: 44, column: 72, scope: !17)
!180 = !DILocation(line: 44, column: 7, scope: !17)
!181 = !DILocation(line: 44, column: 9, scope: !17)
!182 = !DILocation(line: 46, column: 10, scope: !17)
!183 = !DILocation(line: 46, column: 3, scope: !17)
!184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Mat", arg: 1, scope: !27, file: !7, line: 48, type: !10)
!185 = !DILocation(line: 48, column: 28, scope: !27)
!186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Res", scope: !27, file: !7, line: 50, type: !10)
!187 = !DILocation(line: 50, column: 11, scope: !27)
!188 = !DILocation(line: 51, column: 11, scope: !189)
!189 = distinct !DILexicalBlock(scope: !27, file: !7, line: 51, column: 7)
!190 = !DILocation(line: 51, column: 7, scope: !27)
!191 = !DILocation(line: 52, column: 11, scope: !192)
!192 = distinct !DILexicalBlock(scope: !189, file: !7, line: 51, column: 20)
!193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !27, file: !7, line: 49, type: !67)
!194 = !DILocation(line: 49, column: 7, scope: !27)
!195 = !DILocation(line: 53, column: 5, scope: !196)
!196 = distinct !DILexicalBlock(scope: !192, file: !7, line: 53, column: 5)
!197 = !DILocation(line: 54, column: 7, scope: !198)
!198 = distinct !DILexicalBlock(scope: !199, file: !7, line: 54, column: 7)
!199 = distinct !DILexicalBlock(scope: !200, file: !7, line: 53, column: 29)
!200 = distinct !DILexicalBlock(scope: !196, file: !7, line: 53, column: 5)
!201 = !DILocation(line: 53, column: 10, scope: !196)
!202 = !DILocation(line: 53, column: 19, scope: !200)
!203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !27, file: !7, line: 49, type: !67)
!204 = !DILocation(line: 49, column: 10, scope: !27)
!205 = !DILocation(line: 54, column: 12, scope: !198)
!206 = !DILocation(line: 54, column: 21, scope: !207)
!207 = distinct !DILexicalBlock(scope: !198, file: !7, line: 54, column: 7)
!208 = !DILocation(line: 56, column: 24, scope: !209)
!209 = distinct !DILexicalBlock(scope: !207, file: !7, line: 54, column: 31)
!210 = !DILocation(line: 56, column: 9, scope: !209)
!211 = !DILocation(line: 56, column: 22, scope: !209)
!212 = !DILocation(line: 57, column: 7, scope: !209)
!213 = !DILocation(line: 54, column: 27, scope: !207)
!214 = !DILocation(line: 54, column: 7, scope: !207)
!215 = !DILocation(line: 58, column: 5, scope: !199)
!216 = !DILocation(line: 53, column: 25, scope: !200)
!217 = !DILocation(line: 53, column: 5, scope: !200)
!218 = !DILocation(line: 59, column: 3, scope: !192)
!219 = !DILocation(line: 60, column: 3, scope: !27)
!220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "SI", scope: !30, file: !7, line: 63, type: !11)
!221 = !DILocation(line: 63, column: 10, scope: !30)
!222 = !DILocation(line: 68, column: 7, scope: !30)
!223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "I", scope: !30, file: !7, line: 67, type: !10)
!224 = !DILocation(line: 67, column: 11, scope: !30)
!225 = !DILocation(line: 70, column: 7, scope: !30)
!226 = !DILocation(line: 72, column: 3, scope: !30)
!227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx", arg: 1, scope: !33, file: !7, line: 75, type: !14)
!228 = !DILocation(line: 75, column: 32, scope: !33)
!229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dy", arg: 2, scope: !33, file: !7, line: 75, type: !14)
!230 = !DILocation(line: 75, column: 43, scope: !33)
!231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dz", arg: 3, scope: !33, file: !7, line: 75, type: !14)
!232 = !DILocation(line: 75, column: 54, scope: !33)
!233 = !DILocation(line: 77, column: 10, scope: !33)
!234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "TMat", scope: !33, file: !7, line: 76, type: !10)
!235 = !DILocation(line: 76, column: 11, scope: !33)
!236 = !DILocation(line: 78, column: 3, scope: !33)
!237 = !DILocation(line: 78, column: 17, scope: !33)
!238 = !DILocation(line: 79, column: 3, scope: !33)
!239 = !DILocation(line: 79, column: 17, scope: !33)
!240 = !DILocation(line: 80, column: 3, scope: !33)
!241 = !DILocation(line: 80, column: 17, scope: !33)
!242 = !DILocation(line: 81, column: 3, scope: !33)
!243 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rx", arg: 1, scope: !36, file: !7, line: 83, type: !14)
!244 = !DILocation(line: 83, column: 29, scope: !36)
!245 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ry", arg: 2, scope: !36, file: !7, line: 83, type: !14)
!246 = !DILocation(line: 83, column: 40, scope: !36)
!247 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rz", arg: 3, scope: !36, file: !7, line: 83, type: !14)
!248 = !DILocation(line: 83, column: 51, scope: !36)
!249 = !DILocation(line: 90, column: 15, scope: !36)
!250 = !DILocation(line: 90, column: 11, scope: !36)
!251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cosrx", scope: !36, file: !7, line: 86, type: !14)
!252 = !DILocation(line: 86, column: 10, scope: !36)
!253 = !DILocation(line: 91, column: 15, scope: !36)
!254 = !DILocation(line: 91, column: 11, scope: !36)
!255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sinrx", scope: !36, file: !7, line: 86, type: !14)
!256 = !DILocation(line: 86, column: 17, scope: !36)
!257 = !DILocation(line: 92, column: 15, scope: !36)
!258 = !DILocation(line: 92, column: 11, scope: !36)
!259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cosry", scope: !36, file: !7, line: 87, type: !14)
!260 = !DILocation(line: 87, column: 10, scope: !36)
!261 = !DILocation(line: 93, column: 15, scope: !36)
!262 = !DILocation(line: 93, column: 11, scope: !36)
!263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sinry", scope: !36, file: !7, line: 87, type: !14)
!264 = !DILocation(line: 87, column: 17, scope: !36)
!265 = !DILocation(line: 94, column: 15, scope: !36)
!266 = !DILocation(line: 94, column: 11, scope: !36)
!267 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cosrz", scope: !36, file: !7, line: 88, type: !14)
!268 = !DILocation(line: 88, column: 10, scope: !36)
!269 = !DILocation(line: 95, column: 15, scope: !36)
!270 = !DILocation(line: 95, column: 11, scope: !36)
!271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sinrz", scope: !36, file: !7, line: 88, type: !14)
!272 = !DILocation(line: 88, column: 17, scope: !36)
!273 = !DILocation(line: 101, column: 11, scope: !36)
!274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "RMatX", scope: !36, file: !7, line: 84, type: !10)
!275 = !DILocation(line: 84, column: 11, scope: !36)
!276 = !DILocation(line: 102, column: 11, scope: !36)
!277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "RMatY", scope: !36, file: !7, line: 84, type: !10)
!278 = !DILocation(line: 84, column: 19, scope: !36)
!279 = !DILocation(line: 103, column: 11, scope: !36)
!280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "RMatZ", scope: !36, file: !7, line: 84, type: !10)
!281 = !DILocation(line: 84, column: 27, scope: !36)
!282 = !DILocation(line: 104, column: 12, scope: !36)
!283 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "RMatXY", scope: !36, file: !7, line: 85, type: !10)
!284 = !DILocation(line: 85, column: 11, scope: !36)
!285 = !DILocation(line: 105, column: 13, scope: !36)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "RMatXYZ", scope: !36, file: !7, line: 85, type: !10)
!287 = !DILocation(line: 85, column: 20, scope: !36)
!288 = !DILocation(line: 106, column: 3, scope: !36)
!289 = !DILocation(line: 106, column: 18, scope: !36)
!290 = !DILocation(line: 107, column: 20, scope: !36)
!291 = !DILocation(line: 107, column: 3, scope: !36)
!292 = !DILocation(line: 107, column: 18, scope: !36)
!293 = !DILocation(line: 108, column: 3, scope: !36)
!294 = !DILocation(line: 108, column: 18, scope: !36)
!295 = !DILocation(line: 109, column: 3, scope: !36)
!296 = !DILocation(line: 109, column: 18, scope: !36)
!297 = !DILocation(line: 111, column: 3, scope: !36)
!298 = !DILocation(line: 111, column: 18, scope: !36)
!299 = !DILocation(line: 112, column: 3, scope: !36)
!300 = !DILocation(line: 112, column: 18, scope: !36)
!301 = !DILocation(line: 113, column: 20, scope: !36)
!302 = !DILocation(line: 113, column: 3, scope: !36)
!303 = !DILocation(line: 113, column: 18, scope: !36)
!304 = !DILocation(line: 114, column: 3, scope: !36)
!305 = !DILocation(line: 114, column: 18, scope: !36)
!306 = !DILocation(line: 116, column: 3, scope: !36)
!307 = !DILocation(line: 116, column: 18, scope: !36)
!308 = !DILocation(line: 117, column: 20, scope: !36)
!309 = !DILocation(line: 117, column: 3, scope: !36)
!310 = !DILocation(line: 117, column: 18, scope: !36)
!311 = !DILocation(line: 118, column: 3, scope: !36)
!312 = !DILocation(line: 118, column: 18, scope: !36)
!313 = !DILocation(line: 119, column: 3, scope: !36)
!314 = !DILocation(line: 119, column: 18, scope: !36)
!315 = !DILocation(line: 120, column: 3, scope: !36)
!316 = !DILocation(line: 121, column: 3, scope: !36)
!317 = !DILocation(line: 122, column: 3, scope: !36)
!318 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sx", arg: 1, scope: !37, file: !7, line: 124, type: !14)
!319 = !DILocation(line: 124, column: 28, scope: !37)
!320 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sy", arg: 2, scope: !37, file: !7, line: 124, type: !14)
!321 = !DILocation(line: 124, column: 39, scope: !37)
!322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sz", arg: 3, scope: !37, file: !7, line: 124, type: !14)
!323 = !DILocation(line: 124, column: 50, scope: !37)
!324 = !DILocation(line: 126, column: 7, scope: !37)
!325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "I", scope: !37, file: !7, line: 125, type: !10)
!326 = !DILocation(line: 125, column: 11, scope: !37)
!327 = !DILocation(line: 127, column: 3, scope: !37)
!328 = !DILocation(line: 127, column: 14, scope: !37)
!329 = !DILocation(line: 128, column: 3, scope: !37)
!330 = !DILocation(line: 128, column: 14, scope: !37)
!331 = !DILocation(line: 129, column: 3, scope: !37)
!332 = !DILocation(line: 129, column: 14, scope: !37)
!333 = !DILocation(line: 130, column: 3, scope: !37)
!334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !38, file: !7, line: 133, type: !41)
!335 = !DILocation(line: 133, column: 31, scope: !38)
!336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rx", arg: 2, scope: !38, file: !7, line: 133, type: !14)
!337 = !DILocation(line: 133, column: 41, scope: !38)
!338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ry", arg: 3, scope: !38, file: !7, line: 133, type: !14)
!339 = !DILocation(line: 133, column: 52, scope: !38)
!340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "rz", arg: 4, scope: !38, file: !7, line: 133, type: !14)
!341 = !DILocation(line: 133, column: 63, scope: !38)
!342 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "A", scope: !38, file: !7, line: 136, type: !20)
!343 = !DILocation(line: 136, column: 10, scope: !38)
!344 = !DILocation(line: 137, column: 7, scope: !38)
!345 = !DILocation(line: 138, column: 9, scope: !38)
!346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Mat", scope: !38, file: !7, line: 134, type: !10)
!347 = !DILocation(line: 134, column: 11, scope: !38)
!348 = !DILocation(line: 139, column: 7, scope: !38)
!349 = !DILocation(line: 140, column: 10, scope: !38)
!350 = !DILocation(line: 140, column: 3, scope: !38)
!351 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Mat", arg: 1, scope: !50, file: !7, line: 142, type: !53)
!352 = !DILocation(line: 142, column: 25, scope: !50)
!353 = !DILocation(line: 143, column: 44, scope: !50)
!354 = !DILocation(line: 143, column: 55, scope: !50)
!355 = !DILocation(line: 143, column: 66, scope: !50)
!356 = !DILocation(line: 144, column: 10, scope: !50)
!357 = !DILocation(line: 143, column: 3, scope: !50)
!358 = !DILocation(line: 145, column: 44, scope: !50)
!359 = !DILocation(line: 145, column: 55, scope: !50)
!360 = !DILocation(line: 145, column: 66, scope: !50)
!361 = !DILocation(line: 146, column: 10, scope: !50)
!362 = !DILocation(line: 145, column: 3, scope: !50)
!363 = !DILocation(line: 147, column: 44, scope: !50)
!364 = !DILocation(line: 147, column: 55, scope: !50)
!365 = !DILocation(line: 147, column: 66, scope: !50)
!366 = !DILocation(line: 148, column: 10, scope: !50)
!367 = !DILocation(line: 147, column: 3, scope: !50)
!368 = !DILocation(line: 149, column: 44, scope: !50)
!369 = !DILocation(line: 149, column: 55, scope: !50)
!370 = !DILocation(line: 149, column: 66, scope: !50)
!371 = !DILocation(line: 150, column: 10, scope: !50)
!372 = !DILocation(line: 149, column: 3, scope: !50)
!373 = !DILocation(line: 151, column: 1, scope: !50)
