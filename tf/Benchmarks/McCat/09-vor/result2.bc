; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Knode = type { %struct.point, i32, i32, i32 }
%struct.point = type { i32, i32 }
%struct.Enode = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.splay_node = type { %struct.splay_element, %struct.splay_node*, %struct.splay_node*, %struct.splay_node* }
%struct.splay_element = type { i64, %struct.point }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.CHsplay_node = type { %struct.CHsplay_element, %struct.CHsplay_node*, %struct.CHsplay_node*, %struct.CHsplay_node* }
%struct.CHsplay_element = type { %struct.key, %struct.CHpoints* }
%struct.key = type { double, double, i32 }
%struct.CHpoints = type { i32, %struct.point, i32, %struct.CHpoints*, %struct.CHpoints* }
%struct.dpoint = type { double, double }

@CHno = global i32 0, align 4
@Kcount = global i32 1, align 4
@Ecount = global i32 1, align 4
@K = common global %struct.Knode* null, align 8
@E = common global %struct.Enode* null, align 8
@Splaytree = common global %struct.splay_node* null, align 8
@stdin = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%d %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Error: Can't intersect\0A\00", align 1
@CHSplaytree = common global %struct.CHsplay_node* null, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"The center is (%d,%d)\0A\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"The radius is %9.2f\0A\00", align 1
@S = common global %struct.CHpoints* null, align 8
@default_radius = common global i32 0, align 4

; Function Attrs: nounwind uwtable
define void @clean_up() #0 {
entry:
  %tmp = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !121
  %tmp1 = bitcast %struct.Knode* %tmp to i8*, !dbg !121
  call void @free(i8* %tmp1) #4, !dbg !122
  %tmp2 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !123
  %tmp3 = bitcast %struct.Enode* %tmp2 to i8*, !dbg !123
  call void @free(i8* %tmp3) #4, !dbg !124
  store i32 1, i32* @Kcount, align 4, !dbg !125
  store i32 1, i32* @Ecount, align 4, !dbg !126
  ret void, !dbg !127
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define void @getpoint(i32 %x, i32 %y) #0 {
entry:
  %p = alloca %struct.point, align 4
  call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !128, metadata !129), !dbg !130
  call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !131, metadata !129), !dbg !132
  call void @llvm.dbg.declare(metadata %struct.point* %p, metadata !133, metadata !129), !dbg !134
  %x1 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !135
  store i32 %x, i32* %x1, align 4, !dbg !136
  %y2 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !137
  store i32 %y, i32* %y2, align 4, !dbg !138
  %tmp2 = bitcast %struct.point* %p to i64*, !dbg !139
  %tmp3 = load i64, i64* %tmp2, align 4, !dbg !139
  %call = call i8* @insert(%struct.splay_node** @Splaytree, i64 %tmp3), !dbg !139
  ret void, !dbg !140
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

declare i8* @insert(%struct.splay_node**, i64) #3

; Function Attrs: nounwind uwtable
define void @get_file() #0 {
entry:
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %no_p = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x, metadata !141, metadata !129), !dbg !142
  call void @llvm.dbg.declare(metadata i32* %y, metadata !143, metadata !129), !dbg !144
  call void @llvm.dbg.declare(metadata i32* %no_p, metadata !145, metadata !129), !dbg !146
  %call = call %struct.splay_node* @init(), !dbg !147
  store %struct.splay_node* %call, %struct.splay_node** @Splaytree, align 8, !dbg !148
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !149
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %no_p), !dbg !150
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !151, metadata !129), !dbg !152
  br label %for.cond, !dbg !153

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]
  %tmp2 = load i32, i32* %no_p, align 4, !dbg !155
  %cmp = icmp sle i32 %i.0, %tmp2, !dbg !157
  br i1 %cmp, label %for.body, label %for.end, !dbg !158

for.body:                                         ; preds = %for.cond
  %tmp3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !159
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32* %x, i32* %y), !dbg !161
  %tmp4 = load i32, i32* %x, align 4, !dbg !162
  %tmp5 = load i32, i32* %y, align 4, !dbg !163
  call void @getpoint(i32 %tmp4, i32 %tmp5), !dbg !164
  br label %for.inc, !dbg !165

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !166
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !151, metadata !129), !dbg !152
  br label %for.cond, !dbg !167

for.end:                                          ; preds = %for.cond
  ret void, !dbg !168
}

declare %struct.splay_node* @init() #3

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define void @add_point(i64 %p.coerce) #0 {
entry:
  %p = alloca %struct.point, align 8
  %tmp = bitcast %struct.point* %p to i64*
  store i64 %p.coerce, i64* %tmp, align 8
  call void @llvm.dbg.declare(metadata %struct.point* %p, metadata !169, metadata !129), !dbg !170
  %tmp1 = load i32, i32* @Kcount, align 4, !dbg !171
  %idxprom = sext i32 %tmp1 to i64, !dbg !172
  %tmp2 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !172
  %arrayidx = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp2, i64 %idxprom, !dbg !172
  %p1 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx, i32 0, i32 0, !dbg !173
  %tmp3 = bitcast %struct.point* %p1 to i8*, !dbg !174
  %tmp4 = bitcast %struct.point* %p to i8*, !dbg !174
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp3, i8* %tmp4, i64 8, i32 4, i1 false), !dbg !174
  %tmp5 = load i32, i32* @Kcount, align 4, !dbg !175
  %idxprom2 = sext i32 %tmp5 to i64, !dbg !176
  %tmp6 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !176
  %arrayidx3 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp6, i64 %idxprom2, !dbg !176
  %e1 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx3, i32 0, i32 1, !dbg !177
  store i32 0, i32* %e1, align 4, !dbg !178
  %tmp7 = load i32, i32* @Kcount, align 4, !dbg !179
  %idxprom4 = sext i32 %tmp7 to i64, !dbg !180
  %tmp8 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !180
  %arrayidx5 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp8, i64 %idxprom4, !dbg !180
  %e2 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx5, i32 0, i32 2, !dbg !181
  store i32 0, i32* %e2, align 4, !dbg !182
  %tmp9 = load i32, i32* @Kcount, align 4, !dbg !183
  %idxprom6 = sext i32 %tmp9 to i64, !dbg !184
  %tmp10 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !184
  %arrayidx7 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp10, i64 %idxprom6, !dbg !184
  %e3 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx7, i32 0, i32 3, !dbg !185
  store i32 0, i32* %e3, align 4, !dbg !186
  %tmp11 = load i32, i32* @Kcount, align 4, !dbg !187
  %inc = add nsw i32 %tmp11, 1, !dbg !187
  store i32 %inc, i32* @Kcount, align 4, !dbg !187
  ret void, !dbg !188
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define i64 @compute_v(%struct.CHpoints* %P) #0 {
entry:
  %retval = alloca %struct.point, align 4
  %An = alloca %struct.point, align 4
  %Bn = alloca %struct.point, align 4
  %Cn = alloca %struct.point, align 4
  %Dn = alloca %struct.point, align 4
  %n = alloca %struct.point, align 4
  %i = alloca %struct.point, align 4
  %di = alloca %struct.dpoint, align 8
  %p = alloca %struct.point, align 4
  %np = alloca %struct.point, align 4
  %coerce = alloca %struct.point, align 4
  %agg.tmp = alloca %struct.dpoint, align 8
  %coerce17 = alloca %struct.dpoint, align 8
  %coerce24 = alloca %struct.dpoint, align 8
  %coerce34 = alloca %struct.dpoint, align 8
  %coerce45 = alloca %struct.dpoint, align 8
  %coerce53 = alloca %struct.dpoint, align 8
  %coerce65 = alloca %struct.dpoint, align 8
  %coerce76 = alloca %struct.dpoint, align 8
  %coerce87 = alloca %struct.dpoint, align 8
  %coerce95 = alloca %struct.dpoint, align 8
  %coerce107 = alloca %struct.dpoint, align 8
  %coerce118 = alloca %struct.dpoint, align 8
  %coerce126 = alloca %struct.dpoint, align 8
  call void @llvm.dbg.value(metadata %struct.CHpoints* %P, i64 0, metadata !189, metadata !129), !dbg !190
  call void @llvm.dbg.declare(metadata %struct.point* %An, metadata !191, metadata !129), !dbg !192
  call void @llvm.dbg.declare(metadata %struct.point* %Bn, metadata !193, metadata !129), !dbg !194
  call void @llvm.dbg.declare(metadata %struct.point* %Cn, metadata !195, metadata !129), !dbg !196
  call void @llvm.dbg.declare(metadata %struct.point* %Dn, metadata !197, metadata !129), !dbg !198
  call void @llvm.dbg.declare(metadata %struct.point* %n, metadata !199, metadata !129), !dbg !200
  call void @llvm.dbg.declare(metadata %struct.point* %i, metadata !201, metadata !129), !dbg !202
  call void @llvm.dbg.declare(metadata %struct.dpoint* %di, metadata !203, metadata !129), !dbg !209
  call void @llvm.dbg.declare(metadata %struct.point* %p, metadata !210, metadata !129), !dbg !211
  call void @llvm.dbg.declare(metadata %struct.point* %np, metadata !212, metadata !129), !dbg !213
  call void @llvm.dbg.value(metadata double -1.000000e+04, i64 0, metadata !214, metadata !129), !dbg !215
  call void @llvm.dbg.value(metadata double -1.000000e+04, i64 0, metadata !216, metadata !129), !dbg !217
  call void @llvm.dbg.value(metadata double 1.000000e+04, i64 0, metadata !218, metadata !129), !dbg !219
  call void @llvm.dbg.value(metadata double 1.000000e+04, i64 0, metadata !220, metadata !129), !dbg !221
  %x = getelementptr inbounds %struct.point, %struct.point* %An, i32 0, i32 0, !dbg !222
  store i32 1, i32* %x, align 4, !dbg !223
  %y = getelementptr inbounds %struct.point, %struct.point* %An, i32 0, i32 1, !dbg !224
  store i32 0, i32* %y, align 4, !dbg !225
  %x1 = getelementptr inbounds %struct.point, %struct.point* %Bn, i32 0, i32 0, !dbg !226
  store i32 0, i32* %x1, align 4, !dbg !227
  %y2 = getelementptr inbounds %struct.point, %struct.point* %Bn, i32 0, i32 1, !dbg !228
  store i32 1, i32* %y2, align 4, !dbg !229
  %x3 = getelementptr inbounds %struct.point, %struct.point* %Cn, i32 0, i32 0, !dbg !230
  store i32 1, i32* %x3, align 4, !dbg !231
  %y4 = getelementptr inbounds %struct.point, %struct.point* %Cn, i32 0, i32 1, !dbg !232
  store i32 0, i32* %y4, align 4, !dbg !233
  %x5 = getelementptr inbounds %struct.point, %struct.point* %Dn, i32 0, i32 0, !dbg !234
  store i32 0, i32* %x5, align 4, !dbg !235
  %y6 = getelementptr inbounds %struct.point, %struct.point* %Dn, i32 0, i32 1, !dbg !236
  store i32 1, i32* %y6, align 4, !dbg !237
  %node = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %P, i32 0, i32 1, !dbg !238
  %tmp1 = bitcast %struct.point* %p to i8*, !dbg !238
  %tmp2 = bitcast %struct.point* %node to i8*, !dbg !238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp1, i8* %tmp2, i64 8, i32 4, i1 false), !dbg !238
  %call = call %struct.CHpoints* @next(%struct.CHpoints* %P), !dbg !239
  %node7 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call, i32 0, i32 1, !dbg !240
  %tmp4 = bitcast %struct.point* %np to i8*, !dbg !240
  %tmp5 = bitcast %struct.point* %node7 to i8*, !dbg !240
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp4, i8* %tmp5, i64 8, i32 4, i1 false), !dbg !240
  %tmp6 = bitcast %struct.point* %p to i64*, !dbg !241
  %tmp7 = load i64, i64* %tmp6, align 4, !dbg !241
  %tmp8 = bitcast %struct.point* %np to i64*, !dbg !241
  %tmp9 = load i64, i64* %tmp8, align 4, !dbg !241
  %call8 = call i64 @vector(i64 %tmp7, i64 %tmp9), !dbg !241
  %tmp10 = bitcast %struct.point* %coerce to i64*, !dbg !241
  store i64 %call8, i64* %tmp10, align 4, !dbg !241
  %tmp11 = bitcast %struct.point* %n to i8*, !dbg !241
  %tmp12 = bitcast %struct.point* %coerce to i8*, !dbg !241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp11, i8* %tmp12, i64 8, i32 4, i1 false), !dbg !241
  %tmp13 = bitcast %struct.point* %p to i64*, !dbg !242
  %tmp14 = load i64, i64* %tmp13, align 4, !dbg !242
  %tmp15 = bitcast %struct.point* %np to i64*, !dbg !242
  %tmp16 = load i64, i64* %tmp15, align 4, !dbg !242
  %call9 = call { double, double } @midpoint(i64 %tmp14, i64 %tmp16), !dbg !242
  %tmp17 = bitcast %struct.dpoint* %agg.tmp to { double, double }*, !dbg !242
  %tmp18 = getelementptr { double, double }, { double, double }* %tmp17, i32 0, i32 0, !dbg !242
  %tmp19 = extractvalue { double, double } %call9, 0, !dbg !242
  store double %tmp19, double* %tmp18, align 8, !dbg !242
  %tmp20 = getelementptr { double, double }, { double, double }* %tmp17, i32 0, i32 1, !dbg !242
  %tmp21 = extractvalue { double, double } %call9, 1, !dbg !242
  store double %tmp21, double* %tmp20, align 8, !dbg !242
  %tmp22 = bitcast %struct.point* %n to i64*, !dbg !243
  %tmp23 = load i64, i64* %tmp22, align 4, !dbg !243
  %tmp24 = bitcast %struct.dpoint* %agg.tmp to { double, double }*, !dbg !243
  %tmp25 = getelementptr { double, double }, { double, double }* %tmp24, i32 0, i32 0, !dbg !243
  %tmp26 = load double, double* %tmp25, align 1, !dbg !243
  %tmp27 = getelementptr { double, double }, { double, double }* %tmp24, i32 0, i32 1, !dbg !243
  %tmp28 = load double, double* %tmp27, align 1, !dbg !243
  %call10 = call double @calculate_c(i64 %tmp23, double %tmp26, double %tmp28), !dbg !243
  call void @llvm.dbg.value(metadata double %call10, i64 0, metadata !244, metadata !129), !dbg !245
  %x11 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !246
  %tmp29 = load i32, i32* %x11, align 4, !dbg !246
  %x12 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !248
  %tmp30 = load i32, i32* %x12, align 4, !dbg !248
  %cmp = icmp slt i32 %tmp29, %tmp30, !dbg !249
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !250

land.lhs.true:                                    ; preds = %entry
  %y13 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !251
  %tmp31 = load i32, i32* %y13, align 4, !dbg !251
  %y14 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !253
  %tmp32 = load i32, i32* %y14, align 4, !dbg !253
  %cmp15 = icmp slt i32 %tmp31, %tmp32, !dbg !254
  br i1 %cmp15, label %if.then, label %if.else, !dbg !255

if.then:                                          ; preds = %land.lhs.true
  %tmp35 = bitcast %struct.point* %n to i64*, !dbg !256
  %tmp36 = load i64, i64* %tmp35, align 4, !dbg !256
  %tmp37 = bitcast %struct.point* %Dn to i64*, !dbg !256
  %tmp38 = load i64, i64* %tmp37, align 4, !dbg !256
  %call16 = call { double, double } @intersect(i64 %tmp36, i64 %tmp38, double %call10, double 1.000000e+04), !dbg !256
  %tmp39 = bitcast %struct.dpoint* %coerce17 to { double, double }*, !dbg !256
  %tmp40 = getelementptr { double, double }, { double, double }* %tmp39, i32 0, i32 0, !dbg !256
  %tmp41 = extractvalue { double, double } %call16, 0, !dbg !256
  store double %tmp41, double* %tmp40, align 8, !dbg !256
  %tmp42 = getelementptr { double, double }, { double, double }* %tmp39, i32 0, i32 1, !dbg !256
  %tmp43 = extractvalue { double, double } %call16, 1, !dbg !256
  store double %tmp43, double* %tmp42, align 8, !dbg !256
  %tmp44 = bitcast %struct.dpoint* %di to i8*, !dbg !256
  %tmp45 = bitcast %struct.dpoint* %coerce17 to i8*, !dbg !256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp44, i8* %tmp45, i64 16, i32 8, i1 false), !dbg !256
  %x18 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !258
  %tmp47 = load double, double* %x18, align 8, !dbg !258
  %cmp19 = fcmp ogt double -1.000000e+04, %tmp47, !dbg !260
  br i1 %cmp19, label %if.then.22, label %lor.lhs.false, !dbg !261

lor.lhs.false:                                    ; preds = %if.then
  %x20 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !262
  %tmp48 = load double, double* %x20, align 8, !dbg !262
  %cmp21 = fcmp ogt double %tmp48, 1.000000e+04, !dbg !264
  br i1 %cmp21, label %if.then.22, label %if.end, !dbg !265

if.then.22:                                       ; preds = %lor.lhs.false, %if.then
  %tmp52 = bitcast %struct.point* %n to i64*, !dbg !266
  %tmp53 = load i64, i64* %tmp52, align 4, !dbg !266
  %tmp54 = bitcast %struct.point* %An to i64*, !dbg !266
  %tmp55 = load i64, i64* %tmp54, align 4, !dbg !266
  %call23 = call { double, double } @intersect(i64 %tmp53, i64 %tmp55, double %call10, double -1.000000e+04), !dbg !266
  %tmp56 = bitcast %struct.dpoint* %coerce24 to { double, double }*, !dbg !266
  %tmp57 = getelementptr { double, double }, { double, double }* %tmp56, i32 0, i32 0, !dbg !266
  %tmp58 = extractvalue { double, double } %call23, 0, !dbg !266
  store double %tmp58, double* %tmp57, align 8, !dbg !266
  %tmp59 = getelementptr { double, double }, { double, double }* %tmp56, i32 0, i32 1, !dbg !266
  %tmp60 = extractvalue { double, double } %call23, 1, !dbg !266
  store double %tmp60, double* %tmp59, align 8, !dbg !266
  %tmp61 = bitcast %struct.dpoint* %di to i8*, !dbg !266
  %tmp62 = bitcast %struct.dpoint* %coerce24 to i8*, !dbg !266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp61, i8* %tmp62, i64 16, i32 8, i1 false), !dbg !266
  br label %if.end, !dbg !267

if.end:                                           ; preds = %if.then.22, %lor.lhs.false
  br label %if.end.137, !dbg !268

if.else:                                          ; preds = %land.lhs.true, %entry
  %x25 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !269
  %tmp63 = load i32, i32* %x25, align 4, !dbg !269
  %x26 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !271
  %tmp64 = load i32, i32* %x26, align 4, !dbg !271
  %cmp27 = icmp slt i32 %tmp63, %tmp64, !dbg !272
  br i1 %cmp27, label %land.lhs.true.28, label %if.else.35, !dbg !273

land.lhs.true.28:                                 ; preds = %if.else
  %y29 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !274
  %tmp65 = load i32, i32* %y29, align 4, !dbg !274
  %y30 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !276
  %tmp66 = load i32, i32* %y30, align 4, !dbg !276
  %cmp31 = icmp eq i32 %tmp65, %tmp66, !dbg !277
  br i1 %cmp31, label %if.then.32, label %if.else.35, !dbg !278

if.then.32:                                       ; preds = %land.lhs.true.28
  %tmp69 = bitcast %struct.point* %n to i64*, !dbg !279
  %tmp70 = load i64, i64* %tmp69, align 4, !dbg !279
  %tmp71 = bitcast %struct.point* %Dn to i64*, !dbg !279
  %tmp72 = load i64, i64* %tmp71, align 4, !dbg !279
  %call33 = call { double, double } @intersect(i64 %tmp70, i64 %tmp72, double %call10, double 1.000000e+04), !dbg !279
  %tmp73 = bitcast %struct.dpoint* %coerce34 to { double, double }*, !dbg !279
  %tmp74 = getelementptr { double, double }, { double, double }* %tmp73, i32 0, i32 0, !dbg !279
  %tmp75 = extractvalue { double, double } %call33, 0, !dbg !279
  store double %tmp75, double* %tmp74, align 8, !dbg !279
  %tmp76 = getelementptr { double, double }, { double, double }* %tmp73, i32 0, i32 1, !dbg !279
  %tmp77 = extractvalue { double, double } %call33, 1, !dbg !279
  store double %tmp77, double* %tmp76, align 8, !dbg !279
  %tmp78 = bitcast %struct.dpoint* %di to i8*, !dbg !279
  %tmp79 = bitcast %struct.dpoint* %coerce34 to i8*, !dbg !279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp78, i8* %tmp79, i64 16, i32 8, i1 false), !dbg !279
  br label %if.end.136, !dbg !281

if.else.35:                                       ; preds = %land.lhs.true.28, %if.else
  %x36 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !282
  %tmp80 = load i32, i32* %x36, align 4, !dbg !282
  %x37 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !284
  %tmp81 = load i32, i32* %x37, align 4, !dbg !284
  %cmp38 = icmp slt i32 %tmp80, %tmp81, !dbg !285
  br i1 %cmp38, label %land.lhs.true.39, label %if.else.55, !dbg !286

land.lhs.true.39:                                 ; preds = %if.else.35
  %y40 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !287
  %tmp82 = load i32, i32* %y40, align 4, !dbg !287
  %y41 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !289
  %tmp83 = load i32, i32* %y41, align 4, !dbg !289
  %cmp42 = icmp sgt i32 %tmp82, %tmp83, !dbg !290
  br i1 %cmp42, label %if.then.43, label %if.else.55, !dbg !291

if.then.43:                                       ; preds = %land.lhs.true.39
  %tmp86 = bitcast %struct.point* %n to i64*, !dbg !292
  %tmp87 = load i64, i64* %tmp86, align 4, !dbg !292
  %tmp88 = bitcast %struct.point* %Dn to i64*, !dbg !292
  %tmp89 = load i64, i64* %tmp88, align 4, !dbg !292
  %call44 = call { double, double } @intersect(i64 %tmp87, i64 %tmp89, double %call10, double 1.000000e+04), !dbg !292
  %tmp90 = bitcast %struct.dpoint* %coerce45 to { double, double }*, !dbg !292
  %tmp91 = getelementptr { double, double }, { double, double }* %tmp90, i32 0, i32 0, !dbg !292
  %tmp92 = extractvalue { double, double } %call44, 0, !dbg !292
  store double %tmp92, double* %tmp91, align 8, !dbg !292
  %tmp93 = getelementptr { double, double }, { double, double }* %tmp90, i32 0, i32 1, !dbg !292
  %tmp94 = extractvalue { double, double } %call44, 1, !dbg !292
  store double %tmp94, double* %tmp93, align 8, !dbg !292
  %tmp95 = bitcast %struct.dpoint* %di to i8*, !dbg !292
  %tmp96 = bitcast %struct.dpoint* %coerce45 to i8*, !dbg !292
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp95, i8* %tmp96, i64 16, i32 8, i1 false), !dbg !292
  %x46 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !294
  %tmp98 = load double, double* %x46, align 8, !dbg !294
  %cmp47 = fcmp ogt double -1.000000e+04, %tmp98, !dbg !296
  br i1 %cmp47, label %if.then.51, label %lor.lhs.false.48, !dbg !297

lor.lhs.false.48:                                 ; preds = %if.then.43
  %x49 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !298
  %tmp99 = load double, double* %x49, align 8, !dbg !298
  %cmp50 = fcmp ogt double %tmp99, 1.000000e+04, !dbg !300
  br i1 %cmp50, label %if.then.51, label %if.end.54, !dbg !301

if.then.51:                                       ; preds = %lor.lhs.false.48, %if.then.43
  %tmp103 = bitcast %struct.point* %n to i64*, !dbg !302
  %tmp104 = load i64, i64* %tmp103, align 4, !dbg !302
  %tmp105 = bitcast %struct.point* %Cn to i64*, !dbg !302
  %tmp106 = load i64, i64* %tmp105, align 4, !dbg !302
  %call52 = call { double, double } @intersect(i64 %tmp104, i64 %tmp106, double %call10, double 1.000000e+04), !dbg !302
  %tmp107 = bitcast %struct.dpoint* %coerce53 to { double, double }*, !dbg !302
  %tmp108 = getelementptr { double, double }, { double, double }* %tmp107, i32 0, i32 0, !dbg !302
  %tmp109 = extractvalue { double, double } %call52, 0, !dbg !302
  store double %tmp109, double* %tmp108, align 8, !dbg !302
  %tmp110 = getelementptr { double, double }, { double, double }* %tmp107, i32 0, i32 1, !dbg !302
  %tmp111 = extractvalue { double, double } %call52, 1, !dbg !302
  store double %tmp111, double* %tmp110, align 8, !dbg !302
  %tmp112 = bitcast %struct.dpoint* %di to i8*, !dbg !302
  %tmp113 = bitcast %struct.dpoint* %coerce53 to i8*, !dbg !302
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp112, i8* %tmp113, i64 16, i32 8, i1 false), !dbg !302
  br label %if.end.54, !dbg !303

if.end.54:                                        ; preds = %if.then.51, %lor.lhs.false.48
  br label %if.end.135, !dbg !304

if.else.55:                                       ; preds = %land.lhs.true.39, %if.else.35
  %x56 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !305
  %tmp114 = load i32, i32* %x56, align 4, !dbg !305
  %x57 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !307
  %tmp115 = load i32, i32* %x57, align 4, !dbg !307
  %cmp58 = icmp eq i32 %tmp114, %tmp115, !dbg !308
  br i1 %cmp58, label %land.lhs.true.59, label %if.else.66, !dbg !309

land.lhs.true.59:                                 ; preds = %if.else.55
  %y60 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !310
  %tmp116 = load i32, i32* %y60, align 4, !dbg !310
  %y61 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !312
  %tmp117 = load i32, i32* %y61, align 4, !dbg !312
  %cmp62 = icmp slt i32 %tmp116, %tmp117, !dbg !313
  br i1 %cmp62, label %if.then.63, label %if.else.66, !dbg !314

if.then.63:                                       ; preds = %land.lhs.true.59
  %tmp120 = bitcast %struct.point* %n to i64*, !dbg !315
  %tmp121 = load i64, i64* %tmp120, align 4, !dbg !315
  %tmp122 = bitcast %struct.point* %An to i64*, !dbg !315
  %tmp123 = load i64, i64* %tmp122, align 4, !dbg !315
  %call64 = call { double, double } @intersect(i64 %tmp121, i64 %tmp123, double %call10, double -1.000000e+04), !dbg !315
  %tmp124 = bitcast %struct.dpoint* %coerce65 to { double, double }*, !dbg !315
  %tmp125 = getelementptr { double, double }, { double, double }* %tmp124, i32 0, i32 0, !dbg !315
  %tmp126 = extractvalue { double, double } %call64, 0, !dbg !315
  store double %tmp126, double* %tmp125, align 8, !dbg !315
  %tmp127 = getelementptr { double, double }, { double, double }* %tmp124, i32 0, i32 1, !dbg !315
  %tmp128 = extractvalue { double, double } %call64, 1, !dbg !315
  store double %tmp128, double* %tmp127, align 8, !dbg !315
  %tmp129 = bitcast %struct.dpoint* %di to i8*, !dbg !315
  %tmp130 = bitcast %struct.dpoint* %coerce65 to i8*, !dbg !315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp129, i8* %tmp130, i64 16, i32 8, i1 false), !dbg !315
  br label %if.end.134, !dbg !317

if.else.66:                                       ; preds = %land.lhs.true.59, %if.else.55
  %x67 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !318
  %tmp131 = load i32, i32* %x67, align 4, !dbg !318
  %x68 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !320
  %tmp132 = load i32, i32* %x68, align 4, !dbg !320
  %cmp69 = icmp eq i32 %tmp131, %tmp132, !dbg !321
  br i1 %cmp69, label %land.lhs.true.70, label %if.else.77, !dbg !322

land.lhs.true.70:                                 ; preds = %if.else.66
  %y71 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !323
  %tmp133 = load i32, i32* %y71, align 4, !dbg !323
  %y72 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !325
  %tmp134 = load i32, i32* %y72, align 4, !dbg !325
  %cmp73 = icmp sgt i32 %tmp133, %tmp134, !dbg !326
  br i1 %cmp73, label %if.then.74, label %if.else.77, !dbg !327

if.then.74:                                       ; preds = %land.lhs.true.70
  %tmp137 = bitcast %struct.point* %n to i64*, !dbg !328
  %tmp138 = load i64, i64* %tmp137, align 4, !dbg !328
  %tmp139 = bitcast %struct.point* %Cn to i64*, !dbg !328
  %tmp140 = load i64, i64* %tmp139, align 4, !dbg !328
  %call75 = call { double, double } @intersect(i64 %tmp138, i64 %tmp140, double %call10, double 1.000000e+04), !dbg !328
  %tmp141 = bitcast %struct.dpoint* %coerce76 to { double, double }*, !dbg !328
  %tmp142 = getelementptr { double, double }, { double, double }* %tmp141, i32 0, i32 0, !dbg !328
  %tmp143 = extractvalue { double, double } %call75, 0, !dbg !328
  store double %tmp143, double* %tmp142, align 8, !dbg !328
  %tmp144 = getelementptr { double, double }, { double, double }* %tmp141, i32 0, i32 1, !dbg !328
  %tmp145 = extractvalue { double, double } %call75, 1, !dbg !328
  store double %tmp145, double* %tmp144, align 8, !dbg !328
  %tmp146 = bitcast %struct.dpoint* %di to i8*, !dbg !328
  %tmp147 = bitcast %struct.dpoint* %coerce76 to i8*, !dbg !328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp146, i8* %tmp147, i64 16, i32 8, i1 false), !dbg !328
  br label %if.end.133, !dbg !330

if.else.77:                                       ; preds = %land.lhs.true.70, %if.else.66
  %x78 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !331
  %tmp148 = load i32, i32* %x78, align 4, !dbg !331
  %x79 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !333
  %tmp149 = load i32, i32* %x79, align 4, !dbg !333
  %cmp80 = icmp sgt i32 %tmp148, %tmp149, !dbg !334
  br i1 %cmp80, label %land.lhs.true.81, label %if.else.97, !dbg !335

land.lhs.true.81:                                 ; preds = %if.else.77
  %y82 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !336
  %tmp150 = load i32, i32* %y82, align 4, !dbg !336
  %y83 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !338
  %tmp151 = load i32, i32* %y83, align 4, !dbg !338
  %cmp84 = icmp slt i32 %tmp150, %tmp151, !dbg !339
  br i1 %cmp84, label %if.then.85, label %if.else.97, !dbg !340

if.then.85:                                       ; preds = %land.lhs.true.81
  %tmp154 = bitcast %struct.point* %n to i64*, !dbg !341
  %tmp155 = load i64, i64* %tmp154, align 4, !dbg !341
  %tmp156 = bitcast %struct.point* %Bn to i64*, !dbg !341
  %tmp157 = load i64, i64* %tmp156, align 4, !dbg !341
  %call86 = call { double, double } @intersect(i64 %tmp155, i64 %tmp157, double %call10, double -1.000000e+04), !dbg !341
  %tmp158 = bitcast %struct.dpoint* %coerce87 to { double, double }*, !dbg !341
  %tmp159 = getelementptr { double, double }, { double, double }* %tmp158, i32 0, i32 0, !dbg !341
  %tmp160 = extractvalue { double, double } %call86, 0, !dbg !341
  store double %tmp160, double* %tmp159, align 8, !dbg !341
  %tmp161 = getelementptr { double, double }, { double, double }* %tmp158, i32 0, i32 1, !dbg !341
  %tmp162 = extractvalue { double, double } %call86, 1, !dbg !341
  store double %tmp162, double* %tmp161, align 8, !dbg !341
  %tmp163 = bitcast %struct.dpoint* %di to i8*, !dbg !341
  %tmp164 = bitcast %struct.dpoint* %coerce87 to i8*, !dbg !341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp163, i8* %tmp164, i64 16, i32 8, i1 false), !dbg !341
  %x88 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !343
  %tmp166 = load double, double* %x88, align 8, !dbg !343
  %cmp89 = fcmp ogt double -1.000000e+04, %tmp166, !dbg !345
  br i1 %cmp89, label %if.then.93, label %lor.lhs.false.90, !dbg !346

lor.lhs.false.90:                                 ; preds = %if.then.85
  %x91 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !347
  %tmp167 = load double, double* %x91, align 8, !dbg !347
  %cmp92 = fcmp ogt double %tmp167, 1.000000e+04, !dbg !349
  br i1 %cmp92, label %if.then.93, label %if.end.96, !dbg !350

if.then.93:                                       ; preds = %lor.lhs.false.90, %if.then.85
  %tmp171 = bitcast %struct.point* %n to i64*, !dbg !351
  %tmp172 = load i64, i64* %tmp171, align 4, !dbg !351
  %tmp173 = bitcast %struct.point* %An to i64*, !dbg !351
  %tmp174 = load i64, i64* %tmp173, align 4, !dbg !351
  %call94 = call { double, double } @intersect(i64 %tmp172, i64 %tmp174, double %call10, double -1.000000e+04), !dbg !351
  %tmp175 = bitcast %struct.dpoint* %coerce95 to { double, double }*, !dbg !351
  %tmp176 = getelementptr { double, double }, { double, double }* %tmp175, i32 0, i32 0, !dbg !351
  %tmp177 = extractvalue { double, double } %call94, 0, !dbg !351
  store double %tmp177, double* %tmp176, align 8, !dbg !351
  %tmp178 = getelementptr { double, double }, { double, double }* %tmp175, i32 0, i32 1, !dbg !351
  %tmp179 = extractvalue { double, double } %call94, 1, !dbg !351
  store double %tmp179, double* %tmp178, align 8, !dbg !351
  %tmp180 = bitcast %struct.dpoint* %di to i8*, !dbg !351
  %tmp181 = bitcast %struct.dpoint* %coerce95 to i8*, !dbg !351
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp180, i8* %tmp181, i64 16, i32 8, i1 false), !dbg !351
  br label %if.end.96, !dbg !352

if.end.96:                                        ; preds = %if.then.93, %lor.lhs.false.90
  br label %if.end.132, !dbg !353

if.else.97:                                       ; preds = %land.lhs.true.81, %if.else.77
  %x98 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !354
  %tmp182 = load i32, i32* %x98, align 4, !dbg !354
  %x99 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !356
  %tmp183 = load i32, i32* %x99, align 4, !dbg !356
  %cmp100 = icmp sgt i32 %tmp182, %tmp183, !dbg !357
  br i1 %cmp100, label %land.lhs.true.101, label %if.else.108, !dbg !358

land.lhs.true.101:                                ; preds = %if.else.97
  %y102 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !359
  %tmp184 = load i32, i32* %y102, align 4, !dbg !359
  %y103 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !361
  %tmp185 = load i32, i32* %y103, align 4, !dbg !361
  %cmp104 = icmp eq i32 %tmp184, %tmp185, !dbg !362
  br i1 %cmp104, label %if.then.105, label %if.else.108, !dbg !363

if.then.105:                                      ; preds = %land.lhs.true.101
  %tmp188 = bitcast %struct.point* %n to i64*, !dbg !364
  %tmp189 = load i64, i64* %tmp188, align 4, !dbg !364
  %tmp190 = bitcast %struct.point* %Bn to i64*, !dbg !364
  %tmp191 = load i64, i64* %tmp190, align 4, !dbg !364
  %call106 = call { double, double } @intersect(i64 %tmp189, i64 %tmp191, double %call10, double -1.000000e+04), !dbg !364
  %tmp192 = bitcast %struct.dpoint* %coerce107 to { double, double }*, !dbg !364
  %tmp193 = getelementptr { double, double }, { double, double }* %tmp192, i32 0, i32 0, !dbg !364
  %tmp194 = extractvalue { double, double } %call106, 0, !dbg !364
  store double %tmp194, double* %tmp193, align 8, !dbg !364
  %tmp195 = getelementptr { double, double }, { double, double }* %tmp192, i32 0, i32 1, !dbg !364
  %tmp196 = extractvalue { double, double } %call106, 1, !dbg !364
  store double %tmp196, double* %tmp195, align 8, !dbg !364
  %tmp197 = bitcast %struct.dpoint* %di to i8*, !dbg !364
  %tmp198 = bitcast %struct.dpoint* %coerce107 to i8*, !dbg !364
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp197, i8* %tmp198, i64 16, i32 8, i1 false), !dbg !364
  br label %if.end.131, !dbg !365

if.else.108:                                      ; preds = %land.lhs.true.101, %if.else.97
  %x109 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 0, !dbg !366
  %tmp199 = load i32, i32* %x109, align 4, !dbg !366
  %x110 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 0, !dbg !368
  %tmp200 = load i32, i32* %x110, align 4, !dbg !368
  %cmp111 = icmp sgt i32 %tmp199, %tmp200, !dbg !369
  br i1 %cmp111, label %land.lhs.true.112, label %if.else.128, !dbg !370

land.lhs.true.112:                                ; preds = %if.else.108
  %y113 = getelementptr inbounds %struct.point, %struct.point* %p, i32 0, i32 1, !dbg !371
  %tmp201 = load i32, i32* %y113, align 4, !dbg !371
  %y114 = getelementptr inbounds %struct.point, %struct.point* %np, i32 0, i32 1, !dbg !373
  %tmp202 = load i32, i32* %y114, align 4, !dbg !373
  %cmp115 = icmp sgt i32 %tmp201, %tmp202, !dbg !374
  br i1 %cmp115, label %if.then.116, label %if.else.128, !dbg !375

if.then.116:                                      ; preds = %land.lhs.true.112
  %tmp205 = bitcast %struct.point* %n to i64*, !dbg !376
  %tmp206 = load i64, i64* %tmp205, align 4, !dbg !376
  %tmp207 = bitcast %struct.point* %Bn to i64*, !dbg !376
  %tmp208 = load i64, i64* %tmp207, align 4, !dbg !376
  %call117 = call { double, double } @intersect(i64 %tmp206, i64 %tmp208, double %call10, double -1.000000e+04), !dbg !376
  %tmp209 = bitcast %struct.dpoint* %coerce118 to { double, double }*, !dbg !376
  %tmp210 = getelementptr { double, double }, { double, double }* %tmp209, i32 0, i32 0, !dbg !376
  %tmp211 = extractvalue { double, double } %call117, 0, !dbg !376
  store double %tmp211, double* %tmp210, align 8, !dbg !376
  %tmp212 = getelementptr { double, double }, { double, double }* %tmp209, i32 0, i32 1, !dbg !376
  %tmp213 = extractvalue { double, double } %call117, 1, !dbg !376
  store double %tmp213, double* %tmp212, align 8, !dbg !376
  %tmp214 = bitcast %struct.dpoint* %di to i8*, !dbg !376
  %tmp215 = bitcast %struct.dpoint* %coerce118 to i8*, !dbg !376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp214, i8* %tmp215, i64 16, i32 8, i1 false), !dbg !376
  %x119 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !378
  %tmp217 = load double, double* %x119, align 8, !dbg !378
  %cmp120 = fcmp ogt double -1.000000e+04, %tmp217, !dbg !380
  br i1 %cmp120, label %if.then.124, label %lor.lhs.false.121, !dbg !381

lor.lhs.false.121:                                ; preds = %if.then.116
  %x122 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !382
  %tmp218 = load double, double* %x122, align 8, !dbg !382
  %cmp123 = fcmp ogt double %tmp218, 1.000000e+04, !dbg !384
  br i1 %cmp123, label %if.then.124, label %if.end.127, !dbg !385

if.then.124:                                      ; preds = %lor.lhs.false.121, %if.then.116
  %tmp222 = bitcast %struct.point* %n to i64*, !dbg !386
  %tmp223 = load i64, i64* %tmp222, align 4, !dbg !386
  %tmp224 = bitcast %struct.point* %Cn to i64*, !dbg !386
  %tmp225 = load i64, i64* %tmp224, align 4, !dbg !386
  %call125 = call { double, double } @intersect(i64 %tmp223, i64 %tmp225, double %call10, double 1.000000e+04), !dbg !386
  %tmp226 = bitcast %struct.dpoint* %coerce126 to { double, double }*, !dbg !386
  %tmp227 = getelementptr { double, double }, { double, double }* %tmp226, i32 0, i32 0, !dbg !386
  %tmp228 = extractvalue { double, double } %call125, 0, !dbg !386
  store double %tmp228, double* %tmp227, align 8, !dbg !386
  %tmp229 = getelementptr { double, double }, { double, double }* %tmp226, i32 0, i32 1, !dbg !386
  %tmp230 = extractvalue { double, double } %call125, 1, !dbg !386
  store double %tmp230, double* %tmp229, align 8, !dbg !386
  %tmp231 = bitcast %struct.dpoint* %di to i8*, !dbg !386
  %tmp232 = bitcast %struct.dpoint* %coerce126 to i8*, !dbg !386
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp231, i8* %tmp232, i64 16, i32 8, i1 false), !dbg !386
  br label %if.end.127, !dbg !387

if.end.127:                                       ; preds = %if.then.124, %lor.lhs.false.121
  br label %if.end.130, !dbg !388

if.else.128:                                      ; preds = %land.lhs.true.112, %if.else.108
  %call129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i32 0, i32 0)), !dbg !389
  call void @exit(i32 1) #6, !dbg !391
  unreachable, !dbg !391

if.end.130:                                       ; preds = %if.end.127
  br label %if.end.131

if.end.131:                                       ; preds = %if.end.130, %if.then.105
  br label %if.end.132

if.end.132:                                       ; preds = %if.end.131, %if.end.96
  br label %if.end.133

if.end.133:                                       ; preds = %if.end.132, %if.then.74
  br label %if.end.134

if.end.134:                                       ; preds = %if.end.133, %if.then.63
  br label %if.end.135

if.end.135:                                       ; preds = %if.end.134, %if.end.54
  br label %if.end.136

if.end.136:                                       ; preds = %if.end.135, %if.then.32
  br label %if.end.137

if.end.137:                                       ; preds = %if.end.136, %if.end
  %x138 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 0, !dbg !392
  %tmp233 = load double, double* %x138, align 8, !dbg !392
  %conv = fptosi double %tmp233 to i32, !dbg !393
  %x139 = getelementptr inbounds %struct.point, %struct.point* %i, i32 0, i32 0, !dbg !394
  store i32 %conv, i32* %x139, align 4, !dbg !395
  %y140 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %di, i32 0, i32 1, !dbg !396
  %tmp234 = load double, double* %y140, align 8, !dbg !396
  %conv141 = fptosi double %tmp234 to i32, !dbg !397
  %y142 = getelementptr inbounds %struct.point, %struct.point* %i, i32 0, i32 1, !dbg !398
  store i32 %conv141, i32* %y142, align 4, !dbg !399
  %tmp235 = bitcast %struct.point* %retval to i8*, !dbg !400
  %tmp236 = bitcast %struct.point* %i to i8*, !dbg !400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp235, i8* %tmp236, i64 8, i32 4, i1 false), !dbg !400
  %tmp237 = bitcast %struct.point* %retval to i64*, !dbg !401
  %tmp238 = load i64, i64* %tmp237, align 4, !dbg !401
  ret i64 %tmp238, !dbg !401
}

declare %struct.CHpoints* @next(%struct.CHpoints*) #3

declare i64 @vector(i64, i64) #3

declare double @calculate_c(i64, double, double) #3

declare { double, double } @midpoint(i64, i64) #3

declare { double, double } @intersect(i64, i64, double, double) #3

declare i32 @printf(i8*, ...) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #5

; Function Attrs: nounwind uwtable
define void @add_infinit_points_to_K(%struct.CHpoints* %S) #0 {
entry:
  %agg.tmp = alloca %struct.point, align 4
  %agg.tmp10 = alloca %struct.point, align 4
  call void @llvm.dbg.value(metadata %struct.CHpoints* %S, i64 0, metadata !402, metadata !129), !dbg !403
  call void @llvm.dbg.declare(metadata !2, metadata !404, metadata !129), !dbg !405
  %tmp = load i32, i32* @CHno, align 4, !dbg !406
  %mul = mul nsw i32 2, %tmp, !dbg !407
  %sub = sub nsw i32 %mul, 1, !dbg !408
  %conv = sext i32 %sub to i64, !dbg !409
  %call = call noalias i8* @calloc(i64 %conv, i64 20) #4, !dbg !410
  %tmp1 = bitcast i8* %call to %struct.Knode*, !dbg !411
  store %struct.Knode* %tmp1, %struct.Knode** @K, align 8, !dbg !412
  %tmp2 = load i32, i32* @CHno, align 4, !dbg !413
  %mul1 = mul nsw i32 2, %tmp2, !dbg !414
  %sub2 = sub nsw i32 %mul1, 2, !dbg !415
  %conv3 = sext i32 %sub2 to i64, !dbg !416
  %call4 = call noalias i8* @calloc(i64 %conv3, i64 32) #4, !dbg !417
  %tmp3 = bitcast i8* %call4 to %struct.Enode*, !dbg !418
  store %struct.Enode* %tmp3, %struct.Enode** @E, align 8, !dbg !419
  %call5 = call %struct.CHsplay_node* @CHinit(), !dbg !420
  store %struct.CHsplay_node* %call5, %struct.CHsplay_node** @CHSplaytree, align 8, !dbg !421
  %next = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %S, i32 0, i32 3, !dbg !422
  %tmp5 = load %struct.CHpoints*, %struct.CHpoints** %next, align 8, !dbg !422
  call void @llvm.dbg.value(metadata %struct.CHpoints* %tmp5, i64 0, metadata !423, metadata !129), !dbg !424
  %call6 = call i64 @compute_v(%struct.CHpoints* %S), !dbg !425
  %tmp7 = bitcast %struct.point* %agg.tmp to i64*, !dbg !425
  store i64 %call6, i64* %tmp7, align 4, !dbg !425
  %tmp8 = bitcast %struct.point* %agg.tmp to i64*, !dbg !426
  %tmp9 = load i64, i64* %tmp8, align 4, !dbg !426
  call void @add_point(i64 %tmp9), !dbg !426
  %tmp10 = load i32, i32* @Kcount, align 4, !dbg !427
  %sub7 = sub nsw i32 %tmp10, 1, !dbg !428
  %v = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %S, i32 0, i32 2, !dbg !429
  store i32 %sub7, i32* %v, align 4, !dbg !430
  %call8 = call i8* @CHinsert(%struct.CHsplay_node** @CHSplaytree, %struct.CHpoints* %S), !dbg !431
  br label %while.cond, !dbg !432

while.cond:                                       ; preds = %while.body, %entry
  %temp.0 = phi %struct.CHpoints* [ %tmp5, %entry ], [ %tmp23, %while.body ]
  %cmp = icmp ne %struct.CHpoints* %temp.0, %S, !dbg !433
  br i1 %cmp, label %while.body, label %while.end, !dbg !432

while.body:                                       ; preds = %while.cond
  %call11 = call i64 @compute_v(%struct.CHpoints* %temp.0), !dbg !434
  %tmp16 = bitcast %struct.point* %agg.tmp10 to i64*, !dbg !434
  store i64 %call11, i64* %tmp16, align 4, !dbg !434
  %tmp17 = bitcast %struct.point* %agg.tmp10 to i64*, !dbg !436
  %tmp18 = load i64, i64* %tmp17, align 4, !dbg !436
  call void @add_point(i64 %tmp18), !dbg !436
  %tmp19 = load i32, i32* @Kcount, align 4, !dbg !437
  %sub12 = sub nsw i32 %tmp19, 1, !dbg !438
  %v13 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %temp.0, i32 0, i32 2, !dbg !439
  store i32 %sub12, i32* %v13, align 4, !dbg !440
  %call14 = call i8* @CHinsert(%struct.CHsplay_node** @CHSplaytree, %struct.CHpoints* %temp.0), !dbg !441
  %next15 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %temp.0, i32 0, i32 3, !dbg !442
  %tmp23 = load %struct.CHpoints*, %struct.CHpoints** %next15, align 8, !dbg !442
  call void @llvm.dbg.value(metadata %struct.CHpoints* %tmp23, i64 0, metadata !423, metadata !129), !dbg !424
  br label %while.cond, !dbg !432

while.end:                                        ; preds = %while.cond
  ret void, !dbg !443
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #1

declare %struct.CHsplay_node* @CHinit() #3

declare i8* @CHinsert(%struct.CHsplay_node**, %struct.CHpoints*) #3

; Function Attrs: nounwind uwtable
define void @add_edge(i32 %v1, i32 %v2) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %v1, i64 0, metadata !444, metadata !129), !dbg !445
  call void @llvm.dbg.value(metadata i32 %v2, i64 0, metadata !446, metadata !129), !dbg !447
  call void @llvm.dbg.declare(metadata !2, metadata !448, metadata !129), !dbg !449
  call void @llvm.dbg.declare(metadata !2, metadata !450, metadata !129), !dbg !451
  %tmp1 = load i32, i32* @Ecount, align 4, !dbg !452
  %idxprom = sext i32 %tmp1 to i64, !dbg !453
  %tmp2 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !453
  %arrayidx = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp2, i64 %idxprom, !dbg !453
  %v11 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx, i32 0, i32 0, !dbg !454
  store i32 %v1, i32* %v11, align 4, !dbg !455
  %tmp4 = load i32, i32* @Ecount, align 4, !dbg !456
  %idxprom2 = sext i32 %tmp4 to i64, !dbg !457
  %tmp5 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !457
  %arrayidx3 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp5, i64 %idxprom2, !dbg !457
  %v24 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx3, i32 0, i32 1, !dbg !458
  store i32 %v2, i32* %v24, align 4, !dbg !459
  %idxprom5 = sext i32 %v1 to i64, !dbg !460
  %tmp7 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !460
  %arrayidx6 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp7, i64 %idxprom5, !dbg !460
  %e1 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx6, i32 0, i32 1, !dbg !462
  %tmp8 = load i32, i32* %e1, align 4, !dbg !462
  %cmp = icmp eq i32 %tmp8, 0, !dbg !463
  br i1 %cmp, label %if.then, label %if.else, !dbg !464

if.then:                                          ; preds = %entry
  %tmp9 = load i32, i32* @Ecount, align 4, !dbg !465
  %idxprom7 = sext i32 %v1 to i64, !dbg !467
  %tmp11 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !467
  %arrayidx8 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp11, i64 %idxprom7, !dbg !467
  %e19 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx8, i32 0, i32 1, !dbg !468
  store i32 %tmp9, i32* %e19, align 4, !dbg !469
  %tmp12 = load i32, i32* @Ecount, align 4, !dbg !470
  %tmp13 = load i32, i32* @Ecount, align 4, !dbg !471
  %idxprom10 = sext i32 %tmp13 to i64, !dbg !472
  %tmp14 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !472
  %arrayidx11 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp14, i64 %idxprom10, !dbg !472
  %p1 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx11, i32 0, i32 2, !dbg !473
  store i32 %tmp12, i32* %p1, align 4, !dbg !474
  %tmp15 = load i32, i32* @Ecount, align 4, !dbg !475
  %tmp16 = load i32, i32* @Ecount, align 4, !dbg !476
  %idxprom12 = sext i32 %tmp16 to i64, !dbg !477
  %tmp17 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !477
  %arrayidx13 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp17, i64 %idxprom12, !dbg !477
  %q1 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx13, i32 0, i32 4, !dbg !478
  store i32 %tmp15, i32* %q1, align 4, !dbg !479
  br label %if.end.68, !dbg !480

if.else:                                          ; preds = %entry
  %idxprom14 = sext i32 %v1 to i64, !dbg !481
  %tmp19 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !481
  %arrayidx15 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp19, i64 %idxprom14, !dbg !481
  %e2 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx15, i32 0, i32 2, !dbg !483
  %tmp20 = load i32, i32* %e2, align 4, !dbg !483
  %cmp16 = icmp eq i32 %tmp20, 0, !dbg !484
  br i1 %cmp16, label %if.then.17, label %if.else.64, !dbg !485

if.then.17:                                       ; preds = %if.else
  %tmp21 = load i32, i32* @Ecount, align 4, !dbg !486
  %idxprom18 = sext i32 %v1 to i64, !dbg !488
  %tmp23 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !488
  %arrayidx19 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp23, i64 %idxprom18, !dbg !488
  %e220 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx19, i32 0, i32 2, !dbg !489
  store i32 %tmp21, i32* %e220, align 4, !dbg !490
  %idxprom21 = sext i32 %v1 to i64, !dbg !491
  %tmp25 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !491
  %arrayidx22 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp25, i64 %idxprom21, !dbg !491
  %e123 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx22, i32 0, i32 1, !dbg !492
  %tmp26 = load i32, i32* %e123, align 4, !dbg !492
  %tmp27 = load i32, i32* @Ecount, align 4, !dbg !493
  %idxprom24 = sext i32 %tmp27 to i64, !dbg !494
  %tmp28 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !494
  %arrayidx25 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp28, i64 %idxprom24, !dbg !494
  %p126 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx25, i32 0, i32 2, !dbg !495
  store i32 %tmp26, i32* %p126, align 4, !dbg !496
  %idxprom27 = sext i32 %v1 to i64, !dbg !497
  %tmp30 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !497
  %arrayidx28 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp30, i64 %idxprom27, !dbg !497
  %e129 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx28, i32 0, i32 1, !dbg !498
  %tmp31 = load i32, i32* %e129, align 4, !dbg !498
  %tmp32 = load i32, i32* @Ecount, align 4, !dbg !499
  %idxprom30 = sext i32 %tmp32 to i64, !dbg !500
  %tmp33 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !500
  %arrayidx31 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp33, i64 %idxprom30, !dbg !500
  %q132 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx31, i32 0, i32 4, !dbg !501
  store i32 %tmp31, i32* %q132, align 4, !dbg !502
  %idxprom33 = sext i32 %v1 to i64, !dbg !503
  %tmp36 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !503
  %arrayidx34 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp36, i64 %idxprom33, !dbg !503
  %e135 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx34, i32 0, i32 1, !dbg !505
  %tmp37 = load i32, i32* %e135, align 4, !dbg !505
  %idxprom36 = sext i32 %tmp37 to i64, !dbg !506
  %tmp38 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !506
  %arrayidx37 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp38, i64 %idxprom36, !dbg !506
  %v138 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx37, i32 0, i32 0, !dbg !507
  %tmp39 = load i32, i32* %v138, align 4, !dbg !507
  %cmp39 = icmp eq i32 %v1, %tmp39, !dbg !508
  br i1 %cmp39, label %if.then.40, label %if.else.53, !dbg !509

if.then.40:                                       ; preds = %if.then.17
  %tmp40 = load i32, i32* @Ecount, align 4, !dbg !510
  %idxprom41 = sext i32 %v1 to i64, !dbg !512
  %tmp42 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !512
  %arrayidx42 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp42, i64 %idxprom41, !dbg !512
  %e143 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx42, i32 0, i32 1, !dbg !513
  %tmp43 = load i32, i32* %e143, align 4, !dbg !513
  %idxprom44 = sext i32 %tmp43 to i64, !dbg !514
  %tmp44 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !514
  %arrayidx45 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp44, i64 %idxprom44, !dbg !514
  %p146 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx45, i32 0, i32 2, !dbg !515
  store i32 %tmp40, i32* %p146, align 4, !dbg !516
  %tmp45 = load i32, i32* @Ecount, align 4, !dbg !517
  %idxprom47 = sext i32 %v1 to i64, !dbg !518
  %tmp47 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !518
  %arrayidx48 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp47, i64 %idxprom47, !dbg !518
  %e149 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx48, i32 0, i32 1, !dbg !519
  %tmp48 = load i32, i32* %e149, align 4, !dbg !519
  %idxprom50 = sext i32 %tmp48 to i64, !dbg !520
  %tmp49 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !520
  %arrayidx51 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp49, i64 %idxprom50, !dbg !520
  %q152 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx51, i32 0, i32 4, !dbg !521
  store i32 %tmp45, i32* %q152, align 4, !dbg !522
  br label %if.end, !dbg !523

if.else.53:                                       ; preds = %if.then.17
  %tmp50 = load i32, i32* @Ecount, align 4, !dbg !524
  %idxprom54 = sext i32 %v1 to i64, !dbg !526
  %tmp52 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !526
  %arrayidx55 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp52, i64 %idxprom54, !dbg !526
  %e156 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx55, i32 0, i32 1, !dbg !527
  %tmp53 = load i32, i32* %e156, align 4, !dbg !527
  %idxprom57 = sext i32 %tmp53 to i64, !dbg !528
  %tmp54 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !528
  %arrayidx58 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp54, i64 %idxprom57, !dbg !528
  %p2 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx58, i32 0, i32 3, !dbg !529
  store i32 %tmp50, i32* %p2, align 4, !dbg !530
  %tmp55 = load i32, i32* @Ecount, align 4, !dbg !531
  %idxprom59 = sext i32 %v1 to i64, !dbg !532
  %tmp57 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !532
  %arrayidx60 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp57, i64 %idxprom59, !dbg !532
  %e161 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx60, i32 0, i32 1, !dbg !533
  %tmp58 = load i32, i32* %e161, align 4, !dbg !533
  %idxprom62 = sext i32 %tmp58 to i64, !dbg !534
  %tmp59 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !534
  %arrayidx63 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp59, i64 %idxprom62, !dbg !534
  %q2 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx63, i32 0, i32 5, !dbg !535
  store i32 %tmp55, i32* %q2, align 4, !dbg !536
  br label %if.end

if.end:                                           ; preds = %if.else.53, %if.then.40
  br label %if.end.67, !dbg !537

if.else.64:                                       ; preds = %if.else
  %tmp60 = load i32, i32* @Ecount, align 4, !dbg !538
  %idxprom65 = sext i32 %v1 to i64, !dbg !540
  %tmp62 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !540
  %arrayidx66 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp62, i64 %idxprom65, !dbg !540
  %e3 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx66, i32 0, i32 3, !dbg !541
  store i32 %tmp60, i32* %e3, align 4, !dbg !542
  br label %if.end.67

if.end.67:                                        ; preds = %if.else.64, %if.end
  br label %if.end.68

if.end.68:                                        ; preds = %if.end.67, %if.then
  %idxprom69 = sext i32 %v2 to i64, !dbg !543
  %tmp64 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !543
  %arrayidx70 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp64, i64 %idxprom69, !dbg !543
  %e171 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx70, i32 0, i32 1, !dbg !545
  %tmp65 = load i32, i32* %e171, align 4, !dbg !545
  %cmp72 = icmp eq i32 %tmp65, 0, !dbg !546
  br i1 %cmp72, label %if.then.73, label %if.else.83, !dbg !547

if.then.73:                                       ; preds = %if.end.68
  %tmp66 = load i32, i32* @Ecount, align 4, !dbg !548
  %idxprom74 = sext i32 %v2 to i64, !dbg !550
  %tmp68 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !550
  %arrayidx75 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp68, i64 %idxprom74, !dbg !550
  %e176 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx75, i32 0, i32 1, !dbg !551
  store i32 %tmp66, i32* %e176, align 4, !dbg !552
  %tmp69 = load i32, i32* @Ecount, align 4, !dbg !553
  %tmp70 = load i32, i32* @Ecount, align 4, !dbg !554
  %idxprom77 = sext i32 %tmp70 to i64, !dbg !555
  %tmp71 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !555
  %arrayidx78 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp71, i64 %idxprom77, !dbg !555
  %p179 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx78, i32 0, i32 2, !dbg !556
  store i32 %tmp69, i32* %p179, align 4, !dbg !557
  %tmp72 = load i32, i32* @Ecount, align 4, !dbg !558
  %tmp73 = load i32, i32* @Ecount, align 4, !dbg !559
  %idxprom80 = sext i32 %tmp73 to i64, !dbg !560
  %tmp74 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !560
  %arrayidx81 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp74, i64 %idxprom80, !dbg !560
  %q182 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx81, i32 0, i32 4, !dbg !561
  store i32 %tmp72, i32* %q182, align 4, !dbg !562
  br label %if.end.143, !dbg !563

if.else.83:                                       ; preds = %if.end.68
  %idxprom84 = sext i32 %v2 to i64, !dbg !564
  %tmp76 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !564
  %arrayidx85 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp76, i64 %idxprom84, !dbg !564
  %e286 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx85, i32 0, i32 2, !dbg !566
  %tmp77 = load i32, i32* %e286, align 4, !dbg !566
  %cmp87 = icmp eq i32 %tmp77, 0, !dbg !567
  br i1 %cmp87, label %if.then.88, label %if.else.138, !dbg !568

if.then.88:                                       ; preds = %if.else.83
  %tmp78 = load i32, i32* @Ecount, align 4, !dbg !569
  %idxprom89 = sext i32 %v2 to i64, !dbg !571
  %tmp80 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !571
  %arrayidx90 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp80, i64 %idxprom89, !dbg !571
  %e291 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx90, i32 0, i32 2, !dbg !572
  store i32 %tmp78, i32* %e291, align 4, !dbg !573
  %idxprom92 = sext i32 %v2 to i64, !dbg !574
  %tmp82 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !574
  %arrayidx93 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp82, i64 %idxprom92, !dbg !574
  %e194 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx93, i32 0, i32 1, !dbg !575
  %tmp83 = load i32, i32* %e194, align 4, !dbg !575
  %tmp84 = load i32, i32* @Ecount, align 4, !dbg !576
  %idxprom95 = sext i32 %tmp84 to i64, !dbg !577
  %tmp85 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !577
  %arrayidx96 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp85, i64 %idxprom95, !dbg !577
  %p197 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx96, i32 0, i32 2, !dbg !578
  store i32 %tmp83, i32* %p197, align 4, !dbg !579
  %idxprom98 = sext i32 %v2 to i64, !dbg !580
  %tmp87 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !580
  %arrayidx99 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp87, i64 %idxprom98, !dbg !580
  %e1100 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx99, i32 0, i32 1, !dbg !581
  %tmp88 = load i32, i32* %e1100, align 4, !dbg !581
  %tmp89 = load i32, i32* @Ecount, align 4, !dbg !582
  %idxprom101 = sext i32 %tmp89 to i64, !dbg !583
  %tmp90 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !583
  %arrayidx102 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp90, i64 %idxprom101, !dbg !583
  %q1103 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx102, i32 0, i32 4, !dbg !584
  store i32 %tmp88, i32* %q1103, align 4, !dbg !585
  %idxprom104 = sext i32 %v2 to i64, !dbg !586
  %tmp93 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !586
  %arrayidx105 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp93, i64 %idxprom104, !dbg !586
  %e1106 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx105, i32 0, i32 1, !dbg !588
  %tmp94 = load i32, i32* %e1106, align 4, !dbg !588
  %idxprom107 = sext i32 %tmp94 to i64, !dbg !589
  %tmp95 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !589
  %arrayidx108 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp95, i64 %idxprom107, !dbg !589
  %v1109 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx108, i32 0, i32 0, !dbg !590
  %tmp96 = load i32, i32* %v1109, align 4, !dbg !590
  %cmp110 = icmp eq i32 %v2, %tmp96, !dbg !591
  br i1 %cmp110, label %if.then.111, label %if.else.124, !dbg !592

if.then.111:                                      ; preds = %if.then.88
  %tmp97 = load i32, i32* @Ecount, align 4, !dbg !593
  %idxprom112 = sext i32 %v2 to i64, !dbg !595
  %tmp99 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !595
  %arrayidx113 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp99, i64 %idxprom112, !dbg !595
  %e1114 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx113, i32 0, i32 1, !dbg !596
  %tmp100 = load i32, i32* %e1114, align 4, !dbg !596
  %idxprom115 = sext i32 %tmp100 to i64, !dbg !597
  %tmp101 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !597
  %arrayidx116 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp101, i64 %idxprom115, !dbg !597
  %p1117 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx116, i32 0, i32 2, !dbg !598
  store i32 %tmp97, i32* %p1117, align 4, !dbg !599
  %tmp102 = load i32, i32* @Ecount, align 4, !dbg !600
  %idxprom118 = sext i32 %v2 to i64, !dbg !601
  %tmp104 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !601
  %arrayidx119 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp104, i64 %idxprom118, !dbg !601
  %e1120 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx119, i32 0, i32 1, !dbg !602
  %tmp105 = load i32, i32* %e1120, align 4, !dbg !602
  %idxprom121 = sext i32 %tmp105 to i64, !dbg !603
  %tmp106 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !603
  %arrayidx122 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp106, i64 %idxprom121, !dbg !603
  %q1123 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx122, i32 0, i32 4, !dbg !604
  store i32 %tmp102, i32* %q1123, align 4, !dbg !605
  br label %if.end.137, !dbg !606

if.else.124:                                      ; preds = %if.then.88
  %tmp107 = load i32, i32* @Ecount, align 4, !dbg !607
  %idxprom125 = sext i32 %v2 to i64, !dbg !609
  %tmp109 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !609
  %arrayidx126 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp109, i64 %idxprom125, !dbg !609
  %e1127 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx126, i32 0, i32 1, !dbg !610
  %tmp110 = load i32, i32* %e1127, align 4, !dbg !610
  %idxprom128 = sext i32 %tmp110 to i64, !dbg !611
  %tmp111 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !611
  %arrayidx129 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp111, i64 %idxprom128, !dbg !611
  %p2130 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx129, i32 0, i32 3, !dbg !612
  store i32 %tmp107, i32* %p2130, align 4, !dbg !613
  %tmp112 = load i32, i32* @Ecount, align 4, !dbg !614
  %idxprom131 = sext i32 %v2 to i64, !dbg !615
  %tmp114 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !615
  %arrayidx132 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp114, i64 %idxprom131, !dbg !615
  %e1133 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx132, i32 0, i32 1, !dbg !616
  %tmp115 = load i32, i32* %e1133, align 4, !dbg !616
  %idxprom134 = sext i32 %tmp115 to i64, !dbg !617
  %tmp116 = load %struct.Enode*, %struct.Enode** @E, align 8, !dbg !617
  %arrayidx135 = getelementptr inbounds %struct.Enode, %struct.Enode* %tmp116, i64 %idxprom134, !dbg !617
  %q2136 = getelementptr inbounds %struct.Enode, %struct.Enode* %arrayidx135, i32 0, i32 5, !dbg !618
  store i32 %tmp112, i32* %q2136, align 4, !dbg !619
  br label %if.end.137

if.end.137:                                       ; preds = %if.else.124, %if.then.111
  br label %if.end.142, !dbg !620

if.else.138:                                      ; preds = %if.else.83
  %tmp117 = load i32, i32* @Ecount, align 4, !dbg !621
  %idxprom139 = sext i32 %v2 to i64, !dbg !623
  %tmp119 = load %struct.Knode*, %struct.Knode** @K, align 8, !dbg !623
  %arrayidx140 = getelementptr inbounds %struct.Knode, %struct.Knode* %tmp119, i64 %idxprom139, !dbg !623
  %e3141 = getelementptr inbounds %struct.Knode, %struct.Knode* %arrayidx140, i32 0, i32 3, !dbg !624
  store i32 %tmp117, i32* %e3141, align 4, !dbg !625
  br label %if.end.142

if.end.142:                                       ; preds = %if.else.138, %if.end.137
  br label %if.end.143

if.end.143:                                       ; preds = %if.end.142, %if.then.73
  %tmp120 = load i32, i32* @Ecount, align 4, !dbg !626
  %inc = add nsw i32 %tmp120, 1, !dbg !626
  store i32 %inc, i32* @Ecount, align 4, !dbg !626
  ret void, !dbg !627
}

; Function Attrs: nounwind uwtable
define %struct.CHpoints* @maximize_radius_and_angle(%struct.CHpoints* %S) #0 {
entry:
  %key1 = alloca %struct.key, align 8
  %key2 = alloca %struct.key, align 8
  %agg.tmp = alloca %struct.dpoint, align 8
  %agg.tmp13 = alloca %struct.dpoint, align 8
  call void @llvm.dbg.value(metadata %struct.CHpoints* %S, i64 0, metadata !628, metadata !129), !dbg !629
  call void @llvm.dbg.declare(metadata %struct.key* %key1, metadata !630, metadata !129), !dbg !631
  call void @llvm.dbg.declare(metadata %struct.key* %key2, metadata !632, metadata !129), !dbg !633
  %call = call %struct.CHpoints* @CHdelete_max(%struct.CHsplay_node** @CHSplaytree), !dbg !634
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call, i64 0, metadata !635, metadata !129), !dbg !636
  %call1 = call %struct.CHpoints* @before(%struct.CHpoints* %call), !dbg !637
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call1, i64 0, metadata !638, metadata !129), !dbg !639
  %call2 = call %struct.CHpoints* @next(%struct.CHpoints* %call), !dbg !640
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call2, i64 0, metadata !641, metadata !129), !dbg !642
  %node = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call1, i32 0, i32 1, !dbg !643
  %call3 = call %struct.CHpoints* @before(%struct.CHpoints* %call1), !dbg !644
  %node4 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call3, i32 0, i32 1, !dbg !645
  %node5 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call1, i32 0, i32 1, !dbg !646
  %node6 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call, i32 0, i32 1, !dbg !647
  %tmp6 = bitcast %struct.point* %node4 to i64*, !dbg !648
  %tmp7 = load i64, i64* %tmp6, align 4, !dbg !648
  %tmp8 = bitcast %struct.point* %node5 to i64*, !dbg !648
  %tmp9 = load i64, i64* %tmp8, align 4, !dbg !648
  %tmp10 = bitcast %struct.point* %node6 to i64*, !dbg !648
  %tmp11 = load i64, i64* %tmp10, align 4, !dbg !648
  %call7 = call { double, double } @centre(i64 %tmp7, i64 %tmp9, i64 %tmp11), !dbg !648
  %tmp12 = bitcast %struct.dpoint* %agg.tmp to { double, double }*, !dbg !648
  %tmp13 = getelementptr { double, double }, { double, double }* %tmp12, i32 0, i32 0, !dbg !648
  %tmp14 = extractvalue { double, double } %call7, 0, !dbg !648
  store double %tmp14, double* %tmp13, align 8, !dbg !648
  %tmp15 = getelementptr { double, double }, { double, double }* %tmp12, i32 0, i32 1, !dbg !648
  %tmp16 = extractvalue { double, double } %call7, 1, !dbg !648
  store double %tmp16, double* %tmp15, align 8, !dbg !648
  %tmp17 = bitcast %struct.point* %node to i64*, !dbg !649
  %tmp18 = load i64, i64* %tmp17, align 4, !dbg !649
  %tmp19 = bitcast %struct.dpoint* %agg.tmp to { double, double }*, !dbg !649
  %tmp20 = getelementptr { double, double }, { double, double }* %tmp19, i32 0, i32 0, !dbg !649
  %tmp21 = load double, double* %tmp20, align 1, !dbg !649
  %tmp22 = getelementptr { double, double }, { double, double }* %tmp19, i32 0, i32 1, !dbg !649
  %tmp23 = load double, double* %tmp22, align 1, !dbg !649
  %call8 = call double @radius2(i64 %tmp18, double %tmp21, double %tmp23), !dbg !649
  %radius = getelementptr inbounds %struct.key, %struct.key* %key1, i32 0, i32 0, !dbg !650
  store double %call8, double* %radius, align 8, !dbg !651
  %call9 = call %struct.CHpoints* @before(%struct.CHpoints* %call1), !dbg !652
  %call10 = call double @angle(%struct.CHpoints* %call9, %struct.CHpoints* %call1, %struct.CHpoints* %call), !dbg !653
  %angle = getelementptr inbounds %struct.key, %struct.key* %key1, i32 0, i32 1, !dbg !654
  store double %call10, double* %angle, align 8, !dbg !655
  %number = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call1, i32 0, i32 0, !dbg !656
  %tmp28 = load i32, i32* %number, align 4, !dbg !656
  %number11 = getelementptr inbounds %struct.key, %struct.key* %key1, i32 0, i32 2, !dbg !657
  store i32 %tmp28, i32* %number11, align 4, !dbg !658
  call void @CHdelete(%struct.CHsplay_node** @CHSplaytree, %struct.key* byval align 8 %key1), !dbg !659
  %node12 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call2, i32 0, i32 1, !dbg !660
  %node14 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call, i32 0, i32 1, !dbg !661
  %node15 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call2, i32 0, i32 1, !dbg !662
  %call16 = call %struct.CHpoints* @next(%struct.CHpoints* %call2), !dbg !663
  %node17 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call16, i32 0, i32 1, !dbg !664
  %tmp33 = bitcast %struct.point* %node14 to i64*, !dbg !665
  %tmp34 = load i64, i64* %tmp33, align 4, !dbg !665
  %tmp35 = bitcast %struct.point* %node15 to i64*, !dbg !665
  %tmp36 = load i64, i64* %tmp35, align 4, !dbg !665
  %tmp37 = bitcast %struct.point* %node17 to i64*, !dbg !665
  %tmp38 = load i64, i64* %tmp37, align 4, !dbg !665
  %call18 = call { double, double } @centre(i64 %tmp34, i64 %tmp36, i64 %tmp38), !dbg !665
  %tmp39 = bitcast %struct.dpoint* %agg.tmp13 to { double, double }*, !dbg !665
  %tmp40 = getelementptr { double, double }, { double, double }* %tmp39, i32 0, i32 0, !dbg !665
  %tmp41 = extractvalue { double, double } %call18, 0, !dbg !665
  store double %tmp41, double* %tmp40, align 8, !dbg !665
  %tmp42 = getelementptr { double, double }, { double, double }* %tmp39, i32 0, i32 1, !dbg !665
  %tmp43 = extractvalue { double, double } %call18, 1, !dbg !665
  store double %tmp43, double* %tmp42, align 8, !dbg !665
  %tmp44 = bitcast %struct.point* %node12 to i64*, !dbg !666
  %tmp45 = load i64, i64* %tmp44, align 4, !dbg !666
  %tmp46 = bitcast %struct.dpoint* %agg.tmp13 to { double, double }*, !dbg !666
  %tmp47 = getelementptr { double, double }, { double, double }* %tmp46, i32 0, i32 0, !dbg !666
  %tmp48 = load double, double* %tmp47, align 1, !dbg !666
  %tmp49 = getelementptr { double, double }, { double, double }* %tmp46, i32 0, i32 1, !dbg !666
  %tmp50 = load double, double* %tmp49, align 1, !dbg !666
  %call19 = call double @radius2(i64 %tmp45, double %tmp48, double %tmp50), !dbg !666
  %radius20 = getelementptr inbounds %struct.key, %struct.key* %key2, i32 0, i32 0, !dbg !667
  store double %call19, double* %radius20, align 8, !dbg !668
  %call21 = call %struct.CHpoints* @next(%struct.CHpoints* %call2), !dbg !669
  %call22 = call double @angle(%struct.CHpoints* %call, %struct.CHpoints* %call2, %struct.CHpoints* %call21), !dbg !670
  %angle23 = getelementptr inbounds %struct.key, %struct.key* %key2, i32 0, i32 1, !dbg !671
  store double %call22, double* %angle23, align 8, !dbg !672
  %number24 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call2, i32 0, i32 0, !dbg !673
  %tmp55 = load i32, i32* %number24, align 4, !dbg !673
  %number25 = getelementptr inbounds %struct.key, %struct.key* %key2, i32 0, i32 2, !dbg !674
  store i32 %tmp55, i32* %number25, align 4, !dbg !675
  call void @CHdelete(%struct.CHsplay_node** @CHSplaytree, %struct.key* byval align 8 %key2), !dbg !676
  ret %struct.CHpoints* %call, !dbg !677
}

declare %struct.CHpoints* @CHdelete_max(%struct.CHsplay_node**) #3

declare %struct.CHpoints* @before(%struct.CHpoints*) #3

declare double @radius2(i64, double, double) #3

declare { double, double } @centre(i64, i64, i64) #3

declare double @angle(%struct.CHpoints*, %struct.CHpoints*, %struct.CHpoints*) #3

declare void @CHdelete(%struct.CHsplay_node**, %struct.key* byval align 8) #3

; Function Attrs: nounwind uwtable
define void @draw_sec(%struct.CHpoints* %p) #0 {
entry:
  %c = alloca %struct.dpoint, align 8
  %coerce = alloca %struct.dpoint, align 8
  %coerce54 = alloca %struct.dpoint, align 8
  %coerce65 = alloca %struct.dpoint, align 8
  call void @llvm.dbg.value(metadata %struct.CHpoints* %p, i64 0, metadata !678, metadata !129), !dbg !679
  call void @llvm.dbg.declare(metadata %struct.dpoint* %c, metadata !680, metadata !129), !dbg !681
  %call = call %struct.CHpoints* @before(%struct.CHpoints* %p), !dbg !682
  %node = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call, i32 0, i32 1, !dbg !684
  %node1 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !685
  %tmp2 = bitcast %struct.point* %node to i64*, !dbg !686
  %tmp3 = load i64, i64* %tmp2, align 4, !dbg !686
  %tmp4 = bitcast %struct.point* %node1 to i64*, !dbg !686
  %tmp5 = load i64, i64* %tmp4, align 4, !dbg !686
  %call2 = call i32 @length2(i64 %tmp3, i64 %tmp5), !dbg !686
  %node3 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !687
  %call4 = call %struct.CHpoints* @next(%struct.CHpoints* %p), !dbg !688
  %node5 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call4, i32 0, i32 1, !dbg !689
  %tmp8 = bitcast %struct.point* %node3 to i64*, !dbg !690
  %tmp9 = load i64, i64* %tmp8, align 4, !dbg !690
  %tmp10 = bitcast %struct.point* %node5 to i64*, !dbg !690
  %tmp11 = load i64, i64* %tmp10, align 4, !dbg !690
  %call6 = call i32 @length2(i64 %tmp9, i64 %tmp11), !dbg !690
  %cmp = icmp sgt i32 %call2, %call6, !dbg !691
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !692

land.lhs.true:                                    ; preds = %entry
  %call7 = call %struct.CHpoints* @before(%struct.CHpoints* %p), !dbg !693
  %node8 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call7, i32 0, i32 1, !dbg !694
  %node9 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !695
  %tmp14 = bitcast %struct.point* %node8 to i64*, !dbg !696
  %tmp15 = load i64, i64* %tmp14, align 4, !dbg !696
  %tmp16 = bitcast %struct.point* %node9 to i64*, !dbg !696
  %tmp17 = load i64, i64* %tmp16, align 4, !dbg !696
  %call10 = call i32 @length2(i64 %tmp15, i64 %tmp17), !dbg !696
  %call11 = call %struct.CHpoints* @before(%struct.CHpoints* %p), !dbg !697
  %node12 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call11, i32 0, i32 1, !dbg !698
  %call13 = call %struct.CHpoints* @next(%struct.CHpoints* %p), !dbg !699
  %node14 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call13, i32 0, i32 1, !dbg !700
  %tmp20 = bitcast %struct.point* %node12 to i64*, !dbg !701
  %tmp21 = load i64, i64* %tmp20, align 4, !dbg !701
  %tmp22 = bitcast %struct.point* %node14 to i64*, !dbg !701
  %tmp23 = load i64, i64* %tmp22, align 4, !dbg !701
  %call15 = call i32 @length2(i64 %tmp21, i64 %tmp23), !dbg !701
  %cmp16 = icmp sgt i32 %call10, %call15, !dbg !702
  br i1 %cmp16, label %if.then, label %if.else, !dbg !703

if.then:                                          ; preds = %land.lhs.true
  %call17 = call %struct.CHpoints* @next(%struct.CHpoints* %p), !dbg !704
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call17, i64 0, metadata !705, metadata !129), !dbg !706
  br label %if.end.41, !dbg !707

if.else:                                          ; preds = %land.lhs.true, %entry
  %node18 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !708
  %call19 = call %struct.CHpoints* @next(%struct.CHpoints* %p), !dbg !710
  %node20 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call19, i32 0, i32 1, !dbg !711
  %tmp27 = bitcast %struct.point* %node18 to i64*, !dbg !712
  %tmp28 = load i64, i64* %tmp27, align 4, !dbg !712
  %tmp29 = bitcast %struct.point* %node20 to i64*, !dbg !712
  %tmp30 = load i64, i64* %tmp29, align 4, !dbg !712
  %call21 = call i32 @length2(i64 %tmp28, i64 %tmp30), !dbg !712
  %call22 = call %struct.CHpoints* @before(%struct.CHpoints* %p), !dbg !713
  %node23 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call22, i32 0, i32 1, !dbg !714
  %call24 = call %struct.CHpoints* @next(%struct.CHpoints* %p), !dbg !715
  %node25 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call24, i32 0, i32 1, !dbg !716
  %tmp33 = bitcast %struct.point* %node23 to i64*, !dbg !717
  %tmp34 = load i64, i64* %tmp33, align 4, !dbg !717
  %tmp35 = bitcast %struct.point* %node25 to i64*, !dbg !717
  %tmp36 = load i64, i64* %tmp35, align 4, !dbg !717
  %call26 = call i32 @length2(i64 %tmp34, i64 %tmp36), !dbg !717
  %cmp27 = icmp sgt i32 %call21, %call26, !dbg !718
  br i1 %cmp27, label %land.lhs.true.28, label %if.else.40, !dbg !719

land.lhs.true.28:                                 ; preds = %if.else
  %node29 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !720
  %call30 = call %struct.CHpoints* @next(%struct.CHpoints* %p), !dbg !721
  %node31 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call30, i32 0, i32 1, !dbg !722
  %tmp39 = bitcast %struct.point* %node29 to i64*, !dbg !723
  %tmp40 = load i64, i64* %tmp39, align 4, !dbg !723
  %tmp41 = bitcast %struct.point* %node31 to i64*, !dbg !723
  %tmp42 = load i64, i64* %tmp41, align 4, !dbg !723
  %call32 = call i32 @length2(i64 %tmp40, i64 %tmp42), !dbg !723
  %node33 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !724
  %call34 = call %struct.CHpoints* @before(%struct.CHpoints* %p), !dbg !725
  %node35 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call34, i32 0, i32 1, !dbg !726
  %tmp45 = bitcast %struct.point* %node33 to i64*, !dbg !727
  %tmp46 = load i64, i64* %tmp45, align 4, !dbg !727
  %tmp47 = bitcast %struct.point* %node35 to i64*, !dbg !727
  %tmp48 = load i64, i64* %tmp47, align 4, !dbg !727
  %call36 = call i32 @length2(i64 %tmp46, i64 %tmp48), !dbg !727
  %cmp37 = icmp sgt i32 %call32, %call36, !dbg !728
  br i1 %cmp37, label %if.then.38, label %if.else.40, !dbg !729

if.then.38:                                       ; preds = %land.lhs.true.28
  %call39 = call %struct.CHpoints* @before(%struct.CHpoints* %p), !dbg !730
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call39, i64 0, metadata !705, metadata !129), !dbg !706
  br label %if.end, !dbg !731

if.else.40:                                       ; preds = %land.lhs.true.28, %if.else
  call void @llvm.dbg.value(metadata %struct.CHpoints* %p, i64 0, metadata !705, metadata !129), !dbg !706
  br label %if.end

if.end:                                           ; preds = %if.else.40, %if.then.38
  %p2.0 = phi %struct.CHpoints* [ %call39, %if.then.38 ], [ %p, %if.else.40 ]
  br label %if.end.41

if.end.41:                                        ; preds = %if.end, %if.then
  %p2.1 = phi %struct.CHpoints* [ %call17, %if.then ], [ %p2.0, %if.end ]
  %call42 = call %struct.CHpoints* @before(%struct.CHpoints* %p2.1), !dbg !732
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call42, i64 0, metadata !733, metadata !129), !dbg !734
  %call43 = call %struct.CHpoints* @next(%struct.CHpoints* %p2.1), !dbg !735
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call43, i64 0, metadata !736, metadata !129), !dbg !737
  %call44 = call double @angle(%struct.CHpoints* %call42, %struct.CHpoints* %p2.1, %struct.CHpoints* %call43), !dbg !738
  %cmp45 = fcmp olt double %call44, 0.000000e+00, !dbg !740
  br i1 %cmp45, label %if.then.46, label %if.else.60, !dbg !741

if.then.46:                                       ; preds = %if.end.41
  %node47 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call42, i32 0, i32 1, !dbg !742
  %node48 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call43, i32 0, i32 1, !dbg !744
  %tmp58 = bitcast %struct.point* %node47 to i64*, !dbg !745
  %tmp59 = load i64, i64* %tmp58, align 4, !dbg !745
  %tmp60 = bitcast %struct.point* %node48 to i64*, !dbg !745
  %tmp61 = load i64, i64* %tmp60, align 4, !dbg !745
  %call49 = call { double, double } @midpoint(i64 %tmp59, i64 %tmp61), !dbg !745
  %tmp62 = bitcast %struct.dpoint* %coerce to { double, double }*, !dbg !745
  %tmp63 = getelementptr { double, double }, { double, double }* %tmp62, i32 0, i32 0, !dbg !745
  %tmp64 = extractvalue { double, double } %call49, 0, !dbg !745
  store double %tmp64, double* %tmp63, align 8, !dbg !745
  %tmp65 = getelementptr { double, double }, { double, double }* %tmp62, i32 0, i32 1, !dbg !745
  %tmp66 = extractvalue { double, double } %call49, 1, !dbg !745
  store double %tmp66, double* %tmp65, align 8, !dbg !745
  %x = getelementptr inbounds %struct.dpoint, %struct.dpoint* %coerce, i32 0, i32 0, !dbg !746
  %tmp67 = load double, double* %x, align 8, !dbg !746
  %x50 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %c, i32 0, i32 0, !dbg !747
  store double %tmp67, double* %x50, align 8, !dbg !748
  %node51 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call42, i32 0, i32 1, !dbg !749
  %node52 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call43, i32 0, i32 1, !dbg !750
  %tmp70 = bitcast %struct.point* %node51 to i64*, !dbg !751
  %tmp71 = load i64, i64* %tmp70, align 4, !dbg !751
  %tmp72 = bitcast %struct.point* %node52 to i64*, !dbg !751
  %tmp73 = load i64, i64* %tmp72, align 4, !dbg !751
  %call53 = call { double, double } @midpoint(i64 %tmp71, i64 %tmp73), !dbg !751
  %tmp74 = bitcast %struct.dpoint* %coerce54 to { double, double }*, !dbg !751
  %tmp75 = getelementptr { double, double }, { double, double }* %tmp74, i32 0, i32 0, !dbg !751
  %tmp76 = extractvalue { double, double } %call53, 0, !dbg !751
  store double %tmp76, double* %tmp75, align 8, !dbg !751
  %tmp77 = getelementptr { double, double }, { double, double }* %tmp74, i32 0, i32 1, !dbg !751
  %tmp78 = extractvalue { double, double } %call53, 1, !dbg !751
  store double %tmp78, double* %tmp77, align 8, !dbg !751
  %y = getelementptr inbounds %struct.dpoint, %struct.dpoint* %coerce54, i32 0, i32 1, !dbg !752
  %tmp79 = load double, double* %y, align 8, !dbg !752
  %y55 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %c, i32 0, i32 1, !dbg !753
  store double %tmp79, double* %y55, align 8, !dbg !754
  %node56 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call42, i32 0, i32 1, !dbg !755
  %node57 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call43, i32 0, i32 1, !dbg !756
  %tmp82 = bitcast %struct.point* %node56 to i64*, !dbg !757
  %tmp83 = load i64, i64* %tmp82, align 4, !dbg !757
  %tmp84 = bitcast %struct.point* %node57 to i64*, !dbg !757
  %tmp85 = load i64, i64* %tmp84, align 4, !dbg !757
  %call58 = call i32 @length2(i64 %tmp83, i64 %tmp85), !dbg !757
  %conv = sitofp i32 %call58 to double, !dbg !758
  %call59 = call double @sqrt(double %conv) #4, !dbg !759
  %div = fdiv double %call59, 2.000000e+00, !dbg !760
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !761, metadata !129), !dbg !762
  br label %if.end.69, !dbg !763

if.else.60:                                       ; preds = %if.end.41
  %node61 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call42, i32 0, i32 1, !dbg !764
  %node62 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p2.1, i32 0, i32 1, !dbg !766
  %node63 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call43, i32 0, i32 1, !dbg !767
  %tmp89 = bitcast %struct.point* %node61 to i64*, !dbg !768
  %tmp90 = load i64, i64* %tmp89, align 4, !dbg !768
  %tmp91 = bitcast %struct.point* %node62 to i64*, !dbg !768
  %tmp92 = load i64, i64* %tmp91, align 4, !dbg !768
  %tmp93 = bitcast %struct.point* %node63 to i64*, !dbg !768
  %tmp94 = load i64, i64* %tmp93, align 4, !dbg !768
  %call64 = call { double, double } @centre(i64 %tmp90, i64 %tmp92, i64 %tmp94), !dbg !768
  %tmp95 = bitcast %struct.dpoint* %coerce65 to { double, double }*, !dbg !768
  %tmp96 = getelementptr { double, double }, { double, double }* %tmp95, i32 0, i32 0, !dbg !768
  %tmp97 = extractvalue { double, double } %call64, 0, !dbg !768
  store double %tmp97, double* %tmp96, align 8, !dbg !768
  %tmp98 = getelementptr { double, double }, { double, double }* %tmp95, i32 0, i32 1, !dbg !768
  %tmp99 = extractvalue { double, double } %call64, 1, !dbg !768
  store double %tmp99, double* %tmp98, align 8, !dbg !768
  %tmp100 = bitcast %struct.dpoint* %c to i8*, !dbg !768
  %tmp101 = bitcast %struct.dpoint* %coerce65 to i8*, !dbg !768
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp100, i8* %tmp101, i64 16, i32 8, i1 false), !dbg !768
  %node66 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %p, i32 0, i32 1, !dbg !769
  %tmp103 = bitcast %struct.point* %node66 to i64*, !dbg !770
  %tmp104 = load i64, i64* %tmp103, align 4, !dbg !770
  %tmp105 = bitcast %struct.dpoint* %c to { double, double }*, !dbg !770
  %tmp106 = getelementptr { double, double }, { double, double }* %tmp105, i32 0, i32 0, !dbg !770
  %tmp107 = load double, double* %tmp106, align 1, !dbg !770
  %tmp108 = getelementptr { double, double }, { double, double }* %tmp105, i32 0, i32 1, !dbg !770
  %tmp109 = load double, double* %tmp108, align 1, !dbg !770
  %call67 = call double @radius2(i64 %tmp104, double %tmp107, double %tmp109), !dbg !770
  %call68 = call double @sqrt(double %call67) #4, !dbg !771
  call void @llvm.dbg.value(metadata double %call68, i64 0, metadata !761, metadata !129), !dbg !762
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.60, %if.then.46
  %radius.0 = phi double [ %div, %if.then.46 ], [ %call68, %if.else.60 ]
  %x70 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %c, i32 0, i32 0, !dbg !772
  %tmp110 = load double, double* %x70, align 8, !dbg !772
  %conv71 = fptosi double %tmp110 to i32, !dbg !773
  %y72 = getelementptr inbounds %struct.dpoint, %struct.dpoint* %c, i32 0, i32 1, !dbg !774
  %tmp111 = load double, double* %y72, align 8, !dbg !774
  %conv73 = fptosi double %tmp111 to i32, !dbg !775
  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 %conv71, i32 %conv73), !dbg !776
  %call75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i32 0, i32 0), double %radius.0), !dbg !777
  ret void, !dbg !778
}

declare i32 @length2(i64, i64) #3

; Function Attrs: nounwind
declare double @sqrt(double) #1

; Function Attrs: nounwind uwtable
define void @alg2() #0 {
entry:
  %c = alloca %struct.point, align 4
  %dc = alloca %struct.dpoint, align 8
  %coerce = alloca %struct.dpoint, align 8
  call void @llvm.dbg.declare(metadata %struct.point* %c, metadata !779, metadata !129), !dbg !780
  call void @llvm.dbg.declare(metadata %struct.dpoint* %dc, metadata !781, metadata !129), !dbg !782
  %tmp = load %struct.CHpoints*, %struct.CHpoints** @S, align 8, !dbg !783
  call void @add_infinit_points_to_K(%struct.CHpoints* %tmp), !dbg !784
  %tmp1 = load i32, i32* @CHno, align 4, !dbg !785
  %cmp = icmp sgt i32 %tmp1, 2, !dbg !787
  br i1 %cmp, label %if.then, label %if.else, !dbg !788

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !789

while.cond:                                       ; preds = %if.end, %if.then
  %q.0 = phi %struct.CHpoints* [ undef, %if.then ], [ %call4, %if.end ]
  %tmp2 = load i32, i32* @CHno, align 4, !dbg !791
  %cmp1 = icmp sgt i32 %tmp2, 2, !dbg !794
  br i1 %cmp1, label %while.body, label %while.end, !dbg !789

while.body:                                       ; preds = %while.cond
  %tmp3 = load %struct.CHpoints*, %struct.CHpoints** @S, align 8, !dbg !795
  %call = call %struct.CHpoints* @maximize_radius_and_angle(%struct.CHpoints* %tmp3), !dbg !797
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call, i64 0, metadata !798, metadata !129), !dbg !799
  %tmp4 = load i32, i32* @CHno, align 4, !dbg !800
  %cmp2 = icmp eq i32 %tmp4, 3, !dbg !802
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !803

if.then.3:                                        ; preds = %while.body
  call void @draw_sec(%struct.CHpoints* %call), !dbg !804
  br label %if.end, !dbg !804

if.end:                                           ; preds = %if.then.3, %while.body
  %call4 = call %struct.CHpoints* @before(%struct.CHpoints* %call), !dbg !805
  call void @llvm.dbg.value(metadata %struct.CHpoints* %call4, i64 0, metadata !806, metadata !129), !dbg !807
  %node = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call4, i32 0, i32 1, !dbg !808
  %node5 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call, i32 0, i32 1, !dbg !809
  %call6 = call %struct.CHpoints* @next(%struct.CHpoints* %call), !dbg !810
  %node7 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call6, i32 0, i32 1, !dbg !811
  %tmp10 = bitcast %struct.point* %node to i64*, !dbg !812
  %tmp11 = load i64, i64* %tmp10, align 4, !dbg !812
  %tmp12 = bitcast %struct.point* %node5 to i64*, !dbg !812
  %tmp13 = load i64, i64* %tmp12, align 4, !dbg !812
  %tmp14 = bitcast %struct.point* %node7 to i64*, !dbg !812
  %tmp15 = load i64, i64* %tmp14, align 4, !dbg !812
  %call8 = call { double, double } @centre(i64 %tmp11, i64 %tmp13, i64 %tmp15), !dbg !812
  %tmp16 = bitcast %struct.dpoint* %coerce to { double, double }*, !dbg !812
  %tmp17 = getelementptr { double, double }, { double, double }* %tmp16, i32 0, i32 0, !dbg !812
  %tmp18 = extractvalue { double, double } %call8, 0, !dbg !812
  store double %tmp18, double* %tmp17, align 8, !dbg !812
  %tmp19 = getelementptr { double, double }, { double, double }* %tmp16, i32 0, i32 1, !dbg !812
  %tmp20 = extractvalue { double, double } %call8, 1, !dbg !812
  store double %tmp20, double* %tmp19, align 8, !dbg !812
  %tmp21 = bitcast %struct.dpoint* %dc to i8*, !dbg !812
  %tmp22 = bitcast %struct.dpoint* %coerce to i8*, !dbg !812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp21, i8* %tmp22, i64 16, i32 8, i1 false), !dbg !812
  %x = getelementptr inbounds %struct.dpoint, %struct.dpoint* %dc, i32 0, i32 0, !dbg !813
  %tmp23 = load double, double* %x, align 8, !dbg !813
  %conv = fptosi double %tmp23 to i32, !dbg !814
  %x9 = getelementptr inbounds %struct.point, %struct.point* %c, i32 0, i32 0, !dbg !815
  store i32 %conv, i32* %x9, align 4, !dbg !816
  %y = getelementptr inbounds %struct.dpoint, %struct.dpoint* %dc, i32 0, i32 1, !dbg !817
  %tmp24 = load double, double* %y, align 8, !dbg !817
  %conv10 = fptosi double %tmp24 to i32, !dbg !818
  %y11 = getelementptr inbounds %struct.point, %struct.point* %c, i32 0, i32 1, !dbg !819
  store i32 %conv10, i32* %y11, align 4, !dbg !820
  %tmp25 = bitcast %struct.point* %c to i64*, !dbg !821
  %tmp26 = load i64, i64* %tmp25, align 4, !dbg !821
  call void @add_point(i64 %tmp26), !dbg !821
  %tmp27 = load i32, i32* @Kcount, align 4, !dbg !822
  %sub = sub nsw i32 %tmp27, 1, !dbg !823
  %v = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call, i32 0, i32 2, !dbg !824
  %tmp29 = load i32, i32* %v, align 4, !dbg !824
  call void @add_edge(i32 %sub, i32 %tmp29), !dbg !825
  %tmp30 = load i32, i32* @Kcount, align 4, !dbg !826
  %sub12 = sub nsw i32 %tmp30, 1, !dbg !827
  %v13 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call4, i32 0, i32 2, !dbg !828
  %tmp32 = load i32, i32* %v13, align 4, !dbg !828
  call void @add_edge(i32 %sub12, i32 %tmp32), !dbg !829
  %tmp33 = load i32, i32* @Kcount, align 4, !dbg !830
  %sub14 = sub nsw i32 %tmp33, 1, !dbg !831
  %v15 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call4, i32 0, i32 2, !dbg !832
  store i32 %sub14, i32* %v15, align 4, !dbg !833
  %call16 = call %struct.CHpoints* @next(%struct.CHpoints* %call), !dbg !834
  %next = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call4, i32 0, i32 3, !dbg !835
  store %struct.CHpoints* %call16, %struct.CHpoints** %next, align 8, !dbg !836
  %call17 = call %struct.CHpoints* @next(%struct.CHpoints* %call4), !dbg !837
  %prev = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call17, i32 0, i32 4, !dbg !838
  store %struct.CHpoints* %call4, %struct.CHpoints** %prev, align 8, !dbg !839
  store %struct.CHpoints* %call4, %struct.CHpoints** @S, align 8, !dbg !840
  %tmp40 = load i32, i32* @CHno, align 4, !dbg !841
  %dec = add nsw i32 %tmp40, -1, !dbg !841
  store i32 %dec, i32* @CHno, align 4, !dbg !841
  %call18 = call %struct.CHpoints* @next(%struct.CHpoints* %call), !dbg !842
  %call19 = call i8* @CHinsert(%struct.CHsplay_node** @CHSplaytree, %struct.CHpoints* %call18), !dbg !843
  %call20 = call %struct.CHpoints* @before(%struct.CHpoints* %call), !dbg !844
  %call21 = call i8* @CHinsert(%struct.CHsplay_node** @CHSplaytree, %struct.CHpoints* %call20), !dbg !845
  br label %while.cond, !dbg !789

while.end:                                        ; preds = %while.cond
  %q.0.lcssa = phi %struct.CHpoints* [ %q.0, %while.cond ]
  %v22 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %q.0.lcssa, i32 0, i32 2, !dbg !846
  %tmp44 = load i32, i32* %v22, align 4, !dbg !846
  %call23 = call %struct.CHpoints* @next(%struct.CHpoints* %q.0.lcssa), !dbg !847
  %v24 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call23, i32 0, i32 2, !dbg !848
  %tmp46 = load i32, i32* %v24, align 4, !dbg !848
  call void @add_edge(i32 %tmp44, i32 %tmp46), !dbg !849
  br label %if.end.30, !dbg !850

if.else:                                          ; preds = %entry
  store i32 2, i32* @CHno, align 4, !dbg !851
  br i1 true, label %if.then.25, label %if.end.29, !dbg !853

if.then.25:                                       ; preds = %if.else
  %tmp47 = load %struct.CHpoints*, %struct.CHpoints** @S, align 8, !dbg !854
  %v26 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %tmp47, i32 0, i32 2, !dbg !855
  %tmp48 = load i32, i32* %v26, align 4, !dbg !855
  %tmp49 = load %struct.CHpoints*, %struct.CHpoints** @S, align 8, !dbg !856
  %call27 = call %struct.CHpoints* @next(%struct.CHpoints* %tmp49), !dbg !857
  %v28 = getelementptr inbounds %struct.CHpoints, %struct.CHpoints* %call27, i32 0, i32 2, !dbg !858
  %tmp50 = load i32, i32* %v28, align 4, !dbg !858
  call void @add_edge(i32 %tmp48, i32 %tmp50), !dbg !859
  br label %if.end.29, !dbg !859

if.end.29:                                        ; preds = %if.then.25, %if.else
  br label %if.end.30

if.end.30:                                        ; preds = %if.end.29, %while.end
  %tmp51 = load %struct.CHpoints*, %struct.CHpoints** @S, align 8, !dbg !860
  %tmp52 = bitcast %struct.CHpoints* %tmp51 to i8*, !dbg !860
  call void @free(i8* %tmp52) #4, !dbg !861
  %tmp53 = load %struct.CHsplay_node*, %struct.CHsplay_node** @CHSplaytree, align 8, !dbg !862
  call void @CHfree_tree(%struct.CHsplay_node* %tmp53), !dbg !863
  ret void, !dbg !864
}

declare void @CHfree_tree(%struct.CHsplay_node*) #3

; Function Attrs: nounwind uwtable
define void @construct_vor() #0 {
entry:
  %call = call %struct.CHpoints* (...) @construct_ch(), !dbg !865
  store %struct.CHpoints* %call, %struct.CHpoints** @S, align 8, !dbg !866
  %tmp = load %struct.CHpoints*, %struct.CHpoints** @S, align 8, !dbg !867
  call void @number_points(%struct.CHpoints* %tmp), !dbg !868
  call void @alg2(), !dbg !869
  call void @clean_up(), !dbg !870
  ret void, !dbg !871
}

declare %struct.CHpoints* @construct_ch(...) #3

declare void @number_points(%struct.CHpoints*) #3

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !872, metadata !129), !dbg !873
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !874, metadata !129), !dbg !875
  call void @get_file(), !dbg !876
  call void @construct_vor(), !dbg !877
  ret i32 0, !dbg !878
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!118, !119}
!llvm.ident = !{!120}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !32, globals: !73)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/09-vor")
!2 = !{}
!3 = !{!4, !5, !19, !31}
!4 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "Knode", file: !7, line: 18, baseType: !8)
!7 = !DIFile(filename: "./struktur.h", directory: "/home/gleison/tf/Benchmarks/McCat/09-vor")
!8 = !DICompositeType(tag: DW_TAG_structure_type, name: "Knode", file: !7, line: 15, size: 160, align: 32, elements: !9)
!9 = !{!10, !16, !17, !18}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !8, file: !7, line: 16, baseType: !11, size: 64, align: 32)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "point", file: !7, line: 3, baseType: !12)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "point", file: !7, line: 1, size: 64, align: 32, elements: !13)
!13 = !{!14, !15}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !12, file: !7, line: 2, baseType: !4, size: 32, align: 32)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !12, file: !7, line: 2, baseType: !4, size: 32, align: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "e1", scope: !8, file: !7, line: 17, baseType: !4, size: 32, align: 32, offset: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "e2", scope: !8, file: !7, line: 17, baseType: !4, size: 32, align: 32, offset: 96)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "e3", scope: !8, file: !7, line: 17, baseType: !4, size: 32, align: 32, offset: 128)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_typedef, name: "Enode", file: !7, line: 24, baseType: !21)
!21 = !DICompositeType(tag: DW_TAG_structure_type, name: "Enode", file: !7, line: 20, size: 256, align: 32, elements: !22)
!22 = !{!23, !24, !25, !26, !27, !28, !29, !30}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !21, file: !7, line: 21, baseType: !4, size: 32, align: 32)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !21, file: !7, line: 21, baseType: !4, size: 32, align: 32, offset: 32)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "p1", scope: !21, file: !7, line: 22, baseType: !4, size: 32, align: 32, offset: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "p2", scope: !21, file: !7, line: 22, baseType: !4, size: 32, align: 32, offset: 96)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "q1", scope: !21, file: !7, line: 22, baseType: !4, size: 32, align: 32, offset: 128)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "q2", scope: !21, file: !7, line: 22, baseType: !4, size: 32, align: 32, offset: 160)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !21, file: !7, line: 23, baseType: !4, size: 32, align: 32, offset: 192)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !21, file: !7, line: 23, baseType: !4, size: 32, align: 32, offset: 224)
!31 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!32 = !{!33, !37, !40, !41, !44, !57, !60, !61, !64, !65, !66, !67}
!33 = !DISubprogram(name: "clean_up", scope: !34, file: !34, line: 35, type: !35, isLocal: false, isDefinition: true, scopeLine: 35, isOptimized: false, function: void ()* @clean_up, variables: !2)
!34 = !DIFile(filename: "/home/gleison/tf/Benchmarks/McCat/09-vor/tmp.c", directory: "/home/gleison/tf/Benchmarks/McCat/09-vor")
!35 = !DISubroutineType(types: !36)
!36 = !{null}
!37 = !DISubprogram(name: "getpoint", scope: !34, file: !34, line: 45, type: !38, isLocal: false, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32)* @getpoint, variables: !2)
!38 = !DISubroutineType(types: !39)
!39 = !{null, !4, !4}
!40 = !DISubprogram(name: "get_file", scope: !34, file: !34, line: 56, type: !35, isLocal: false, isDefinition: true, scopeLine: 56, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @get_file, variables: !2)
!41 = !DISubprogram(name: "add_point", scope: !34, file: !34, line: 70, type: !42, isLocal: false, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, function: void (i64)* @add_point, variables: !2)
!42 = !DISubroutineType(types: !43)
!43 = !{null, !11}
!44 = !DISubprogram(name: "compute_v", scope: !34, file: !34, line: 82, type: !45, isLocal: false, isDefinition: true, scopeLine: 82, flags: DIFlagPrototyped, isOptimized: false, function: i64 (%struct.CHpoints*)* @compute_v, variables: !2)
!45 = !DISubroutineType(types: !46)
!46 = !{!11, !47}
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64, align: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHpoints", file: !7, line: 41, baseType: !49)
!49 = !DICompositeType(tag: DW_TAG_structure_type, name: "CHpoints", file: !7, line: 36, size: 256, align: 64, elements: !50)
!50 = !{!51, !52, !53, !54, !56}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !49, file: !7, line: 37, baseType: !4, size: 32, align: 32)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !49, file: !7, line: 38, baseType: !11, size: 64, align: 32, offset: 32)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !49, file: !7, line: 39, baseType: !4, size: 32, align: 32, offset: 96)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !49, file: !7, line: 40, baseType: !55, size: 64, align: 64, offset: 128)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !49, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !49, file: !7, line: 40, baseType: !55, size: 64, align: 64, offset: 192)
!57 = !DISubprogram(name: "add_infinit_points_to_K", scope: !34, file: !34, line: 159, type: !58, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.CHpoints*)* @add_infinit_points_to_K, variables: !2)
!58 = !DISubroutineType(types: !59)
!59 = !{null, !47}
!60 = !DISubprogram(name: "add_edge", scope: !34, file: !34, line: 189, type: !38, isLocal: false, isDefinition: true, scopeLine: 189, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32)* @add_edge, variables: !2)
!61 = !DISubprogram(name: "maximize_radius_and_angle", scope: !34, file: !34, line: 244, type: !62, isLocal: false, isDefinition: true, scopeLine: 244, flags: DIFlagPrototyped, isOptimized: false, function: %struct.CHpoints* (%struct.CHpoints*)* @maximize_radius_and_angle, variables: !2)
!62 = !DISubroutineType(types: !63)
!63 = !{!47, !47}
!64 = !DISubprogram(name: "draw_sec", scope: !34, file: !34, line: 266, type: !58, isLocal: false, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.CHpoints*)* @draw_sec, variables: !2)
!65 = !DISubprogram(name: "alg2", scope: !34, file: !34, line: 301, type: !35, isLocal: false, isDefinition: true, scopeLine: 301, isOptimized: false, function: void ()* @alg2, variables: !2)
!66 = !DISubprogram(name: "construct_vor", scope: !34, file: !34, line: 343, type: !35, isLocal: false, isDefinition: true, scopeLine: 343, isOptimized: false, function: void ()* @construct_vor, variables: !2)
!67 = !DISubprogram(name: "main", scope: !34, file: !34, line: 353, type: !68, isLocal: false, isDefinition: true, scopeLine: 353, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!68 = !DISubroutineType(types: !69)
!69 = !{!4, !4, !70}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64, align: 64)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64, align: 64)
!72 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!73 = !{!74, !75, !76, !77, !93, !114, !115, !116, !117}
!74 = !DIGlobalVariable(name: "CHno", scope: !0, file: !34, line: 26, type: !4, isLocal: false, isDefinition: true, variable: i32* @CHno)
!75 = !DIGlobalVariable(name: "Kcount", scope: !0, file: !34, line: 29, type: !4, isLocal: false, isDefinition: true, variable: i32* @Kcount)
!76 = !DIGlobalVariable(name: "Ecount", scope: !0, file: !34, line: 30, type: !4, isLocal: false, isDefinition: true, variable: i32* @Ecount)
!77 = !DIGlobalVariable(name: "Splaytree", scope: !0, file: !34, line: 22, type: !78, isLocal: false, isDefinition: true, variable: %struct.splay_node** @Splaytree)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64, align: 64)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_node", file: !7, line: 34, baseType: !80)
!80 = !DICompositeType(tag: DW_TAG_structure_type, name: "splay_node", file: !7, line: 31, size: 320, align: 64, elements: !81)
!81 = !{!82, !89, !91, !92}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !80, file: !7, line: 32, baseType: !83, size: 128, align: 64)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "splay_element", file: !7, line: 29, baseType: !84)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "splay_element", file: !7, line: 26, size: 128, align: 64, elements: !85)
!85 = !{!86, !88}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !84, file: !7, line: 27, baseType: !87, size: 64, align: 64)
!87 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !84, file: !7, line: 28, baseType: !11, size: 64, align: 32, offset: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "father", scope: !80, file: !7, line: 33, baseType: !90, size: 64, align: 64, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !80, file: !7, line: 33, baseType: !90, size: 64, align: 64, offset: 192)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !80, file: !7, line: 33, baseType: !90, size: 64, align: 64, offset: 256)
!93 = !DIGlobalVariable(name: "CHSplaytree", scope: !0, file: !34, line: 23, type: !94, isLocal: false, isDefinition: true, variable: %struct.CHsplay_node** @CHSplaytree)
!94 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !95, size: 64, align: 64)
!95 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHsplay_node", file: !7, line: 57, baseType: !96)
!96 = !DICompositeType(tag: DW_TAG_structure_type, name: "CHsplay_node", file: !7, line: 54, size: 448, align: 64, elements: !97)
!97 = !{!98, !110, !112, !113}
!98 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !96, file: !7, line: 55, baseType: !99, size: 256, align: 64)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHsplay_element", file: !7, line: 52, baseType: !100)
!100 = !DICompositeType(tag: DW_TAG_structure_type, name: "CHsplay_element", file: !7, line: 49, size: 256, align: 64, elements: !101)
!101 = !{!102, !109}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !100, file: !7, line: 50, baseType: !103, size: 192, align: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "key", file: !7, line: 47, baseType: !104)
!104 = !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !7, line: 43, size: 192, align: 64, elements: !105)
!105 = !{!106, !107, !108}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !104, file: !7, line: 44, baseType: !31, size: 64, align: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !104, file: !7, line: 45, baseType: !31, size: 64, align: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !104, file: !7, line: 46, baseType: !4, size: 32, align: 32, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "point", scope: !100, file: !7, line: 51, baseType: !47, size: 64, align: 64, offset: 192)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "father", scope: !96, file: !7, line: 56, baseType: !111, size: 64, align: 64, offset: 256)
!111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64, align: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !96, file: !7, line: 56, baseType: !111, size: 64, align: 64, offset: 320)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !96, file: !7, line: 56, baseType: !111, size: 64, align: 64, offset: 384)
!114 = !DIGlobalVariable(name: "S", scope: !0, file: !34, line: 24, type: !47, isLocal: false, isDefinition: true, variable: %struct.CHpoints** @S)
!115 = !DIGlobalVariable(name: "default_radius", scope: !0, file: !34, line: 25, type: !4, isLocal: false, isDefinition: true, variable: i32* @default_radius)
!116 = !DIGlobalVariable(name: "K", scope: !0, file: !34, line: 27, type: !5, isLocal: false, isDefinition: true, variable: %struct.Knode** @K)
!117 = !DIGlobalVariable(name: "E", scope: !0, file: !34, line: 28, type: !19, isLocal: false, isDefinition: true, variable: %struct.Enode** @E)
!118 = !{i32 2, !"Dwarf Version", i32 4}
!119 = !{i32 2, !"Debug Info Version", i32 3}
!120 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!121 = !DILocation(line: 36, column: 8, scope: !33)
!122 = !DILocation(line: 36, column: 3, scope: !33)
!123 = !DILocation(line: 37, column: 8, scope: !33)
!124 = !DILocation(line: 37, column: 3, scope: !33)
!125 = !DILocation(line: 38, column: 10, scope: !33)
!126 = !DILocation(line: 39, column: 10, scope: !33)
!127 = !DILocation(line: 40, column: 1, scope: !33)
!128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !37, file: !34, line: 45, type: !4)
!129 = !DIExpression()
!130 = !DILocation(line: 45, column: 19, scope: !37)
!131 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !37, file: !34, line: 45, type: !4)
!132 = !DILocation(line: 45, column: 26, scope: !37)
!133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !37, file: !34, line: 46, type: !11)
!134 = !DILocation(line: 46, column: 9, scope: !37)
!135 = !DILocation(line: 48, column: 5, scope: !37)
!136 = !DILocation(line: 48, column: 7, scope: !37)
!137 = !DILocation(line: 49, column: 5, scope: !37)
!138 = !DILocation(line: 49, column: 7, scope: !37)
!139 = !DILocation(line: 50, column: 3, scope: !37)
!140 = !DILocation(line: 51, column: 1, scope: !37)
!141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !40, file: !34, line: 57, type: !4)
!142 = !DILocation(line: 57, column: 10, scope: !40)
!143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !40, file: !34, line: 57, type: !4)
!144 = !DILocation(line: 57, column: 13, scope: !40)
!145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "no_p", scope: !40, file: !34, line: 57, type: !4)
!146 = !DILocation(line: 57, column: 16, scope: !40)
!147 = !DILocation(line: 59, column: 15, scope: !40)
!148 = !DILocation(line: 59, column: 13, scope: !40)
!149 = !DILocation(line: 60, column: 10, scope: !40)
!150 = !DILocation(line: 60, column: 3, scope: !40)
!151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !40, file: !34, line: 57, type: !4)
!152 = !DILocation(line: 57, column: 7, scope: !40)
!153 = !DILocation(line: 61, column: 8, scope: !154)
!154 = distinct !DILexicalBlock(scope: !40, file: !34, line: 61, column: 3)
!155 = !DILocation(line: 61, column: 20, scope: !156)
!156 = distinct !DILexicalBlock(scope: !154, file: !34, line: 61, column: 3)
!157 = !DILocation(line: 61, column: 17, scope: !156)
!158 = !DILocation(line: 61, column: 3, scope: !154)
!159 = !DILocation(line: 62, column: 12, scope: !160)
!160 = distinct !DILexicalBlock(scope: !156, file: !34, line: 61, column: 31)
!161 = !DILocation(line: 62, column: 5, scope: !160)
!162 = !DILocation(line: 63, column: 14, scope: !160)
!163 = !DILocation(line: 63, column: 17, scope: !160)
!164 = !DILocation(line: 63, column: 5, scope: !160)
!165 = !DILocation(line: 64, column: 3, scope: !160)
!166 = !DILocation(line: 61, column: 27, scope: !156)
!167 = !DILocation(line: 61, column: 3, scope: !156)
!168 = !DILocation(line: 65, column: 1, scope: !40)
!169 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !41, file: !34, line: 70, type: !11)
!170 = !DILocation(line: 70, column: 22, scope: !41)
!171 = !DILocation(line: 71, column: 5, scope: !41)
!172 = !DILocation(line: 71, column: 3, scope: !41)
!173 = !DILocation(line: 71, column: 13, scope: !41)
!174 = !DILocation(line: 71, column: 17, scope: !41)
!175 = !DILocation(line: 72, column: 5, scope: !41)
!176 = !DILocation(line: 72, column: 3, scope: !41)
!177 = !DILocation(line: 72, column: 13, scope: !41)
!178 = !DILocation(line: 72, column: 16, scope: !41)
!179 = !DILocation(line: 73, column: 5, scope: !41)
!180 = !DILocation(line: 73, column: 3, scope: !41)
!181 = !DILocation(line: 73, column: 13, scope: !41)
!182 = !DILocation(line: 73, column: 16, scope: !41)
!183 = !DILocation(line: 74, column: 5, scope: !41)
!184 = !DILocation(line: 74, column: 3, scope: !41)
!185 = !DILocation(line: 74, column: 13, scope: !41)
!186 = !DILocation(line: 74, column: 16, scope: !41)
!187 = !DILocation(line: 75, column: 9, scope: !41)
!188 = !DILocation(line: 76, column: 1, scope: !41)
!189 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "P", arg: 1, scope: !44, file: !34, line: 82, type: !47)
!190 = !DILocation(line: 82, column: 27, scope: !44)
!191 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "An", scope: !44, file: !34, line: 92, type: !11)
!192 = !DILocation(line: 92, column: 9, scope: !44)
!193 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Bn", scope: !44, file: !34, line: 92, type: !11)
!194 = !DILocation(line: 92, column: 13, scope: !44)
!195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Cn", scope: !44, file: !34, line: 92, type: !11)
!196 = !DILocation(line: 92, column: 17, scope: !44)
!197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Dn", scope: !44, file: !34, line: 92, type: !11)
!198 = !DILocation(line: 92, column: 21, scope: !44)
!199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !44, file: !34, line: 93, type: !11)
!200 = !DILocation(line: 93, column: 9, scope: !44)
!201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !44, file: !34, line: 96, type: !11)
!202 = !DILocation(line: 96, column: 9, scope: !44)
!203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "di", scope: !44, file: !34, line: 97, type: !204)
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "dpoint", file: !7, line: 7, baseType: !205)
!205 = !DICompositeType(tag: DW_TAG_structure_type, name: "dpoint", file: !7, line: 5, size: 128, align: 64, elements: !206)
!206 = !{!207, !208}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !205, file: !7, line: 6, baseType: !31, size: 64, align: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !205, file: !7, line: 6, baseType: !31, size: 64, align: 64, offset: 64)
!209 = !DILocation(line: 97, column: 10, scope: !44)
!210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !44, file: !34, line: 100, type: !11)
!211 = !DILocation(line: 100, column: 9, scope: !44)
!212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "np", scope: !44, file: !34, line: 100, type: !11)
!213 = !DILocation(line: 100, column: 12, scope: !44)
!214 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minX", scope: !44, file: !34, line: 101, type: !31)
!215 = !DILocation(line: 101, column: 10, scope: !44)
!216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "minY", scope: !44, file: !34, line: 101, type: !31)
!217 = !DILocation(line: 101, column: 16, scope: !44)
!218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxX", scope: !44, file: !34, line: 101, type: !31)
!219 = !DILocation(line: 101, column: 22, scope: !44)
!220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "maxY", scope: !44, file: !34, line: 101, type: !31)
!221 = !DILocation(line: 101, column: 28, scope: !44)
!222 = !DILocation(line: 107, column: 6, scope: !44)
!223 = !DILocation(line: 107, column: 8, scope: !44)
!224 = !DILocation(line: 108, column: 6, scope: !44)
!225 = !DILocation(line: 108, column: 8, scope: !44)
!226 = !DILocation(line: 109, column: 6, scope: !44)
!227 = !DILocation(line: 109, column: 8, scope: !44)
!228 = !DILocation(line: 110, column: 6, scope: !44)
!229 = !DILocation(line: 110, column: 8, scope: !44)
!230 = !DILocation(line: 111, column: 6, scope: !44)
!231 = !DILocation(line: 111, column: 8, scope: !44)
!232 = !DILocation(line: 112, column: 6, scope: !44)
!233 = !DILocation(line: 112, column: 8, scope: !44)
!234 = !DILocation(line: 113, column: 6, scope: !44)
!235 = !DILocation(line: 113, column: 8, scope: !44)
!236 = !DILocation(line: 114, column: 6, scope: !44)
!237 = !DILocation(line: 114, column: 8, scope: !44)
!238 = !DILocation(line: 116, column: 10, scope: !44)
!239 = !DILocation(line: 117, column: 8, scope: !44)
!240 = !DILocation(line: 117, column: 17, scope: !44)
!241 = !DILocation(line: 119, column: 7, scope: !44)
!242 = !DILocation(line: 120, column: 22, scope: !44)
!243 = !DILocation(line: 120, column: 7, scope: !44)
!244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !44, file: !34, line: 94, type: !31)
!245 = !DILocation(line: 94, column: 10, scope: !44)
!246 = !DILocation(line: 122, column: 10, scope: !247)
!247 = distinct !DILexicalBlock(scope: !44, file: !34, line: 122, column: 7)
!248 = !DILocation(line: 122, column: 17, scope: !247)
!249 = !DILocation(line: 122, column: 12, scope: !247)
!250 = !DILocation(line: 122, column: 20, scope: !247)
!251 = !DILocation(line: 122, column: 26, scope: !252)
!252 = !DILexicalBlockFile(scope: !247, file: !34, discriminator: 1)
!253 = !DILocation(line: 122, column: 33, scope: !247)
!254 = !DILocation(line: 122, column: 28, scope: !247)
!255 = !DILocation(line: 122, column: 7, scope: !44)
!256 = !DILocation(line: 123, column: 10, scope: !257)
!257 = distinct !DILexicalBlock(scope: !247, file: !34, line: 122, column: 37)
!258 = !DILocation(line: 124, column: 20, scope: !259)
!259 = distinct !DILexicalBlock(scope: !257, file: !34, line: 124, column: 9)
!260 = !DILocation(line: 124, column: 15, scope: !259)
!261 = !DILocation(line: 124, column: 23, scope: !259)
!262 = !DILocation(line: 124, column: 30, scope: !263)
!263 = !DILexicalBlockFile(scope: !259, file: !34, discriminator: 1)
!264 = !DILocation(line: 124, column: 32, scope: !259)
!265 = !DILocation(line: 124, column: 9, scope: !257)
!266 = !DILocation(line: 125, column: 12, scope: !259)
!267 = !DILocation(line: 125, column: 7, scope: !259)
!268 = !DILocation(line: 126, column: 3, scope: !257)
!269 = !DILocation(line: 126, column: 17, scope: !270)
!270 = distinct !DILexicalBlock(scope: !247, file: !34, line: 126, column: 14)
!271 = !DILocation(line: 126, column: 24, scope: !270)
!272 = !DILocation(line: 126, column: 19, scope: !270)
!273 = !DILocation(line: 126, column: 27, scope: !270)
!274 = !DILocation(line: 126, column: 33, scope: !275)
!275 = !DILexicalBlockFile(scope: !270, file: !34, discriminator: 1)
!276 = !DILocation(line: 126, column: 41, scope: !270)
!277 = !DILocation(line: 126, column: 35, scope: !270)
!278 = !DILocation(line: 126, column: 14, scope: !247)
!279 = !DILocation(line: 127, column: 10, scope: !280)
!280 = distinct !DILexicalBlock(scope: !270, file: !34, line: 126, column: 45)
!281 = !DILocation(line: 128, column: 3, scope: !280)
!282 = !DILocation(line: 128, column: 17, scope: !283)
!283 = distinct !DILexicalBlock(scope: !270, file: !34, line: 128, column: 14)
!284 = !DILocation(line: 128, column: 24, scope: !283)
!285 = !DILocation(line: 128, column: 19, scope: !283)
!286 = !DILocation(line: 128, column: 27, scope: !283)
!287 = !DILocation(line: 128, column: 33, scope: !288)
!288 = !DILexicalBlockFile(scope: !283, file: !34, discriminator: 1)
!289 = !DILocation(line: 128, column: 40, scope: !283)
!290 = !DILocation(line: 128, column: 35, scope: !283)
!291 = !DILocation(line: 128, column: 14, scope: !270)
!292 = !DILocation(line: 129, column: 10, scope: !293)
!293 = distinct !DILexicalBlock(scope: !283, file: !34, line: 128, column: 44)
!294 = !DILocation(line: 130, column: 20, scope: !295)
!295 = distinct !DILexicalBlock(scope: !293, file: !34, line: 130, column: 9)
!296 = !DILocation(line: 130, column: 15, scope: !295)
!297 = !DILocation(line: 130, column: 23, scope: !295)
!298 = !DILocation(line: 130, column: 30, scope: !299)
!299 = !DILexicalBlockFile(scope: !295, file: !34, discriminator: 1)
!300 = !DILocation(line: 130, column: 32, scope: !295)
!301 = !DILocation(line: 130, column: 9, scope: !293)
!302 = !DILocation(line: 131, column: 12, scope: !295)
!303 = !DILocation(line: 131, column: 7, scope: !295)
!304 = !DILocation(line: 132, column: 3, scope: !293)
!305 = !DILocation(line: 132, column: 17, scope: !306)
!306 = distinct !DILexicalBlock(scope: !283, file: !34, line: 132, column: 14)
!307 = !DILocation(line: 132, column: 25, scope: !306)
!308 = !DILocation(line: 132, column: 19, scope: !306)
!309 = !DILocation(line: 132, column: 28, scope: !306)
!310 = !DILocation(line: 132, column: 34, scope: !311)
!311 = !DILexicalBlockFile(scope: !306, file: !34, discriminator: 1)
!312 = !DILocation(line: 132, column: 41, scope: !306)
!313 = !DILocation(line: 132, column: 36, scope: !306)
!314 = !DILocation(line: 132, column: 14, scope: !283)
!315 = !DILocation(line: 133, column: 10, scope: !316)
!316 = distinct !DILexicalBlock(scope: !306, file: !34, line: 132, column: 45)
!317 = !DILocation(line: 134, column: 3, scope: !316)
!318 = !DILocation(line: 134, column: 17, scope: !319)
!319 = distinct !DILexicalBlock(scope: !306, file: !34, line: 134, column: 14)
!320 = !DILocation(line: 134, column: 25, scope: !319)
!321 = !DILocation(line: 134, column: 19, scope: !319)
!322 = !DILocation(line: 134, column: 28, scope: !319)
!323 = !DILocation(line: 134, column: 34, scope: !324)
!324 = !DILexicalBlockFile(scope: !319, file: !34, discriminator: 1)
!325 = !DILocation(line: 134, column: 41, scope: !319)
!326 = !DILocation(line: 134, column: 36, scope: !319)
!327 = !DILocation(line: 134, column: 14, scope: !306)
!328 = !DILocation(line: 135, column: 10, scope: !329)
!329 = distinct !DILexicalBlock(scope: !319, file: !34, line: 134, column: 45)
!330 = !DILocation(line: 136, column: 3, scope: !329)
!331 = !DILocation(line: 136, column: 17, scope: !332)
!332 = distinct !DILexicalBlock(scope: !319, file: !34, line: 136, column: 14)
!333 = !DILocation(line: 136, column: 24, scope: !332)
!334 = !DILocation(line: 136, column: 19, scope: !332)
!335 = !DILocation(line: 136, column: 27, scope: !332)
!336 = !DILocation(line: 136, column: 33, scope: !337)
!337 = !DILexicalBlockFile(scope: !332, file: !34, discriminator: 1)
!338 = !DILocation(line: 136, column: 40, scope: !332)
!339 = !DILocation(line: 136, column: 35, scope: !332)
!340 = !DILocation(line: 136, column: 14, scope: !319)
!341 = !DILocation(line: 137, column: 10, scope: !342)
!342 = distinct !DILexicalBlock(scope: !332, file: !34, line: 136, column: 44)
!343 = !DILocation(line: 138, column: 20, scope: !344)
!344 = distinct !DILexicalBlock(scope: !342, file: !34, line: 138, column: 9)
!345 = !DILocation(line: 138, column: 15, scope: !344)
!346 = !DILocation(line: 138, column: 23, scope: !344)
!347 = !DILocation(line: 138, column: 30, scope: !348)
!348 = !DILexicalBlockFile(scope: !344, file: !34, discriminator: 1)
!349 = !DILocation(line: 138, column: 32, scope: !344)
!350 = !DILocation(line: 138, column: 9, scope: !342)
!351 = !DILocation(line: 139, column: 12, scope: !344)
!352 = !DILocation(line: 139, column: 7, scope: !344)
!353 = !DILocation(line: 140, column: 3, scope: !342)
!354 = !DILocation(line: 140, column: 17, scope: !355)
!355 = distinct !DILexicalBlock(scope: !332, file: !34, line: 140, column: 14)
!356 = !DILocation(line: 140, column: 24, scope: !355)
!357 = !DILocation(line: 140, column: 19, scope: !355)
!358 = !DILocation(line: 140, column: 27, scope: !355)
!359 = !DILocation(line: 140, column: 33, scope: !360)
!360 = !DILexicalBlockFile(scope: !355, file: !34, discriminator: 1)
!361 = !DILocation(line: 140, column: 41, scope: !355)
!362 = !DILocation(line: 140, column: 35, scope: !355)
!363 = !DILocation(line: 140, column: 14, scope: !332)
!364 = !DILocation(line: 141, column: 10, scope: !355)
!365 = !DILocation(line: 141, column: 5, scope: !355)
!366 = !DILocation(line: 142, column: 15, scope: !367)
!367 = distinct !DILexicalBlock(scope: !355, file: !34, line: 142, column: 12)
!368 = !DILocation(line: 142, column: 22, scope: !367)
!369 = !DILocation(line: 142, column: 17, scope: !367)
!370 = !DILocation(line: 142, column: 25, scope: !367)
!371 = !DILocation(line: 142, column: 31, scope: !372)
!372 = !DILexicalBlockFile(scope: !367, file: !34, discriminator: 1)
!373 = !DILocation(line: 142, column: 38, scope: !367)
!374 = !DILocation(line: 142, column: 33, scope: !367)
!375 = !DILocation(line: 142, column: 12, scope: !355)
!376 = !DILocation(line: 143, column: 10, scope: !377)
!377 = distinct !DILexicalBlock(scope: !367, file: !34, line: 142, column: 42)
!378 = !DILocation(line: 144, column: 20, scope: !379)
!379 = distinct !DILexicalBlock(scope: !377, file: !34, line: 144, column: 9)
!380 = !DILocation(line: 144, column: 15, scope: !379)
!381 = !DILocation(line: 144, column: 23, scope: !379)
!382 = !DILocation(line: 144, column: 30, scope: !383)
!383 = !DILexicalBlockFile(scope: !379, file: !34, discriminator: 1)
!384 = !DILocation(line: 144, column: 32, scope: !379)
!385 = !DILocation(line: 144, column: 9, scope: !377)
!386 = !DILocation(line: 145, column: 12, scope: !379)
!387 = !DILocation(line: 145, column: 7, scope: !379)
!388 = !DILocation(line: 146, column: 3, scope: !377)
!389 = !DILocation(line: 147, column: 5, scope: !390)
!390 = distinct !DILexicalBlock(scope: !367, file: !34, line: 146, column: 10)
!391 = !DILocation(line: 148, column: 5, scope: !390)
!392 = !DILocation(line: 150, column: 17, scope: !44)
!393 = !DILocation(line: 150, column: 9, scope: !44)
!394 = !DILocation(line: 150, column: 5, scope: !44)
!395 = !DILocation(line: 150, column: 7, scope: !44)
!396 = !DILocation(line: 151, column: 17, scope: !44)
!397 = !DILocation(line: 151, column: 9, scope: !44)
!398 = !DILocation(line: 151, column: 5, scope: !44)
!399 = !DILocation(line: 151, column: 7, scope: !44)
!400 = !DILocation(line: 152, column: 10, scope: !44)
!401 = !DILocation(line: 152, column: 3, scope: !44)
!402 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "S", arg: 1, scope: !57, file: !34, line: 159, type: !47)
!403 = !DILocation(line: 159, column: 40, scope: !57)
!404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key", scope: !57, file: !34, line: 161, type: !103)
!405 = !DILocation(line: 161, column: 7, scope: !57)
!406 = !DILocation(line: 164, column: 27, scope: !57)
!407 = !DILocation(line: 164, column: 25, scope: !57)
!408 = !DILocation(line: 164, column: 32, scope: !57)
!409 = !DILocation(line: 164, column: 23, scope: !57)
!410 = !DILocation(line: 164, column: 16, scope: !57)
!411 = !DILocation(line: 164, column: 7, scope: !57)
!412 = !DILocation(line: 164, column: 5, scope: !57)
!413 = !DILocation(line: 165, column: 27, scope: !57)
!414 = !DILocation(line: 165, column: 25, scope: !57)
!415 = !DILocation(line: 165, column: 32, scope: !57)
!416 = !DILocation(line: 165, column: 23, scope: !57)
!417 = !DILocation(line: 165, column: 16, scope: !57)
!418 = !DILocation(line: 165, column: 7, scope: !57)
!419 = !DILocation(line: 165, column: 5, scope: !57)
!420 = !DILocation(line: 166, column: 17, scope: !57)
!421 = !DILocation(line: 166, column: 15, scope: !57)
!422 = !DILocation(line: 168, column: 13, scope: !57)
!423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !57, file: !34, line: 160, type: !47)
!424 = !DILocation(line: 160, column: 13, scope: !57)
!425 = !DILocation(line: 171, column: 13, scope: !57)
!426 = !DILocation(line: 171, column: 3, scope: !57)
!427 = !DILocation(line: 172, column: 10, scope: !57)
!428 = !DILocation(line: 172, column: 17, scope: !57)
!429 = !DILocation(line: 172, column: 6, scope: !57)
!430 = !DILocation(line: 172, column: 8, scope: !57)
!431 = !DILocation(line: 174, column: 3, scope: !57)
!432 = !DILocation(line: 176, column: 3, scope: !57)
!433 = !DILocation(line: 176, column: 15, scope: !57)
!434 = !DILocation(line: 178, column: 15, scope: !435)
!435 = distinct !DILexicalBlock(scope: !57, file: !34, line: 176, column: 21)
!436 = !DILocation(line: 178, column: 5, scope: !435)
!437 = !DILocation(line: 179, column: 15, scope: !435)
!438 = !DILocation(line: 179, column: 22, scope: !435)
!439 = !DILocation(line: 179, column: 11, scope: !435)
!440 = !DILocation(line: 179, column: 13, scope: !435)
!441 = !DILocation(line: 181, column: 5, scope: !435)
!442 = !DILocation(line: 182, column: 18, scope: !435)
!443 = !DILocation(line: 184, column: 1, scope: !57)
!444 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v1", arg: 1, scope: !60, file: !34, line: 189, type: !4)
!445 = !DILocation(line: 189, column: 19, scope: !60)
!446 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v2", arg: 2, scope: !60, file: !34, line: 189, type: !4)
!447 = !DILocation(line: 189, column: 27, scope: !60)
!448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !60, file: !34, line: 190, type: !4)
!449 = !DILocation(line: 190, column: 7, scope: !60)
!450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !60, file: !34, line: 190, type: !4)
!451 = !DILocation(line: 190, column: 10, scope: !60)
!452 = !DILocation(line: 192, column: 5, scope: !60)
!453 = !DILocation(line: 192, column: 3, scope: !60)
!454 = !DILocation(line: 192, column: 13, scope: !60)
!455 = !DILocation(line: 192, column: 16, scope: !60)
!456 = !DILocation(line: 193, column: 5, scope: !60)
!457 = !DILocation(line: 193, column: 3, scope: !60)
!458 = !DILocation(line: 193, column: 13, scope: !60)
!459 = !DILocation(line: 193, column: 16, scope: !60)
!460 = !DILocation(line: 199, column: 7, scope: !461)
!461 = distinct !DILexicalBlock(scope: !60, file: !34, line: 199, column: 7)
!462 = !DILocation(line: 199, column: 13, scope: !461)
!463 = !DILocation(line: 199, column: 16, scope: !461)
!464 = !DILocation(line: 199, column: 7, scope: !60)
!465 = !DILocation(line: 200, column: 16, scope: !466)
!466 = distinct !DILexicalBlock(scope: !461, file: !34, line: 199, column: 22)
!467 = !DILocation(line: 200, column: 5, scope: !466)
!468 = !DILocation(line: 200, column: 11, scope: !466)
!469 = !DILocation(line: 200, column: 14, scope: !466)
!470 = !DILocation(line: 201, column: 20, scope: !466)
!471 = !DILocation(line: 201, column: 7, scope: !466)
!472 = !DILocation(line: 201, column: 5, scope: !466)
!473 = !DILocation(line: 201, column: 15, scope: !466)
!474 = !DILocation(line: 201, column: 18, scope: !466)
!475 = !DILocation(line: 202, column: 20, scope: !466)
!476 = !DILocation(line: 202, column: 7, scope: !466)
!477 = !DILocation(line: 202, column: 5, scope: !466)
!478 = !DILocation(line: 202, column: 15, scope: !466)
!479 = !DILocation(line: 202, column: 18, scope: !466)
!480 = !DILocation(line: 203, column: 3, scope: !466)
!481 = !DILocation(line: 203, column: 14, scope: !482)
!482 = distinct !DILexicalBlock(scope: !461, file: !34, line: 203, column: 14)
!483 = !DILocation(line: 203, column: 20, scope: !482)
!484 = !DILocation(line: 203, column: 23, scope: !482)
!485 = !DILocation(line: 203, column: 14, scope: !461)
!486 = !DILocation(line: 204, column: 16, scope: !487)
!487 = distinct !DILexicalBlock(scope: !482, file: !34, line: 203, column: 29)
!488 = !DILocation(line: 204, column: 5, scope: !487)
!489 = !DILocation(line: 204, column: 11, scope: !487)
!490 = !DILocation(line: 204, column: 14, scope: !487)
!491 = !DILocation(line: 205, column: 20, scope: !487)
!492 = !DILocation(line: 205, column: 26, scope: !487)
!493 = !DILocation(line: 205, column: 7, scope: !487)
!494 = !DILocation(line: 205, column: 5, scope: !487)
!495 = !DILocation(line: 205, column: 15, scope: !487)
!496 = !DILocation(line: 205, column: 18, scope: !487)
!497 = !DILocation(line: 206, column: 20, scope: !487)
!498 = !DILocation(line: 206, column: 26, scope: !487)
!499 = !DILocation(line: 206, column: 7, scope: !487)
!500 = !DILocation(line: 206, column: 5, scope: !487)
!501 = !DILocation(line: 206, column: 15, scope: !487)
!502 = !DILocation(line: 206, column: 18, scope: !487)
!503 = !DILocation(line: 207, column: 17, scope: !504)
!504 = distinct !DILexicalBlock(scope: !487, file: !34, line: 207, column: 9)
!505 = !DILocation(line: 207, column: 23, scope: !504)
!506 = !DILocation(line: 207, column: 15, scope: !504)
!507 = !DILocation(line: 207, column: 27, scope: !504)
!508 = !DILocation(line: 207, column: 12, scope: !504)
!509 = !DILocation(line: 207, column: 9, scope: !487)
!510 = !DILocation(line: 208, column: 24, scope: !511)
!511 = distinct !DILexicalBlock(scope: !504, file: !34, line: 207, column: 31)
!512 = !DILocation(line: 208, column: 9, scope: !511)
!513 = !DILocation(line: 208, column: 15, scope: !511)
!514 = !DILocation(line: 208, column: 7, scope: !511)
!515 = !DILocation(line: 208, column: 19, scope: !511)
!516 = !DILocation(line: 208, column: 22, scope: !511)
!517 = !DILocation(line: 209, column: 24, scope: !511)
!518 = !DILocation(line: 209, column: 9, scope: !511)
!519 = !DILocation(line: 209, column: 15, scope: !511)
!520 = !DILocation(line: 209, column: 7, scope: !511)
!521 = !DILocation(line: 209, column: 19, scope: !511)
!522 = !DILocation(line: 209, column: 22, scope: !511)
!523 = !DILocation(line: 210, column: 5, scope: !511)
!524 = !DILocation(line: 211, column: 24, scope: !525)
!525 = distinct !DILexicalBlock(scope: !504, file: !34, line: 210, column: 12)
!526 = !DILocation(line: 211, column: 9, scope: !525)
!527 = !DILocation(line: 211, column: 15, scope: !525)
!528 = !DILocation(line: 211, column: 7, scope: !525)
!529 = !DILocation(line: 211, column: 19, scope: !525)
!530 = !DILocation(line: 211, column: 22, scope: !525)
!531 = !DILocation(line: 212, column: 24, scope: !525)
!532 = !DILocation(line: 212, column: 9, scope: !525)
!533 = !DILocation(line: 212, column: 15, scope: !525)
!534 = !DILocation(line: 212, column: 7, scope: !525)
!535 = !DILocation(line: 212, column: 19, scope: !525)
!536 = !DILocation(line: 212, column: 22, scope: !525)
!537 = !DILocation(line: 214, column: 3, scope: !487)
!538 = !DILocation(line: 215, column: 16, scope: !539)
!539 = distinct !DILexicalBlock(scope: !482, file: !34, line: 214, column: 10)
!540 = !DILocation(line: 215, column: 5, scope: !539)
!541 = !DILocation(line: 215, column: 11, scope: !539)
!542 = !DILocation(line: 215, column: 14, scope: !539)
!543 = !DILocation(line: 219, column: 7, scope: !544)
!544 = distinct !DILexicalBlock(scope: !60, file: !34, line: 219, column: 7)
!545 = !DILocation(line: 219, column: 13, scope: !544)
!546 = !DILocation(line: 219, column: 16, scope: !544)
!547 = !DILocation(line: 219, column: 7, scope: !60)
!548 = !DILocation(line: 220, column: 16, scope: !549)
!549 = distinct !DILexicalBlock(scope: !544, file: !34, line: 219, column: 22)
!550 = !DILocation(line: 220, column: 5, scope: !549)
!551 = !DILocation(line: 220, column: 11, scope: !549)
!552 = !DILocation(line: 220, column: 14, scope: !549)
!553 = !DILocation(line: 221, column: 20, scope: !549)
!554 = !DILocation(line: 221, column: 7, scope: !549)
!555 = !DILocation(line: 221, column: 5, scope: !549)
!556 = !DILocation(line: 221, column: 15, scope: !549)
!557 = !DILocation(line: 221, column: 18, scope: !549)
!558 = !DILocation(line: 222, column: 20, scope: !549)
!559 = !DILocation(line: 222, column: 7, scope: !549)
!560 = !DILocation(line: 222, column: 5, scope: !549)
!561 = !DILocation(line: 222, column: 15, scope: !549)
!562 = !DILocation(line: 222, column: 18, scope: !549)
!563 = !DILocation(line: 223, column: 3, scope: !549)
!564 = !DILocation(line: 223, column: 14, scope: !565)
!565 = distinct !DILexicalBlock(scope: !544, file: !34, line: 223, column: 14)
!566 = !DILocation(line: 223, column: 20, scope: !565)
!567 = !DILocation(line: 223, column: 23, scope: !565)
!568 = !DILocation(line: 223, column: 14, scope: !544)
!569 = !DILocation(line: 224, column: 16, scope: !570)
!570 = distinct !DILexicalBlock(scope: !565, file: !34, line: 223, column: 29)
!571 = !DILocation(line: 224, column: 5, scope: !570)
!572 = !DILocation(line: 224, column: 11, scope: !570)
!573 = !DILocation(line: 224, column: 14, scope: !570)
!574 = !DILocation(line: 225, column: 20, scope: !570)
!575 = !DILocation(line: 225, column: 26, scope: !570)
!576 = !DILocation(line: 225, column: 7, scope: !570)
!577 = !DILocation(line: 225, column: 5, scope: !570)
!578 = !DILocation(line: 225, column: 15, scope: !570)
!579 = !DILocation(line: 225, column: 18, scope: !570)
!580 = !DILocation(line: 226, column: 20, scope: !570)
!581 = !DILocation(line: 226, column: 26, scope: !570)
!582 = !DILocation(line: 226, column: 7, scope: !570)
!583 = !DILocation(line: 226, column: 5, scope: !570)
!584 = !DILocation(line: 226, column: 15, scope: !570)
!585 = !DILocation(line: 226, column: 18, scope: !570)
!586 = !DILocation(line: 227, column: 17, scope: !587)
!587 = distinct !DILexicalBlock(scope: !570, file: !34, line: 227, column: 9)
!588 = !DILocation(line: 227, column: 23, scope: !587)
!589 = !DILocation(line: 227, column: 15, scope: !587)
!590 = !DILocation(line: 227, column: 27, scope: !587)
!591 = !DILocation(line: 227, column: 12, scope: !587)
!592 = !DILocation(line: 227, column: 9, scope: !570)
!593 = !DILocation(line: 228, column: 24, scope: !594)
!594 = distinct !DILexicalBlock(scope: !587, file: !34, line: 227, column: 31)
!595 = !DILocation(line: 228, column: 9, scope: !594)
!596 = !DILocation(line: 228, column: 15, scope: !594)
!597 = !DILocation(line: 228, column: 7, scope: !594)
!598 = !DILocation(line: 228, column: 19, scope: !594)
!599 = !DILocation(line: 228, column: 22, scope: !594)
!600 = !DILocation(line: 229, column: 24, scope: !594)
!601 = !DILocation(line: 229, column: 9, scope: !594)
!602 = !DILocation(line: 229, column: 15, scope: !594)
!603 = !DILocation(line: 229, column: 7, scope: !594)
!604 = !DILocation(line: 229, column: 19, scope: !594)
!605 = !DILocation(line: 229, column: 22, scope: !594)
!606 = !DILocation(line: 230, column: 5, scope: !594)
!607 = !DILocation(line: 231, column: 24, scope: !608)
!608 = distinct !DILexicalBlock(scope: !587, file: !34, line: 230, column: 12)
!609 = !DILocation(line: 231, column: 9, scope: !608)
!610 = !DILocation(line: 231, column: 15, scope: !608)
!611 = !DILocation(line: 231, column: 7, scope: !608)
!612 = !DILocation(line: 231, column: 19, scope: !608)
!613 = !DILocation(line: 231, column: 22, scope: !608)
!614 = !DILocation(line: 232, column: 24, scope: !608)
!615 = !DILocation(line: 232, column: 9, scope: !608)
!616 = !DILocation(line: 232, column: 15, scope: !608)
!617 = !DILocation(line: 232, column: 7, scope: !608)
!618 = !DILocation(line: 232, column: 19, scope: !608)
!619 = !DILocation(line: 232, column: 22, scope: !608)
!620 = !DILocation(line: 234, column: 3, scope: !570)
!621 = !DILocation(line: 235, column: 16, scope: !622)
!622 = distinct !DILexicalBlock(scope: !565, file: !34, line: 234, column: 10)
!623 = !DILocation(line: 235, column: 5, scope: !622)
!624 = !DILocation(line: 235, column: 11, scope: !622)
!625 = !DILocation(line: 235, column: 14, scope: !622)
!626 = !DILocation(line: 238, column: 9, scope: !60)
!627 = !DILocation(line: 239, column: 1, scope: !60)
!628 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "S", arg: 1, scope: !61, file: !34, line: 244, type: !47)
!629 = !DILocation(line: 244, column: 47, scope: !61)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key1", scope: !61, file: !34, line: 246, type: !103)
!631 = !DILocation(line: 246, column: 7, scope: !61)
!632 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "key2", scope: !61, file: !34, line: 246, type: !103)
!633 = !DILocation(line: 246, column: 13, scope: !61)
!634 = !DILocation(line: 247, column: 8, scope: !61)
!635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p2", scope: !61, file: !34, line: 245, type: !47)
!636 = !DILocation(line: 245, column: 18, scope: !61)
!637 = !DILocation(line: 248, column: 8, scope: !61)
!638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p1", scope: !61, file: !34, line: 245, type: !47)
!639 = !DILocation(line: 245, column: 13, scope: !61)
!640 = !DILocation(line: 249, column: 8, scope: !61)
!641 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p3", scope: !61, file: !34, line: 245, type: !47)
!642 = !DILocation(line: 245, column: 23, scope: !61)
!643 = !DILocation(line: 250, column: 29, scope: !61)
!644 = !DILocation(line: 251, column: 32, scope: !61)
!645 = !DILocation(line: 251, column: 44, scope: !61)
!646 = !DILocation(line: 251, column: 54, scope: !61)
!647 = !DILocation(line: 251, column: 64, scope: !61)
!648 = !DILocation(line: 251, column: 25, scope: !61)
!649 = !DILocation(line: 250, column: 17, scope: !61)
!650 = !DILocation(line: 250, column: 8, scope: !61)
!651 = !DILocation(line: 250, column: 15, scope: !61)
!652 = !DILocation(line: 252, column: 22, scope: !61)
!653 = !DILocation(line: 252, column: 16, scope: !61)
!654 = !DILocation(line: 252, column: 8, scope: !61)
!655 = !DILocation(line: 252, column: 14, scope: !61)
!656 = !DILocation(line: 253, column: 21, scope: !61)
!657 = !DILocation(line: 253, column: 8, scope: !61)
!658 = !DILocation(line: 253, column: 15, scope: !61)
!659 = !DILocation(line: 254, column: 3, scope: !61)
!660 = !DILocation(line: 255, column: 29, scope: !61)
!661 = !DILocation(line: 256, column: 36, scope: !61)
!662 = !DILocation(line: 256, column: 46, scope: !61)
!663 = !DILocation(line: 256, column: 52, scope: !61)
!664 = !DILocation(line: 256, column: 62, scope: !61)
!665 = !DILocation(line: 256, column: 25, scope: !61)
!666 = !DILocation(line: 255, column: 17, scope: !61)
!667 = !DILocation(line: 255, column: 8, scope: !61)
!668 = !DILocation(line: 255, column: 15, scope: !61)
!669 = !DILocation(line: 257, column: 30, scope: !61)
!670 = !DILocation(line: 257, column: 16, scope: !61)
!671 = !DILocation(line: 257, column: 8, scope: !61)
!672 = !DILocation(line: 257, column: 14, scope: !61)
!673 = !DILocation(line: 258, column: 21, scope: !61)
!674 = !DILocation(line: 258, column: 8, scope: !61)
!675 = !DILocation(line: 258, column: 15, scope: !61)
!676 = !DILocation(line: 259, column: 3, scope: !61)
!677 = !DILocation(line: 260, column: 3, scope: !61)
!678 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !64, file: !34, line: 266, type: !47)
!679 = !DILocation(line: 266, column: 25, scope: !64)
!680 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !64, file: !34, line: 267, type: !204)
!681 = !DILocation(line: 267, column: 10, scope: !64)
!682 = !DILocation(line: 271, column: 16, scope: !683)
!683 = distinct !DILexicalBlock(scope: !64, file: !34, line: 271, column: 7)
!684 = !DILocation(line: 271, column: 27, scope: !683)
!685 = !DILocation(line: 271, column: 36, scope: !683)
!686 = !DILocation(line: 271, column: 8, scope: !683)
!687 = !DILocation(line: 272, column: 19, scope: !683)
!688 = !DILocation(line: 272, column: 25, scope: !683)
!689 = !DILocation(line: 272, column: 34, scope: !683)
!690 = !DILocation(line: 272, column: 8, scope: !683)
!691 = !DILocation(line: 271, column: 42, scope: !683)
!692 = !DILocation(line: 272, column: 41, scope: !683)
!693 = !DILocation(line: 273, column: 16, scope: !683)
!694 = !DILocation(line: 273, column: 27, scope: !683)
!695 = !DILocation(line: 273, column: 36, scope: !683)
!696 = !DILocation(line: 273, column: 8, scope: !683)
!697 = !DILocation(line: 274, column: 16, scope: !683)
!698 = !DILocation(line: 274, column: 27, scope: !683)
!699 = !DILocation(line: 274, column: 33, scope: !683)
!700 = !DILocation(line: 274, column: 42, scope: !683)
!701 = !DILocation(line: 274, column: 8, scope: !683)
!702 = !DILocation(line: 273, column: 42, scope: !683)
!703 = !DILocation(line: 271, column: 7, scope: !64)
!704 = !DILocation(line: 275, column: 10, scope: !683)
!705 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p2", scope: !64, file: !34, line: 268, type: !47)
!706 = !DILocation(line: 268, column: 18, scope: !64)
!707 = !DILocation(line: 275, column: 5, scope: !683)
!708 = !DILocation(line: 276, column: 24, scope: !709)
!709 = distinct !DILexicalBlock(scope: !683, file: !34, line: 276, column: 12)
!710 = !DILocation(line: 276, column: 30, scope: !709)
!711 = !DILocation(line: 276, column: 39, scope: !709)
!712 = !DILocation(line: 276, column: 13, scope: !709)
!713 = !DILocation(line: 277, column: 21, scope: !709)
!714 = !DILocation(line: 277, column: 32, scope: !709)
!715 = !DILocation(line: 277, column: 38, scope: !709)
!716 = !DILocation(line: 277, column: 47, scope: !709)
!717 = !DILocation(line: 277, column: 13, scope: !709)
!718 = !DILocation(line: 276, column: 45, scope: !709)
!719 = !DILocation(line: 277, column: 54, scope: !709)
!720 = !DILocation(line: 278, column: 24, scope: !709)
!721 = !DILocation(line: 278, column: 30, scope: !709)
!722 = !DILocation(line: 278, column: 39, scope: !709)
!723 = !DILocation(line: 278, column: 13, scope: !709)
!724 = !DILocation(line: 279, column: 24, scope: !709)
!725 = !DILocation(line: 279, column: 30, scope: !709)
!726 = !DILocation(line: 279, column: 41, scope: !709)
!727 = !DILocation(line: 279, column: 13, scope: !709)
!728 = !DILocation(line: 278, column: 45, scope: !709)
!729 = !DILocation(line: 276, column: 12, scope: !683)
!730 = !DILocation(line: 280, column: 10, scope: !709)
!731 = !DILocation(line: 280, column: 5, scope: !709)
!732 = !DILocation(line: 283, column: 8, scope: !64)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p1", scope: !64, file: !34, line: 268, type: !47)
!734 = !DILocation(line: 268, column: 13, scope: !64)
!735 = !DILocation(line: 284, column: 8, scope: !64)
!736 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p3", scope: !64, file: !34, line: 268, type: !47)
!737 = !DILocation(line: 268, column: 23, scope: !64)
!738 = !DILocation(line: 286, column: 7, scope: !739)
!739 = distinct !DILexicalBlock(scope: !64, file: !34, line: 286, column: 7)
!740 = !DILocation(line: 286, column: 25, scope: !739)
!741 = !DILocation(line: 286, column: 7, scope: !64)
!742 = !DILocation(line: 287, column: 25, scope: !743)
!743 = distinct !DILexicalBlock(scope: !739, file: !34, line: 286, column: 30)
!744 = !DILocation(line: 287, column: 35, scope: !743)
!745 = !DILocation(line: 287, column: 12, scope: !743)
!746 = !DILocation(line: 287, column: 42, scope: !743)
!747 = !DILocation(line: 287, column: 7, scope: !743)
!748 = !DILocation(line: 287, column: 9, scope: !743)
!749 = !DILocation(line: 288, column: 25, scope: !743)
!750 = !DILocation(line: 288, column: 35, scope: !743)
!751 = !DILocation(line: 288, column: 12, scope: !743)
!752 = !DILocation(line: 288, column: 42, scope: !743)
!753 = !DILocation(line: 288, column: 7, scope: !743)
!754 = !DILocation(line: 288, column: 9, scope: !743)
!755 = !DILocation(line: 289, column: 39, scope: !743)
!756 = !DILocation(line: 289, column: 49, scope: !743)
!757 = !DILocation(line: 289, column: 27, scope: !743)
!758 = !DILocation(line: 289, column: 19, scope: !743)
!759 = !DILocation(line: 289, column: 14, scope: !743)
!760 = !DILocation(line: 289, column: 56, scope: !743)
!761 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "radius", scope: !64, file: !34, line: 269, type: !31)
!762 = !DILocation(line: 269, column: 10, scope: !64)
!763 = !DILocation(line: 290, column: 3, scope: !743)
!764 = !DILocation(line: 291, column: 20, scope: !765)
!765 = distinct !DILexicalBlock(scope: !739, file: !34, line: 290, column: 10)
!766 = !DILocation(line: 291, column: 30, scope: !765)
!767 = !DILocation(line: 291, column: 40, scope: !765)
!768 = !DILocation(line: 291, column: 9, scope: !765)
!769 = !DILocation(line: 292, column: 38, scope: !765)
!770 = !DILocation(line: 292, column: 27, scope: !765)
!771 = !DILocation(line: 292, column: 14, scope: !765)
!772 = !DILocation(line: 294, column: 44, scope: !64)
!773 = !DILocation(line: 294, column: 37, scope: !64)
!774 = !DILocation(line: 294, column: 54, scope: !64)
!775 = !DILocation(line: 294, column: 47, scope: !64)
!776 = !DILocation(line: 294, column: 3, scope: !64)
!777 = !DILocation(line: 295, column: 3, scope: !64)
!778 = !DILocation(line: 296, column: 1, scope: !64)
!779 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !65, file: !34, line: 302, type: !11)
!780 = !DILocation(line: 302, column: 9, scope: !65)
!781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dc", scope: !65, file: !34, line: 303, type: !204)
!782 = !DILocation(line: 303, column: 10, scope: !65)
!783 = !DILocation(line: 308, column: 27, scope: !65)
!784 = !DILocation(line: 308, column: 3, scope: !65)
!785 = !DILocation(line: 309, column: 7, scope: !786)
!786 = distinct !DILexicalBlock(scope: !65, file: !34, line: 309, column: 7)
!787 = !DILocation(line: 309, column: 12, scope: !786)
!788 = !DILocation(line: 309, column: 7, scope: !65)
!789 = !DILocation(line: 310, column: 5, scope: !790)
!790 = distinct !DILexicalBlock(scope: !786, file: !34, line: 309, column: 17)
!791 = !DILocation(line: 310, column: 12, scope: !792)
!792 = !DILexicalBlockFile(scope: !793, file: !34, discriminator: 2)
!793 = !DILexicalBlockFile(scope: !790, file: !34, discriminator: 1)
!794 = !DILocation(line: 310, column: 17, scope: !790)
!795 = !DILocation(line: 311, column: 37, scope: !796)
!796 = distinct !DILexicalBlock(scope: !790, file: !34, line: 310, column: 22)
!797 = !DILocation(line: 311, column: 11, scope: !796)
!798 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !65, file: !34, line: 304, type: !47)
!799 = !DILocation(line: 304, column: 13, scope: !65)
!800 = !DILocation(line: 312, column: 11, scope: !801)
!801 = distinct !DILexicalBlock(scope: !796, file: !34, line: 312, column: 11)
!802 = !DILocation(line: 312, column: 16, scope: !801)
!803 = !DILocation(line: 312, column: 11, scope: !796)
!804 = !DILocation(line: 313, column: 9, scope: !801)
!805 = !DILocation(line: 314, column: 11, scope: !796)
!806 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !65, file: !34, line: 304, type: !47)
!807 = !DILocation(line: 304, column: 17, scope: !65)
!808 = !DILocation(line: 315, column: 22, scope: !796)
!809 = !DILocation(line: 315, column: 31, scope: !796)
!810 = !DILocation(line: 315, column: 37, scope: !796)
!811 = !DILocation(line: 315, column: 46, scope: !796)
!812 = !DILocation(line: 315, column: 12, scope: !796)
!813 = !DILocation(line: 316, column: 21, scope: !796)
!814 = !DILocation(line: 316, column: 13, scope: !796)
!815 = !DILocation(line: 316, column: 9, scope: !796)
!816 = !DILocation(line: 316, column: 11, scope: !796)
!817 = !DILocation(line: 317, column: 21, scope: !796)
!818 = !DILocation(line: 317, column: 13, scope: !796)
!819 = !DILocation(line: 317, column: 9, scope: !796)
!820 = !DILocation(line: 317, column: 11, scope: !796)
!821 = !DILocation(line: 318, column: 7, scope: !796)
!822 = !DILocation(line: 319, column: 16, scope: !796)
!823 = !DILocation(line: 319, column: 23, scope: !796)
!824 = !DILocation(line: 319, column: 31, scope: !796)
!825 = !DILocation(line: 319, column: 7, scope: !796)
!826 = !DILocation(line: 320, column: 16, scope: !796)
!827 = !DILocation(line: 320, column: 23, scope: !796)
!828 = !DILocation(line: 320, column: 31, scope: !796)
!829 = !DILocation(line: 320, column: 7, scope: !796)
!830 = !DILocation(line: 321, column: 14, scope: !796)
!831 = !DILocation(line: 321, column: 21, scope: !796)
!832 = !DILocation(line: 321, column: 10, scope: !796)
!833 = !DILocation(line: 321, column: 12, scope: !796)
!834 = !DILocation(line: 322, column: 17, scope: !796)
!835 = !DILocation(line: 322, column: 10, scope: !796)
!836 = !DILocation(line: 322, column: 15, scope: !796)
!837 = !DILocation(line: 323, column: 7, scope: !796)
!838 = !DILocation(line: 323, column: 16, scope: !796)
!839 = !DILocation(line: 323, column: 21, scope: !796)
!840 = !DILocation(line: 326, column: 9, scope: !796)
!841 = !DILocation(line: 327, column: 11, scope: !796)
!842 = !DILocation(line: 329, column: 30, scope: !796)
!843 = !DILocation(line: 329, column: 7, scope: !796)
!844 = !DILocation(line: 330, column: 30, scope: !796)
!845 = !DILocation(line: 330, column: 7, scope: !796)
!846 = !DILocation(line: 332, column: 17, scope: !790)
!847 = !DILocation(line: 332, column: 21, scope: !790)
!848 = !DILocation(line: 332, column: 31, scope: !790)
!849 = !DILocation(line: 332, column: 5, scope: !790)
!850 = !DILocation(line: 333, column: 3, scope: !790)
!851 = !DILocation(line: 333, column: 19, scope: !852)
!852 = distinct !DILexicalBlock(scope: !786, file: !34, line: 333, column: 14)
!853 = !DILocation(line: 333, column: 14, scope: !786)
!854 = !DILocation(line: 334, column: 14, scope: !852)
!855 = !DILocation(line: 334, column: 17, scope: !852)
!856 = !DILocation(line: 334, column: 26, scope: !852)
!857 = !DILocation(line: 334, column: 21, scope: !852)
!858 = !DILocation(line: 334, column: 31, scope: !852)
!859 = !DILocation(line: 334, column: 5, scope: !852)
!860 = !DILocation(line: 335, column: 8, scope: !65)
!861 = !DILocation(line: 335, column: 3, scope: !65)
!862 = !DILocation(line: 336, column: 15, scope: !65)
!863 = !DILocation(line: 336, column: 3, scope: !65)
!864 = !DILocation(line: 337, column: 1, scope: !65)
!865 = !DILocation(line: 344, column: 7, scope: !66)
!866 = !DILocation(line: 344, column: 5, scope: !66)
!867 = !DILocation(line: 345, column: 17, scope: !66)
!868 = !DILocation(line: 345, column: 3, scope: !66)
!869 = !DILocation(line: 346, column: 3, scope: !66)
!870 = !DILocation(line: 347, column: 3, scope: !66)
!871 = !DILocation(line: 348, column: 1, scope: !66)
!872 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !67, file: !34, line: 353, type: !4)
!873 = !DILocation(line: 353, column: 14, scope: !67)
!874 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !67, file: !34, line: 353, type: !70)
!875 = !DILocation(line: 353, column: 26, scope: !67)
!876 = !DILocation(line: 354, column: 3, scope: !67)
!877 = !DILocation(line: 355, column: 3, scope: !67)
!878 = !DILocation(line: 356, column: 3, scope: !67)
