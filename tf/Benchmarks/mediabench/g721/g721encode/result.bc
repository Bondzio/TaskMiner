; ModuleID = '/home/gleison/tf/Benchmarks/mediabench/g721/g721encode/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.g72x_state = type { i64, i16, i16, i16, i16, [2 x i16], [6 x i16], [2 x i16], [6 x i16], [2 x i16], i8 }

@power2 = internal global [15 x i16] [i16 1, i16 2, i16 4, i16 8, i16 16, i16 32, i16 64, i16 128, i16 256, i16 512, i16 1024, i16 2048, i16 4096, i16 8192, i16 16384], align 16

; Function Attrs: nounwind uwtable
define void @g72x_init_state(%struct.g72x_state* %state_ptr) #0 {
entry:
  %state_ptr.addr = alloca %struct.g72x_state*, align 8
  %cnta = alloca i32, align 4
  store %struct.g72x_state* %state_ptr, %struct.g72x_state** %state_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.g72x_state** %state_ptr.addr, metadata !66, metadata !67), !dbg !68
  call void @llvm.dbg.declare(metadata i32* %cnta, metadata !69, metadata !67), !dbg !70
  %0 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !71
  %yl = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %0, i32 0, i32 0, !dbg !72
  store i64 34816, i64* %yl, align 8, !dbg !73
  %1 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !74
  %yu = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %1, i32 0, i32 1, !dbg !75
  store i16 544, i16* %yu, align 2, !dbg !76
  %2 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !77
  %dms = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %2, i32 0, i32 2, !dbg !78
  store i16 0, i16* %dms, align 2, !dbg !79
  %3 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !80
  %dml = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %3, i32 0, i32 3, !dbg !81
  store i16 0, i16* %dml, align 2, !dbg !82
  %4 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !83
  %ap = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %4, i32 0, i32 4, !dbg !84
  store i16 0, i16* %ap, align 2, !dbg !85
  store i32 0, i32* %cnta, align 4, !dbg !86
  br label %for.cond, !dbg !88

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %cnta, align 4, !dbg !89
  %cmp = icmp slt i32 %5, 2, !dbg !93
  br i1 %cmp, label %for.body, label %for.end, !dbg !94

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %cnta, align 4, !dbg !95
  %idxprom = sext i32 %6 to i64, !dbg !97
  %7 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !97
  %a = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %7, i32 0, i32 5, !dbg !98
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %a, i32 0, i64 %idxprom, !dbg !97
  store i16 0, i16* %arrayidx, align 2, !dbg !99
  %8 = load i32, i32* %cnta, align 4, !dbg !100
  %idxprom1 = sext i32 %8 to i64, !dbg !101
  %9 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !101
  %pk = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %9, i32 0, i32 7, !dbg !102
  %arrayidx2 = getelementptr inbounds [2 x i16], [2 x i16]* %pk, i32 0, i64 %idxprom1, !dbg !101
  store i16 0, i16* %arrayidx2, align 2, !dbg !103
  %10 = load i32, i32* %cnta, align 4, !dbg !104
  %idxprom3 = sext i32 %10 to i64, !dbg !105
  %11 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !105
  %sr = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %11, i32 0, i32 9, !dbg !106
  %arrayidx4 = getelementptr inbounds [2 x i16], [2 x i16]* %sr, i32 0, i64 %idxprom3, !dbg !105
  store i16 32, i16* %arrayidx4, align 2, !dbg !107
  br label %for.inc, !dbg !108

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %cnta, align 4, !dbg !109
  %inc = add nsw i32 %12, 1, !dbg !109
  store i32 %inc, i32* %cnta, align 4, !dbg !109
  br label %for.cond, !dbg !110

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %cnta, align 4, !dbg !111
  br label %for.cond.5, !dbg !113

for.cond.5:                                       ; preds = %for.inc.12, %for.end
  %13 = load i32, i32* %cnta, align 4, !dbg !114
  %cmp6 = icmp slt i32 %13, 6, !dbg !118
  br i1 %cmp6, label %for.body.7, label %for.end.14, !dbg !119

for.body.7:                                       ; preds = %for.cond.5
  %14 = load i32, i32* %cnta, align 4, !dbg !120
  %idxprom8 = sext i32 %14 to i64, !dbg !122
  %15 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !122
  %b = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %15, i32 0, i32 6, !dbg !123
  %arrayidx9 = getelementptr inbounds [6 x i16], [6 x i16]* %b, i32 0, i64 %idxprom8, !dbg !122
  store i16 0, i16* %arrayidx9, align 2, !dbg !124
  %16 = load i32, i32* %cnta, align 4, !dbg !125
  %idxprom10 = sext i32 %16 to i64, !dbg !126
  %17 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !126
  %dq = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %17, i32 0, i32 8, !dbg !127
  %arrayidx11 = getelementptr inbounds [6 x i16], [6 x i16]* %dq, i32 0, i64 %idxprom10, !dbg !126
  store i16 32, i16* %arrayidx11, align 2, !dbg !128
  br label %for.inc.12, !dbg !129

for.inc.12:                                       ; preds = %for.body.7
  %18 = load i32, i32* %cnta, align 4, !dbg !130
  %inc13 = add nsw i32 %18, 1, !dbg !130
  store i32 %inc13, i32* %cnta, align 4, !dbg !130
  br label %for.cond.5, !dbg !131

for.end.14:                                       ; preds = %for.cond.5
  %19 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !132
  %td = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %19, i32 0, i32 10, !dbg !133
  store i8 0, i8* %td, align 1, !dbg !134
  ret void, !dbg !135
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @predictor_zero(%struct.g72x_state* %state_ptr) #0 {
entry:
  %state_ptr.addr = alloca %struct.g72x_state*, align 8
  %i = alloca i32, align 4
  %sezi = alloca i32, align 4
  store %struct.g72x_state* %state_ptr, %struct.g72x_state** %state_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.g72x_state** %state_ptr.addr, metadata !136, metadata !67), !dbg !137
  call void @llvm.dbg.declare(metadata i32* %i, metadata !138, metadata !67), !dbg !139
  call void @llvm.dbg.declare(metadata i32* %sezi, metadata !140, metadata !67), !dbg !141
  %0 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !142
  %b = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %0, i32 0, i32 6, !dbg !143
  %arrayidx = getelementptr inbounds [6 x i16], [6 x i16]* %b, i32 0, i64 0, !dbg !142
  %1 = load i16, i16* %arrayidx, align 2, !dbg !142
  %conv = sext i16 %1 to i32, !dbg !142
  %shr = ashr i32 %conv, 2, !dbg !144
  %2 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !145
  %dq = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %2, i32 0, i32 8, !dbg !146
  %arrayidx1 = getelementptr inbounds [6 x i16], [6 x i16]* %dq, i32 0, i64 0, !dbg !145
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !145
  %conv2 = sext i16 %3 to i32, !dbg !145
  %call = call i32 @fmult(i32 %shr, i32 %conv2), !dbg !147
  store i32 %call, i32* %sezi, align 4, !dbg !148
  store i32 1, i32* %i, align 4, !dbg !149
  br label %for.cond, !dbg !151

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !152
  %cmp = icmp slt i32 %4, 6, !dbg !156
  br i1 %cmp, label %for.body, label %for.end, !dbg !157

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !158
  %idxprom = sext i32 %5 to i64, !dbg !159
  %6 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !159
  %b4 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %6, i32 0, i32 6, !dbg !160
  %arrayidx5 = getelementptr inbounds [6 x i16], [6 x i16]* %b4, i32 0, i64 %idxprom, !dbg !159
  %7 = load i16, i16* %arrayidx5, align 2, !dbg !159
  %conv6 = sext i16 %7 to i32, !dbg !159
  %shr7 = ashr i32 %conv6, 2, !dbg !161
  %8 = load i32, i32* %i, align 4, !dbg !162
  %idxprom8 = sext i32 %8 to i64, !dbg !163
  %9 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !163
  %dq9 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %9, i32 0, i32 8, !dbg !164
  %arrayidx10 = getelementptr inbounds [6 x i16], [6 x i16]* %dq9, i32 0, i64 %idxprom8, !dbg !163
  %10 = load i16, i16* %arrayidx10, align 2, !dbg !163
  %conv11 = sext i16 %10 to i32, !dbg !163
  %call12 = call i32 @fmult(i32 %shr7, i32 %conv11), !dbg !165
  %11 = load i32, i32* %sezi, align 4, !dbg !166
  %add = add nsw i32 %11, %call12, !dbg !166
  store i32 %add, i32* %sezi, align 4, !dbg !166
  br label %for.inc, !dbg !167

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !168
  %inc = add nsw i32 %12, 1, !dbg !168
  store i32 %inc, i32* %i, align 4, !dbg !168
  br label %for.cond, !dbg !169

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %sezi, align 4, !dbg !170
  ret i32 %13, !dbg !171
}

; Function Attrs: nounwind uwtable
define internal i32 @fmult(i32 %an, i32 %srn) #0 {
entry:
  %an.addr = alloca i32, align 4
  %srn.addr = alloca i32, align 4
  %anmag = alloca i16, align 2
  %anexp = alloca i16, align 2
  %anmant = alloca i16, align 2
  %wanexp = alloca i16, align 2
  %wanmag = alloca i16, align 2
  %wanmant = alloca i16, align 2
  %retval1 = alloca i16, align 2
  store i32 %an, i32* %an.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %an.addr, metadata !172, metadata !67), !dbg !173
  store i32 %srn, i32* %srn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srn.addr, metadata !174, metadata !67), !dbg !175
  call void @llvm.dbg.declare(metadata i16* %anmag, metadata !176, metadata !67), !dbg !177
  call void @llvm.dbg.declare(metadata i16* %anexp, metadata !178, metadata !67), !dbg !179
  call void @llvm.dbg.declare(metadata i16* %anmant, metadata !180, metadata !67), !dbg !181
  call void @llvm.dbg.declare(metadata i16* %wanexp, metadata !182, metadata !67), !dbg !183
  call void @llvm.dbg.declare(metadata i16* %wanmag, metadata !184, metadata !67), !dbg !185
  call void @llvm.dbg.declare(metadata i16* %wanmant, metadata !186, metadata !67), !dbg !187
  call void @llvm.dbg.declare(metadata i16* %retval1, metadata !188, metadata !67), !dbg !189
  %0 = load i32, i32* %an.addr, align 4, !dbg !190
  %cmp = icmp sgt i32 %0, 0, !dbg !191
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !192

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %an.addr, align 4, !dbg !193
  br label %cond.end, !dbg !192

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %an.addr, align 4, !dbg !195
  %sub = sub nsw i32 0, %2, !dbg !197
  %and = and i32 %sub, 8191, !dbg !198
  br label %cond.end, !dbg !192

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %and, %cond.false ], !dbg !192
  %conv = trunc i32 %cond to i16, !dbg !199
  store i16 %conv, i16* %anmag, align 2, !dbg !202
  %3 = load i16, i16* %anmag, align 2, !dbg !203
  %conv2 = sext i16 %3 to i32, !dbg !203
  %call = call i32 @quan(i32 %conv2, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @power2, i32 0, i32 0), i32 15), !dbg !204
  %sub3 = sub nsw i32 %call, 6, !dbg !205
  %conv4 = trunc i32 %sub3 to i16, !dbg !204
  store i16 %conv4, i16* %anexp, align 2, !dbg !206
  %4 = load i16, i16* %anmag, align 2, !dbg !207
  %conv5 = sext i16 %4 to i32, !dbg !207
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !208
  br i1 %cmp6, label %cond.true.8, label %cond.false.9, !dbg !209

cond.true.8:                                      ; preds = %cond.end
  br label %cond.end.22, !dbg !210

cond.false.9:                                     ; preds = %cond.end
  %5 = load i16, i16* %anexp, align 2, !dbg !211
  %conv10 = sext i16 %5 to i32, !dbg !211
  %cmp11 = icmp sge i32 %conv10, 0, !dbg !212
  br i1 %cmp11, label %cond.true.13, label %cond.false.16, !dbg !213

cond.true.13:                                     ; preds = %cond.false.9
  %6 = load i16, i16* %anmag, align 2, !dbg !214
  %conv14 = sext i16 %6 to i32, !dbg !214
  %7 = load i16, i16* %anexp, align 2, !dbg !216
  %conv15 = sext i16 %7 to i32, !dbg !216
  %shr = ashr i32 %conv14, %conv15, !dbg !217
  br label %cond.end.20, !dbg !213

cond.false.16:                                    ; preds = %cond.false.9
  %8 = load i16, i16* %anmag, align 2, !dbg !218
  %conv17 = sext i16 %8 to i32, !dbg !218
  %9 = load i16, i16* %anexp, align 2, !dbg !220
  %conv18 = sext i16 %9 to i32, !dbg !220
  %sub19 = sub nsw i32 0, %conv18, !dbg !221
  %shl = shl i32 %conv17, %sub19, !dbg !222
  br label %cond.end.20, !dbg !213

cond.end.20:                                      ; preds = %cond.false.16, %cond.true.13
  %cond21 = phi i32 [ %shr, %cond.true.13 ], [ %shl, %cond.false.16 ], !dbg !213
  br label %cond.end.22, !dbg !223

cond.end.22:                                      ; preds = %cond.end.20, %cond.true.8
  %cond23 = phi i32 [ 32, %cond.true.8 ], [ %cond21, %cond.end.20 ], !dbg !209
  %conv24 = trunc i32 %cond23 to i16, !dbg !226
  store i16 %conv24, i16* %anmant, align 2, !dbg !228
  %10 = load i16, i16* %anexp, align 2, !dbg !229
  %conv25 = sext i16 %10 to i32, !dbg !229
  %11 = load i32, i32* %srn.addr, align 4, !dbg !230
  %shr26 = ashr i32 %11, 6, !dbg !231
  %and27 = and i32 %shr26, 15, !dbg !232
  %add = add nsw i32 %conv25, %and27, !dbg !233
  %sub28 = sub nsw i32 %add, 13, !dbg !234
  %conv29 = trunc i32 %sub28 to i16, !dbg !229
  store i16 %conv29, i16* %wanexp, align 2, !dbg !235
  %12 = load i16, i16* %anmant, align 2, !dbg !236
  %conv30 = sext i16 %12 to i32, !dbg !236
  %13 = load i32, i32* %srn.addr, align 4, !dbg !237
  %and31 = and i32 %13, 63, !dbg !238
  %mul = mul nsw i32 %conv30, %and31, !dbg !239
  %add32 = add nsw i32 %mul, 48, !dbg !240
  %shr33 = ashr i32 %add32, 4, !dbg !241
  %conv34 = trunc i32 %shr33 to i16, !dbg !242
  store i16 %conv34, i16* %wanmant, align 2, !dbg !243
  %14 = load i16, i16* %wanexp, align 2, !dbg !244
  %conv35 = sext i16 %14 to i32, !dbg !244
  %cmp36 = icmp sge i32 %conv35, 0, !dbg !245
  br i1 %cmp36, label %cond.true.38, label %cond.false.43, !dbg !246

cond.true.38:                                     ; preds = %cond.end.22
  %15 = load i16, i16* %wanmant, align 2, !dbg !247
  %conv39 = sext i16 %15 to i32, !dbg !247
  %16 = load i16, i16* %wanexp, align 2, !dbg !248
  %conv40 = sext i16 %16 to i32, !dbg !248
  %shl41 = shl i32 %conv39, %conv40, !dbg !249
  %and42 = and i32 %shl41, 32767, !dbg !250
  br label %cond.end.48, !dbg !246

cond.false.43:                                    ; preds = %cond.end.22
  %17 = load i16, i16* %wanmant, align 2, !dbg !251
  %conv44 = sext i16 %17 to i32, !dbg !251
  %18 = load i16, i16* %wanexp, align 2, !dbg !252
  %conv45 = sext i16 %18 to i32, !dbg !252
  %sub46 = sub nsw i32 0, %conv45, !dbg !253
  %shr47 = ashr i32 %conv44, %sub46, !dbg !254
  br label %cond.end.48, !dbg !246

cond.end.48:                                      ; preds = %cond.false.43, %cond.true.38
  %cond49 = phi i32 [ %and42, %cond.true.38 ], [ %shr47, %cond.false.43 ], !dbg !246
  %conv50 = trunc i32 %cond49 to i16, !dbg !255
  store i16 %conv50, i16* %retval1, align 2, !dbg !256
  %19 = load i32, i32* %an.addr, align 4, !dbg !257
  %20 = load i32, i32* %srn.addr, align 4, !dbg !258
  %xor = xor i32 %19, %20, !dbg !259
  %cmp51 = icmp slt i32 %xor, 0, !dbg !260
  br i1 %cmp51, label %cond.true.53, label %cond.false.56, !dbg !261

cond.true.53:                                     ; preds = %cond.end.48
  %21 = load i16, i16* %retval1, align 2, !dbg !262
  %conv54 = sext i16 %21 to i32, !dbg !262
  %sub55 = sub nsw i32 0, %conv54, !dbg !263
  br label %cond.end.58, !dbg !261

cond.false.56:                                    ; preds = %cond.end.48
  %22 = load i16, i16* %retval1, align 2, !dbg !264
  %conv57 = sext i16 %22 to i32, !dbg !264
  br label %cond.end.58, !dbg !261

cond.end.58:                                      ; preds = %cond.false.56, %cond.true.53
  %cond59 = phi i32 [ %sub55, %cond.true.53 ], [ %conv57, %cond.false.56 ], !dbg !261
  ret i32 %cond59, !dbg !265
}

; Function Attrs: nounwind uwtable
define i32 @predictor_pole(%struct.g72x_state* %state_ptr) #0 {
entry:
  %state_ptr.addr = alloca %struct.g72x_state*, align 8
  store %struct.g72x_state* %state_ptr, %struct.g72x_state** %state_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.g72x_state** %state_ptr.addr, metadata !266, metadata !67), !dbg !267
  %0 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !268
  %a = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %0, i32 0, i32 5, !dbg !269
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %a, i32 0, i64 1, !dbg !268
  %1 = load i16, i16* %arrayidx, align 2, !dbg !268
  %conv = sext i16 %1 to i32, !dbg !268
  %shr = ashr i32 %conv, 2, !dbg !270
  %2 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !271
  %sr = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %2, i32 0, i32 9, !dbg !272
  %arrayidx1 = getelementptr inbounds [2 x i16], [2 x i16]* %sr, i32 0, i64 1, !dbg !271
  %3 = load i16, i16* %arrayidx1, align 2, !dbg !271
  %conv2 = sext i16 %3 to i32, !dbg !271
  %call = call i32 @fmult(i32 %shr, i32 %conv2), !dbg !273
  %4 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !274
  %a3 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %4, i32 0, i32 5, !dbg !275
  %arrayidx4 = getelementptr inbounds [2 x i16], [2 x i16]* %a3, i32 0, i64 0, !dbg !274
  %5 = load i16, i16* %arrayidx4, align 2, !dbg !274
  %conv5 = sext i16 %5 to i32, !dbg !274
  %shr6 = ashr i32 %conv5, 2, !dbg !276
  %6 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !277
  %sr7 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %6, i32 0, i32 9, !dbg !278
  %arrayidx8 = getelementptr inbounds [2 x i16], [2 x i16]* %sr7, i32 0, i64 0, !dbg !277
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !277
  %conv9 = sext i16 %7 to i32, !dbg !277
  %call10 = call i32 @fmult(i32 %shr6, i32 %conv9), !dbg !279
  %add = add nsw i32 %call, %call10, !dbg !280
  ret i32 %add, !dbg !281
}

; Function Attrs: nounwind uwtable
define i32 @step_size(%struct.g72x_state* %state_ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %state_ptr.addr = alloca %struct.g72x_state*, align 8
  %y = alloca i32, align 4
  %dif = alloca i32, align 4
  %al = alloca i32, align 4
  store %struct.g72x_state* %state_ptr, %struct.g72x_state** %state_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.g72x_state** %state_ptr.addr, metadata !282, metadata !67), !dbg !283
  call void @llvm.dbg.declare(metadata i32* %y, metadata !284, metadata !67), !dbg !285
  call void @llvm.dbg.declare(metadata i32* %dif, metadata !286, metadata !67), !dbg !287
  call void @llvm.dbg.declare(metadata i32* %al, metadata !288, metadata !67), !dbg !289
  %0 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !290
  %ap = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %0, i32 0, i32 4, !dbg !292
  %1 = load i16, i16* %ap, align 2, !dbg !292
  %conv = sext i16 %1 to i32, !dbg !290
  %cmp = icmp sge i32 %conv, 256, !dbg !293
  br i1 %cmp, label %if.then, label %if.else, !dbg !294

if.then:                                          ; preds = %entry
  %2 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !295
  %yu = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %2, i32 0, i32 1, !dbg !296
  %3 = load i16, i16* %yu, align 2, !dbg !296
  %conv2 = sext i16 %3 to i32, !dbg !297
  store i32 %conv2, i32* %retval, !dbg !298
  br label %return, !dbg !298

if.else:                                          ; preds = %entry
  %4 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !299
  %yl = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %4, i32 0, i32 0, !dbg !301
  %5 = load i64, i64* %yl, align 8, !dbg !301
  %shr = ashr i64 %5, 6, !dbg !302
  %conv3 = trunc i64 %shr to i32, !dbg !299
  store i32 %conv3, i32* %y, align 4, !dbg !303
  %6 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !304
  %yu4 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %6, i32 0, i32 1, !dbg !305
  %7 = load i16, i16* %yu4, align 2, !dbg !305
  %conv5 = sext i16 %7 to i32, !dbg !304
  %8 = load i32, i32* %y, align 4, !dbg !306
  %sub = sub nsw i32 %conv5, %8, !dbg !307
  store i32 %sub, i32* %dif, align 4, !dbg !308
  %9 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !309
  %ap6 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %9, i32 0, i32 4, !dbg !310
  %10 = load i16, i16* %ap6, align 2, !dbg !310
  %conv7 = sext i16 %10 to i32, !dbg !309
  %shr8 = ashr i32 %conv7, 2, !dbg !311
  store i32 %shr8, i32* %al, align 4, !dbg !312
  %11 = load i32, i32* %dif, align 4, !dbg !313
  %cmp9 = icmp sgt i32 %11, 0, !dbg !315
  br i1 %cmp9, label %if.then.11, label %if.else.13, !dbg !316

if.then.11:                                       ; preds = %if.else
  %12 = load i32, i32* %dif, align 4, !dbg !317
  %13 = load i32, i32* %al, align 4, !dbg !318
  %mul = mul nsw i32 %12, %13, !dbg !319
  %shr12 = ashr i32 %mul, 6, !dbg !320
  %14 = load i32, i32* %y, align 4, !dbg !321
  %add = add nsw i32 %14, %shr12, !dbg !321
  store i32 %add, i32* %y, align 4, !dbg !321
  br label %if.end.21, !dbg !322

if.else.13:                                       ; preds = %if.else
  %15 = load i32, i32* %dif, align 4, !dbg !323
  %cmp14 = icmp slt i32 %15, 0, !dbg !325
  br i1 %cmp14, label %if.then.16, label %if.end, !dbg !326

if.then.16:                                       ; preds = %if.else.13
  %16 = load i32, i32* %dif, align 4, !dbg !327
  %17 = load i32, i32* %al, align 4, !dbg !328
  %mul17 = mul nsw i32 %16, %17, !dbg !329
  %add18 = add nsw i32 %mul17, 63, !dbg !330
  %shr19 = ashr i32 %add18, 6, !dbg !331
  %18 = load i32, i32* %y, align 4, !dbg !332
  %add20 = add nsw i32 %18, %shr19, !dbg !332
  store i32 %add20, i32* %y, align 4, !dbg !332
  br label %if.end, !dbg !333

if.end:                                           ; preds = %if.then.16, %if.else.13
  br label %if.end.21

if.end.21:                                        ; preds = %if.end, %if.then.11
  %19 = load i32, i32* %y, align 4, !dbg !334
  store i32 %19, i32* %retval, !dbg !335
  br label %return, !dbg !335

return:                                           ; preds = %if.end.21, %if.then
  %20 = load i32, i32* %retval, !dbg !336
  ret i32 %20, !dbg !336
}

; Function Attrs: nounwind uwtable
define i32 @quantize(i32 %d, i32 %y, i16* %table, i32 %size) #0 {
entry:
  %retval = alloca i32, align 4
  %d.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %table.addr = alloca i16*, align 8
  %size.addr = alloca i32, align 4
  %dqm = alloca i16, align 2
  %exp = alloca i16, align 2
  %mant = alloca i16, align 2
  %dl = alloca i16, align 2
  %dln = alloca i16, align 2
  %i = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %d.addr, metadata !337, metadata !67), !dbg !338
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !339, metadata !67), !dbg !340
  store i16* %table, i16** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %table.addr, metadata !341, metadata !67), !dbg !342
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !343, metadata !67), !dbg !344
  call void @llvm.dbg.declare(metadata i16* %dqm, metadata !345, metadata !67), !dbg !346
  call void @llvm.dbg.declare(metadata i16* %exp, metadata !347, metadata !67), !dbg !348
  call void @llvm.dbg.declare(metadata i16* %mant, metadata !349, metadata !67), !dbg !350
  call void @llvm.dbg.declare(metadata i16* %dl, metadata !351, metadata !67), !dbg !352
  call void @llvm.dbg.declare(metadata i16* %dln, metadata !353, metadata !67), !dbg !354
  call void @llvm.dbg.declare(metadata i32* %i, metadata !355, metadata !67), !dbg !356
  %0 = load i32, i32* %d.addr, align 4, !dbg !357
  %call = call i32 @abs(i32 %0) #1, !dbg !358
  %conv = trunc i32 %call to i16, !dbg !358
  store i16 %conv, i16* %dqm, align 2, !dbg !359
  %1 = load i16, i16* %dqm, align 2, !dbg !360
  %conv1 = sext i16 %1 to i32, !dbg !360
  %shr = ashr i32 %conv1, 1, !dbg !361
  %call2 = call i32 @quan(i32 %shr, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @power2, i32 0, i32 0), i32 15), !dbg !362
  %conv3 = trunc i32 %call2 to i16, !dbg !362
  store i16 %conv3, i16* %exp, align 2, !dbg !363
  %2 = load i16, i16* %dqm, align 2, !dbg !364
  %conv4 = sext i16 %2 to i32, !dbg !364
  %shl = shl i32 %conv4, 7, !dbg !365
  %3 = load i16, i16* %exp, align 2, !dbg !366
  %conv5 = sext i16 %3 to i32, !dbg !366
  %shr6 = ashr i32 %shl, %conv5, !dbg !367
  %and = and i32 %shr6, 127, !dbg !368
  %conv7 = trunc i32 %and to i16, !dbg !369
  store i16 %conv7, i16* %mant, align 2, !dbg !370
  %4 = load i16, i16* %exp, align 2, !dbg !371
  %conv8 = sext i16 %4 to i32, !dbg !371
  %shl9 = shl i32 %conv8, 7, !dbg !372
  %5 = load i16, i16* %mant, align 2, !dbg !373
  %conv10 = sext i16 %5 to i32, !dbg !373
  %add = add nsw i32 %shl9, %conv10, !dbg !374
  %conv11 = trunc i32 %add to i16, !dbg !375
  store i16 %conv11, i16* %dl, align 2, !dbg !376
  %6 = load i16, i16* %dl, align 2, !dbg !377
  %conv12 = sext i16 %6 to i32, !dbg !377
  %7 = load i32, i32* %y.addr, align 4, !dbg !378
  %shr13 = ashr i32 %7, 2, !dbg !379
  %sub = sub nsw i32 %conv12, %shr13, !dbg !380
  %conv14 = trunc i32 %sub to i16, !dbg !377
  store i16 %conv14, i16* %dln, align 2, !dbg !381
  %8 = load i16, i16* %dln, align 2, !dbg !382
  %conv15 = sext i16 %8 to i32, !dbg !382
  %9 = load i16*, i16** %table.addr, align 8, !dbg !383
  %10 = load i32, i32* %size.addr, align 4, !dbg !384
  %call16 = call i32 @quan(i32 %conv15, i16* %9, i32 %10), !dbg !385
  store i32 %call16, i32* %i, align 4, !dbg !386
  %11 = load i32, i32* %d.addr, align 4, !dbg !387
  %cmp = icmp slt i32 %11, 0, !dbg !389
  br i1 %cmp, label %if.then, label %if.else, !dbg !390

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %size.addr, align 4, !dbg !391
  %shl18 = shl i32 %12, 1, !dbg !392
  %add19 = add nsw i32 %shl18, 1, !dbg !393
  %13 = load i32, i32* %i, align 4, !dbg !394
  %sub20 = sub nsw i32 %add19, %13, !dbg !395
  store i32 %sub20, i32* %retval, !dbg !396
  br label %return, !dbg !396

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %i, align 4, !dbg !397
  %cmp21 = icmp eq i32 %14, 0, !dbg !399
  br i1 %cmp21, label %if.then.23, label %if.else.26, !dbg !400

if.then.23:                                       ; preds = %if.else
  %15 = load i32, i32* %size.addr, align 4, !dbg !401
  %shl24 = shl i32 %15, 1, !dbg !402
  %add25 = add nsw i32 %shl24, 1, !dbg !403
  store i32 %add25, i32* %retval, !dbg !404
  br label %return, !dbg !404

if.else.26:                                       ; preds = %if.else
  %16 = load i32, i32* %i, align 4, !dbg !405
  store i32 %16, i32* %retval, !dbg !406
  br label %return, !dbg !406

return:                                           ; preds = %if.else.26, %if.then.23, %if.then
  %17 = load i32, i32* %retval, !dbg !407
  ret i32 %17, !dbg !407
}

; Function Attrs: nounwind readnone
declare i32 @abs(i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @quan(i32 %val, i16* %table, i32 %size) #0 {
entry:
  %val.addr = alloca i32, align 4
  %table.addr = alloca i16*, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !408, metadata !67), !dbg !409
  store i16* %table, i16** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %table.addr, metadata !410, metadata !67), !dbg !411
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !412, metadata !67), !dbg !413
  call void @llvm.dbg.declare(metadata i32* %i, metadata !414, metadata !67), !dbg !415
  store i32 0, i32* %i, align 4, !dbg !416
  br label %for.cond, !dbg !418

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !419
  %1 = load i32, i32* %size.addr, align 4, !dbg !423
  %cmp = icmp slt i32 %0, %1, !dbg !424
  br i1 %cmp, label %for.body, label %for.end, !dbg !425

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %val.addr, align 4, !dbg !426
  %3 = load i16*, i16** %table.addr, align 8, !dbg !428
  %incdec.ptr = getelementptr inbounds i16, i16* %3, i32 1, !dbg !428
  store i16* %incdec.ptr, i16** %table.addr, align 8, !dbg !428
  %4 = load i16, i16* %3, align 2, !dbg !429
  %conv = sext i16 %4 to i32, !dbg !429
  %cmp1 = icmp slt i32 %2, %conv, !dbg !430
  br i1 %cmp1, label %if.then, label %if.end, !dbg !431

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !432

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !433

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !435
  %inc = add nsw i32 %5, 1, !dbg !435
  store i32 %inc, i32* %i, align 4, !dbg !435
  br label %for.cond, !dbg !436

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !437
  ret i32 %6, !dbg !438
}

; Function Attrs: nounwind uwtable
define i32 @reconstruct(i32 %sign, i32 %dqln, i32 %y) #0 {
entry:
  %retval = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  %dqln.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %dql = alloca i16, align 2
  %dex = alloca i16, align 2
  %dqt = alloca i16, align 2
  %dq = alloca i16, align 2
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !439, metadata !67), !dbg !440
  store i32 %dqln, i32* %dqln.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dqln.addr, metadata !441, metadata !67), !dbg !442
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !443, metadata !67), !dbg !444
  call void @llvm.dbg.declare(metadata i16* %dql, metadata !445, metadata !67), !dbg !446
  call void @llvm.dbg.declare(metadata i16* %dex, metadata !447, metadata !67), !dbg !448
  call void @llvm.dbg.declare(metadata i16* %dqt, metadata !449, metadata !67), !dbg !450
  call void @llvm.dbg.declare(metadata i16* %dq, metadata !451, metadata !67), !dbg !452
  %0 = load i32, i32* %dqln.addr, align 4, !dbg !453
  %1 = load i32, i32* %y.addr, align 4, !dbg !454
  %shr = ashr i32 %1, 2, !dbg !455
  %add = add nsw i32 %0, %shr, !dbg !456
  %conv = trunc i32 %add to i16, !dbg !453
  store i16 %conv, i16* %dql, align 2, !dbg !457
  %2 = load i16, i16* %dql, align 2, !dbg !458
  %conv1 = sext i16 %2 to i32, !dbg !458
  %cmp = icmp slt i32 %conv1, 0, !dbg !460
  br i1 %cmp, label %if.then, label %if.else, !dbg !461

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %sign.addr, align 4, !dbg !462
  %tobool = icmp ne i32 %3, 0, !dbg !464
  %cond = select i1 %tobool, i32 -32768, i32 0, !dbg !464
  store i32 %cond, i32* %retval, !dbg !465
  br label %return, !dbg !465

if.else:                                          ; preds = %entry
  %4 = load i16, i16* %dql, align 2, !dbg !466
  %conv3 = sext i16 %4 to i32, !dbg !466
  %shr4 = ashr i32 %conv3, 7, !dbg !468
  %and = and i32 %shr4, 15, !dbg !469
  %conv5 = trunc i32 %and to i16, !dbg !470
  store i16 %conv5, i16* %dex, align 2, !dbg !471
  %5 = load i16, i16* %dql, align 2, !dbg !472
  %conv6 = sext i16 %5 to i32, !dbg !472
  %and7 = and i32 %conv6, 127, !dbg !473
  %add8 = add nsw i32 128, %and7, !dbg !474
  %conv9 = trunc i32 %add8 to i16, !dbg !475
  store i16 %conv9, i16* %dqt, align 2, !dbg !476
  %6 = load i16, i16* %dqt, align 2, !dbg !477
  %conv10 = sext i16 %6 to i32, !dbg !477
  %shl = shl i32 %conv10, 7, !dbg !478
  %7 = load i16, i16* %dex, align 2, !dbg !479
  %conv11 = sext i16 %7 to i32, !dbg !479
  %sub = sub nsw i32 14, %conv11, !dbg !480
  %shr12 = ashr i32 %shl, %sub, !dbg !481
  %conv13 = trunc i32 %shr12 to i16, !dbg !482
  store i16 %conv13, i16* %dq, align 2, !dbg !483
  %8 = load i32, i32* %sign.addr, align 4, !dbg !484
  %tobool14 = icmp ne i32 %8, 0, !dbg !485
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !485

cond.true:                                        ; preds = %if.else
  %9 = load i16, i16* %dq, align 2, !dbg !486
  %conv15 = sext i16 %9 to i32, !dbg !486
  %sub16 = sub nsw i32 %conv15, 32768, !dbg !488
  br label %cond.end, !dbg !485

cond.false:                                       ; preds = %if.else
  %10 = load i16, i16* %dq, align 2, !dbg !489
  %conv17 = sext i16 %10 to i32, !dbg !489
  br label %cond.end, !dbg !485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond18 = phi i32 [ %sub16, %cond.true ], [ %conv17, %cond.false ], !dbg !485
  store i32 %cond18, i32* %retval, !dbg !491
  br label %return, !dbg !491

return:                                           ; preds = %cond.end, %if.then
  %11 = load i32, i32* %retval, !dbg !494
  ret i32 %11, !dbg !494
}

; Function Attrs: nounwind uwtable
define void @update(i32 %code_size, i32 %y, i32 %wi, i32 %fi, i32 %dq, i32 %sr, i32 %dqsez, %struct.g72x_state* %state_ptr) #0 {
entry:
  %code_size.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %wi.addr = alloca i32, align 4
  %fi.addr = alloca i32, align 4
  %dq.addr = alloca i32, align 4
  %sr.addr = alloca i32, align 4
  %dqsez.addr = alloca i32, align 4
  %state_ptr.addr = alloca %struct.g72x_state*, align 8
  %cnt = alloca i32, align 4
  %mag = alloca i16, align 2
  %exp = alloca i16, align 2
  %mant = alloca i16, align 2
  %a2p = alloca i16, align 2
  %a1ul = alloca i16, align 2
  %ua2 = alloca i16, align 2
  %pks1 = alloca i16, align 2
  %uga2a = alloca i16, align 2
  %fa1 = alloca i16, align 2
  %uga2b = alloca i16, align 2
  %tr = alloca i8, align 1
  %ylint = alloca i16, align 2
  %thr2 = alloca i16, align 2
  %dqthr = alloca i16, align 2
  %ylfrac = alloca i16, align 2
  %thr1 = alloca i16, align 2
  %pk0 = alloca i16, align 2
  store i32 %code_size, i32* %code_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code_size.addr, metadata !495, metadata !67), !dbg !496
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !497, metadata !67), !dbg !498
  store i32 %wi, i32* %wi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wi.addr, metadata !499, metadata !67), !dbg !500
  store i32 %fi, i32* %fi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fi.addr, metadata !501, metadata !67), !dbg !502
  store i32 %dq, i32* %dq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dq.addr, metadata !503, metadata !67), !dbg !504
  store i32 %sr, i32* %sr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sr.addr, metadata !505, metadata !67), !dbg !506
  store i32 %dqsez, i32* %dqsez.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dqsez.addr, metadata !507, metadata !67), !dbg !508
  store %struct.g72x_state* %state_ptr, %struct.g72x_state** %state_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.g72x_state** %state_ptr.addr, metadata !509, metadata !67), !dbg !510
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !511, metadata !67), !dbg !512
  call void @llvm.dbg.declare(metadata i16* %mag, metadata !513, metadata !67), !dbg !514
  call void @llvm.dbg.declare(metadata i16* %exp, metadata !515, metadata !67), !dbg !516
  call void @llvm.dbg.declare(metadata i16* %mant, metadata !517, metadata !67), !dbg !518
  call void @llvm.dbg.declare(metadata i16* %a2p, metadata !519, metadata !67), !dbg !520
  call void @llvm.dbg.declare(metadata i16* %a1ul, metadata !521, metadata !67), !dbg !522
  call void @llvm.dbg.declare(metadata i16* %ua2, metadata !523, metadata !67), !dbg !524
  call void @llvm.dbg.declare(metadata i16* %pks1, metadata !525, metadata !67), !dbg !526
  call void @llvm.dbg.declare(metadata i16* %uga2a, metadata !527, metadata !67), !dbg !528
  call void @llvm.dbg.declare(metadata i16* %fa1, metadata !529, metadata !67), !dbg !530
  call void @llvm.dbg.declare(metadata i16* %uga2b, metadata !531, metadata !67), !dbg !532
  call void @llvm.dbg.declare(metadata i8* %tr, metadata !533, metadata !67), !dbg !534
  call void @llvm.dbg.declare(metadata i16* %ylint, metadata !535, metadata !67), !dbg !536
  call void @llvm.dbg.declare(metadata i16* %thr2, metadata !537, metadata !67), !dbg !538
  call void @llvm.dbg.declare(metadata i16* %dqthr, metadata !539, metadata !67), !dbg !540
  call void @llvm.dbg.declare(metadata i16* %ylfrac, metadata !541, metadata !67), !dbg !542
  call void @llvm.dbg.declare(metadata i16* %thr1, metadata !543, metadata !67), !dbg !544
  call void @llvm.dbg.declare(metadata i16* %pk0, metadata !545, metadata !67), !dbg !546
  %0 = load i32, i32* %dqsez.addr, align 4, !dbg !547
  %cmp = icmp slt i32 %0, 0, !dbg !548
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !549
  %conv = trunc i32 %cond to i16, !dbg !549
  store i16 %conv, i16* %pk0, align 2, !dbg !550
  %1 = load i32, i32* %dq.addr, align 4, !dbg !551
  %and = and i32 %1, 32767, !dbg !552
  %conv1 = trunc i32 %and to i16, !dbg !551
  store i16 %conv1, i16* %mag, align 2, !dbg !553
  %2 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !554
  %yl = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %2, i32 0, i32 0, !dbg !555
  %3 = load i64, i64* %yl, align 8, !dbg !555
  %shr = ashr i64 %3, 15, !dbg !556
  %conv2 = trunc i64 %shr to i16, !dbg !554
  store i16 %conv2, i16* %ylint, align 2, !dbg !557
  %4 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !558
  %yl3 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %4, i32 0, i32 0, !dbg !559
  %5 = load i64, i64* %yl3, align 8, !dbg !559
  %shr4 = ashr i64 %5, 10, !dbg !560
  %and5 = and i64 %shr4, 31, !dbg !561
  %conv6 = trunc i64 %and5 to i16, !dbg !562
  store i16 %conv6, i16* %ylfrac, align 2, !dbg !563
  %6 = load i16, i16* %ylfrac, align 2, !dbg !564
  %conv7 = sext i16 %6 to i32, !dbg !564
  %add = add nsw i32 32, %conv7, !dbg !565
  %7 = load i16, i16* %ylint, align 2, !dbg !566
  %conv8 = sext i16 %7 to i32, !dbg !566
  %shl = shl i32 %add, %conv8, !dbg !567
  %conv9 = trunc i32 %shl to i16, !dbg !568
  store i16 %conv9, i16* %thr1, align 2, !dbg !569
  %8 = load i16, i16* %ylint, align 2, !dbg !570
  %conv10 = sext i16 %8 to i32, !dbg !570
  %cmp11 = icmp sgt i32 %conv10, 9, !dbg !571
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !572

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !573

cond.false:                                       ; preds = %entry
  %9 = load i16, i16* %thr1, align 2, !dbg !575
  %conv13 = sext i16 %9 to i32, !dbg !575
  br label %cond.end, !dbg !572

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ 31744, %cond.true ], [ %conv13, %cond.false ], !dbg !572
  %conv15 = trunc i32 %cond14 to i16, !dbg !577
  store i16 %conv15, i16* %thr2, align 2, !dbg !580
  %10 = load i16, i16* %thr2, align 2, !dbg !581
  %conv16 = sext i16 %10 to i32, !dbg !581
  %11 = load i16, i16* %thr2, align 2, !dbg !582
  %conv17 = sext i16 %11 to i32, !dbg !582
  %shr18 = ashr i32 %conv17, 1, !dbg !583
  %add19 = add nsw i32 %conv16, %shr18, !dbg !584
  %shr20 = ashr i32 %add19, 1, !dbg !585
  %conv21 = trunc i32 %shr20 to i16, !dbg !586
  store i16 %conv21, i16* %dqthr, align 2, !dbg !587
  %12 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !588
  %td = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %12, i32 0, i32 10, !dbg !590
  %13 = load i8, i8* %td, align 1, !dbg !590
  %conv22 = sext i8 %13 to i32, !dbg !588
  %cmp23 = icmp eq i32 %conv22, 0, !dbg !591
  br i1 %cmp23, label %if.then, label %if.else, !dbg !592

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %tr, align 1, !dbg !593
  br label %if.end.31, !dbg !594

if.else:                                          ; preds = %cond.end
  %14 = load i16, i16* %mag, align 2, !dbg !595
  %conv25 = sext i16 %14 to i32, !dbg !595
  %15 = load i16, i16* %dqthr, align 2, !dbg !597
  %conv26 = sext i16 %15 to i32, !dbg !597
  %cmp27 = icmp sle i32 %conv25, %conv26, !dbg !598
  br i1 %cmp27, label %if.then.29, label %if.else.30, !dbg !599

if.then.29:                                       ; preds = %if.else
  store i8 0, i8* %tr, align 1, !dbg !600
  br label %if.end, !dbg !601

if.else.30:                                       ; preds = %if.else
  store i8 1, i8* %tr, align 1, !dbg !602
  br label %if.end

if.end:                                           ; preds = %if.else.30, %if.then.29
  br label %if.end.31

if.end.31:                                        ; preds = %if.end, %if.then
  %16 = load i32, i32* %y.addr, align 4, !dbg !603
  %17 = load i32, i32* %wi.addr, align 4, !dbg !604
  %18 = load i32, i32* %y.addr, align 4, !dbg !605
  %sub = sub nsw i32 %17, %18, !dbg !606
  %shr32 = ashr i32 %sub, 5, !dbg !607
  %add33 = add nsw i32 %16, %shr32, !dbg !608
  %conv34 = trunc i32 %add33 to i16, !dbg !603
  %19 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !609
  %yu = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %19, i32 0, i32 1, !dbg !610
  store i16 %conv34, i16* %yu, align 2, !dbg !611
  %20 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !612
  %yu35 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %20, i32 0, i32 1, !dbg !614
  %21 = load i16, i16* %yu35, align 2, !dbg !614
  %conv36 = sext i16 %21 to i32, !dbg !612
  %cmp37 = icmp slt i32 %conv36, 544, !dbg !615
  br i1 %cmp37, label %if.then.39, label %if.else.41, !dbg !616

if.then.39:                                       ; preds = %if.end.31
  %22 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !617
  %yu40 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %22, i32 0, i32 1, !dbg !618
  store i16 544, i16* %yu40, align 2, !dbg !619
  br label %if.end.49, !dbg !617

if.else.41:                                       ; preds = %if.end.31
  %23 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !620
  %yu42 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %23, i32 0, i32 1, !dbg !622
  %24 = load i16, i16* %yu42, align 2, !dbg !622
  %conv43 = sext i16 %24 to i32, !dbg !620
  %cmp44 = icmp sgt i32 %conv43, 5120, !dbg !623
  br i1 %cmp44, label %if.then.46, label %if.end.48, !dbg !624

if.then.46:                                       ; preds = %if.else.41
  %25 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !625
  %yu47 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %25, i32 0, i32 1, !dbg !626
  store i16 5120, i16* %yu47, align 2, !dbg !627
  br label %if.end.48, !dbg !625

if.end.48:                                        ; preds = %if.then.46, %if.else.41
  br label %if.end.49

if.end.49:                                        ; preds = %if.end.48, %if.then.39
  %26 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !628
  %yu50 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %26, i32 0, i32 1, !dbg !629
  %27 = load i16, i16* %yu50, align 2, !dbg !629
  %conv51 = sext i16 %27 to i64, !dbg !628
  %28 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !630
  %yl52 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %28, i32 0, i32 0, !dbg !631
  %29 = load i64, i64* %yl52, align 8, !dbg !631
  %sub53 = sub nsw i64 0, %29, !dbg !632
  %shr54 = ashr i64 %sub53, 6, !dbg !633
  %add55 = add nsw i64 %conv51, %shr54, !dbg !634
  %30 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !635
  %yl56 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %30, i32 0, i32 0, !dbg !636
  %31 = load i64, i64* %yl56, align 8, !dbg !637
  %add57 = add nsw i64 %31, %add55, !dbg !637
  store i64 %add57, i64* %yl56, align 8, !dbg !637
  %32 = load i8, i8* %tr, align 1, !dbg !638
  %conv58 = sext i8 %32 to i32, !dbg !638
  %cmp59 = icmp eq i32 %conv58, 1, !dbg !640
  br i1 %cmp59, label %if.then.61, label %if.else.75, !dbg !641

if.then.61:                                       ; preds = %if.end.49
  %33 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !642
  %a = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %33, i32 0, i32 5, !dbg !644
  %arrayidx = getelementptr inbounds [2 x i16], [2 x i16]* %a, i32 0, i64 0, !dbg !642
  store i16 0, i16* %arrayidx, align 2, !dbg !645
  %34 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !646
  %a62 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %34, i32 0, i32 5, !dbg !647
  %arrayidx63 = getelementptr inbounds [2 x i16], [2 x i16]* %a62, i32 0, i64 1, !dbg !646
  store i16 0, i16* %arrayidx63, align 2, !dbg !648
  %35 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !649
  %b = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %35, i32 0, i32 6, !dbg !650
  %arrayidx64 = getelementptr inbounds [6 x i16], [6 x i16]* %b, i32 0, i64 0, !dbg !649
  store i16 0, i16* %arrayidx64, align 2, !dbg !651
  %36 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !652
  %b65 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %36, i32 0, i32 6, !dbg !653
  %arrayidx66 = getelementptr inbounds [6 x i16], [6 x i16]* %b65, i32 0, i64 1, !dbg !652
  store i16 0, i16* %arrayidx66, align 2, !dbg !654
  %37 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !655
  %b67 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %37, i32 0, i32 6, !dbg !656
  %arrayidx68 = getelementptr inbounds [6 x i16], [6 x i16]* %b67, i32 0, i64 2, !dbg !655
  store i16 0, i16* %arrayidx68, align 2, !dbg !657
  %38 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !658
  %b69 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %38, i32 0, i32 6, !dbg !659
  %arrayidx70 = getelementptr inbounds [6 x i16], [6 x i16]* %b69, i32 0, i64 3, !dbg !658
  store i16 0, i16* %arrayidx70, align 2, !dbg !660
  %39 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !661
  %b71 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %39, i32 0, i32 6, !dbg !662
  %arrayidx72 = getelementptr inbounds [6 x i16], [6 x i16]* %b71, i32 0, i64 4, !dbg !661
  store i16 0, i16* %arrayidx72, align 2, !dbg !663
  %40 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !664
  %b73 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %40, i32 0, i32 6, !dbg !665
  %arrayidx74 = getelementptr inbounds [6 x i16], [6 x i16]* %b73, i32 0, i64 5, !dbg !664
  store i16 0, i16* %arrayidx74, align 2, !dbg !666
  br label %if.end.281, !dbg !667

if.else.75:                                       ; preds = %if.end.49
  %41 = load i16, i16* %pk0, align 2, !dbg !668
  %conv76 = sext i16 %41 to i32, !dbg !668
  %42 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !670
  %pk = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %42, i32 0, i32 7, !dbg !671
  %arrayidx77 = getelementptr inbounds [2 x i16], [2 x i16]* %pk, i32 0, i64 0, !dbg !670
  %43 = load i16, i16* %arrayidx77, align 2, !dbg !670
  %conv78 = sext i16 %43 to i32, !dbg !670
  %xor = xor i32 %conv76, %conv78, !dbg !672
  %conv79 = trunc i32 %xor to i16, !dbg !668
  store i16 %conv79, i16* %pks1, align 2, !dbg !673
  %44 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !674
  %a80 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %44, i32 0, i32 5, !dbg !675
  %arrayidx81 = getelementptr inbounds [2 x i16], [2 x i16]* %a80, i32 0, i64 1, !dbg !674
  %45 = load i16, i16* %arrayidx81, align 2, !dbg !674
  %conv82 = sext i16 %45 to i32, !dbg !674
  %46 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !676
  %a83 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %46, i32 0, i32 5, !dbg !677
  %arrayidx84 = getelementptr inbounds [2 x i16], [2 x i16]* %a83, i32 0, i64 1, !dbg !676
  %47 = load i16, i16* %arrayidx84, align 2, !dbg !676
  %conv85 = sext i16 %47 to i32, !dbg !676
  %shr86 = ashr i32 %conv85, 7, !dbg !678
  %sub87 = sub nsw i32 %conv82, %shr86, !dbg !679
  %conv88 = trunc i32 %sub87 to i16, !dbg !674
  store i16 %conv88, i16* %a2p, align 2, !dbg !680
  %48 = load i32, i32* %dqsez.addr, align 4, !dbg !681
  %cmp89 = icmp ne i32 %48, 0, !dbg !683
  br i1 %cmp89, label %if.then.91, label %if.end.167, !dbg !684

if.then.91:                                       ; preds = %if.else.75
  %49 = load i16, i16* %pks1, align 2, !dbg !685
  %conv92 = sext i16 %49 to i32, !dbg !687
  %tobool = icmp ne i32 %conv92, 0, !dbg !687
  br i1 %tobool, label %cond.true.93, label %cond.false.97, !dbg !687

cond.true.93:                                     ; preds = %if.then.91
  %50 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !688
  %a94 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %50, i32 0, i32 5, !dbg !690
  %arrayidx95 = getelementptr inbounds [2 x i16], [2 x i16]* %a94, i32 0, i64 0, !dbg !691
  %51 = load i16, i16* %arrayidx95, align 2, !dbg !691
  %conv96 = sext i16 %51 to i32, !dbg !691
  br label %cond.end.102, !dbg !687

cond.false.97:                                    ; preds = %if.then.91
  %52 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !692
  %a98 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %52, i32 0, i32 5, !dbg !694
  %arrayidx99 = getelementptr inbounds [2 x i16], [2 x i16]* %a98, i32 0, i64 0, !dbg !695
  %53 = load i16, i16* %arrayidx99, align 2, !dbg !695
  %conv100 = sext i16 %53 to i32, !dbg !695
  %sub101 = sub nsw i32 0, %conv100, !dbg !696
  br label %cond.end.102, !dbg !687

cond.end.102:                                     ; preds = %cond.false.97, %cond.true.93
  %cond103 = phi i32 [ %conv96, %cond.true.93 ], [ %sub101, %cond.false.97 ], !dbg !687
  %conv104 = trunc i32 %cond103 to i16, !dbg !697
  store i16 %conv104, i16* %fa1, align 2, !dbg !700
  %54 = load i16, i16* %fa1, align 2, !dbg !701
  %conv105 = sext i16 %54 to i32, !dbg !701
  %cmp106 = icmp slt i32 %conv105, -8191, !dbg !703
  br i1 %cmp106, label %if.then.108, label %if.else.112, !dbg !704

if.then.108:                                      ; preds = %cond.end.102
  %55 = load i16, i16* %a2p, align 2, !dbg !705
  %conv109 = sext i16 %55 to i32, !dbg !705
  %sub110 = sub nsw i32 %conv109, 256, !dbg !705
  %conv111 = trunc i32 %sub110 to i16, !dbg !705
  store i16 %conv111, i16* %a2p, align 2, !dbg !705
  br label %if.end.127, !dbg !706

if.else.112:                                      ; preds = %cond.end.102
  %56 = load i16, i16* %fa1, align 2, !dbg !707
  %conv113 = sext i16 %56 to i32, !dbg !707
  %cmp114 = icmp sgt i32 %conv113, 8191, !dbg !709
  br i1 %cmp114, label %if.then.116, label %if.else.120, !dbg !710

if.then.116:                                      ; preds = %if.else.112
  %57 = load i16, i16* %a2p, align 2, !dbg !711
  %conv117 = sext i16 %57 to i32, !dbg !711
  %add118 = add nsw i32 %conv117, 255, !dbg !711
  %conv119 = trunc i32 %add118 to i16, !dbg !711
  store i16 %conv119, i16* %a2p, align 2, !dbg !711
  br label %if.end.126, !dbg !712

if.else.120:                                      ; preds = %if.else.112
  %58 = load i16, i16* %fa1, align 2, !dbg !713
  %conv121 = sext i16 %58 to i32, !dbg !713
  %shr122 = ashr i32 %conv121, 5, !dbg !714
  %59 = load i16, i16* %a2p, align 2, !dbg !715
  %conv123 = sext i16 %59 to i32, !dbg !715
  %add124 = add nsw i32 %conv123, %shr122, !dbg !715
  %conv125 = trunc i32 %add124 to i16, !dbg !715
  store i16 %conv125, i16* %a2p, align 2, !dbg !715
  br label %if.end.126

if.end.126:                                       ; preds = %if.else.120, %if.then.116
  br label %if.end.127

if.end.127:                                       ; preds = %if.end.126, %if.then.108
  %60 = load i16, i16* %pk0, align 2, !dbg !716
  %conv128 = sext i16 %60 to i32, !dbg !716
  %61 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !718
  %pk129 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %61, i32 0, i32 7, !dbg !719
  %arrayidx130 = getelementptr inbounds [2 x i16], [2 x i16]* %pk129, i32 0, i64 1, !dbg !718
  %62 = load i16, i16* %arrayidx130, align 2, !dbg !718
  %conv131 = sext i16 %62 to i32, !dbg !718
  %xor132 = xor i32 %conv128, %conv131, !dbg !720
  %tobool133 = icmp ne i32 %xor132, 0, !dbg !720
  br i1 %tobool133, label %if.then.134, label %if.else.150, !dbg !721

if.then.134:                                      ; preds = %if.end.127
  %63 = load i16, i16* %a2p, align 2, !dbg !722
  %conv135 = sext i16 %63 to i32, !dbg !722
  %cmp136 = icmp sle i32 %conv135, -12160, !dbg !724
  br i1 %cmp136, label %if.then.138, label %if.else.139, !dbg !725

if.then.138:                                      ; preds = %if.then.134
  store i16 -12288, i16* %a2p, align 2, !dbg !726
  br label %if.end.149, !dbg !727

if.else.139:                                      ; preds = %if.then.134
  %64 = load i16, i16* %a2p, align 2, !dbg !728
  %conv140 = sext i16 %64 to i32, !dbg !728
  %cmp141 = icmp sge i32 %conv140, 12416, !dbg !730
  br i1 %cmp141, label %if.then.143, label %if.else.144, !dbg !731

if.then.143:                                      ; preds = %if.else.139
  store i16 12288, i16* %a2p, align 2, !dbg !732
  br label %if.end.148, !dbg !733

if.else.144:                                      ; preds = %if.else.139
  %65 = load i16, i16* %a2p, align 2, !dbg !734
  %conv145 = sext i16 %65 to i32, !dbg !734
  %sub146 = sub nsw i32 %conv145, 128, !dbg !734
  %conv147 = trunc i32 %sub146 to i16, !dbg !734
  store i16 %conv147, i16* %a2p, align 2, !dbg !734
  br label %if.end.148

if.end.148:                                       ; preds = %if.else.144, %if.then.143
  br label %if.end.149

if.end.149:                                       ; preds = %if.end.148, %if.then.138
  br label %if.end.166, !dbg !735

if.else.150:                                      ; preds = %if.end.127
  %66 = load i16, i16* %a2p, align 2, !dbg !736
  %conv151 = sext i16 %66 to i32, !dbg !736
  %cmp152 = icmp sle i32 %conv151, -12416, !dbg !738
  br i1 %cmp152, label %if.then.154, label %if.else.155, !dbg !739

if.then.154:                                      ; preds = %if.else.150
  store i16 -12288, i16* %a2p, align 2, !dbg !740
  br label %if.end.165, !dbg !741

if.else.155:                                      ; preds = %if.else.150
  %67 = load i16, i16* %a2p, align 2, !dbg !742
  %conv156 = sext i16 %67 to i32, !dbg !742
  %cmp157 = icmp sge i32 %conv156, 12160, !dbg !744
  br i1 %cmp157, label %if.then.159, label %if.else.160, !dbg !745

if.then.159:                                      ; preds = %if.else.155
  store i16 12288, i16* %a2p, align 2, !dbg !746
  br label %if.end.164, !dbg !747

if.else.160:                                      ; preds = %if.else.155
  %68 = load i16, i16* %a2p, align 2, !dbg !748
  %conv161 = sext i16 %68 to i32, !dbg !748
  %add162 = add nsw i32 %conv161, 128, !dbg !748
  %conv163 = trunc i32 %add162 to i16, !dbg !748
  store i16 %conv163, i16* %a2p, align 2, !dbg !748
  br label %if.end.164

if.end.164:                                       ; preds = %if.else.160, %if.then.159
  br label %if.end.165

if.end.165:                                       ; preds = %if.end.164, %if.then.154
  br label %if.end.166

if.end.166:                                       ; preds = %if.end.165, %if.end.149
  br label %if.end.167, !dbg !749

if.end.167:                                       ; preds = %if.end.166, %if.else.75
  %69 = load i16, i16* %a2p, align 2, !dbg !750
  %70 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !751
  %a168 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %70, i32 0, i32 5, !dbg !752
  %arrayidx169 = getelementptr inbounds [2 x i16], [2 x i16]* %a168, i32 0, i64 1, !dbg !751
  store i16 %69, i16* %arrayidx169, align 2, !dbg !753
  %71 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !754
  %a170 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %71, i32 0, i32 5, !dbg !755
  %arrayidx171 = getelementptr inbounds [2 x i16], [2 x i16]* %a170, i32 0, i64 0, !dbg !754
  %72 = load i16, i16* %arrayidx171, align 2, !dbg !754
  %conv172 = sext i16 %72 to i32, !dbg !754
  %shr173 = ashr i32 %conv172, 8, !dbg !756
  %73 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !757
  %a174 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %73, i32 0, i32 5, !dbg !758
  %arrayidx175 = getelementptr inbounds [2 x i16], [2 x i16]* %a174, i32 0, i64 0, !dbg !757
  %74 = load i16, i16* %arrayidx175, align 2, !dbg !759
  %conv176 = sext i16 %74 to i32, !dbg !759
  %sub177 = sub nsw i32 %conv176, %shr173, !dbg !759
  %conv178 = trunc i32 %sub177 to i16, !dbg !759
  store i16 %conv178, i16* %arrayidx175, align 2, !dbg !759
  %75 = load i32, i32* %dqsez.addr, align 4, !dbg !760
  %cmp179 = icmp ne i32 %75, 0, !dbg !762
  br i1 %cmp179, label %if.then.181, label %if.end.198, !dbg !763

if.then.181:                                      ; preds = %if.end.167
  %76 = load i16, i16* %pks1, align 2, !dbg !764
  %conv182 = sext i16 %76 to i32, !dbg !764
  %cmp183 = icmp eq i32 %conv182, 0, !dbg !766
  br i1 %cmp183, label %if.then.185, label %if.else.191, !dbg !767

if.then.185:                                      ; preds = %if.then.181
  %77 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !768
  %a186 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %77, i32 0, i32 5, !dbg !769
  %arrayidx187 = getelementptr inbounds [2 x i16], [2 x i16]* %a186, i32 0, i64 0, !dbg !768
  %78 = load i16, i16* %arrayidx187, align 2, !dbg !770
  %conv188 = sext i16 %78 to i32, !dbg !770
  %add189 = add nsw i32 %conv188, 192, !dbg !770
  %conv190 = trunc i32 %add189 to i16, !dbg !770
  store i16 %conv190, i16* %arrayidx187, align 2, !dbg !770
  br label %if.end.197, !dbg !768

if.else.191:                                      ; preds = %if.then.181
  %79 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !771
  %a192 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %79, i32 0, i32 5, !dbg !772
  %arrayidx193 = getelementptr inbounds [2 x i16], [2 x i16]* %a192, i32 0, i64 0, !dbg !771
  %80 = load i16, i16* %arrayidx193, align 2, !dbg !773
  %conv194 = sext i16 %80 to i32, !dbg !773
  %sub195 = sub nsw i32 %conv194, 192, !dbg !773
  %conv196 = trunc i32 %sub195 to i16, !dbg !773
  store i16 %conv196, i16* %arrayidx193, align 2, !dbg !773
  br label %if.end.197

if.end.197:                                       ; preds = %if.else.191, %if.then.185
  br label %if.end.198, !dbg !774

if.end.198:                                       ; preds = %if.end.197, %if.end.167
  %81 = load i16, i16* %a2p, align 2, !dbg !775
  %conv199 = sext i16 %81 to i32, !dbg !775
  %sub200 = sub nsw i32 15360, %conv199, !dbg !776
  %conv201 = trunc i32 %sub200 to i16, !dbg !777
  store i16 %conv201, i16* %a1ul, align 2, !dbg !778
  %82 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !779
  %a202 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %82, i32 0, i32 5, !dbg !781
  %arrayidx203 = getelementptr inbounds [2 x i16], [2 x i16]* %a202, i32 0, i64 0, !dbg !779
  %83 = load i16, i16* %arrayidx203, align 2, !dbg !779
  %conv204 = sext i16 %83 to i32, !dbg !779
  %84 = load i16, i16* %a1ul, align 2, !dbg !782
  %conv205 = sext i16 %84 to i32, !dbg !782
  %sub206 = sub nsw i32 0, %conv205, !dbg !783
  %cmp207 = icmp slt i32 %conv204, %sub206, !dbg !784
  br i1 %cmp207, label %if.then.209, label %if.else.215, !dbg !785

if.then.209:                                      ; preds = %if.end.198
  %85 = load i16, i16* %a1ul, align 2, !dbg !786
  %conv210 = sext i16 %85 to i32, !dbg !786
  %sub211 = sub nsw i32 0, %conv210, !dbg !787
  %conv212 = trunc i32 %sub211 to i16, !dbg !787
  %86 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !788
  %a213 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %86, i32 0, i32 5, !dbg !789
  %arrayidx214 = getelementptr inbounds [2 x i16], [2 x i16]* %a213, i32 0, i64 0, !dbg !788
  store i16 %conv212, i16* %arrayidx214, align 2, !dbg !790
  br label %if.end.226, !dbg !788

if.else.215:                                      ; preds = %if.end.198
  %87 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !791
  %a216 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %87, i32 0, i32 5, !dbg !793
  %arrayidx217 = getelementptr inbounds [2 x i16], [2 x i16]* %a216, i32 0, i64 0, !dbg !791
  %88 = load i16, i16* %arrayidx217, align 2, !dbg !791
  %conv218 = sext i16 %88 to i32, !dbg !791
  %89 = load i16, i16* %a1ul, align 2, !dbg !794
  %conv219 = sext i16 %89 to i32, !dbg !794
  %cmp220 = icmp sgt i32 %conv218, %conv219, !dbg !795
  br i1 %cmp220, label %if.then.222, label %if.end.225, !dbg !796

if.then.222:                                      ; preds = %if.else.215
  %90 = load i16, i16* %a1ul, align 2, !dbg !797
  %91 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !798
  %a223 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %91, i32 0, i32 5, !dbg !799
  %arrayidx224 = getelementptr inbounds [2 x i16], [2 x i16]* %a223, i32 0, i64 0, !dbg !798
  store i16 %90, i16* %arrayidx224, align 2, !dbg !800
  br label %if.end.225, !dbg !798

if.end.225:                                       ; preds = %if.then.222, %if.else.215
  br label %if.end.226

if.end.226:                                       ; preds = %if.end.225, %if.then.209
  store i32 0, i32* %cnt, align 4, !dbg !801
  br label %for.cond, !dbg !803

for.cond:                                         ; preds = %for.inc, %if.end.226
  %92 = load i32, i32* %cnt, align 4, !dbg !804
  %cmp227 = icmp slt i32 %92, 6, !dbg !808
  br i1 %cmp227, label %for.body, label %for.end, !dbg !809

for.body:                                         ; preds = %for.cond
  %93 = load i32, i32* %code_size.addr, align 4, !dbg !810
  %cmp229 = icmp eq i32 %93, 5, !dbg !813
  br i1 %cmp229, label %if.then.231, label %if.else.242, !dbg !814

if.then.231:                                      ; preds = %for.body
  %94 = load i32, i32* %cnt, align 4, !dbg !815
  %idxprom = sext i32 %94 to i64, !dbg !816
  %95 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !816
  %b232 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %95, i32 0, i32 6, !dbg !817
  %arrayidx233 = getelementptr inbounds [6 x i16], [6 x i16]* %b232, i32 0, i64 %idxprom, !dbg !816
  %96 = load i16, i16* %arrayidx233, align 2, !dbg !816
  %conv234 = sext i16 %96 to i32, !dbg !816
  %shr235 = ashr i32 %conv234, 9, !dbg !818
  %97 = load i32, i32* %cnt, align 4, !dbg !819
  %idxprom236 = sext i32 %97 to i64, !dbg !820
  %98 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !820
  %b237 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %98, i32 0, i32 6, !dbg !821
  %arrayidx238 = getelementptr inbounds [6 x i16], [6 x i16]* %b237, i32 0, i64 %idxprom236, !dbg !820
  %99 = load i16, i16* %arrayidx238, align 2, !dbg !822
  %conv239 = sext i16 %99 to i32, !dbg !822
  %sub240 = sub nsw i32 %conv239, %shr235, !dbg !822
  %conv241 = trunc i32 %sub240 to i16, !dbg !822
  store i16 %conv241, i16* %arrayidx238, align 2, !dbg !822
  br label %if.end.254, !dbg !820

if.else.242:                                      ; preds = %for.body
  %100 = load i32, i32* %cnt, align 4, !dbg !823
  %idxprom243 = sext i32 %100 to i64, !dbg !824
  %101 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !824
  %b244 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %101, i32 0, i32 6, !dbg !825
  %arrayidx245 = getelementptr inbounds [6 x i16], [6 x i16]* %b244, i32 0, i64 %idxprom243, !dbg !824
  %102 = load i16, i16* %arrayidx245, align 2, !dbg !824
  %conv246 = sext i16 %102 to i32, !dbg !824
  %shr247 = ashr i32 %conv246, 8, !dbg !826
  %103 = load i32, i32* %cnt, align 4, !dbg !827
  %idxprom248 = sext i32 %103 to i64, !dbg !828
  %104 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !828
  %b249 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %104, i32 0, i32 6, !dbg !829
  %arrayidx250 = getelementptr inbounds [6 x i16], [6 x i16]* %b249, i32 0, i64 %idxprom248, !dbg !828
  %105 = load i16, i16* %arrayidx250, align 2, !dbg !830
  %conv251 = sext i16 %105 to i32, !dbg !830
  %sub252 = sub nsw i32 %conv251, %shr247, !dbg !830
  %conv253 = trunc i32 %sub252 to i16, !dbg !830
  store i16 %conv253, i16* %arrayidx250, align 2, !dbg !830
  br label %if.end.254

if.end.254:                                       ; preds = %if.else.242, %if.then.231
  %106 = load i32, i32* %dq.addr, align 4, !dbg !831
  %and255 = and i32 %106, 32767, !dbg !833
  %tobool256 = icmp ne i32 %and255, 0, !dbg !833
  br i1 %tobool256, label %if.then.257, label %if.end.280, !dbg !834

if.then.257:                                      ; preds = %if.end.254
  %107 = load i32, i32* %dq.addr, align 4, !dbg !835
  %108 = load i32, i32* %cnt, align 4, !dbg !838
  %idxprom258 = sext i32 %108 to i64, !dbg !839
  %109 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !839
  %dq259 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %109, i32 0, i32 8, !dbg !840
  %arrayidx260 = getelementptr inbounds [6 x i16], [6 x i16]* %dq259, i32 0, i64 %idxprom258, !dbg !839
  %110 = load i16, i16* %arrayidx260, align 2, !dbg !839
  %conv261 = sext i16 %110 to i32, !dbg !839
  %xor262 = xor i32 %107, %conv261, !dbg !841
  %cmp263 = icmp sge i32 %xor262, 0, !dbg !842
  br i1 %cmp263, label %if.then.265, label %if.else.272, !dbg !843

if.then.265:                                      ; preds = %if.then.257
  %111 = load i32, i32* %cnt, align 4, !dbg !844
  %idxprom266 = sext i32 %111 to i64, !dbg !845
  %112 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !845
  %b267 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %112, i32 0, i32 6, !dbg !846
  %arrayidx268 = getelementptr inbounds [6 x i16], [6 x i16]* %b267, i32 0, i64 %idxprom266, !dbg !845
  %113 = load i16, i16* %arrayidx268, align 2, !dbg !847
  %conv269 = sext i16 %113 to i32, !dbg !847
  %add270 = add nsw i32 %conv269, 128, !dbg !847
  %conv271 = trunc i32 %add270 to i16, !dbg !847
  store i16 %conv271, i16* %arrayidx268, align 2, !dbg !847
  br label %if.end.279, !dbg !845

if.else.272:                                      ; preds = %if.then.257
  %114 = load i32, i32* %cnt, align 4, !dbg !848
  %idxprom273 = sext i32 %114 to i64, !dbg !849
  %115 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !849
  %b274 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %115, i32 0, i32 6, !dbg !850
  %arrayidx275 = getelementptr inbounds [6 x i16], [6 x i16]* %b274, i32 0, i64 %idxprom273, !dbg !849
  %116 = load i16, i16* %arrayidx275, align 2, !dbg !851
  %conv276 = sext i16 %116 to i32, !dbg !851
  %sub277 = sub nsw i32 %conv276, 128, !dbg !851
  %conv278 = trunc i32 %sub277 to i16, !dbg !851
  store i16 %conv278, i16* %arrayidx275, align 2, !dbg !851
  br label %if.end.279

if.end.279:                                       ; preds = %if.else.272, %if.then.265
  br label %if.end.280, !dbg !852

if.end.280:                                       ; preds = %if.end.279, %if.end.254
  br label %for.inc, !dbg !853

for.inc:                                          ; preds = %if.end.280
  %117 = load i32, i32* %cnt, align 4, !dbg !854
  %inc = add nsw i32 %117, 1, !dbg !854
  store i32 %inc, i32* %cnt, align 4, !dbg !854
  br label %for.cond, !dbg !855

for.end:                                          ; preds = %for.cond
  br label %if.end.281

if.end.281:                                       ; preds = %for.end, %if.then.61
  store i32 5, i32* %cnt, align 4, !dbg !856
  br label %for.cond.282, !dbg !858

for.cond.282:                                     ; preds = %for.inc.293, %if.end.281
  %118 = load i32, i32* %cnt, align 4, !dbg !859
  %cmp283 = icmp sgt i32 %118, 0, !dbg !863
  br i1 %cmp283, label %for.body.285, label %for.end.294, !dbg !864

for.body.285:                                     ; preds = %for.cond.282
  %119 = load i32, i32* %cnt, align 4, !dbg !865
  %sub286 = sub nsw i32 %119, 1, !dbg !866
  %idxprom287 = sext i32 %sub286 to i64, !dbg !867
  %120 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !867
  %dq288 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %120, i32 0, i32 8, !dbg !868
  %arrayidx289 = getelementptr inbounds [6 x i16], [6 x i16]* %dq288, i32 0, i64 %idxprom287, !dbg !867
  %121 = load i16, i16* %arrayidx289, align 2, !dbg !867
  %122 = load i32, i32* %cnt, align 4, !dbg !869
  %idxprom290 = sext i32 %122 to i64, !dbg !870
  %123 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !870
  %dq291 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %123, i32 0, i32 8, !dbg !871
  %arrayidx292 = getelementptr inbounds [6 x i16], [6 x i16]* %dq291, i32 0, i64 %idxprom290, !dbg !870
  store i16 %121, i16* %arrayidx292, align 2, !dbg !872
  br label %for.inc.293, !dbg !870

for.inc.293:                                      ; preds = %for.body.285
  %124 = load i32, i32* %cnt, align 4, !dbg !873
  %dec = add nsw i32 %124, -1, !dbg !873
  store i32 %dec, i32* %cnt, align 4, !dbg !873
  br label %for.cond.282, !dbg !874

for.end.294:                                      ; preds = %for.cond.282
  %125 = load i16, i16* %mag, align 2, !dbg !875
  %conv295 = sext i16 %125 to i32, !dbg !875
  %cmp296 = icmp eq i32 %conv295, 0, !dbg !877
  br i1 %cmp296, label %if.then.298, label %if.else.305, !dbg !878

if.then.298:                                      ; preds = %for.end.294
  %126 = load i32, i32* %dq.addr, align 4, !dbg !879
  %cmp299 = icmp sge i32 %126, 0, !dbg !881
  %cond301 = select i1 %cmp299, i32 32, i32 64544, !dbg !882
  %conv302 = trunc i32 %cond301 to i16, !dbg !882
  %127 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !883
  %dq303 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %127, i32 0, i32 8, !dbg !884
  %arrayidx304 = getelementptr inbounds [6 x i16], [6 x i16]* %dq303, i32 0, i64 0, !dbg !883
  store i16 %conv302, i16* %arrayidx304, align 2, !dbg !885
  br label %if.end.332, !dbg !886

if.else.305:                                      ; preds = %for.end.294
  %128 = load i16, i16* %mag, align 2, !dbg !887
  %conv306 = sext i16 %128 to i32, !dbg !887
  %call = call i32 @quan(i32 %conv306, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @power2, i32 0, i32 0), i32 15), !dbg !889
  %conv307 = trunc i32 %call to i16, !dbg !889
  store i16 %conv307, i16* %exp, align 2, !dbg !890
  %129 = load i32, i32* %dq.addr, align 4, !dbg !891
  %cmp308 = icmp sge i32 %129, 0, !dbg !892
  br i1 %cmp308, label %cond.true.310, label %cond.false.318, !dbg !893

cond.true.310:                                    ; preds = %if.else.305
  %130 = load i16, i16* %exp, align 2, !dbg !894
  %conv311 = sext i16 %130 to i32, !dbg !894
  %shl312 = shl i32 %conv311, 6, !dbg !896
  %131 = load i16, i16* %mag, align 2, !dbg !897
  %conv313 = sext i16 %131 to i32, !dbg !897
  %shl314 = shl i32 %conv313, 6, !dbg !898
  %132 = load i16, i16* %exp, align 2, !dbg !899
  %conv315 = sext i16 %132 to i32, !dbg !899
  %shr316 = ashr i32 %shl314, %conv315, !dbg !900
  %add317 = add nsw i32 %shl312, %shr316, !dbg !901
  br label %cond.end.327, !dbg !893

cond.false.318:                                   ; preds = %if.else.305
  %133 = load i16, i16* %exp, align 2, !dbg !902
  %conv319 = sext i16 %133 to i32, !dbg !902
  %shl320 = shl i32 %conv319, 6, !dbg !904
  %134 = load i16, i16* %mag, align 2, !dbg !905
  %conv321 = sext i16 %134 to i32, !dbg !905
  %shl322 = shl i32 %conv321, 6, !dbg !906
  %135 = load i16, i16* %exp, align 2, !dbg !907
  %conv323 = sext i16 %135 to i32, !dbg !907
  %shr324 = ashr i32 %shl322, %conv323, !dbg !908
  %add325 = add nsw i32 %shl320, %shr324, !dbg !909
  %sub326 = sub nsw i32 %add325, 1024, !dbg !910
  br label %cond.end.327, !dbg !893

cond.end.327:                                     ; preds = %cond.false.318, %cond.true.310
  %cond328 = phi i32 [ %add317, %cond.true.310 ], [ %sub326, %cond.false.318 ], !dbg !893
  %conv329 = trunc i32 %cond328 to i16, !dbg !911
  %136 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !914
  %dq330 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %136, i32 0, i32 8, !dbg !915
  %arrayidx331 = getelementptr inbounds [6 x i16], [6 x i16]* %dq330, i32 0, i64 0, !dbg !914
  store i16 %conv329, i16* %arrayidx331, align 2, !dbg !916
  br label %if.end.332

if.end.332:                                       ; preds = %cond.end.327, %if.then.298
  %137 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !917
  %sr333 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %137, i32 0, i32 9, !dbg !918
  %arrayidx334 = getelementptr inbounds [2 x i16], [2 x i16]* %sr333, i32 0, i64 0, !dbg !917
  %138 = load i16, i16* %arrayidx334, align 2, !dbg !917
  %139 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !919
  %sr335 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %139, i32 0, i32 9, !dbg !920
  %arrayidx336 = getelementptr inbounds [2 x i16], [2 x i16]* %sr335, i32 0, i64 1, !dbg !919
  store i16 %138, i16* %arrayidx336, align 2, !dbg !921
  %140 = load i32, i32* %sr.addr, align 4, !dbg !922
  %cmp337 = icmp eq i32 %140, 0, !dbg !924
  br i1 %cmp337, label %if.then.339, label %if.else.342, !dbg !925

if.then.339:                                      ; preds = %if.end.332
  %141 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !926
  %sr340 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %141, i32 0, i32 9, !dbg !928
  %arrayidx341 = getelementptr inbounds [2 x i16], [2 x i16]* %sr340, i32 0, i64 0, !dbg !926
  store i16 32, i16* %arrayidx341, align 2, !dbg !929
  br label %if.end.382, !dbg !930

if.else.342:                                      ; preds = %if.end.332
  %142 = load i32, i32* %sr.addr, align 4, !dbg !931
  %cmp343 = icmp sgt i32 %142, 0, !dbg !933
  br i1 %cmp343, label %if.then.345, label %if.else.357, !dbg !934

if.then.345:                                      ; preds = %if.else.342
  %143 = load i32, i32* %sr.addr, align 4, !dbg !935
  %call346 = call i32 @quan(i32 %143, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @power2, i32 0, i32 0), i32 15), !dbg !937
  %conv347 = trunc i32 %call346 to i16, !dbg !937
  store i16 %conv347, i16* %exp, align 2, !dbg !938
  %144 = load i16, i16* %exp, align 2, !dbg !939
  %conv348 = sext i16 %144 to i32, !dbg !939
  %shl349 = shl i32 %conv348, 6, !dbg !940
  %145 = load i32, i32* %sr.addr, align 4, !dbg !941
  %shl350 = shl i32 %145, 6, !dbg !942
  %146 = load i16, i16* %exp, align 2, !dbg !943
  %conv351 = sext i16 %146 to i32, !dbg !943
  %shr352 = ashr i32 %shl350, %conv351, !dbg !944
  %add353 = add nsw i32 %shl349, %shr352, !dbg !945
  %conv354 = trunc i32 %add353 to i16, !dbg !946
  %147 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !947
  %sr355 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %147, i32 0, i32 9, !dbg !948
  %arrayidx356 = getelementptr inbounds [2 x i16], [2 x i16]* %sr355, i32 0, i64 0, !dbg !947
  store i16 %conv354, i16* %arrayidx356, align 2, !dbg !949
  br label %if.end.381, !dbg !950

if.else.357:                                      ; preds = %if.else.342
  %148 = load i32, i32* %sr.addr, align 4, !dbg !951
  %cmp358 = icmp sgt i32 %148, -32768, !dbg !953
  br i1 %cmp358, label %if.then.360, label %if.else.377, !dbg !954

if.then.360:                                      ; preds = %if.else.357
  %149 = load i32, i32* %sr.addr, align 4, !dbg !955
  %sub361 = sub nsw i32 0, %149, !dbg !957
  %conv362 = trunc i32 %sub361 to i16, !dbg !957
  store i16 %conv362, i16* %mag, align 2, !dbg !958
  %150 = load i16, i16* %mag, align 2, !dbg !959
  %conv363 = sext i16 %150 to i32, !dbg !959
  %call364 = call i32 @quan(i32 %conv363, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @power2, i32 0, i32 0), i32 15), !dbg !960
  %conv365 = trunc i32 %call364 to i16, !dbg !960
  store i16 %conv365, i16* %exp, align 2, !dbg !961
  %151 = load i16, i16* %exp, align 2, !dbg !962
  %conv366 = sext i16 %151 to i32, !dbg !962
  %shl367 = shl i32 %conv366, 6, !dbg !963
  %152 = load i16, i16* %mag, align 2, !dbg !964
  %conv368 = sext i16 %152 to i32, !dbg !964
  %shl369 = shl i32 %conv368, 6, !dbg !965
  %153 = load i16, i16* %exp, align 2, !dbg !966
  %conv370 = sext i16 %153 to i32, !dbg !966
  %shr371 = ashr i32 %shl369, %conv370, !dbg !967
  %add372 = add nsw i32 %shl367, %shr371, !dbg !968
  %sub373 = sub nsw i32 %add372, 1024, !dbg !969
  %conv374 = trunc i32 %sub373 to i16, !dbg !970
  %154 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !971
  %sr375 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %154, i32 0, i32 9, !dbg !972
  %arrayidx376 = getelementptr inbounds [2 x i16], [2 x i16]* %sr375, i32 0, i64 0, !dbg !971
  store i16 %conv374, i16* %arrayidx376, align 2, !dbg !973
  br label %if.end.380, !dbg !974

if.else.377:                                      ; preds = %if.else.357
  %155 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !975
  %sr378 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %155, i32 0, i32 9, !dbg !976
  %arrayidx379 = getelementptr inbounds [2 x i16], [2 x i16]* %sr378, i32 0, i64 0, !dbg !975
  store i16 -992, i16* %arrayidx379, align 2, !dbg !977
  br label %if.end.380

if.end.380:                                       ; preds = %if.else.377, %if.then.360
  br label %if.end.381

if.end.381:                                       ; preds = %if.end.380, %if.then.345
  br label %if.end.382

if.end.382:                                       ; preds = %if.end.381, %if.then.339
  %156 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !978
  %pk383 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %156, i32 0, i32 7, !dbg !979
  %arrayidx384 = getelementptr inbounds [2 x i16], [2 x i16]* %pk383, i32 0, i64 0, !dbg !978
  %157 = load i16, i16* %arrayidx384, align 2, !dbg !978
  %158 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !980
  %pk385 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %158, i32 0, i32 7, !dbg !981
  %arrayidx386 = getelementptr inbounds [2 x i16], [2 x i16]* %pk385, i32 0, i64 1, !dbg !980
  store i16 %157, i16* %arrayidx386, align 2, !dbg !982
  %159 = load i16, i16* %pk0, align 2, !dbg !983
  %160 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !984
  %pk387 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %160, i32 0, i32 7, !dbg !985
  %arrayidx388 = getelementptr inbounds [2 x i16], [2 x i16]* %pk387, i32 0, i64 0, !dbg !984
  store i16 %159, i16* %arrayidx388, align 2, !dbg !986
  %161 = load i8, i8* %tr, align 1, !dbg !987
  %conv389 = sext i8 %161 to i32, !dbg !987
  %cmp390 = icmp eq i32 %conv389, 1, !dbg !989
  br i1 %cmp390, label %if.then.392, label %if.else.394, !dbg !990

if.then.392:                                      ; preds = %if.end.382
  %162 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !991
  %td393 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %162, i32 0, i32 10, !dbg !992
  store i8 0, i8* %td393, align 1, !dbg !993
  br label %if.end.403, !dbg !991

if.else.394:                                      ; preds = %if.end.382
  %163 = load i16, i16* %a2p, align 2, !dbg !994
  %conv395 = sext i16 %163 to i32, !dbg !994
  %cmp396 = icmp slt i32 %conv395, -11776, !dbg !996
  br i1 %cmp396, label %if.then.398, label %if.else.400, !dbg !997

if.then.398:                                      ; preds = %if.else.394
  %164 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !998
  %td399 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %164, i32 0, i32 10, !dbg !999
  store i8 1, i8* %td399, align 1, !dbg !1000
  br label %if.end.402, !dbg !998

if.else.400:                                      ; preds = %if.else.394
  %165 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1001
  %td401 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %165, i32 0, i32 10, !dbg !1002
  store i8 0, i8* %td401, align 1, !dbg !1003
  br label %if.end.402

if.end.402:                                       ; preds = %if.else.400, %if.then.398
  br label %if.end.403

if.end.403:                                       ; preds = %if.end.402, %if.then.392
  %166 = load i32, i32* %fi.addr, align 4, !dbg !1004
  %167 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1005
  %dms = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %167, i32 0, i32 2, !dbg !1006
  %168 = load i16, i16* %dms, align 2, !dbg !1006
  %conv404 = sext i16 %168 to i32, !dbg !1005
  %sub405 = sub nsw i32 %166, %conv404, !dbg !1007
  %shr406 = ashr i32 %sub405, 5, !dbg !1008
  %169 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1009
  %dms407 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %169, i32 0, i32 2, !dbg !1010
  %170 = load i16, i16* %dms407, align 2, !dbg !1011
  %conv408 = sext i16 %170 to i32, !dbg !1011
  %add409 = add nsw i32 %conv408, %shr406, !dbg !1011
  %conv410 = trunc i32 %add409 to i16, !dbg !1011
  store i16 %conv410, i16* %dms407, align 2, !dbg !1011
  %171 = load i32, i32* %fi.addr, align 4, !dbg !1012
  %shl411 = shl i32 %171, 2, !dbg !1013
  %172 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1014
  %dml = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %172, i32 0, i32 3, !dbg !1015
  %173 = load i16, i16* %dml, align 2, !dbg !1015
  %conv412 = sext i16 %173 to i32, !dbg !1014
  %sub413 = sub nsw i32 %shl411, %conv412, !dbg !1016
  %shr414 = ashr i32 %sub413, 7, !dbg !1017
  %174 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1018
  %dml415 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %174, i32 0, i32 3, !dbg !1019
  %175 = load i16, i16* %dml415, align 2, !dbg !1020
  %conv416 = sext i16 %175 to i32, !dbg !1020
  %add417 = add nsw i32 %conv416, %shr414, !dbg !1020
  %conv418 = trunc i32 %add417 to i16, !dbg !1020
  store i16 %conv418, i16* %dml415, align 2, !dbg !1020
  %176 = load i8, i8* %tr, align 1, !dbg !1021
  %conv419 = sext i8 %176 to i32, !dbg !1021
  %cmp420 = icmp eq i32 %conv419, 1, !dbg !1023
  br i1 %cmp420, label %if.then.422, label %if.else.423, !dbg !1024

if.then.422:                                      ; preds = %if.end.403
  %177 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1025
  %ap = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %177, i32 0, i32 4, !dbg !1026
  store i16 256, i16* %ap, align 2, !dbg !1027
  br label %if.end.483, !dbg !1025

if.else.423:                                      ; preds = %if.end.403
  %178 = load i32, i32* %y.addr, align 4, !dbg !1028
  %cmp424 = icmp slt i32 %178, 1536, !dbg !1030
  br i1 %cmp424, label %if.then.426, label %if.else.435, !dbg !1031

if.then.426:                                      ; preds = %if.else.423
  %179 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1032
  %ap427 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %179, i32 0, i32 4, !dbg !1033
  %180 = load i16, i16* %ap427, align 2, !dbg !1033
  %conv428 = sext i16 %180 to i32, !dbg !1032
  %sub429 = sub nsw i32 512, %conv428, !dbg !1034
  %shr430 = ashr i32 %sub429, 4, !dbg !1035
  %181 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1036
  %ap431 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %181, i32 0, i32 4, !dbg !1037
  %182 = load i16, i16* %ap431, align 2, !dbg !1038
  %conv432 = sext i16 %182 to i32, !dbg !1038
  %add433 = add nsw i32 %conv432, %shr430, !dbg !1038
  %conv434 = trunc i32 %add433 to i16, !dbg !1038
  store i16 %conv434, i16* %ap431, align 2, !dbg !1038
  br label %if.end.482, !dbg !1036

if.else.435:                                      ; preds = %if.else.423
  %183 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1039
  %td436 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %183, i32 0, i32 10, !dbg !1041
  %184 = load i8, i8* %td436, align 1, !dbg !1041
  %conv437 = sext i8 %184 to i32, !dbg !1039
  %cmp438 = icmp eq i32 %conv437, 1, !dbg !1042
  br i1 %cmp438, label %if.then.440, label %if.else.449, !dbg !1043

if.then.440:                                      ; preds = %if.else.435
  %185 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1044
  %ap441 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %185, i32 0, i32 4, !dbg !1045
  %186 = load i16, i16* %ap441, align 2, !dbg !1045
  %conv442 = sext i16 %186 to i32, !dbg !1044
  %sub443 = sub nsw i32 512, %conv442, !dbg !1046
  %shr444 = ashr i32 %sub443, 4, !dbg !1047
  %187 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1048
  %ap445 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %187, i32 0, i32 4, !dbg !1049
  %188 = load i16, i16* %ap445, align 2, !dbg !1050
  %conv446 = sext i16 %188 to i32, !dbg !1050
  %add447 = add nsw i32 %conv446, %shr444, !dbg !1050
  %conv448 = trunc i32 %add447 to i16, !dbg !1050
  store i16 %conv448, i16* %ap445, align 2, !dbg !1050
  br label %if.end.481, !dbg !1048

if.else.449:                                      ; preds = %if.else.435
  %189 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1051
  %dms450 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %189, i32 0, i32 2, !dbg !1053
  %190 = load i16, i16* %dms450, align 2, !dbg !1053
  %conv451 = sext i16 %190 to i32, !dbg !1051
  %shl452 = shl i32 %conv451, 2, !dbg !1054
  %191 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1055
  %dml453 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %191, i32 0, i32 3, !dbg !1056
  %192 = load i16, i16* %dml453, align 2, !dbg !1056
  %conv454 = sext i16 %192 to i32, !dbg !1055
  %sub455 = sub nsw i32 %shl452, %conv454, !dbg !1057
  %call456 = call i32 @abs(i32 %sub455) #1, !dbg !1058
  %193 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1059
  %dml457 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %193, i32 0, i32 3, !dbg !1060
  %194 = load i16, i16* %dml457, align 2, !dbg !1060
  %conv458 = sext i16 %194 to i32, !dbg !1059
  %shr459 = ashr i32 %conv458, 3, !dbg !1061
  %cmp460 = icmp sge i32 %call456, %shr459, !dbg !1062
  br i1 %cmp460, label %if.then.462, label %if.else.471, !dbg !1063

if.then.462:                                      ; preds = %if.else.449
  %195 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1064
  %ap463 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %195, i32 0, i32 4, !dbg !1065
  %196 = load i16, i16* %ap463, align 2, !dbg !1065
  %conv464 = sext i16 %196 to i32, !dbg !1064
  %sub465 = sub nsw i32 512, %conv464, !dbg !1066
  %shr466 = ashr i32 %sub465, 4, !dbg !1067
  %197 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1068
  %ap467 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %197, i32 0, i32 4, !dbg !1069
  %198 = load i16, i16* %ap467, align 2, !dbg !1070
  %conv468 = sext i16 %198 to i32, !dbg !1070
  %add469 = add nsw i32 %conv468, %shr466, !dbg !1070
  %conv470 = trunc i32 %add469 to i16, !dbg !1070
  store i16 %conv470, i16* %ap467, align 2, !dbg !1070
  br label %if.end.480, !dbg !1068

if.else.471:                                      ; preds = %if.else.449
  %199 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1071
  %ap472 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %199, i32 0, i32 4, !dbg !1072
  %200 = load i16, i16* %ap472, align 2, !dbg !1072
  %conv473 = sext i16 %200 to i32, !dbg !1071
  %sub474 = sub nsw i32 0, %conv473, !dbg !1073
  %shr475 = ashr i32 %sub474, 4, !dbg !1074
  %201 = load %struct.g72x_state*, %struct.g72x_state** %state_ptr.addr, align 8, !dbg !1075
  %ap476 = getelementptr inbounds %struct.g72x_state, %struct.g72x_state* %201, i32 0, i32 4, !dbg !1076
  %202 = load i16, i16* %ap476, align 2, !dbg !1077
  %conv477 = sext i16 %202 to i32, !dbg !1077
  %add478 = add nsw i32 %conv477, %shr475, !dbg !1077
  %conv479 = trunc i32 %add478 to i16, !dbg !1077
  store i16 %conv479, i16* %ap476, align 2, !dbg !1077
  br label %if.end.480

if.end.480:                                       ; preds = %if.else.471, %if.then.462
  br label %if.end.481

if.end.481:                                       ; preds = %if.end.480, %if.then.440
  br label %if.end.482

if.end.482:                                       ; preds = %if.end.481, %if.then.426
  br label %if.end.483

if.end.483:                                       ; preds = %if.end.482, %if.then.422
  ret void, !dbg !1078
}

; Function Attrs: nounwind uwtable
define i32 @tandem_adjust_alaw(i32 %sr, i32 %se, i32 %y, i32 %i, i32 %sign, i16* %qtab) #0 {
entry:
  %retval = alloca i32, align 4
  %sr.addr = alloca i32, align 4
  %se.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  %qtab.addr = alloca i16*, align 8
  %sp = alloca i8, align 1
  %dx = alloca i16, align 2
  %id = alloca i8, align 1
  %sd = alloca i32, align 4
  %im = alloca i32, align 4
  %imx = alloca i32, align 4
  store i32 %sr, i32* %sr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sr.addr, metadata !1079, metadata !67), !dbg !1080
  store i32 %se, i32* %se.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %se.addr, metadata !1081, metadata !67), !dbg !1082
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !1083, metadata !67), !dbg !1084
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !1085, metadata !67), !dbg !1086
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !1087, metadata !67), !dbg !1088
  store i16* %qtab, i16** %qtab.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %qtab.addr, metadata !1089, metadata !67), !dbg !1090
  call void @llvm.dbg.declare(metadata i8* %sp, metadata !1091, metadata !67), !dbg !1093
  call void @llvm.dbg.declare(metadata i16* %dx, metadata !1094, metadata !67), !dbg !1095
  call void @llvm.dbg.declare(metadata i8* %id, metadata !1096, metadata !67), !dbg !1097
  call void @llvm.dbg.declare(metadata i32* %sd, metadata !1098, metadata !67), !dbg !1099
  call void @llvm.dbg.declare(metadata i32* %im, metadata !1100, metadata !67), !dbg !1101
  call void @llvm.dbg.declare(metadata i32* %imx, metadata !1102, metadata !67), !dbg !1103
  %0 = load i32, i32* %sr.addr, align 4, !dbg !1104
  %cmp = icmp sle i32 %0, -32768, !dbg !1106
  br i1 %cmp, label %if.then, label %if.end, !dbg !1107

if.then:                                          ; preds = %entry
  store i32 -1, i32* %sr.addr, align 4, !dbg !1108
  br label %if.end, !dbg !1109

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %sr.addr, align 4, !dbg !1110
  %shr = ashr i32 %1, 1, !dbg !1111
  %shl = shl i32 %shr, 3, !dbg !1112
  %call = call i32 (i32, ...) bitcast (i32 (...)* @linear2alaw to i32 (i32, ...)*)(i32 %shl), !dbg !1113
  %conv = trunc i32 %call to i8, !dbg !1113
  store i8 %conv, i8* %sp, align 1, !dbg !1114
  %2 = load i8, i8* %sp, align 1, !dbg !1115
  %conv1 = zext i8 %2 to i32, !dbg !1115
  %call2 = call i32 (i32, ...) bitcast (i32 (...)* @alaw2linear to i32 (i32, ...)*)(i32 %conv1), !dbg !1116
  %shr3 = ashr i32 %call2, 2, !dbg !1117
  %3 = load i32, i32* %se.addr, align 4, !dbg !1118
  %sub = sub nsw i32 %shr3, %3, !dbg !1119
  %conv4 = trunc i32 %sub to i16, !dbg !1120
  store i16 %conv4, i16* %dx, align 2, !dbg !1121
  %4 = load i16, i16* %dx, align 2, !dbg !1122
  %conv5 = sext i16 %4 to i32, !dbg !1122
  %5 = load i32, i32* %y.addr, align 4, !dbg !1123
  %6 = load i16*, i16** %qtab.addr, align 8, !dbg !1124
  %7 = load i32, i32* %sign.addr, align 4, !dbg !1125
  %sub6 = sub nsw i32 %7, 1, !dbg !1126
  %call7 = call i32 @quantize(i32 %conv5, i32 %5, i16* %6, i32 %sub6), !dbg !1127
  %conv8 = trunc i32 %call7 to i8, !dbg !1127
  store i8 %conv8, i8* %id, align 1, !dbg !1128
  %8 = load i8, i8* %id, align 1, !dbg !1129
  %conv9 = sext i8 %8 to i32, !dbg !1129
  %9 = load i32, i32* %i.addr, align 4, !dbg !1131
  %cmp10 = icmp eq i32 %conv9, %9, !dbg !1132
  br i1 %cmp10, label %if.then.12, label %if.else, !dbg !1133

if.then.12:                                       ; preds = %if.end
  %10 = load i8, i8* %sp, align 1, !dbg !1134
  %conv13 = zext i8 %10 to i32, !dbg !1136
  store i32 %conv13, i32* %retval, !dbg !1137
  br label %return, !dbg !1137

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %i.addr, align 4, !dbg !1138
  %12 = load i32, i32* %sign.addr, align 4, !dbg !1140
  %xor = xor i32 %11, %12, !dbg !1141
  store i32 %xor, i32* %im, align 4, !dbg !1142
  %13 = load i8, i8* %id, align 1, !dbg !1143
  %conv14 = sext i8 %13 to i32, !dbg !1143
  %14 = load i32, i32* %sign.addr, align 4, !dbg !1144
  %xor15 = xor i32 %conv14, %14, !dbg !1145
  store i32 %xor15, i32* %imx, align 4, !dbg !1146
  %15 = load i32, i32* %imx, align 4, !dbg !1147
  %16 = load i32, i32* %im, align 4, !dbg !1149
  %cmp16 = icmp sgt i32 %15, %16, !dbg !1150
  br i1 %cmp16, label %if.then.18, label %if.else.40, !dbg !1151

if.then.18:                                       ; preds = %if.else
  %17 = load i8, i8* %sp, align 1, !dbg !1152
  %conv19 = zext i8 %17 to i32, !dbg !1152
  %and = and i32 %conv19, 128, !dbg !1155
  %tobool = icmp ne i32 %and, 0, !dbg !1155
  br i1 %tobool, label %if.then.20, label %if.else.28, !dbg !1156

if.then.20:                                       ; preds = %if.then.18
  %18 = load i8, i8* %sp, align 1, !dbg !1157
  %conv21 = zext i8 %18 to i32, !dbg !1157
  %cmp22 = icmp eq i32 %conv21, 213, !dbg !1159
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !1160

cond.true:                                        ; preds = %if.then.20
  br label %cond.end, !dbg !1161

cond.false:                                       ; preds = %if.then.20
  %19 = load i8, i8* %sp, align 1, !dbg !1163
  %conv24 = zext i8 %19 to i32, !dbg !1163
  %xor25 = xor i32 %conv24, 85, !dbg !1165
  %sub26 = sub nsw i32 %xor25, 1, !dbg !1166
  %xor27 = xor i32 %sub26, 85, !dbg !1167
  br label %cond.end, !dbg !1160

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 85, %cond.true ], [ %xor27, %cond.false ], !dbg !1160
  store i32 %cond, i32* %sd, align 4, !dbg !1168
  br label %if.end.39, !dbg !1171

if.else.28:                                       ; preds = %if.then.18
  %20 = load i8, i8* %sp, align 1, !dbg !1172
  %conv29 = zext i8 %20 to i32, !dbg !1172
  %cmp30 = icmp eq i32 %conv29, 42, !dbg !1174
  br i1 %cmp30, label %cond.true.32, label %cond.false.33, !dbg !1175

cond.true.32:                                     ; preds = %if.else.28
  br label %cond.end.37, !dbg !1176

cond.false.33:                                    ; preds = %if.else.28
  %21 = load i8, i8* %sp, align 1, !dbg !1178
  %conv34 = zext i8 %21 to i32, !dbg !1178
  %xor35 = xor i32 %conv34, 85, !dbg !1180
  %add = add nsw i32 %xor35, 1, !dbg !1181
  %xor36 = xor i32 %add, 85, !dbg !1182
  br label %cond.end.37, !dbg !1175

cond.end.37:                                      ; preds = %cond.false.33, %cond.true.32
  %cond38 = phi i32 [ 42, %cond.true.32 ], [ %xor36, %cond.false.33 ], !dbg !1175
  store i32 %cond38, i32* %sd, align 4, !dbg !1183
  br label %if.end.39

if.end.39:                                        ; preds = %cond.end.37, %cond.end
  br label %if.end.69, !dbg !1186

if.else.40:                                       ; preds = %if.else
  %22 = load i8, i8* %sp, align 1, !dbg !1187
  %conv41 = zext i8 %22 to i32, !dbg !1187
  %and42 = and i32 %conv41, 128, !dbg !1190
  %tobool43 = icmp ne i32 %and42, 0, !dbg !1190
  br i1 %tobool43, label %if.then.44, label %if.else.56, !dbg !1191

if.then.44:                                       ; preds = %if.else.40
  %23 = load i8, i8* %sp, align 1, !dbg !1192
  %conv45 = zext i8 %23 to i32, !dbg !1192
  %cmp46 = icmp eq i32 %conv45, 170, !dbg !1193
  br i1 %cmp46, label %cond.true.48, label %cond.false.49, !dbg !1194

cond.true.48:                                     ; preds = %if.then.44
  br label %cond.end.54, !dbg !1195

cond.false.49:                                    ; preds = %if.then.44
  %24 = load i8, i8* %sp, align 1, !dbg !1197
  %conv50 = zext i8 %24 to i32, !dbg !1197
  %xor51 = xor i32 %conv50, 85, !dbg !1199
  %add52 = add nsw i32 %xor51, 1, !dbg !1200
  %xor53 = xor i32 %add52, 85, !dbg !1201
  br label %cond.end.54, !dbg !1194

cond.end.54:                                      ; preds = %cond.false.49, %cond.true.48
  %cond55 = phi i32 [ 170, %cond.true.48 ], [ %xor53, %cond.false.49 ], !dbg !1194
  store i32 %cond55, i32* %sd, align 4, !dbg !1202
  br label %if.end.68, !dbg !1205

if.else.56:                                       ; preds = %if.else.40
  %25 = load i8, i8* %sp, align 1, !dbg !1206
  %conv57 = zext i8 %25 to i32, !dbg !1206
  %cmp58 = icmp eq i32 %conv57, 85, !dbg !1207
  br i1 %cmp58, label %cond.true.60, label %cond.false.61, !dbg !1208

cond.true.60:                                     ; preds = %if.else.56
  br label %cond.end.66, !dbg !1209

cond.false.61:                                    ; preds = %if.else.56
  %26 = load i8, i8* %sp, align 1, !dbg !1210
  %conv62 = zext i8 %26 to i32, !dbg !1210
  %xor63 = xor i32 %conv62, 85, !dbg !1211
  %sub64 = sub nsw i32 %xor63, 1, !dbg !1212
  %xor65 = xor i32 %sub64, 85, !dbg !1213
  br label %cond.end.66, !dbg !1208

cond.end.66:                                      ; preds = %cond.false.61, %cond.true.60
  %cond67 = phi i32 [ 213, %cond.true.60 ], [ %xor65, %cond.false.61 ], !dbg !1208
  store i32 %cond67, i32* %sd, align 4, !dbg !1214
  br label %if.end.68

if.end.68:                                        ; preds = %cond.end.66, %cond.end.54
  br label %if.end.69

if.end.69:                                        ; preds = %if.end.68, %if.end.39
  %27 = load i32, i32* %sd, align 4, !dbg !1215
  store i32 %27, i32* %retval, !dbg !1216
  br label %return, !dbg !1216

return:                                           ; preds = %if.end.69, %if.then.12
  %28 = load i32, i32* %retval, !dbg !1217
  ret i32 %28, !dbg !1217
}

declare i32 @linear2alaw(...) #3

declare i32 @alaw2linear(...) #3

; Function Attrs: nounwind uwtable
define i32 @tandem_adjust_ulaw(i32 %sr, i32 %se, i32 %y, i32 %i, i32 %sign, i16* %qtab) #0 {
entry:
  %retval = alloca i32, align 4
  %sr.addr = alloca i32, align 4
  %se.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %i.addr = alloca i32, align 4
  %sign.addr = alloca i32, align 4
  %qtab.addr = alloca i16*, align 8
  %sp = alloca i8, align 1
  %dx = alloca i16, align 2
  %id = alloca i8, align 1
  %sd = alloca i32, align 4
  %im = alloca i32, align 4
  %imx = alloca i32, align 4
  store i32 %sr, i32* %sr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sr.addr, metadata !1218, metadata !67), !dbg !1219
  store i32 %se, i32* %se.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %se.addr, metadata !1220, metadata !67), !dbg !1221
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !1222, metadata !67), !dbg !1223
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !1224, metadata !67), !dbg !1225
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !1226, metadata !67), !dbg !1227
  store i16* %qtab, i16** %qtab.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %qtab.addr, metadata !1228, metadata !67), !dbg !1229
  call void @llvm.dbg.declare(metadata i8* %sp, metadata !1230, metadata !67), !dbg !1231
  call void @llvm.dbg.declare(metadata i16* %dx, metadata !1232, metadata !67), !dbg !1233
  call void @llvm.dbg.declare(metadata i8* %id, metadata !1234, metadata !67), !dbg !1235
  call void @llvm.dbg.declare(metadata i32* %sd, metadata !1236, metadata !67), !dbg !1237
  call void @llvm.dbg.declare(metadata i32* %im, metadata !1238, metadata !67), !dbg !1239
  call void @llvm.dbg.declare(metadata i32* %imx, metadata !1240, metadata !67), !dbg !1241
  %0 = load i32, i32* %sr.addr, align 4, !dbg !1242
  %cmp = icmp sle i32 %0, -32768, !dbg !1244
  br i1 %cmp, label %if.then, label %if.end, !dbg !1245

if.then:                                          ; preds = %entry
  store i32 0, i32* %sr.addr, align 4, !dbg !1246
  br label %if.end, !dbg !1247

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %sr.addr, align 4, !dbg !1248
  %shl = shl i32 %1, 2, !dbg !1249
  %call = call i32 (i32, ...) bitcast (i32 (...)* @linear2ulaw to i32 (i32, ...)*)(i32 %shl), !dbg !1250
  %conv = trunc i32 %call to i8, !dbg !1250
  store i8 %conv, i8* %sp, align 1, !dbg !1251
  %2 = load i8, i8* %sp, align 1, !dbg !1252
  %conv1 = zext i8 %2 to i32, !dbg !1252
  %call2 = call i32 (i32, ...) bitcast (i32 (...)* @ulaw2linear to i32 (i32, ...)*)(i32 %conv1), !dbg !1253
  %shr = ashr i32 %call2, 2, !dbg !1254
  %3 = load i32, i32* %se.addr, align 4, !dbg !1255
  %sub = sub nsw i32 %shr, %3, !dbg !1256
  %conv3 = trunc i32 %sub to i16, !dbg !1257
  store i16 %conv3, i16* %dx, align 2, !dbg !1258
  %4 = load i16, i16* %dx, align 2, !dbg !1259
  %conv4 = sext i16 %4 to i32, !dbg !1259
  %5 = load i32, i32* %y.addr, align 4, !dbg !1260
  %6 = load i16*, i16** %qtab.addr, align 8, !dbg !1261
  %7 = load i32, i32* %sign.addr, align 4, !dbg !1262
  %sub5 = sub nsw i32 %7, 1, !dbg !1263
  %call6 = call i32 @quantize(i32 %conv4, i32 %5, i16* %6, i32 %sub5), !dbg !1264
  %conv7 = trunc i32 %call6 to i8, !dbg !1264
  store i8 %conv7, i8* %id, align 1, !dbg !1265
  %8 = load i8, i8* %id, align 1, !dbg !1266
  %conv8 = sext i8 %8 to i32, !dbg !1266
  %9 = load i32, i32* %i.addr, align 4, !dbg !1268
  %cmp9 = icmp eq i32 %conv8, %9, !dbg !1269
  br i1 %cmp9, label %if.then.11, label %if.else, !dbg !1270

if.then.11:                                       ; preds = %if.end
  %10 = load i8, i8* %sp, align 1, !dbg !1271
  %conv12 = zext i8 %10 to i32, !dbg !1273
  store i32 %conv12, i32* %retval, !dbg !1274
  br label %return, !dbg !1274

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %i.addr, align 4, !dbg !1275
  %12 = load i32, i32* %sign.addr, align 4, !dbg !1277
  %xor = xor i32 %11, %12, !dbg !1278
  store i32 %xor, i32* %im, align 4, !dbg !1279
  %13 = load i8, i8* %id, align 1, !dbg !1280
  %conv13 = sext i8 %13 to i32, !dbg !1280
  %14 = load i32, i32* %sign.addr, align 4, !dbg !1281
  %xor14 = xor i32 %conv13, %14, !dbg !1282
  store i32 %xor14, i32* %imx, align 4, !dbg !1283
  %15 = load i32, i32* %imx, align 4, !dbg !1284
  %16 = load i32, i32* %im, align 4, !dbg !1286
  %cmp15 = icmp sgt i32 %15, %16, !dbg !1287
  br i1 %cmp15, label %if.then.17, label %if.else.35, !dbg !1288

if.then.17:                                       ; preds = %if.else
  %17 = load i8, i8* %sp, align 1, !dbg !1289
  %conv18 = zext i8 %17 to i32, !dbg !1289
  %and = and i32 %conv18, 128, !dbg !1292
  %tobool = icmp ne i32 %and, 0, !dbg !1292
  br i1 %tobool, label %if.then.19, label %if.else.24, !dbg !1293

if.then.19:                                       ; preds = %if.then.17
  %18 = load i8, i8* %sp, align 1, !dbg !1294
  %conv20 = zext i8 %18 to i32, !dbg !1294
  %cmp21 = icmp eq i32 %conv20, 255, !dbg !1295
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !1296

cond.true:                                        ; preds = %if.then.19
  br label %cond.end, !dbg !1297

cond.false:                                       ; preds = %if.then.19
  %19 = load i8, i8* %sp, align 1, !dbg !1299
  %conv23 = zext i8 %19 to i32, !dbg !1299
  %add = add nsw i32 %conv23, 1, !dbg !1301
  br label %cond.end, !dbg !1296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 126, %cond.true ], [ %add, %cond.false ], !dbg !1296
  store i32 %cond, i32* %sd, align 4, !dbg !1302
  br label %if.end.34, !dbg !1305

if.else.24:                                       ; preds = %if.then.17
  %20 = load i8, i8* %sp, align 1, !dbg !1306
  %conv25 = zext i8 %20 to i32, !dbg !1306
  %cmp26 = icmp eq i32 %conv25, 0, !dbg !1307
  br i1 %cmp26, label %cond.true.28, label %cond.false.29, !dbg !1308

cond.true.28:                                     ; preds = %if.else.24
  br label %cond.end.32, !dbg !1309

cond.false.29:                                    ; preds = %if.else.24
  %21 = load i8, i8* %sp, align 1, !dbg !1310
  %conv30 = zext i8 %21 to i32, !dbg !1310
  %sub31 = sub nsw i32 %conv30, 1, !dbg !1311
  br label %cond.end.32, !dbg !1308

cond.end.32:                                      ; preds = %cond.false.29, %cond.true.28
  %cond33 = phi i32 [ 0, %cond.true.28 ], [ %sub31, %cond.false.29 ], !dbg !1308
  store i32 %cond33, i32* %sd, align 4, !dbg !1312
  br label %if.end.34

if.end.34:                                        ; preds = %cond.end.32, %cond.end
  br label %if.end.60, !dbg !1313

if.else.35:                                       ; preds = %if.else
  %22 = load i8, i8* %sp, align 1, !dbg !1314
  %conv36 = zext i8 %22 to i32, !dbg !1314
  %and37 = and i32 %conv36, 128, !dbg !1317
  %tobool38 = icmp ne i32 %and37, 0, !dbg !1317
  br i1 %tobool38, label %if.then.39, label %if.else.49, !dbg !1318

if.then.39:                                       ; preds = %if.else.35
  %23 = load i8, i8* %sp, align 1, !dbg !1319
  %conv40 = zext i8 %23 to i32, !dbg !1319
  %cmp41 = icmp eq i32 %conv40, 128, !dbg !1320
  br i1 %cmp41, label %cond.true.43, label %cond.false.44, !dbg !1321

cond.true.43:                                     ; preds = %if.then.39
  br label %cond.end.47, !dbg !1322

cond.false.44:                                    ; preds = %if.then.39
  %24 = load i8, i8* %sp, align 1, !dbg !1324
  %conv45 = zext i8 %24 to i32, !dbg !1324
  %sub46 = sub nsw i32 %conv45, 1, !dbg !1326
  br label %cond.end.47, !dbg !1321

cond.end.47:                                      ; preds = %cond.false.44, %cond.true.43
  %cond48 = phi i32 [ 128, %cond.true.43 ], [ %sub46, %cond.false.44 ], !dbg !1321
  store i32 %cond48, i32* %sd, align 4, !dbg !1327
  br label %if.end.59, !dbg !1330

if.else.49:                                       ; preds = %if.else.35
  %25 = load i8, i8* %sp, align 1, !dbg !1331
  %conv50 = zext i8 %25 to i32, !dbg !1331
  %cmp51 = icmp eq i32 %conv50, 127, !dbg !1332
  br i1 %cmp51, label %cond.true.53, label %cond.false.54, !dbg !1333

cond.true.53:                                     ; preds = %if.else.49
  br label %cond.end.57, !dbg !1334

cond.false.54:                                    ; preds = %if.else.49
  %26 = load i8, i8* %sp, align 1, !dbg !1335
  %conv55 = zext i8 %26 to i32, !dbg !1335
  %add56 = add nsw i32 %conv55, 1, !dbg !1336
  br label %cond.end.57, !dbg !1333

cond.end.57:                                      ; preds = %cond.false.54, %cond.true.53
  %cond58 = phi i32 [ 254, %cond.true.53 ], [ %add56, %cond.false.54 ], !dbg !1333
  store i32 %cond58, i32* %sd, align 4, !dbg !1337
  br label %if.end.59

if.end.59:                                        ; preds = %cond.end.57, %cond.end.47
  br label %if.end.60

if.end.60:                                        ; preds = %if.end.59, %if.end.34
  %27 = load i32, i32* %sd, align 4, !dbg !1338
  store i32 %27, i32* %retval, !dbg !1339
  br label %return, !dbg !1339

return:                                           ; preds = %if.end.60, %if.then.11
  %28 = load i32, i32* %retval, !dbg !1340
  ret i32 %28, !dbg !1340
}

declare i32 @linear2ulaw(...) #3

declare i32 @ulaw2linear(...) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!63, !64}
!llvm.ident = !{!65}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3, globals: !58)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/mediabench/g721/g721encode")
!2 = !{}
!3 = !{!4, !32, !36, !37, !38, !42, !45, !48, !51, !52, !55}
!4 = !DISubprogram(name: "g72x_init_state", scope: !5, file: !5, line: 93, type: !6, isLocal: false, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.g72x_state*)* @g72x_init_state, variables: !2)
!5 = !DIFile(filename: "/home/gleison/tf/Benchmarks/mediabench/g721/g721encode/tmp.c", directory: "/home/gleison/tf/Benchmarks/mediabench/g721/g721encode")
!6 = !DISubroutineType(types: !7)
!7 = !{null, !8}
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "g72x_state", file: !10, line: 49, size: 448, align: 64, elements: !11)
!10 = !DIFile(filename: "./g72x.h", directory: "/home/gleison/tf/Benchmarks/mediabench/g721/g721encode")
!11 = !{!12, !14, !16, !17, !18, !19, !23, !27, !28, !29, !30}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "yl", scope: !9, file: !10, line: 50, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "yu", scope: !9, file: !10, line: 51, baseType: !15, size: 16, align: 16, offset: 64)
!15 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "dms", scope: !9, file: !10, line: 52, baseType: !15, size: 16, align: 16, offset: 80)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "dml", scope: !9, file: !10, line: 53, baseType: !15, size: 16, align: 16, offset: 96)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !9, file: !10, line: 54, baseType: !15, size: 16, align: 16, offset: 112)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9, file: !10, line: 56, baseType: !20, size: 32, align: 16, offset: 128)
!20 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 32, align: 16, elements: !21)
!21 = !{!22}
!22 = !DISubrange(count: 2)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !9, file: !10, line: 57, baseType: !24, size: 96, align: 16, offset: 160)
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 96, align: 16, elements: !25)
!25 = !{!26}
!26 = !DISubrange(count: 6)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "pk", scope: !9, file: !10, line: 58, baseType: !20, size: 32, align: 16, offset: 256)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "dq", scope: !9, file: !10, line: 62, baseType: !24, size: 96, align: 16, offset: 288)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "sr", scope: !9, file: !10, line: 67, baseType: !20, size: 32, align: 16, offset: 384)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !9, file: !10, line: 72, baseType: !31, size: 8, align: 8, offset: 416)
!31 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!32 = !DISubprogram(name: "predictor_zero", scope: !5, file: !5, line: 120, type: !33, isLocal: false, isDefinition: true, scopeLine: 121, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.g72x_state*)* @predictor_zero, variables: !2)
!33 = !DISubroutineType(types: !34)
!34 = !{!35, !8}
!35 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!36 = !DISubprogram(name: "predictor_pole", scope: !5, file: !5, line: 136, type: !33, isLocal: false, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.g72x_state*)* @predictor_pole, variables: !2)
!37 = !DISubprogram(name: "step_size", scope: !5, file: !5, line: 147, type: !33, isLocal: false, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.g72x_state*)* @step_size, variables: !2)
!38 = !DISubprogram(name: "quantize", scope: !5, file: !5, line: 176, type: !39, isLocal: false, isDefinition: true, scopeLine: 181, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32, i16*, i32)* @quantize, variables: !2)
!39 = !DISubroutineType(types: !40)
!40 = !{!35, !35, !35, !41, !35}
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64, align: 64)
!42 = !DISubprogram(name: "reconstruct", scope: !5, file: !5, line: 226, type: !43, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32, i32)* @reconstruct, variables: !2)
!43 = !DISubroutineType(types: !44)
!44 = !{!35, !35, !35, !35}
!45 = !DISubprogram(name: "update", scope: !5, file: !5, line: 253, type: !46, isLocal: false, isDefinition: true, scopeLine: 262, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32, i32, i32, i32, i32, i32, %struct.g72x_state*)* @update, variables: !2)
!46 = !DISubroutineType(types: !47)
!47 = !{null, !35, !35, !35, !35, !35, !35, !35, !8}
!48 = !DISubprogram(name: "tandem_adjust_alaw", scope: !5, file: !5, line: 458, type: !49, isLocal: false, isDefinition: true, scopeLine: 464, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32, i32, i32, i32, i16*)* @tandem_adjust_alaw, variables: !2)
!49 = !DISubroutineType(types: !50)
!50 = !{!35, !35, !35, !35, !35, !35, !41}
!51 = !DISubprogram(name: "tandem_adjust_ulaw", scope: !5, file: !5, line: 501, type: !49, isLocal: false, isDefinition: true, scopeLine: 507, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32, i32, i32, i32, i16*)* @tandem_adjust_ulaw, variables: !2)
!52 = !DISubprogram(name: "fmult", scope: !5, file: !5, line: 68, type: !53, isLocal: true, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @fmult, variables: !2)
!53 = !DISubroutineType(types: !54)
!54 = !{!35, !35, !35}
!55 = !DISubprogram(name: "quan", scope: !5, file: !5, line: 49, type: !56, isLocal: true, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i16*, i32)* @quan, variables: !2)
!56 = !DISubroutineType(types: !57)
!57 = !{!35, !35, !41, !35}
!58 = !{!59}
!59 = !DIGlobalVariable(name: "power2", scope: !0, file: !5, line: 37, type: !60, isLocal: true, isDefinition: true, variable: [15 x i16]* @power2)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 240, align: 16, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 15)
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!66 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 1, scope: !4, file: !5, line: 94, type: !8)
!67 = !DIExpression()
!68 = !DILocation(line: 94, column: 24, scope: !4)
!69 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnta", scope: !4, file: !5, line: 95, type: !35)
!70 = !DILocation(line: 95, column: 7, scope: !4)
!71 = !DILocation(line: 97, column: 3, scope: !4)
!72 = !DILocation(line: 97, column: 14, scope: !4)
!73 = !DILocation(line: 97, column: 17, scope: !4)
!74 = !DILocation(line: 98, column: 3, scope: !4)
!75 = !DILocation(line: 98, column: 14, scope: !4)
!76 = !DILocation(line: 98, column: 17, scope: !4)
!77 = !DILocation(line: 99, column: 3, scope: !4)
!78 = !DILocation(line: 99, column: 14, scope: !4)
!79 = !DILocation(line: 99, column: 18, scope: !4)
!80 = !DILocation(line: 100, column: 3, scope: !4)
!81 = !DILocation(line: 100, column: 14, scope: !4)
!82 = !DILocation(line: 100, column: 18, scope: !4)
!83 = !DILocation(line: 101, column: 3, scope: !4)
!84 = !DILocation(line: 101, column: 14, scope: !4)
!85 = !DILocation(line: 101, column: 17, scope: !4)
!86 = !DILocation(line: 102, column: 13, scope: !87)
!87 = distinct !DILexicalBlock(scope: !4, file: !5, line: 102, column: 3)
!88 = !DILocation(line: 102, column: 8, scope: !87)
!89 = !DILocation(line: 102, column: 18, scope: !90)
!90 = !DILexicalBlockFile(scope: !91, file: !5, discriminator: 2)
!91 = !DILexicalBlockFile(scope: !92, file: !5, discriminator: 1)
!92 = distinct !DILexicalBlock(scope: !87, file: !5, line: 102, column: 3)
!93 = !DILocation(line: 102, column: 23, scope: !92)
!94 = !DILocation(line: 102, column: 3, scope: !87)
!95 = !DILocation(line: 103, column: 18, scope: !96)
!96 = distinct !DILexicalBlock(scope: !92, file: !5, line: 102, column: 36)
!97 = !DILocation(line: 103, column: 5, scope: !96)
!98 = !DILocation(line: 103, column: 16, scope: !96)
!99 = !DILocation(line: 103, column: 24, scope: !96)
!100 = !DILocation(line: 104, column: 19, scope: !96)
!101 = !DILocation(line: 104, column: 5, scope: !96)
!102 = !DILocation(line: 104, column: 16, scope: !96)
!103 = !DILocation(line: 104, column: 25, scope: !96)
!104 = !DILocation(line: 105, column: 19, scope: !96)
!105 = !DILocation(line: 105, column: 5, scope: !96)
!106 = !DILocation(line: 105, column: 16, scope: !96)
!107 = !DILocation(line: 105, column: 25, scope: !96)
!108 = !DILocation(line: 106, column: 3, scope: !96)
!109 = !DILocation(line: 102, column: 32, scope: !92)
!110 = !DILocation(line: 102, column: 3, scope: !92)
!111 = !DILocation(line: 107, column: 13, scope: !112)
!112 = distinct !DILexicalBlock(scope: !4, file: !5, line: 107, column: 3)
!113 = !DILocation(line: 107, column: 8, scope: !112)
!114 = !DILocation(line: 107, column: 18, scope: !115)
!115 = !DILexicalBlockFile(scope: !116, file: !5, discriminator: 2)
!116 = !DILexicalBlockFile(scope: !117, file: !5, discriminator: 1)
!117 = distinct !DILexicalBlock(scope: !112, file: !5, line: 107, column: 3)
!118 = !DILocation(line: 107, column: 23, scope: !117)
!119 = !DILocation(line: 107, column: 3, scope: !112)
!120 = !DILocation(line: 108, column: 18, scope: !121)
!121 = distinct !DILexicalBlock(scope: !117, file: !5, line: 107, column: 36)
!122 = !DILocation(line: 108, column: 5, scope: !121)
!123 = !DILocation(line: 108, column: 16, scope: !121)
!124 = !DILocation(line: 108, column: 24, scope: !121)
!125 = !DILocation(line: 109, column: 19, scope: !121)
!126 = !DILocation(line: 109, column: 5, scope: !121)
!127 = !DILocation(line: 109, column: 16, scope: !121)
!128 = !DILocation(line: 109, column: 25, scope: !121)
!129 = !DILocation(line: 110, column: 3, scope: !121)
!130 = !DILocation(line: 107, column: 32, scope: !117)
!131 = !DILocation(line: 107, column: 3, scope: !117)
!132 = !DILocation(line: 111, column: 3, scope: !4)
!133 = !DILocation(line: 111, column: 14, scope: !4)
!134 = !DILocation(line: 111, column: 17, scope: !4)
!135 = !DILocation(line: 112, column: 1, scope: !4)
!136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 1, scope: !32, file: !5, line: 121, type: !8)
!137 = !DILocation(line: 121, column: 24, scope: !32)
!138 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !32, file: !5, line: 122, type: !35)
!139 = !DILocation(line: 122, column: 7, scope: !32)
!140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sezi", scope: !32, file: !5, line: 123, type: !35)
!141 = !DILocation(line: 123, column: 7, scope: !32)
!142 = !DILocation(line: 125, column: 16, scope: !32)
!143 = !DILocation(line: 125, column: 27, scope: !32)
!144 = !DILocation(line: 125, column: 32, scope: !32)
!145 = !DILocation(line: 125, column: 38, scope: !32)
!146 = !DILocation(line: 125, column: 49, scope: !32)
!147 = !DILocation(line: 125, column: 10, scope: !32)
!148 = !DILocation(line: 125, column: 8, scope: !32)
!149 = !DILocation(line: 126, column: 10, scope: !150)
!150 = distinct !DILexicalBlock(scope: !32, file: !5, line: 126, column: 3)
!151 = !DILocation(line: 126, column: 8, scope: !150)
!152 = !DILocation(line: 126, column: 15, scope: !153)
!153 = !DILexicalBlockFile(scope: !154, file: !5, discriminator: 2)
!154 = !DILexicalBlockFile(scope: !155, file: !5, discriminator: 1)
!155 = distinct !DILexicalBlock(scope: !150, file: !5, line: 126, column: 3)
!156 = !DILocation(line: 126, column: 17, scope: !155)
!157 = !DILocation(line: 126, column: 3, scope: !150)
!158 = !DILocation(line: 127, column: 32, scope: !155)
!159 = !DILocation(line: 127, column: 19, scope: !155)
!160 = !DILocation(line: 127, column: 30, scope: !155)
!161 = !DILocation(line: 127, column: 35, scope: !155)
!162 = !DILocation(line: 127, column: 55, scope: !155)
!163 = !DILocation(line: 127, column: 41, scope: !155)
!164 = !DILocation(line: 127, column: 52, scope: !155)
!165 = !DILocation(line: 127, column: 13, scope: !155)
!166 = !DILocation(line: 127, column: 10, scope: !155)
!167 = !DILocation(line: 127, column: 5, scope: !155)
!168 = !DILocation(line: 126, column: 23, scope: !155)
!169 = !DILocation(line: 126, column: 3, scope: !155)
!170 = !DILocation(line: 128, column: 11, scope: !32)
!171 = !DILocation(line: 128, column: 3, scope: !32)
!172 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "an", arg: 1, scope: !52, file: !5, line: 69, type: !35)
!173 = !DILocation(line: 69, column: 9, scope: !52)
!174 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "srn", arg: 2, scope: !52, file: !5, line: 70, type: !35)
!175 = !DILocation(line: 70, column: 9, scope: !52)
!176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "anmag", scope: !52, file: !5, line: 71, type: !15)
!177 = !DILocation(line: 71, column: 9, scope: !52)
!178 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "anexp", scope: !52, file: !5, line: 71, type: !15)
!179 = !DILocation(line: 71, column: 16, scope: !52)
!180 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "anmant", scope: !52, file: !5, line: 71, type: !15)
!181 = !DILocation(line: 71, column: 23, scope: !52)
!182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wanexp", scope: !52, file: !5, line: 72, type: !15)
!183 = !DILocation(line: 72, column: 9, scope: !52)
!184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wanmag", scope: !52, file: !5, line: 72, type: !15)
!185 = !DILocation(line: 72, column: 17, scope: !52)
!186 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wanmant", scope: !52, file: !5, line: 72, type: !15)
!187 = !DILocation(line: 72, column: 25, scope: !52)
!188 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !52, file: !5, line: 73, type: !15)
!189 = !DILocation(line: 73, column: 9, scope: !52)
!190 = !DILocation(line: 75, column: 12, scope: !52)
!191 = !DILocation(line: 75, column: 15, scope: !52)
!192 = !DILocation(line: 75, column: 11, scope: !52)
!193 = !DILocation(line: 75, column: 22, scope: !194)
!194 = !DILexicalBlockFile(scope: !52, file: !5, discriminator: 1)
!195 = !DILocation(line: 75, column: 30, scope: !196)
!196 = !DILexicalBlockFile(scope: !52, file: !5, discriminator: 2)
!197 = !DILocation(line: 75, column: 29, scope: !52)
!198 = !DILocation(line: 75, column: 34, scope: !52)
!199 = !DILocation(line: 75, column: 11, scope: !200)
!200 = !DILexicalBlockFile(scope: !201, file: !5, discriminator: 4)
!201 = !DILexicalBlockFile(scope: !52, file: !5, discriminator: 3)
!202 = !DILocation(line: 75, column: 9, scope: !52)
!203 = !DILocation(line: 76, column: 16, scope: !52)
!204 = !DILocation(line: 76, column: 11, scope: !52)
!205 = !DILocation(line: 76, column: 35, scope: !52)
!206 = !DILocation(line: 76, column: 9, scope: !52)
!207 = !DILocation(line: 77, column: 13, scope: !52)
!208 = !DILocation(line: 77, column: 19, scope: !52)
!209 = !DILocation(line: 77, column: 12, scope: !52)
!210 = !DILocation(line: 77, column: 12, scope: !194)
!211 = !DILocation(line: 77, column: 33, scope: !196)
!212 = !DILocation(line: 77, column: 39, scope: !52)
!213 = !DILocation(line: 77, column: 32, scope: !52)
!214 = !DILocation(line: 77, column: 47, scope: !215)
!215 = !DILexicalBlockFile(scope: !52, file: !5, discriminator: 4)
!216 = !DILocation(line: 77, column: 56, scope: !52)
!217 = !DILocation(line: 77, column: 53, scope: !52)
!218 = !DILocation(line: 77, column: 64, scope: !219)
!219 = !DILexicalBlockFile(scope: !52, file: !5, discriminator: 5)
!220 = !DILocation(line: 77, column: 74, scope: !52)
!221 = !DILocation(line: 77, column: 73, scope: !52)
!222 = !DILocation(line: 77, column: 70, scope: !52)
!223 = !DILocation(line: 77, column: 12, scope: !224)
!224 = !DILexicalBlockFile(scope: !225, file: !5, discriminator: 7)
!225 = !DILexicalBlockFile(scope: !52, file: !5, discriminator: 6)
!226 = !DILocation(line: 77, column: 12, scope: !227)
!227 = !DILexicalBlockFile(scope: !201, file: !5, discriminator: 8)
!228 = !DILocation(line: 77, column: 10, scope: !52)
!229 = !DILocation(line: 78, column: 12, scope: !52)
!230 = !DILocation(line: 78, column: 22, scope: !52)
!231 = !DILocation(line: 78, column: 26, scope: !52)
!232 = !DILocation(line: 78, column: 32, scope: !52)
!233 = !DILocation(line: 78, column: 18, scope: !52)
!234 = !DILocation(line: 78, column: 39, scope: !52)
!235 = !DILocation(line: 78, column: 10, scope: !52)
!236 = !DILocation(line: 80, column: 14, scope: !52)
!237 = !DILocation(line: 80, column: 24, scope: !52)
!238 = !DILocation(line: 80, column: 28, scope: !52)
!239 = !DILocation(line: 80, column: 21, scope: !52)
!240 = !DILocation(line: 80, column: 35, scope: !52)
!241 = !DILocation(line: 80, column: 43, scope: !52)
!242 = !DILocation(line: 80, column: 13, scope: !52)
!243 = !DILocation(line: 80, column: 11, scope: !52)
!244 = !DILocation(line: 81, column: 13, scope: !52)
!245 = !DILocation(line: 81, column: 20, scope: !52)
!246 = !DILocation(line: 81, column: 12, scope: !52)
!247 = !DILocation(line: 81, column: 30, scope: !194)
!248 = !DILocation(line: 81, column: 41, scope: !52)
!249 = !DILocation(line: 81, column: 38, scope: !52)
!250 = !DILocation(line: 81, column: 49, scope: !52)
!251 = !DILocation(line: 81, column: 62, scope: !196)
!252 = !DILocation(line: 81, column: 74, scope: !52)
!253 = !DILocation(line: 81, column: 73, scope: !52)
!254 = !DILocation(line: 81, column: 70, scope: !52)
!255 = !DILocation(line: 81, column: 12, scope: !200)
!256 = !DILocation(line: 81, column: 10, scope: !52)
!257 = !DILocation(line: 83, column: 13, scope: !52)
!258 = !DILocation(line: 83, column: 18, scope: !52)
!259 = !DILocation(line: 83, column: 16, scope: !52)
!260 = !DILocation(line: 83, column: 23, scope: !52)
!261 = !DILocation(line: 83, column: 11, scope: !52)
!262 = !DILocation(line: 83, column: 31, scope: !194)
!263 = !DILocation(line: 83, column: 30, scope: !52)
!264 = !DILocation(line: 83, column: 40, scope: !196)
!265 = !DILocation(line: 83, column: 3, scope: !200)
!266 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 1, scope: !36, file: !5, line: 137, type: !8)
!267 = !DILocation(line: 137, column: 24, scope: !36)
!268 = !DILocation(line: 138, column: 17, scope: !36)
!269 = !DILocation(line: 138, column: 28, scope: !36)
!270 = !DILocation(line: 138, column: 33, scope: !36)
!271 = !DILocation(line: 138, column: 39, scope: !36)
!272 = !DILocation(line: 138, column: 50, scope: !36)
!273 = !DILocation(line: 138, column: 11, scope: !36)
!274 = !DILocation(line: 139, column: 17, scope: !36)
!275 = !DILocation(line: 139, column: 28, scope: !36)
!276 = !DILocation(line: 139, column: 33, scope: !36)
!277 = !DILocation(line: 139, column: 39, scope: !36)
!278 = !DILocation(line: 139, column: 50, scope: !36)
!279 = !DILocation(line: 139, column: 11, scope: !36)
!280 = !DILocation(line: 138, column: 57, scope: !36)
!281 = !DILocation(line: 138, column: 3, scope: !36)
!282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 1, scope: !37, file: !5, line: 148, type: !8)
!283 = !DILocation(line: 148, column: 24, scope: !37)
!284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !37, file: !5, line: 149, type: !35)
!285 = !DILocation(line: 149, column: 7, scope: !37)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dif", scope: !37, file: !5, line: 150, type: !35)
!287 = !DILocation(line: 150, column: 7, scope: !37)
!288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "al", scope: !37, file: !5, line: 151, type: !35)
!289 = !DILocation(line: 151, column: 7, scope: !37)
!290 = !DILocation(line: 153, column: 7, scope: !291)
!291 = distinct !DILexicalBlock(scope: !37, file: !5, line: 153, column: 7)
!292 = !DILocation(line: 153, column: 18, scope: !291)
!293 = !DILocation(line: 153, column: 21, scope: !291)
!294 = !DILocation(line: 153, column: 7, scope: !37)
!295 = !DILocation(line: 154, column: 13, scope: !291)
!296 = !DILocation(line: 154, column: 24, scope: !291)
!297 = !DILocation(line: 154, column: 12, scope: !291)
!298 = !DILocation(line: 154, column: 5, scope: !291)
!299 = !DILocation(line: 156, column: 9, scope: !300)
!300 = distinct !DILexicalBlock(scope: !291, file: !5, line: 155, column: 8)
!301 = !DILocation(line: 156, column: 20, scope: !300)
!302 = !DILocation(line: 156, column: 23, scope: !300)
!303 = !DILocation(line: 156, column: 7, scope: !300)
!304 = !DILocation(line: 157, column: 11, scope: !300)
!305 = !DILocation(line: 157, column: 22, scope: !300)
!306 = !DILocation(line: 157, column: 27, scope: !300)
!307 = !DILocation(line: 157, column: 25, scope: !300)
!308 = !DILocation(line: 157, column: 9, scope: !300)
!309 = !DILocation(line: 158, column: 10, scope: !300)
!310 = !DILocation(line: 158, column: 21, scope: !300)
!311 = !DILocation(line: 158, column: 24, scope: !300)
!312 = !DILocation(line: 158, column: 8, scope: !300)
!313 = !DILocation(line: 159, column: 9, scope: !314)
!314 = distinct !DILexicalBlock(scope: !300, file: !5, line: 159, column: 9)
!315 = !DILocation(line: 159, column: 13, scope: !314)
!316 = !DILocation(line: 159, column: 9, scope: !300)
!317 = !DILocation(line: 160, column: 13, scope: !314)
!318 = !DILocation(line: 160, column: 19, scope: !314)
!319 = !DILocation(line: 160, column: 17, scope: !314)
!320 = !DILocation(line: 160, column: 23, scope: !314)
!321 = !DILocation(line: 160, column: 9, scope: !314)
!322 = !DILocation(line: 160, column: 7, scope: !314)
!323 = !DILocation(line: 161, column: 14, scope: !324)
!324 = distinct !DILexicalBlock(scope: !314, file: !5, line: 161, column: 14)
!325 = !DILocation(line: 161, column: 18, scope: !324)
!326 = !DILocation(line: 161, column: 14, scope: !314)
!327 = !DILocation(line: 162, column: 13, scope: !324)
!328 = !DILocation(line: 162, column: 19, scope: !324)
!329 = !DILocation(line: 162, column: 17, scope: !324)
!330 = !DILocation(line: 162, column: 22, scope: !324)
!331 = !DILocation(line: 162, column: 30, scope: !324)
!332 = !DILocation(line: 162, column: 9, scope: !324)
!333 = !DILocation(line: 162, column: 7, scope: !324)
!334 = !DILocation(line: 163, column: 13, scope: !300)
!335 = !DILocation(line: 163, column: 5, scope: !300)
!336 = !DILocation(line: 165, column: 1, scope: !37)
!337 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "d", arg: 1, scope: !38, file: !5, line: 177, type: !35)
!338 = !DILocation(line: 177, column: 9, scope: !38)
!339 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !38, file: !5, line: 178, type: !35)
!340 = !DILocation(line: 178, column: 9, scope: !38)
!341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 3, scope: !38, file: !5, line: 179, type: !41)
!342 = !DILocation(line: 179, column: 12, scope: !38)
!343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 4, scope: !38, file: !5, line: 180, type: !35)
!344 = !DILocation(line: 180, column: 9, scope: !38)
!345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dqm", scope: !38, file: !5, line: 182, type: !15)
!346 = !DILocation(line: 182, column: 9, scope: !38)
!347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exp", scope: !38, file: !5, line: 183, type: !15)
!348 = !DILocation(line: 183, column: 9, scope: !38)
!349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mant", scope: !38, file: !5, line: 184, type: !15)
!350 = !DILocation(line: 184, column: 9, scope: !38)
!351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dl", scope: !38, file: !5, line: 185, type: !15)
!352 = !DILocation(line: 185, column: 9, scope: !38)
!353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dln", scope: !38, file: !5, line: 186, type: !15)
!354 = !DILocation(line: 186, column: 9, scope: !38)
!355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !38, file: !5, line: 187, type: !35)
!356 = !DILocation(line: 187, column: 7, scope: !38)
!357 = !DILocation(line: 194, column: 13, scope: !38)
!358 = !DILocation(line: 194, column: 9, scope: !38)
!359 = !DILocation(line: 194, column: 7, scope: !38)
!360 = !DILocation(line: 195, column: 14, scope: !38)
!361 = !DILocation(line: 195, column: 18, scope: !38)
!362 = !DILocation(line: 195, column: 9, scope: !38)
!363 = !DILocation(line: 195, column: 7, scope: !38)
!364 = !DILocation(line: 196, column: 12, scope: !38)
!365 = !DILocation(line: 196, column: 16, scope: !38)
!366 = !DILocation(line: 196, column: 25, scope: !38)
!367 = !DILocation(line: 196, column: 22, scope: !38)
!368 = !DILocation(line: 196, column: 30, scope: !38)
!369 = !DILocation(line: 196, column: 10, scope: !38)
!370 = !DILocation(line: 196, column: 8, scope: !38)
!371 = !DILocation(line: 197, column: 9, scope: !38)
!372 = !DILocation(line: 197, column: 13, scope: !38)
!373 = !DILocation(line: 197, column: 21, scope: !38)
!374 = !DILocation(line: 197, column: 19, scope: !38)
!375 = !DILocation(line: 197, column: 8, scope: !38)
!376 = !DILocation(line: 197, column: 6, scope: !38)
!377 = !DILocation(line: 204, column: 9, scope: !38)
!378 = !DILocation(line: 204, column: 15, scope: !38)
!379 = !DILocation(line: 204, column: 17, scope: !38)
!380 = !DILocation(line: 204, column: 12, scope: !38)
!381 = !DILocation(line: 204, column: 7, scope: !38)
!382 = !DILocation(line: 211, column: 12, scope: !38)
!383 = !DILocation(line: 211, column: 17, scope: !38)
!384 = !DILocation(line: 211, column: 24, scope: !38)
!385 = !DILocation(line: 211, column: 7, scope: !38)
!386 = !DILocation(line: 211, column: 5, scope: !38)
!387 = !DILocation(line: 212, column: 7, scope: !388)
!388 = distinct !DILexicalBlock(scope: !38, file: !5, line: 212, column: 7)
!389 = !DILocation(line: 212, column: 9, scope: !388)
!390 = !DILocation(line: 212, column: 7, scope: !38)
!391 = !DILocation(line: 213, column: 14, scope: !388)
!392 = !DILocation(line: 213, column: 19, scope: !388)
!393 = !DILocation(line: 213, column: 25, scope: !388)
!394 = !DILocation(line: 213, column: 31, scope: !388)
!395 = !DILocation(line: 213, column: 29, scope: !388)
!396 = !DILocation(line: 213, column: 5, scope: !388)
!397 = !DILocation(line: 214, column: 12, scope: !398)
!398 = distinct !DILexicalBlock(scope: !388, file: !5, line: 214, column: 12)
!399 = !DILocation(line: 214, column: 14, scope: !398)
!400 = !DILocation(line: 214, column: 12, scope: !388)
!401 = !DILocation(line: 215, column: 14, scope: !398)
!402 = !DILocation(line: 215, column: 19, scope: !398)
!403 = !DILocation(line: 215, column: 25, scope: !398)
!404 = !DILocation(line: 215, column: 5, scope: !398)
!405 = !DILocation(line: 217, column: 13, scope: !398)
!406 = !DILocation(line: 217, column: 5, scope: !398)
!407 = !DILocation(line: 218, column: 1, scope: !38)
!408 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 1, scope: !55, file: !5, line: 50, type: !35)
!409 = !DILocation(line: 50, column: 9, scope: !55)
!410 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "table", arg: 2, scope: !55, file: !5, line: 51, type: !41)
!411 = !DILocation(line: 51, column: 12, scope: !55)
!412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 3, scope: !55, file: !5, line: 52, type: !35)
!413 = !DILocation(line: 52, column: 9, scope: !55)
!414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !55, file: !5, line: 53, type: !35)
!415 = !DILocation(line: 53, column: 7, scope: !55)
!416 = !DILocation(line: 55, column: 10, scope: !417)
!417 = distinct !DILexicalBlock(scope: !55, file: !5, line: 55, column: 3)
!418 = !DILocation(line: 55, column: 8, scope: !417)
!419 = !DILocation(line: 55, column: 15, scope: !420)
!420 = !DILexicalBlockFile(scope: !421, file: !5, discriminator: 2)
!421 = !DILexicalBlockFile(scope: !422, file: !5, discriminator: 1)
!422 = distinct !DILexicalBlock(scope: !417, file: !5, line: 55, column: 3)
!423 = !DILocation(line: 55, column: 19, scope: !422)
!424 = !DILocation(line: 55, column: 17, scope: !422)
!425 = !DILocation(line: 55, column: 3, scope: !417)
!426 = !DILocation(line: 56, column: 9, scope: !427)
!427 = distinct !DILexicalBlock(scope: !422, file: !5, line: 56, column: 9)
!428 = !DILocation(line: 56, column: 21, scope: !427)
!429 = !DILocation(line: 56, column: 15, scope: !427)
!430 = !DILocation(line: 56, column: 13, scope: !427)
!431 = !DILocation(line: 56, column: 9, scope: !422)
!432 = !DILocation(line: 57, column: 7, scope: !427)
!433 = !DILocation(line: 56, column: 21, scope: !434)
!434 = !DILexicalBlockFile(scope: !427, file: !5, discriminator: 1)
!435 = !DILocation(line: 55, column: 26, scope: !422)
!436 = !DILocation(line: 55, column: 3, scope: !422)
!437 = !DILocation(line: 58, column: 11, scope: !55)
!438 = !DILocation(line: 58, column: 3, scope: !55)
!439 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 1, scope: !42, file: !5, line: 227, type: !35)
!440 = !DILocation(line: 227, column: 9, scope: !42)
!441 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dqln", arg: 2, scope: !42, file: !5, line: 228, type: !35)
!442 = !DILocation(line: 228, column: 9, scope: !42)
!443 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !42, file: !5, line: 229, type: !35)
!444 = !DILocation(line: 229, column: 9, scope: !42)
!445 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dql", scope: !42, file: !5, line: 231, type: !15)
!446 = !DILocation(line: 231, column: 9, scope: !42)
!447 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dex", scope: !42, file: !5, line: 232, type: !15)
!448 = !DILocation(line: 232, column: 9, scope: !42)
!449 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dqt", scope: !42, file: !5, line: 233, type: !15)
!450 = !DILocation(line: 233, column: 9, scope: !42)
!451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dq", scope: !42, file: !5, line: 234, type: !15)
!452 = !DILocation(line: 234, column: 9, scope: !42)
!453 = !DILocation(line: 236, column: 9, scope: !42)
!454 = !DILocation(line: 236, column: 17, scope: !42)
!455 = !DILocation(line: 236, column: 19, scope: !42)
!456 = !DILocation(line: 236, column: 14, scope: !42)
!457 = !DILocation(line: 236, column: 7, scope: !42)
!458 = !DILocation(line: 238, column: 7, scope: !459)
!459 = distinct !DILexicalBlock(scope: !42, file: !5, line: 238, column: 7)
!460 = !DILocation(line: 238, column: 11, scope: !459)
!461 = !DILocation(line: 238, column: 7, scope: !42)
!462 = !DILocation(line: 239, column: 14, scope: !463)
!463 = distinct !DILexicalBlock(scope: !459, file: !5, line: 238, column: 16)
!464 = !DILocation(line: 239, column: 13, scope: !463)
!465 = !DILocation(line: 239, column: 5, scope: !463)
!466 = !DILocation(line: 241, column: 12, scope: !467)
!467 = distinct !DILexicalBlock(scope: !459, file: !5, line: 240, column: 10)
!468 = !DILocation(line: 241, column: 16, scope: !467)
!469 = !DILocation(line: 241, column: 22, scope: !467)
!470 = !DILocation(line: 241, column: 11, scope: !467)
!471 = !DILocation(line: 241, column: 9, scope: !467)
!472 = !DILocation(line: 242, column: 18, scope: !467)
!473 = !DILocation(line: 242, column: 22, scope: !467)
!474 = !DILocation(line: 242, column: 15, scope: !467)
!475 = !DILocation(line: 242, column: 11, scope: !467)
!476 = !DILocation(line: 242, column: 9, scope: !467)
!477 = !DILocation(line: 243, column: 11, scope: !467)
!478 = !DILocation(line: 243, column: 15, scope: !467)
!479 = !DILocation(line: 243, column: 30, scope: !467)
!480 = !DILocation(line: 243, column: 28, scope: !467)
!481 = !DILocation(line: 243, column: 21, scope: !467)
!482 = !DILocation(line: 243, column: 10, scope: !467)
!483 = !DILocation(line: 243, column: 8, scope: !467)
!484 = !DILocation(line: 244, column: 14, scope: !467)
!485 = !DILocation(line: 244, column: 13, scope: !467)
!486 = !DILocation(line: 244, column: 23, scope: !487)
!487 = !DILexicalBlockFile(scope: !467, file: !5, discriminator: 1)
!488 = !DILocation(line: 244, column: 26, scope: !467)
!489 = !DILocation(line: 244, column: 38, scope: !490)
!490 = !DILexicalBlockFile(scope: !467, file: !5, discriminator: 2)
!491 = !DILocation(line: 244, column: 5, scope: !492)
!492 = !DILexicalBlockFile(scope: !493, file: !5, discriminator: 4)
!493 = !DILexicalBlockFile(scope: !467, file: !5, discriminator: 3)
!494 = !DILocation(line: 246, column: 1, scope: !42)
!495 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "code_size", arg: 1, scope: !45, file: !5, line: 254, type: !35)
!496 = !DILocation(line: 254, column: 9, scope: !45)
!497 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !45, file: !5, line: 255, type: !35)
!498 = !DILocation(line: 255, column: 9, scope: !45)
!499 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wi", arg: 3, scope: !45, file: !5, line: 256, type: !35)
!500 = !DILocation(line: 256, column: 9, scope: !45)
!501 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fi", arg: 4, scope: !45, file: !5, line: 257, type: !35)
!502 = !DILocation(line: 257, column: 9, scope: !45)
!503 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dq", arg: 5, scope: !45, file: !5, line: 258, type: !35)
!504 = !DILocation(line: 258, column: 9, scope: !45)
!505 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sr", arg: 6, scope: !45, file: !5, line: 259, type: !35)
!506 = !DILocation(line: 259, column: 9, scope: !45)
!507 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dqsez", arg: 7, scope: !45, file: !5, line: 260, type: !35)
!508 = !DILocation(line: 260, column: 9, scope: !45)
!509 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state_ptr", arg: 8, scope: !45, file: !5, line: 261, type: !8)
!510 = !DILocation(line: 261, column: 24, scope: !45)
!511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cnt", scope: !45, file: !5, line: 263, type: !35)
!512 = !DILocation(line: 263, column: 7, scope: !45)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mag", scope: !45, file: !5, line: 264, type: !15)
!514 = !DILocation(line: 264, column: 9, scope: !45)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "exp", scope: !45, file: !5, line: 264, type: !15)
!516 = !DILocation(line: 264, column: 14, scope: !45)
!517 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mant", scope: !45, file: !5, line: 264, type: !15)
!518 = !DILocation(line: 264, column: 19, scope: !45)
!519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a2p", scope: !45, file: !5, line: 265, type: !15)
!520 = !DILocation(line: 265, column: 9, scope: !45)
!521 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a1ul", scope: !45, file: !5, line: 266, type: !15)
!522 = !DILocation(line: 266, column: 9, scope: !45)
!523 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ua2", scope: !45, file: !5, line: 267, type: !15)
!524 = !DILocation(line: 267, column: 9, scope: !45)
!525 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pks1", scope: !45, file: !5, line: 267, type: !15)
!526 = !DILocation(line: 267, column: 14, scope: !45)
!527 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uga2a", scope: !45, file: !5, line: 268, type: !15)
!528 = !DILocation(line: 268, column: 9, scope: !45)
!529 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fa1", scope: !45, file: !5, line: 268, type: !15)
!530 = !DILocation(line: 268, column: 16, scope: !45)
!531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "uga2b", scope: !45, file: !5, line: 269, type: !15)
!532 = !DILocation(line: 269, column: 9, scope: !45)
!533 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tr", scope: !45, file: !5, line: 270, type: !31)
!534 = !DILocation(line: 270, column: 8, scope: !45)
!535 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ylint", scope: !45, file: !5, line: 271, type: !15)
!536 = !DILocation(line: 271, column: 9, scope: !45)
!537 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "thr2", scope: !45, file: !5, line: 271, type: !15)
!538 = !DILocation(line: 271, column: 16, scope: !45)
!539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dqthr", scope: !45, file: !5, line: 271, type: !15)
!540 = !DILocation(line: 271, column: 22, scope: !45)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ylfrac", scope: !45, file: !5, line: 272, type: !15)
!542 = !DILocation(line: 272, column: 9, scope: !45)
!543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "thr1", scope: !45, file: !5, line: 272, type: !15)
!544 = !DILocation(line: 272, column: 17, scope: !45)
!545 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pk0", scope: !45, file: !5, line: 273, type: !15)
!546 = !DILocation(line: 273, column: 9, scope: !45)
!547 = !DILocation(line: 275, column: 10, scope: !45)
!548 = !DILocation(line: 275, column: 16, scope: !45)
!549 = !DILocation(line: 275, column: 9, scope: !45)
!550 = !DILocation(line: 275, column: 7, scope: !45)
!551 = !DILocation(line: 277, column: 9, scope: !45)
!552 = !DILocation(line: 277, column: 12, scope: !45)
!553 = !DILocation(line: 277, column: 7, scope: !45)
!554 = !DILocation(line: 279, column: 11, scope: !45)
!555 = !DILocation(line: 279, column: 22, scope: !45)
!556 = !DILocation(line: 279, column: 25, scope: !45)
!557 = !DILocation(line: 279, column: 9, scope: !45)
!558 = !DILocation(line: 280, column: 13, scope: !45)
!559 = !DILocation(line: 280, column: 24, scope: !45)
!560 = !DILocation(line: 280, column: 27, scope: !45)
!561 = !DILocation(line: 280, column: 34, scope: !45)
!562 = !DILocation(line: 280, column: 12, scope: !45)
!563 = !DILocation(line: 280, column: 10, scope: !45)
!564 = !DILocation(line: 281, column: 16, scope: !45)
!565 = !DILocation(line: 281, column: 14, scope: !45)
!566 = !DILocation(line: 281, column: 27, scope: !45)
!567 = !DILocation(line: 281, column: 24, scope: !45)
!568 = !DILocation(line: 281, column: 10, scope: !45)
!569 = !DILocation(line: 281, column: 8, scope: !45)
!570 = !DILocation(line: 282, column: 11, scope: !45)
!571 = !DILocation(line: 282, column: 17, scope: !45)
!572 = !DILocation(line: 282, column: 10, scope: !45)
!573 = !DILocation(line: 282, column: 10, scope: !574)
!574 = !DILexicalBlockFile(scope: !45, file: !5, discriminator: 1)
!575 = !DILocation(line: 282, column: 35, scope: !576)
!576 = !DILexicalBlockFile(scope: !45, file: !5, discriminator: 2)
!577 = !DILocation(line: 282, column: 10, scope: !578)
!578 = !DILexicalBlockFile(scope: !579, file: !5, discriminator: 4)
!579 = !DILexicalBlockFile(scope: !45, file: !5, discriminator: 3)
!580 = !DILocation(line: 282, column: 8, scope: !45)
!581 = !DILocation(line: 283, column: 12, scope: !45)
!582 = !DILocation(line: 283, column: 20, scope: !45)
!583 = !DILocation(line: 283, column: 25, scope: !45)
!584 = !DILocation(line: 283, column: 17, scope: !45)
!585 = !DILocation(line: 283, column: 32, scope: !45)
!586 = !DILocation(line: 283, column: 11, scope: !45)
!587 = !DILocation(line: 283, column: 9, scope: !45)
!588 = !DILocation(line: 284, column: 7, scope: !589)
!589 = distinct !DILexicalBlock(scope: !45, file: !5, line: 284, column: 7)
!590 = !DILocation(line: 284, column: 18, scope: !589)
!591 = !DILocation(line: 284, column: 21, scope: !589)
!592 = !DILocation(line: 284, column: 7, scope: !45)
!593 = !DILocation(line: 285, column: 8, scope: !589)
!594 = !DILocation(line: 285, column: 5, scope: !589)
!595 = !DILocation(line: 286, column: 12, scope: !596)
!596 = distinct !DILexicalBlock(scope: !589, file: !5, line: 286, column: 12)
!597 = !DILocation(line: 286, column: 19, scope: !596)
!598 = !DILocation(line: 286, column: 16, scope: !596)
!599 = !DILocation(line: 286, column: 12, scope: !589)
!600 = !DILocation(line: 287, column: 8, scope: !596)
!601 = !DILocation(line: 287, column: 5, scope: !596)
!602 = !DILocation(line: 289, column: 8, scope: !596)
!603 = !DILocation(line: 297, column: 19, scope: !45)
!604 = !DILocation(line: 297, column: 25, scope: !45)
!605 = !DILocation(line: 297, column: 30, scope: !45)
!606 = !DILocation(line: 297, column: 28, scope: !45)
!607 = !DILocation(line: 297, column: 33, scope: !45)
!608 = !DILocation(line: 297, column: 21, scope: !45)
!609 = !DILocation(line: 297, column: 3, scope: !45)
!610 = !DILocation(line: 297, column: 14, scope: !45)
!611 = !DILocation(line: 297, column: 17, scope: !45)
!612 = !DILocation(line: 300, column: 7, scope: !613)
!613 = distinct !DILexicalBlock(scope: !45, file: !5, line: 300, column: 7)
!614 = !DILocation(line: 300, column: 18, scope: !613)
!615 = !DILocation(line: 300, column: 21, scope: !613)
!616 = !DILocation(line: 300, column: 7, scope: !45)
!617 = !DILocation(line: 301, column: 5, scope: !613)
!618 = !DILocation(line: 301, column: 16, scope: !613)
!619 = !DILocation(line: 301, column: 19, scope: !613)
!620 = !DILocation(line: 302, column: 12, scope: !621)
!621 = distinct !DILexicalBlock(scope: !613, file: !5, line: 302, column: 12)
!622 = !DILocation(line: 302, column: 23, scope: !621)
!623 = !DILocation(line: 302, column: 26, scope: !621)
!624 = !DILocation(line: 302, column: 12, scope: !613)
!625 = !DILocation(line: 303, column: 5, scope: !621)
!626 = !DILocation(line: 303, column: 16, scope: !621)
!627 = !DILocation(line: 303, column: 19, scope: !621)
!628 = !DILocation(line: 307, column: 20, scope: !45)
!629 = !DILocation(line: 307, column: 31, scope: !45)
!630 = !DILocation(line: 307, column: 39, scope: !45)
!631 = !DILocation(line: 307, column: 50, scope: !45)
!632 = !DILocation(line: 307, column: 38, scope: !45)
!633 = !DILocation(line: 307, column: 54, scope: !45)
!634 = !DILocation(line: 307, column: 34, scope: !45)
!635 = !DILocation(line: 307, column: 3, scope: !45)
!636 = !DILocation(line: 307, column: 14, scope: !45)
!637 = !DILocation(line: 307, column: 17, scope: !45)
!638 = !DILocation(line: 312, column: 7, scope: !639)
!639 = distinct !DILexicalBlock(scope: !45, file: !5, line: 312, column: 7)
!640 = !DILocation(line: 312, column: 10, scope: !639)
!641 = !DILocation(line: 312, column: 7, scope: !45)
!642 = !DILocation(line: 313, column: 5, scope: !643)
!643 = distinct !DILexicalBlock(scope: !639, file: !5, line: 312, column: 16)
!644 = !DILocation(line: 313, column: 16, scope: !643)
!645 = !DILocation(line: 313, column: 21, scope: !643)
!646 = !DILocation(line: 314, column: 5, scope: !643)
!647 = !DILocation(line: 314, column: 16, scope: !643)
!648 = !DILocation(line: 314, column: 21, scope: !643)
!649 = !DILocation(line: 315, column: 5, scope: !643)
!650 = !DILocation(line: 315, column: 16, scope: !643)
!651 = !DILocation(line: 315, column: 21, scope: !643)
!652 = !DILocation(line: 316, column: 5, scope: !643)
!653 = !DILocation(line: 316, column: 16, scope: !643)
!654 = !DILocation(line: 316, column: 21, scope: !643)
!655 = !DILocation(line: 317, column: 5, scope: !643)
!656 = !DILocation(line: 317, column: 16, scope: !643)
!657 = !DILocation(line: 317, column: 21, scope: !643)
!658 = !DILocation(line: 318, column: 5, scope: !643)
!659 = !DILocation(line: 318, column: 16, scope: !643)
!660 = !DILocation(line: 318, column: 21, scope: !643)
!661 = !DILocation(line: 319, column: 5, scope: !643)
!662 = !DILocation(line: 319, column: 16, scope: !643)
!663 = !DILocation(line: 319, column: 21, scope: !643)
!664 = !DILocation(line: 320, column: 5, scope: !643)
!665 = !DILocation(line: 320, column: 16, scope: !643)
!666 = !DILocation(line: 320, column: 21, scope: !643)
!667 = !DILocation(line: 321, column: 3, scope: !643)
!668 = !DILocation(line: 322, column: 12, scope: !669)
!669 = distinct !DILexicalBlock(scope: !639, file: !5, line: 321, column: 10)
!670 = !DILocation(line: 322, column: 18, scope: !669)
!671 = !DILocation(line: 322, column: 29, scope: !669)
!672 = !DILocation(line: 322, column: 16, scope: !669)
!673 = !DILocation(line: 322, column: 10, scope: !669)
!674 = !DILocation(line: 325, column: 11, scope: !669)
!675 = !DILocation(line: 325, column: 22, scope: !669)
!676 = !DILocation(line: 325, column: 30, scope: !669)
!677 = !DILocation(line: 325, column: 41, scope: !669)
!678 = !DILocation(line: 325, column: 46, scope: !669)
!679 = !DILocation(line: 325, column: 27, scope: !669)
!680 = !DILocation(line: 325, column: 9, scope: !669)
!681 = !DILocation(line: 326, column: 9, scope: !682)
!682 = distinct !DILexicalBlock(scope: !669, file: !5, line: 326, column: 9)
!683 = !DILocation(line: 326, column: 15, scope: !682)
!684 = !DILocation(line: 326, column: 9, scope: !669)
!685 = !DILocation(line: 327, column: 14, scope: !686)
!686 = distinct !DILexicalBlock(scope: !682, file: !5, line: 326, column: 21)
!687 = !DILocation(line: 327, column: 13, scope: !686)
!688 = !DILocation(line: 327, column: 22, scope: !689)
!689 = !DILexicalBlockFile(scope: !686, file: !5, discriminator: 1)
!690 = !DILocation(line: 327, column: 33, scope: !686)
!691 = !DILocation(line: 327, column: 22, scope: !686)
!692 = !DILocation(line: 327, column: 41, scope: !693)
!693 = !DILexicalBlockFile(scope: !686, file: !5, discriminator: 2)
!694 = !DILocation(line: 327, column: 52, scope: !686)
!695 = !DILocation(line: 327, column: 41, scope: !686)
!696 = !DILocation(line: 327, column: 40, scope: !686)
!697 = !DILocation(line: 327, column: 13, scope: !698)
!698 = !DILexicalBlockFile(scope: !699, file: !5, discriminator: 4)
!699 = !DILexicalBlockFile(scope: !686, file: !5, discriminator: 3)
!700 = !DILocation(line: 327, column: 11, scope: !686)
!701 = !DILocation(line: 328, column: 11, scope: !702)
!702 = distinct !DILexicalBlock(scope: !686, file: !5, line: 328, column: 11)
!703 = !DILocation(line: 328, column: 15, scope: !702)
!704 = !DILocation(line: 328, column: 11, scope: !686)
!705 = !DILocation(line: 329, column: 13, scope: !702)
!706 = !DILocation(line: 329, column: 9, scope: !702)
!707 = !DILocation(line: 330, column: 16, scope: !708)
!708 = distinct !DILexicalBlock(scope: !702, file: !5, line: 330, column: 16)
!709 = !DILocation(line: 330, column: 20, scope: !708)
!710 = !DILocation(line: 330, column: 16, scope: !702)
!711 = !DILocation(line: 331, column: 13, scope: !708)
!712 = !DILocation(line: 331, column: 9, scope: !708)
!713 = !DILocation(line: 333, column: 16, scope: !708)
!714 = !DILocation(line: 333, column: 20, scope: !708)
!715 = !DILocation(line: 333, column: 13, scope: !708)
!716 = !DILocation(line: 335, column: 11, scope: !717)
!717 = distinct !DILexicalBlock(scope: !686, file: !5, line: 335, column: 11)
!718 = !DILocation(line: 335, column: 17, scope: !717)
!719 = !DILocation(line: 335, column: 28, scope: !717)
!720 = !DILocation(line: 335, column: 15, scope: !717)
!721 = !DILocation(line: 335, column: 11, scope: !686)
!722 = !DILocation(line: 337, column: 13, scope: !723)
!723 = distinct !DILexicalBlock(scope: !717, file: !5, line: 337, column: 13)
!724 = !DILocation(line: 337, column: 17, scope: !723)
!725 = !DILocation(line: 337, column: 13, scope: !717)
!726 = !DILocation(line: 338, column: 15, scope: !723)
!727 = !DILocation(line: 338, column: 11, scope: !723)
!728 = !DILocation(line: 339, column: 18, scope: !729)
!729 = distinct !DILexicalBlock(scope: !723, file: !5, line: 339, column: 18)
!730 = !DILocation(line: 339, column: 22, scope: !729)
!731 = !DILocation(line: 339, column: 18, scope: !723)
!732 = !DILocation(line: 340, column: 15, scope: !729)
!733 = !DILocation(line: 340, column: 11, scope: !729)
!734 = !DILocation(line: 342, column: 15, scope: !729)
!735 = !DILocation(line: 337, column: 21, scope: !723)
!736 = !DILocation(line: 343, column: 16, scope: !737)
!737 = distinct !DILexicalBlock(scope: !717, file: !5, line: 343, column: 16)
!738 = !DILocation(line: 343, column: 20, scope: !737)
!739 = !DILocation(line: 343, column: 16, scope: !717)
!740 = !DILocation(line: 344, column: 13, scope: !737)
!741 = !DILocation(line: 344, column: 9, scope: !737)
!742 = !DILocation(line: 345, column: 16, scope: !743)
!743 = distinct !DILexicalBlock(scope: !737, file: !5, line: 345, column: 16)
!744 = !DILocation(line: 345, column: 20, scope: !743)
!745 = !DILocation(line: 345, column: 16, scope: !737)
!746 = !DILocation(line: 346, column: 13, scope: !743)
!747 = !DILocation(line: 346, column: 9, scope: !743)
!748 = !DILocation(line: 348, column: 13, scope: !743)
!749 = !DILocation(line: 349, column: 5, scope: !686)
!750 = !DILocation(line: 352, column: 23, scope: !669)
!751 = !DILocation(line: 352, column: 5, scope: !669)
!752 = !DILocation(line: 352, column: 16, scope: !669)
!753 = !DILocation(line: 352, column: 21, scope: !669)
!754 = !DILocation(line: 356, column: 24, scope: !669)
!755 = !DILocation(line: 356, column: 35, scope: !669)
!756 = !DILocation(line: 356, column: 40, scope: !669)
!757 = !DILocation(line: 356, column: 5, scope: !669)
!758 = !DILocation(line: 356, column: 16, scope: !669)
!759 = !DILocation(line: 356, column: 21, scope: !669)
!760 = !DILocation(line: 357, column: 9, scope: !761)
!761 = distinct !DILexicalBlock(scope: !669, file: !5, line: 357, column: 9)
!762 = !DILocation(line: 357, column: 15, scope: !761)
!763 = !DILocation(line: 357, column: 9, scope: !669)
!764 = !DILocation(line: 358, column: 11, scope: !765)
!765 = distinct !DILexicalBlock(scope: !761, file: !5, line: 358, column: 11)
!766 = !DILocation(line: 358, column: 16, scope: !765)
!767 = !DILocation(line: 358, column: 11, scope: !761)
!768 = !DILocation(line: 359, column: 9, scope: !765)
!769 = !DILocation(line: 359, column: 20, scope: !765)
!770 = !DILocation(line: 359, column: 25, scope: !765)
!771 = !DILocation(line: 361, column: 9, scope: !765)
!772 = !DILocation(line: 361, column: 20, scope: !765)
!773 = !DILocation(line: 361, column: 25, scope: !765)
!774 = !DILocation(line: 358, column: 19, scope: !765)
!775 = !DILocation(line: 364, column: 20, scope: !669)
!776 = !DILocation(line: 364, column: 18, scope: !669)
!777 = !DILocation(line: 364, column: 12, scope: !669)
!778 = !DILocation(line: 364, column: 10, scope: !669)
!779 = !DILocation(line: 365, column: 9, scope: !780)
!780 = distinct !DILexicalBlock(scope: !669, file: !5, line: 365, column: 9)
!781 = !DILocation(line: 365, column: 20, scope: !780)
!782 = !DILocation(line: 365, column: 28, scope: !780)
!783 = !DILocation(line: 365, column: 27, scope: !780)
!784 = !DILocation(line: 365, column: 25, scope: !780)
!785 = !DILocation(line: 365, column: 9, scope: !669)
!786 = !DILocation(line: 366, column: 26, scope: !780)
!787 = !DILocation(line: 366, column: 25, scope: !780)
!788 = !DILocation(line: 366, column: 7, scope: !780)
!789 = !DILocation(line: 366, column: 18, scope: !780)
!790 = !DILocation(line: 366, column: 23, scope: !780)
!791 = !DILocation(line: 367, column: 14, scope: !792)
!792 = distinct !DILexicalBlock(scope: !780, file: !5, line: 367, column: 14)
!793 = !DILocation(line: 367, column: 25, scope: !792)
!794 = !DILocation(line: 367, column: 32, scope: !792)
!795 = !DILocation(line: 367, column: 30, scope: !792)
!796 = !DILocation(line: 367, column: 14, scope: !780)
!797 = !DILocation(line: 368, column: 25, scope: !792)
!798 = !DILocation(line: 368, column: 7, scope: !792)
!799 = !DILocation(line: 368, column: 18, scope: !792)
!800 = !DILocation(line: 368, column: 23, scope: !792)
!801 = !DILocation(line: 371, column: 14, scope: !802)
!802 = distinct !DILexicalBlock(scope: !669, file: !5, line: 371, column: 5)
!803 = !DILocation(line: 371, column: 10, scope: !802)
!804 = !DILocation(line: 371, column: 19, scope: !805)
!805 = !DILexicalBlockFile(scope: !806, file: !5, discriminator: 2)
!806 = !DILexicalBlockFile(scope: !807, file: !5, discriminator: 1)
!807 = distinct !DILexicalBlock(scope: !802, file: !5, line: 371, column: 5)
!808 = !DILocation(line: 371, column: 23, scope: !807)
!809 = !DILocation(line: 371, column: 5, scope: !802)
!810 = !DILocation(line: 372, column: 11, scope: !811)
!811 = distinct !DILexicalBlock(scope: !812, file: !5, line: 372, column: 11)
!812 = distinct !DILexicalBlock(scope: !807, file: !5, line: 371, column: 35)
!813 = !DILocation(line: 372, column: 21, scope: !811)
!814 = !DILocation(line: 372, column: 11, scope: !812)
!815 = !DILocation(line: 373, column: 43, scope: !811)
!816 = !DILocation(line: 373, column: 30, scope: !811)
!817 = !DILocation(line: 373, column: 41, scope: !811)
!818 = !DILocation(line: 373, column: 48, scope: !811)
!819 = !DILocation(line: 373, column: 22, scope: !811)
!820 = !DILocation(line: 373, column: 9, scope: !811)
!821 = !DILocation(line: 373, column: 20, scope: !811)
!822 = !DILocation(line: 373, column: 27, scope: !811)
!823 = !DILocation(line: 375, column: 43, scope: !811)
!824 = !DILocation(line: 375, column: 30, scope: !811)
!825 = !DILocation(line: 375, column: 41, scope: !811)
!826 = !DILocation(line: 375, column: 48, scope: !811)
!827 = !DILocation(line: 375, column: 22, scope: !811)
!828 = !DILocation(line: 375, column: 9, scope: !811)
!829 = !DILocation(line: 375, column: 20, scope: !811)
!830 = !DILocation(line: 375, column: 27, scope: !811)
!831 = !DILocation(line: 376, column: 11, scope: !832)
!832 = distinct !DILexicalBlock(scope: !812, file: !5, line: 376, column: 11)
!833 = !DILocation(line: 376, column: 14, scope: !832)
!834 = !DILocation(line: 376, column: 11, scope: !812)
!835 = !DILocation(line: 377, column: 14, scope: !836)
!836 = distinct !DILexicalBlock(scope: !837, file: !5, line: 377, column: 13)
!837 = distinct !DILexicalBlock(scope: !832, file: !5, line: 376, column: 24)
!838 = !DILocation(line: 377, column: 33, scope: !836)
!839 = !DILocation(line: 377, column: 19, scope: !836)
!840 = !DILocation(line: 377, column: 30, scope: !836)
!841 = !DILocation(line: 377, column: 17, scope: !836)
!842 = !DILocation(line: 377, column: 39, scope: !836)
!843 = !DILocation(line: 377, column: 13, scope: !837)
!844 = !DILocation(line: 378, column: 24, scope: !836)
!845 = !DILocation(line: 378, column: 11, scope: !836)
!846 = !DILocation(line: 378, column: 22, scope: !836)
!847 = !DILocation(line: 378, column: 29, scope: !836)
!848 = !DILocation(line: 380, column: 24, scope: !836)
!849 = !DILocation(line: 380, column: 11, scope: !836)
!850 = !DILocation(line: 380, column: 22, scope: !836)
!851 = !DILocation(line: 380, column: 29, scope: !836)
!852 = !DILocation(line: 381, column: 7, scope: !837)
!853 = !DILocation(line: 382, column: 5, scope: !812)
!854 = !DILocation(line: 371, column: 31, scope: !807)
!855 = !DILocation(line: 371, column: 5, scope: !807)
!856 = !DILocation(line: 385, column: 12, scope: !857)
!857 = distinct !DILexicalBlock(scope: !45, file: !5, line: 385, column: 3)
!858 = !DILocation(line: 385, column: 8, scope: !857)
!859 = !DILocation(line: 385, column: 17, scope: !860)
!860 = !DILexicalBlockFile(scope: !861, file: !5, discriminator: 2)
!861 = !DILexicalBlockFile(scope: !862, file: !5, discriminator: 1)
!862 = distinct !DILexicalBlock(scope: !857, file: !5, line: 385, column: 3)
!863 = !DILocation(line: 385, column: 21, scope: !862)
!864 = !DILocation(line: 385, column: 3, scope: !857)
!865 = !DILocation(line: 386, column: 40, scope: !862)
!866 = !DILocation(line: 386, column: 44, scope: !862)
!867 = !DILocation(line: 386, column: 26, scope: !862)
!868 = !DILocation(line: 386, column: 37, scope: !862)
!869 = !DILocation(line: 386, column: 19, scope: !862)
!870 = !DILocation(line: 386, column: 5, scope: !862)
!871 = !DILocation(line: 386, column: 16, scope: !862)
!872 = !DILocation(line: 386, column: 24, scope: !862)
!873 = !DILocation(line: 385, column: 29, scope: !862)
!874 = !DILocation(line: 385, column: 3, scope: !862)
!875 = !DILocation(line: 388, column: 7, scope: !876)
!876 = distinct !DILexicalBlock(scope: !45, file: !5, line: 388, column: 7)
!877 = !DILocation(line: 388, column: 11, scope: !876)
!878 = !DILocation(line: 388, column: 7, scope: !45)
!879 = !DILocation(line: 389, column: 25, scope: !880)
!880 = distinct !DILexicalBlock(scope: !876, file: !5, line: 388, column: 17)
!881 = !DILocation(line: 389, column: 28, scope: !880)
!882 = !DILocation(line: 389, column: 24, scope: !880)
!883 = !DILocation(line: 389, column: 5, scope: !880)
!884 = !DILocation(line: 389, column: 16, scope: !880)
!885 = !DILocation(line: 389, column: 22, scope: !880)
!886 = !DILocation(line: 390, column: 3, scope: !880)
!887 = !DILocation(line: 391, column: 16, scope: !888)
!888 = distinct !DILexicalBlock(scope: !876, file: !5, line: 390, column: 10)
!889 = !DILocation(line: 391, column: 11, scope: !888)
!890 = !DILocation(line: 391, column: 9, scope: !888)
!891 = !DILocation(line: 392, column: 25, scope: !888)
!892 = !DILocation(line: 392, column: 28, scope: !888)
!893 = !DILocation(line: 392, column: 24, scope: !888)
!894 = !DILocation(line: 392, column: 37, scope: !895)
!895 = !DILexicalBlockFile(scope: !888, file: !5, discriminator: 1)
!896 = !DILocation(line: 392, column: 41, scope: !888)
!897 = !DILocation(line: 392, column: 51, scope: !888)
!898 = !DILocation(line: 392, column: 55, scope: !888)
!899 = !DILocation(line: 392, column: 64, scope: !888)
!900 = !DILocation(line: 392, column: 61, scope: !888)
!901 = !DILocation(line: 392, column: 47, scope: !888)
!902 = !DILocation(line: 392, column: 72, scope: !903)
!903 = !DILexicalBlockFile(scope: !888, file: !5, discriminator: 2)
!904 = !DILocation(line: 392, column: 76, scope: !888)
!905 = !DILocation(line: 392, column: 86, scope: !888)
!906 = !DILocation(line: 392, column: 90, scope: !888)
!907 = !DILocation(line: 392, column: 99, scope: !888)
!908 = !DILocation(line: 392, column: 96, scope: !888)
!909 = !DILocation(line: 392, column: 82, scope: !888)
!910 = !DILocation(line: 392, column: 104, scope: !888)
!911 = !DILocation(line: 392, column: 24, scope: !912)
!912 = !DILexicalBlockFile(scope: !913, file: !5, discriminator: 4)
!913 = !DILexicalBlockFile(scope: !888, file: !5, discriminator: 3)
!914 = !DILocation(line: 392, column: 5, scope: !888)
!915 = !DILocation(line: 392, column: 16, scope: !888)
!916 = !DILocation(line: 392, column: 22, scope: !888)
!917 = !DILocation(line: 395, column: 22, scope: !45)
!918 = !DILocation(line: 395, column: 33, scope: !45)
!919 = !DILocation(line: 395, column: 3, scope: !45)
!920 = !DILocation(line: 395, column: 14, scope: !45)
!921 = !DILocation(line: 395, column: 20, scope: !45)
!922 = !DILocation(line: 397, column: 7, scope: !923)
!923 = distinct !DILexicalBlock(scope: !45, file: !5, line: 397, column: 7)
!924 = !DILocation(line: 397, column: 10, scope: !923)
!925 = !DILocation(line: 397, column: 7, scope: !45)
!926 = !DILocation(line: 398, column: 5, scope: !927)
!927 = distinct !DILexicalBlock(scope: !923, file: !5, line: 397, column: 16)
!928 = !DILocation(line: 398, column: 16, scope: !927)
!929 = !DILocation(line: 398, column: 22, scope: !927)
!930 = !DILocation(line: 399, column: 3, scope: !927)
!931 = !DILocation(line: 399, column: 14, scope: !932)
!932 = distinct !DILexicalBlock(scope: !923, file: !5, line: 399, column: 14)
!933 = !DILocation(line: 399, column: 17, scope: !932)
!934 = !DILocation(line: 399, column: 14, scope: !923)
!935 = !DILocation(line: 400, column: 16, scope: !936)
!936 = distinct !DILexicalBlock(scope: !932, file: !5, line: 399, column: 22)
!937 = !DILocation(line: 400, column: 11, scope: !936)
!938 = !DILocation(line: 400, column: 9, scope: !936)
!939 = !DILocation(line: 401, column: 25, scope: !936)
!940 = !DILocation(line: 401, column: 29, scope: !936)
!941 = !DILocation(line: 401, column: 39, scope: !936)
!942 = !DILocation(line: 401, column: 42, scope: !936)
!943 = !DILocation(line: 401, column: 51, scope: !936)
!944 = !DILocation(line: 401, column: 48, scope: !936)
!945 = !DILocation(line: 401, column: 35, scope: !936)
!946 = !DILocation(line: 401, column: 24, scope: !936)
!947 = !DILocation(line: 401, column: 5, scope: !936)
!948 = !DILocation(line: 401, column: 16, scope: !936)
!949 = !DILocation(line: 401, column: 22, scope: !936)
!950 = !DILocation(line: 402, column: 3, scope: !936)
!951 = !DILocation(line: 402, column: 14, scope: !952)
!952 = distinct !DILexicalBlock(scope: !932, file: !5, line: 402, column: 14)
!953 = !DILocation(line: 402, column: 17, scope: !952)
!954 = !DILocation(line: 402, column: 14, scope: !932)
!955 = !DILocation(line: 403, column: 12, scope: !956)
!956 = distinct !DILexicalBlock(scope: !952, file: !5, line: 402, column: 27)
!957 = !DILocation(line: 403, column: 11, scope: !956)
!958 = !DILocation(line: 403, column: 9, scope: !956)
!959 = !DILocation(line: 404, column: 16, scope: !956)
!960 = !DILocation(line: 404, column: 11, scope: !956)
!961 = !DILocation(line: 404, column: 9, scope: !956)
!962 = !DILocation(line: 405, column: 25, scope: !956)
!963 = !DILocation(line: 405, column: 29, scope: !956)
!964 = !DILocation(line: 405, column: 39, scope: !956)
!965 = !DILocation(line: 405, column: 43, scope: !956)
!966 = !DILocation(line: 405, column: 52, scope: !956)
!967 = !DILocation(line: 405, column: 49, scope: !956)
!968 = !DILocation(line: 405, column: 35, scope: !956)
!969 = !DILocation(line: 405, column: 57, scope: !956)
!970 = !DILocation(line: 405, column: 24, scope: !956)
!971 = !DILocation(line: 405, column: 5, scope: !956)
!972 = !DILocation(line: 405, column: 16, scope: !956)
!973 = !DILocation(line: 405, column: 22, scope: !956)
!974 = !DILocation(line: 406, column: 3, scope: !956)
!975 = !DILocation(line: 407, column: 5, scope: !952)
!976 = !DILocation(line: 407, column: 16, scope: !952)
!977 = !DILocation(line: 407, column: 22, scope: !952)
!978 = !DILocation(line: 410, column: 22, scope: !45)
!979 = !DILocation(line: 410, column: 33, scope: !45)
!980 = !DILocation(line: 410, column: 3, scope: !45)
!981 = !DILocation(line: 410, column: 14, scope: !45)
!982 = !DILocation(line: 410, column: 20, scope: !45)
!983 = !DILocation(line: 411, column: 22, scope: !45)
!984 = !DILocation(line: 411, column: 3, scope: !45)
!985 = !DILocation(line: 411, column: 14, scope: !45)
!986 = !DILocation(line: 411, column: 20, scope: !45)
!987 = !DILocation(line: 414, column: 7, scope: !988)
!988 = distinct !DILexicalBlock(scope: !45, file: !5, line: 414, column: 7)
!989 = !DILocation(line: 414, column: 10, scope: !988)
!990 = !DILocation(line: 414, column: 7, scope: !45)
!991 = !DILocation(line: 415, column: 5, scope: !988)
!992 = !DILocation(line: 415, column: 16, scope: !988)
!993 = !DILocation(line: 415, column: 19, scope: !988)
!994 = !DILocation(line: 416, column: 12, scope: !995)
!995 = distinct !DILexicalBlock(scope: !988, file: !5, line: 416, column: 12)
!996 = !DILocation(line: 416, column: 16, scope: !995)
!997 = !DILocation(line: 416, column: 12, scope: !988)
!998 = !DILocation(line: 417, column: 5, scope: !995)
!999 = !DILocation(line: 417, column: 16, scope: !995)
!1000 = !DILocation(line: 417, column: 19, scope: !995)
!1001 = !DILocation(line: 419, column: 5, scope: !995)
!1002 = !DILocation(line: 419, column: 16, scope: !995)
!1003 = !DILocation(line: 419, column: 19, scope: !995)
!1004 = !DILocation(line: 424, column: 22, scope: !45)
!1005 = !DILocation(line: 424, column: 27, scope: !45)
!1006 = !DILocation(line: 424, column: 38, scope: !45)
!1007 = !DILocation(line: 424, column: 25, scope: !45)
!1008 = !DILocation(line: 424, column: 43, scope: !45)
!1009 = !DILocation(line: 424, column: 3, scope: !45)
!1010 = !DILocation(line: 424, column: 14, scope: !45)
!1011 = !DILocation(line: 424, column: 18, scope: !45)
!1012 = !DILocation(line: 425, column: 24, scope: !45)
!1013 = !DILocation(line: 425, column: 27, scope: !45)
!1014 = !DILocation(line: 425, column: 35, scope: !45)
!1015 = !DILocation(line: 425, column: 46, scope: !45)
!1016 = !DILocation(line: 425, column: 33, scope: !45)
!1017 = !DILocation(line: 425, column: 51, scope: !45)
!1018 = !DILocation(line: 425, column: 3, scope: !45)
!1019 = !DILocation(line: 425, column: 14, scope: !45)
!1020 = !DILocation(line: 425, column: 18, scope: !45)
!1021 = !DILocation(line: 427, column: 7, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !45, file: !5, line: 427, column: 7)
!1023 = !DILocation(line: 427, column: 10, scope: !1022)
!1024 = !DILocation(line: 427, column: 7, scope: !45)
!1025 = !DILocation(line: 428, column: 5, scope: !1022)
!1026 = !DILocation(line: 428, column: 16, scope: !1022)
!1027 = !DILocation(line: 428, column: 19, scope: !1022)
!1028 = !DILocation(line: 429, column: 12, scope: !1029)
!1029 = distinct !DILexicalBlock(scope: !1022, file: !5, line: 429, column: 12)
!1030 = !DILocation(line: 429, column: 14, scope: !1029)
!1031 = !DILocation(line: 429, column: 12, scope: !1022)
!1032 = !DILocation(line: 430, column: 31, scope: !1029)
!1033 = !DILocation(line: 430, column: 42, scope: !1029)
!1034 = !DILocation(line: 430, column: 29, scope: !1029)
!1035 = !DILocation(line: 430, column: 46, scope: !1029)
!1036 = !DILocation(line: 430, column: 5, scope: !1029)
!1037 = !DILocation(line: 430, column: 16, scope: !1029)
!1038 = !DILocation(line: 430, column: 19, scope: !1029)
!1039 = !DILocation(line: 431, column: 12, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1029, file: !5, line: 431, column: 12)
!1041 = !DILocation(line: 431, column: 23, scope: !1040)
!1042 = !DILocation(line: 431, column: 26, scope: !1040)
!1043 = !DILocation(line: 431, column: 12, scope: !1029)
!1044 = !DILocation(line: 432, column: 31, scope: !1040)
!1045 = !DILocation(line: 432, column: 42, scope: !1040)
!1046 = !DILocation(line: 432, column: 29, scope: !1040)
!1047 = !DILocation(line: 432, column: 46, scope: !1040)
!1048 = !DILocation(line: 432, column: 5, scope: !1040)
!1049 = !DILocation(line: 432, column: 16, scope: !1040)
!1050 = !DILocation(line: 432, column: 19, scope: !1040)
!1051 = !DILocation(line: 433, column: 17, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1040, file: !5, line: 433, column: 12)
!1053 = !DILocation(line: 433, column: 28, scope: !1052)
!1054 = !DILocation(line: 433, column: 32, scope: !1052)
!1055 = !DILocation(line: 433, column: 40, scope: !1052)
!1056 = !DILocation(line: 433, column: 51, scope: !1052)
!1057 = !DILocation(line: 433, column: 38, scope: !1052)
!1058 = !DILocation(line: 433, column: 12, scope: !1052)
!1059 = !DILocation(line: 434, column: 13, scope: !1052)
!1060 = !DILocation(line: 434, column: 24, scope: !1052)
!1061 = !DILocation(line: 434, column: 28, scope: !1052)
!1062 = !DILocation(line: 433, column: 56, scope: !1052)
!1063 = !DILocation(line: 433, column: 12, scope: !1040)
!1064 = !DILocation(line: 435, column: 31, scope: !1052)
!1065 = !DILocation(line: 435, column: 42, scope: !1052)
!1066 = !DILocation(line: 435, column: 29, scope: !1052)
!1067 = !DILocation(line: 435, column: 46, scope: !1052)
!1068 = !DILocation(line: 435, column: 5, scope: !1052)
!1069 = !DILocation(line: 435, column: 16, scope: !1052)
!1070 = !DILocation(line: 435, column: 19, scope: !1052)
!1071 = !DILocation(line: 437, column: 24, scope: !1052)
!1072 = !DILocation(line: 437, column: 35, scope: !1052)
!1073 = !DILocation(line: 437, column: 23, scope: !1052)
!1074 = !DILocation(line: 437, column: 39, scope: !1052)
!1075 = !DILocation(line: 437, column: 5, scope: !1052)
!1076 = !DILocation(line: 437, column: 16, scope: !1052)
!1077 = !DILocation(line: 437, column: 19, scope: !1052)
!1078 = !DILocation(line: 438, column: 1, scope: !45)
!1079 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sr", arg: 1, scope: !48, file: !5, line: 459, type: !35)
!1080 = !DILocation(line: 459, column: 9, scope: !48)
!1081 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "se", arg: 2, scope: !48, file: !5, line: 460, type: !35)
!1082 = !DILocation(line: 460, column: 9, scope: !48)
!1083 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !48, file: !5, line: 461, type: !35)
!1084 = !DILocation(line: 461, column: 9, scope: !48)
!1085 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 4, scope: !48, file: !5, line: 462, type: !35)
!1086 = !DILocation(line: 462, column: 9, scope: !48)
!1087 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 5, scope: !48, file: !5, line: 463, type: !35)
!1088 = !DILocation(line: 463, column: 9, scope: !48)
!1089 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "qtab", arg: 6, scope: !48, file: !5, line: 464, type: !41)
!1090 = !DILocation(line: 464, column: 12, scope: !48)
!1091 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sp", scope: !48, file: !5, line: 465, type: !1092)
!1092 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!1093 = !DILocation(line: 465, column: 17, scope: !48)
!1094 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dx", scope: !48, file: !5, line: 466, type: !15)
!1095 = !DILocation(line: 466, column: 9, scope: !48)
!1096 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !48, file: !5, line: 467, type: !31)
!1097 = !DILocation(line: 467, column: 8, scope: !48)
!1098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sd", scope: !48, file: !5, line: 468, type: !35)
!1099 = !DILocation(line: 468, column: 7, scope: !48)
!1100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "im", scope: !48, file: !5, line: 469, type: !35)
!1101 = !DILocation(line: 469, column: 7, scope: !48)
!1102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imx", scope: !48, file: !5, line: 470, type: !35)
!1103 = !DILocation(line: 470, column: 7, scope: !48)
!1104 = !DILocation(line: 472, column: 7, scope: !1105)
!1105 = distinct !DILexicalBlock(scope: !48, file: !5, line: 472, column: 7)
!1106 = !DILocation(line: 472, column: 10, scope: !1105)
!1107 = !DILocation(line: 472, column: 7, scope: !48)
!1108 = !DILocation(line: 473, column: 8, scope: !1105)
!1109 = !DILocation(line: 473, column: 5, scope: !1105)
!1110 = !DILocation(line: 474, column: 21, scope: !48)
!1111 = !DILocation(line: 474, column: 24, scope: !48)
!1112 = !DILocation(line: 474, column: 30, scope: !48)
!1113 = !DILocation(line: 474, column: 8, scope: !48)
!1114 = !DILocation(line: 474, column: 6, scope: !48)
!1115 = !DILocation(line: 475, column: 21, scope: !48)
!1116 = !DILocation(line: 475, column: 9, scope: !48)
!1117 = !DILocation(line: 475, column: 25, scope: !48)
!1118 = !DILocation(line: 475, column: 33, scope: !48)
!1119 = !DILocation(line: 475, column: 31, scope: !48)
!1120 = !DILocation(line: 475, column: 8, scope: !48)
!1121 = !DILocation(line: 475, column: 6, scope: !48)
!1122 = !DILocation(line: 476, column: 17, scope: !48)
!1123 = !DILocation(line: 476, column: 21, scope: !48)
!1124 = !DILocation(line: 476, column: 24, scope: !48)
!1125 = !DILocation(line: 476, column: 30, scope: !48)
!1126 = !DILocation(line: 476, column: 35, scope: !48)
!1127 = !DILocation(line: 476, column: 8, scope: !48)
!1128 = !DILocation(line: 476, column: 6, scope: !48)
!1129 = !DILocation(line: 478, column: 7, scope: !1130)
!1130 = distinct !DILexicalBlock(scope: !48, file: !5, line: 478, column: 7)
!1131 = !DILocation(line: 478, column: 13, scope: !1130)
!1132 = !DILocation(line: 478, column: 10, scope: !1130)
!1133 = !DILocation(line: 478, column: 7, scope: !48)
!1134 = !DILocation(line: 479, column: 13, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1130, file: !5, line: 478, column: 16)
!1136 = !DILocation(line: 479, column: 12, scope: !1135)
!1137 = !DILocation(line: 479, column: 5, scope: !1135)
!1138 = !DILocation(line: 482, column: 10, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1130, file: !5, line: 480, column: 10)
!1140 = !DILocation(line: 482, column: 14, scope: !1139)
!1141 = !DILocation(line: 482, column: 12, scope: !1139)
!1142 = !DILocation(line: 482, column: 8, scope: !1139)
!1143 = !DILocation(line: 483, column: 11, scope: !1139)
!1144 = !DILocation(line: 483, column: 16, scope: !1139)
!1145 = !DILocation(line: 483, column: 14, scope: !1139)
!1146 = !DILocation(line: 483, column: 9, scope: !1139)
!1147 = !DILocation(line: 485, column: 9, scope: !1148)
!1148 = distinct !DILexicalBlock(scope: !1139, file: !5, line: 485, column: 9)
!1149 = !DILocation(line: 485, column: 15, scope: !1148)
!1150 = !DILocation(line: 485, column: 13, scope: !1148)
!1151 = !DILocation(line: 485, column: 9, scope: !1139)
!1152 = !DILocation(line: 486, column: 11, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1154, file: !5, line: 486, column: 11)
!1154 = distinct !DILexicalBlock(scope: !1148, file: !5, line: 485, column: 19)
!1155 = !DILocation(line: 486, column: 14, scope: !1153)
!1156 = !DILocation(line: 486, column: 11, scope: !1154)
!1157 = !DILocation(line: 487, column: 15, scope: !1158)
!1158 = distinct !DILexicalBlock(scope: !1153, file: !5, line: 486, column: 22)
!1159 = !DILocation(line: 487, column: 18, scope: !1158)
!1160 = !DILocation(line: 487, column: 14, scope: !1158)
!1161 = !DILocation(line: 487, column: 14, scope: !1162)
!1162 = !DILexicalBlockFile(scope: !1158, file: !5, discriminator: 1)
!1163 = !DILocation(line: 487, column: 38, scope: !1164)
!1164 = !DILexicalBlockFile(scope: !1158, file: !5, discriminator: 2)
!1165 = !DILocation(line: 487, column: 41, scope: !1158)
!1166 = !DILocation(line: 487, column: 49, scope: !1158)
!1167 = !DILocation(line: 487, column: 54, scope: !1158)
!1168 = !DILocation(line: 487, column: 12, scope: !1169)
!1169 = !DILexicalBlockFile(scope: !1170, file: !5, discriminator: 4)
!1170 = !DILexicalBlockFile(scope: !1158, file: !5, discriminator: 3)
!1171 = !DILocation(line: 488, column: 7, scope: !1158)
!1172 = !DILocation(line: 489, column: 15, scope: !1173)
!1173 = distinct !DILexicalBlock(scope: !1153, file: !5, line: 488, column: 14)
!1174 = !DILocation(line: 489, column: 18, scope: !1173)
!1175 = !DILocation(line: 489, column: 14, scope: !1173)
!1176 = !DILocation(line: 489, column: 14, scope: !1177)
!1177 = !DILexicalBlockFile(scope: !1173, file: !5, discriminator: 1)
!1178 = !DILocation(line: 489, column: 38, scope: !1179)
!1179 = !DILexicalBlockFile(scope: !1173, file: !5, discriminator: 2)
!1180 = !DILocation(line: 489, column: 41, scope: !1173)
!1181 = !DILocation(line: 489, column: 49, scope: !1173)
!1182 = !DILocation(line: 489, column: 54, scope: !1173)
!1183 = !DILocation(line: 489, column: 12, scope: !1184)
!1184 = !DILexicalBlockFile(scope: !1185, file: !5, discriminator: 4)
!1185 = !DILexicalBlockFile(scope: !1173, file: !5, discriminator: 3)
!1186 = !DILocation(line: 491, column: 5, scope: !1154)
!1187 = !DILocation(line: 492, column: 11, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1189, file: !5, line: 492, column: 11)
!1189 = distinct !DILexicalBlock(scope: !1148, file: !5, line: 491, column: 12)
!1190 = !DILocation(line: 492, column: 14, scope: !1188)
!1191 = !DILocation(line: 492, column: 11, scope: !1189)
!1192 = !DILocation(line: 493, column: 15, scope: !1188)
!1193 = !DILocation(line: 493, column: 18, scope: !1188)
!1194 = !DILocation(line: 493, column: 14, scope: !1188)
!1195 = !DILocation(line: 493, column: 14, scope: !1196)
!1196 = !DILexicalBlockFile(scope: !1188, file: !5, discriminator: 1)
!1197 = !DILocation(line: 493, column: 38, scope: !1198)
!1198 = !DILexicalBlockFile(scope: !1188, file: !5, discriminator: 2)
!1199 = !DILocation(line: 493, column: 41, scope: !1188)
!1200 = !DILocation(line: 493, column: 49, scope: !1188)
!1201 = !DILocation(line: 493, column: 54, scope: !1188)
!1202 = !DILocation(line: 493, column: 12, scope: !1203)
!1203 = !DILexicalBlockFile(scope: !1204, file: !5, discriminator: 4)
!1204 = !DILexicalBlockFile(scope: !1188, file: !5, discriminator: 3)
!1205 = !DILocation(line: 493, column: 9, scope: !1188)
!1206 = !DILocation(line: 495, column: 15, scope: !1188)
!1207 = !DILocation(line: 495, column: 18, scope: !1188)
!1208 = !DILocation(line: 495, column: 14, scope: !1188)
!1209 = !DILocation(line: 495, column: 14, scope: !1196)
!1210 = !DILocation(line: 495, column: 38, scope: !1198)
!1211 = !DILocation(line: 495, column: 41, scope: !1188)
!1212 = !DILocation(line: 495, column: 49, scope: !1188)
!1213 = !DILocation(line: 495, column: 54, scope: !1188)
!1214 = !DILocation(line: 495, column: 12, scope: !1203)
!1215 = !DILocation(line: 497, column: 13, scope: !1139)
!1216 = !DILocation(line: 497, column: 5, scope: !1139)
!1217 = !DILocation(line: 499, column: 1, scope: !48)
!1218 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sr", arg: 1, scope: !51, file: !5, line: 502, type: !35)
!1219 = !DILocation(line: 502, column: 9, scope: !51)
!1220 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "se", arg: 2, scope: !51, file: !5, line: 503, type: !35)
!1221 = !DILocation(line: 503, column: 9, scope: !51)
!1222 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !51, file: !5, line: 504, type: !35)
!1223 = !DILocation(line: 504, column: 9, scope: !51)
!1224 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 4, scope: !51, file: !5, line: 505, type: !35)
!1225 = !DILocation(line: 505, column: 9, scope: !51)
!1226 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sign", arg: 5, scope: !51, file: !5, line: 506, type: !35)
!1227 = !DILocation(line: 506, column: 9, scope: !51)
!1228 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "qtab", arg: 6, scope: !51, file: !5, line: 507, type: !41)
!1229 = !DILocation(line: 507, column: 12, scope: !51)
!1230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sp", scope: !51, file: !5, line: 508, type: !1092)
!1231 = !DILocation(line: 508, column: 17, scope: !51)
!1232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dx", scope: !51, file: !5, line: 509, type: !15)
!1233 = !DILocation(line: 509, column: 9, scope: !51)
!1234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !51, file: !5, line: 510, type: !31)
!1235 = !DILocation(line: 510, column: 8, scope: !51)
!1236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sd", scope: !51, file: !5, line: 511, type: !35)
!1237 = !DILocation(line: 511, column: 7, scope: !51)
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "im", scope: !51, file: !5, line: 512, type: !35)
!1239 = !DILocation(line: 512, column: 7, scope: !51)
!1240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imx", scope: !51, file: !5, line: 513, type: !35)
!1241 = !DILocation(line: 513, column: 7, scope: !51)
!1242 = !DILocation(line: 515, column: 7, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !51, file: !5, line: 515, column: 7)
!1244 = !DILocation(line: 515, column: 10, scope: !1243)
!1245 = !DILocation(line: 515, column: 7, scope: !51)
!1246 = !DILocation(line: 516, column: 8, scope: !1243)
!1247 = !DILocation(line: 516, column: 5, scope: !1243)
!1248 = !DILocation(line: 517, column: 20, scope: !51)
!1249 = !DILocation(line: 517, column: 23, scope: !51)
!1250 = !DILocation(line: 517, column: 8, scope: !51)
!1251 = !DILocation(line: 517, column: 6, scope: !51)
!1252 = !DILocation(line: 518, column: 21, scope: !51)
!1253 = !DILocation(line: 518, column: 9, scope: !51)
!1254 = !DILocation(line: 518, column: 25, scope: !51)
!1255 = !DILocation(line: 518, column: 33, scope: !51)
!1256 = !DILocation(line: 518, column: 31, scope: !51)
!1257 = !DILocation(line: 518, column: 8, scope: !51)
!1258 = !DILocation(line: 518, column: 6, scope: !51)
!1259 = !DILocation(line: 519, column: 17, scope: !51)
!1260 = !DILocation(line: 519, column: 21, scope: !51)
!1261 = !DILocation(line: 519, column: 24, scope: !51)
!1262 = !DILocation(line: 519, column: 30, scope: !51)
!1263 = !DILocation(line: 519, column: 35, scope: !51)
!1264 = !DILocation(line: 519, column: 8, scope: !51)
!1265 = !DILocation(line: 519, column: 6, scope: !51)
!1266 = !DILocation(line: 520, column: 7, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !51, file: !5, line: 520, column: 7)
!1268 = !DILocation(line: 520, column: 13, scope: !1267)
!1269 = !DILocation(line: 520, column: 10, scope: !1267)
!1270 = !DILocation(line: 520, column: 7, scope: !51)
!1271 = !DILocation(line: 521, column: 13, scope: !1272)
!1272 = distinct !DILexicalBlock(scope: !1267, file: !5, line: 520, column: 16)
!1273 = !DILocation(line: 521, column: 12, scope: !1272)
!1274 = !DILocation(line: 521, column: 5, scope: !1272)
!1275 = !DILocation(line: 524, column: 10, scope: !1276)
!1276 = distinct !DILexicalBlock(scope: !1267, file: !5, line: 522, column: 10)
!1277 = !DILocation(line: 524, column: 14, scope: !1276)
!1278 = !DILocation(line: 524, column: 12, scope: !1276)
!1279 = !DILocation(line: 524, column: 8, scope: !1276)
!1280 = !DILocation(line: 525, column: 11, scope: !1276)
!1281 = !DILocation(line: 525, column: 16, scope: !1276)
!1282 = !DILocation(line: 525, column: 14, scope: !1276)
!1283 = !DILocation(line: 525, column: 9, scope: !1276)
!1284 = !DILocation(line: 526, column: 9, scope: !1285)
!1285 = distinct !DILexicalBlock(scope: !1276, file: !5, line: 526, column: 9)
!1286 = !DILocation(line: 526, column: 15, scope: !1285)
!1287 = !DILocation(line: 526, column: 13, scope: !1285)
!1288 = !DILocation(line: 526, column: 9, scope: !1276)
!1289 = !DILocation(line: 527, column: 11, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1291, file: !5, line: 527, column: 11)
!1291 = distinct !DILexicalBlock(scope: !1285, file: !5, line: 526, column: 19)
!1292 = !DILocation(line: 527, column: 14, scope: !1290)
!1293 = !DILocation(line: 527, column: 11, scope: !1291)
!1294 = !DILocation(line: 528, column: 15, scope: !1290)
!1295 = !DILocation(line: 528, column: 18, scope: !1290)
!1296 = !DILocation(line: 528, column: 14, scope: !1290)
!1297 = !DILocation(line: 528, column: 14, scope: !1298)
!1298 = !DILexicalBlockFile(scope: !1290, file: !5, discriminator: 1)
!1299 = !DILocation(line: 528, column: 36, scope: !1300)
!1300 = !DILexicalBlockFile(scope: !1290, file: !5, discriminator: 2)
!1301 = !DILocation(line: 528, column: 39, scope: !1290)
!1302 = !DILocation(line: 528, column: 12, scope: !1303)
!1303 = !DILexicalBlockFile(scope: !1304, file: !5, discriminator: 4)
!1304 = !DILexicalBlockFile(scope: !1290, file: !5, discriminator: 3)
!1305 = !DILocation(line: 528, column: 9, scope: !1290)
!1306 = !DILocation(line: 530, column: 15, scope: !1290)
!1307 = !DILocation(line: 530, column: 18, scope: !1290)
!1308 = !DILocation(line: 530, column: 14, scope: !1290)
!1309 = !DILocation(line: 530, column: 14, scope: !1298)
!1310 = !DILocation(line: 530, column: 30, scope: !1300)
!1311 = !DILocation(line: 530, column: 33, scope: !1290)
!1312 = !DILocation(line: 530, column: 12, scope: !1303)
!1313 = !DILocation(line: 532, column: 5, scope: !1291)
!1314 = !DILocation(line: 533, column: 11, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1316, file: !5, line: 533, column: 11)
!1316 = distinct !DILexicalBlock(scope: !1285, file: !5, line: 532, column: 12)
!1317 = !DILocation(line: 533, column: 14, scope: !1315)
!1318 = !DILocation(line: 533, column: 11, scope: !1316)
!1319 = !DILocation(line: 534, column: 15, scope: !1315)
!1320 = !DILocation(line: 534, column: 18, scope: !1315)
!1321 = !DILocation(line: 534, column: 14, scope: !1315)
!1322 = !DILocation(line: 534, column: 14, scope: !1323)
!1323 = !DILexicalBlockFile(scope: !1315, file: !5, discriminator: 1)
!1324 = !DILocation(line: 534, column: 36, scope: !1325)
!1325 = !DILexicalBlockFile(scope: !1315, file: !5, discriminator: 2)
!1326 = !DILocation(line: 534, column: 39, scope: !1315)
!1327 = !DILocation(line: 534, column: 12, scope: !1328)
!1328 = !DILexicalBlockFile(scope: !1329, file: !5, discriminator: 4)
!1329 = !DILexicalBlockFile(scope: !1315, file: !5, discriminator: 3)
!1330 = !DILocation(line: 534, column: 9, scope: !1315)
!1331 = !DILocation(line: 536, column: 15, scope: !1315)
!1332 = !DILocation(line: 536, column: 18, scope: !1315)
!1333 = !DILocation(line: 536, column: 14, scope: !1315)
!1334 = !DILocation(line: 536, column: 14, scope: !1323)
!1335 = !DILocation(line: 536, column: 36, scope: !1325)
!1336 = !DILocation(line: 536, column: 39, scope: !1315)
!1337 = !DILocation(line: 536, column: 12, scope: !1328)
!1338 = !DILocation(line: 538, column: 13, scope: !1276)
!1339 = !DILocation(line: 538, column: 5, scope: !1276)
!1340 = !DILocation(line: 540, column: 1, scope: !51)
