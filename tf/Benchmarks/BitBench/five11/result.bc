; ModuleID = '/home/gleison/tf/Benchmarks/BitBench/five11/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.linked_list_int = type { i32, i8* }
%struct.linked_list_lli = type { %struct.linked_list_int*, i8* }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdin = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"Usage: five11 [infile]\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nounwind uwtable
define %struct.linked_list_int* @cons1(i32 %hd, %struct.linked_list_int* %tl) #0 {
entry:
  %hd.addr = alloca i32, align 4
  %tl.addr = alloca %struct.linked_list_int*, align 8
  %res = alloca %struct.linked_list_int*, align 8
  store i32 %hd, i32* %hd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hd.addr, metadata !123, metadata !124), !dbg !125
  store %struct.linked_list_int* %tl, %struct.linked_list_int** %tl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %tl.addr, metadata !126, metadata !124), !dbg !127
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %res, metadata !128, metadata !124), !dbg !129
  %call = call noalias i8* @malloc(i64 16) #5, !dbg !130
  %0 = bitcast i8* %call to %struct.linked_list_int*, !dbg !131
  store %struct.linked_list_int* %0, %struct.linked_list_int** %res, align 8, !dbg !132
  %1 = load i32, i32* %hd.addr, align 4, !dbg !133
  %2 = load %struct.linked_list_int*, %struct.linked_list_int** %res, align 8, !dbg !134
  %car = getelementptr inbounds %struct.linked_list_int, %struct.linked_list_int* %2, i32 0, i32 0, !dbg !135
  store i32 %1, i32* %car, align 4, !dbg !136
  %3 = load %struct.linked_list_int*, %struct.linked_list_int** %tl.addr, align 8, !dbg !137
  %4 = bitcast %struct.linked_list_int* %3 to i8*, !dbg !137
  %5 = load %struct.linked_list_int*, %struct.linked_list_int** %res, align 8, !dbg !138
  %cdr = getelementptr inbounds %struct.linked_list_int, %struct.linked_list_int* %5, i32 0, i32 1, !dbg !139
  store i8* %4, i8** %cdr, align 8, !dbg !140
  %6 = load %struct.linked_list_int*, %struct.linked_list_int** %res, align 8, !dbg !141
  ret %struct.linked_list_int* %6, !dbg !142
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind uwtable
define %struct.linked_list_lli* @cons2(%struct.linked_list_int* %hd, %struct.linked_list_lli* %tl) #0 {
entry:
  %hd.addr = alloca %struct.linked_list_int*, align 8
  %tl.addr = alloca %struct.linked_list_lli*, align 8
  %res = alloca %struct.linked_list_lli*, align 8
  store %struct.linked_list_int* %hd, %struct.linked_list_int** %hd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %hd.addr, metadata !143, metadata !124), !dbg !144
  store %struct.linked_list_lli* %tl, %struct.linked_list_lli** %tl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %tl.addr, metadata !145, metadata !124), !dbg !146
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %res, metadata !147, metadata !124), !dbg !148
  %call = call noalias i8* @malloc(i64 16) #5, !dbg !149
  %0 = bitcast i8* %call to %struct.linked_list_lli*, !dbg !150
  store %struct.linked_list_lli* %0, %struct.linked_list_lli** %res, align 8, !dbg !151
  %1 = load %struct.linked_list_int*, %struct.linked_list_int** %hd.addr, align 8, !dbg !152
  %2 = load %struct.linked_list_lli*, %struct.linked_list_lli** %res, align 8, !dbg !153
  %car = getelementptr inbounds %struct.linked_list_lli, %struct.linked_list_lli* %2, i32 0, i32 0, !dbg !154
  store %struct.linked_list_int* %1, %struct.linked_list_int** %car, align 8, !dbg !155
  %3 = load %struct.linked_list_lli*, %struct.linked_list_lli** %tl.addr, align 8, !dbg !156
  %4 = bitcast %struct.linked_list_lli* %3 to i8*, !dbg !156
  %5 = load %struct.linked_list_lli*, %struct.linked_list_lli** %res, align 8, !dbg !157
  %cdr = getelementptr inbounds %struct.linked_list_lli, %struct.linked_list_lli* %5, i32 0, i32 1, !dbg !158
  store i8* %4, i8** %cdr, align 8, !dbg !159
  %6 = load %struct.linked_list_lli*, %struct.linked_list_lli** %res, align 8, !dbg !160
  ret %struct.linked_list_lli* %6, !dbg !161
}

; Function Attrs: nounwind uwtable
define void @free_list1(%struct.linked_list_int* %list) #0 {
entry:
  %list.addr = alloca %struct.linked_list_int*, align 8
  %next = alloca %struct.linked_list_int*, align 8
  store %struct.linked_list_int* %list, %struct.linked_list_int** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %list.addr, metadata !162, metadata !124), !dbg !163
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %next, metadata !164, metadata !124), !dbg !165
  br label %while.cond, !dbg !166

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.linked_list_int*, %struct.linked_list_int** %list.addr, align 8, !dbg !167
  %cmp = icmp ne %struct.linked_list_int* %0, null, !dbg !170
  br i1 %cmp, label %while.body, label %while.end, !dbg !166

while.body:                                       ; preds = %while.cond
  %1 = load %struct.linked_list_int*, %struct.linked_list_int** %list.addr, align 8, !dbg !171
  %cdr = getelementptr inbounds %struct.linked_list_int, %struct.linked_list_int* %1, i32 0, i32 1, !dbg !173
  %2 = load i8*, i8** %cdr, align 8, !dbg !173
  %3 = bitcast i8* %2 to %struct.linked_list_int*, !dbg !171
  store %struct.linked_list_int* %3, %struct.linked_list_int** %next, align 8, !dbg !174
  %4 = load %struct.linked_list_int*, %struct.linked_list_int** %list.addr, align 8, !dbg !175
  %5 = bitcast %struct.linked_list_int* %4 to i8*, !dbg !175
  call void @free(i8* %5) #5, !dbg !176
  %6 = load %struct.linked_list_int*, %struct.linked_list_int** %next, align 8, !dbg !177
  store %struct.linked_list_int* %6, %struct.linked_list_int** %list.addr, align 8, !dbg !178
  br label %while.cond, !dbg !166

while.end:                                        ; preds = %while.cond
  ret void, !dbg !179
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define void @free_list2(%struct.linked_list_lli* %list) #0 {
entry:
  %list.addr = alloca %struct.linked_list_lli*, align 8
  %next = alloca %struct.linked_list_lli*, align 8
  %hd = alloca %struct.linked_list_int*, align 8
  store %struct.linked_list_lli* %list, %struct.linked_list_lli** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %list.addr, metadata !180, metadata !124), !dbg !181
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %next, metadata !182, metadata !124), !dbg !183
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %hd, metadata !184, metadata !124), !dbg !185
  br label %while.cond, !dbg !186

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !187
  %cmp = icmp ne %struct.linked_list_lli* %0, null, !dbg !190
  br i1 %cmp, label %while.body, label %while.end, !dbg !186

while.body:                                       ; preds = %while.cond
  %1 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !191
  %cdr = getelementptr inbounds %struct.linked_list_lli, %struct.linked_list_lli* %1, i32 0, i32 1, !dbg !193
  %2 = load i8*, i8** %cdr, align 8, !dbg !193
  %3 = bitcast i8* %2 to %struct.linked_list_lli*, !dbg !191
  store %struct.linked_list_lli* %3, %struct.linked_list_lli** %next, align 8, !dbg !194
  %4 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !195
  %car = getelementptr inbounds %struct.linked_list_lli, %struct.linked_list_lli* %4, i32 0, i32 0, !dbg !196
  %5 = load %struct.linked_list_int*, %struct.linked_list_int** %car, align 8, !dbg !196
  store %struct.linked_list_int* %5, %struct.linked_list_int** %hd, align 8, !dbg !197
  %6 = load %struct.linked_list_int*, %struct.linked_list_int** %hd, align 8, !dbg !198
  call void @free_list1(%struct.linked_list_int* %6), !dbg !199
  %7 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !200
  %8 = bitcast %struct.linked_list_lli* %7 to i8*, !dbg !200
  call void @free(i8* %8) #5, !dbg !201
  %9 = load %struct.linked_list_lli*, %struct.linked_list_lli** %next, align 8, !dbg !202
  store %struct.linked_list_lli* %9, %struct.linked_list_lli** %list.addr, align 8, !dbg !203
  br label %while.cond, !dbg !186

while.end:                                        ; preds = %while.cond
  ret void, !dbg !204
}

; Function Attrs: nounwind uwtable
define i32 @read_x_bits(i8* %buf, i32 %offset, i32 %x) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %byte_offset = alloca i32, align 4
  %bit_offset = alloca i32, align 4
  %present = alloca i32, align 4
  %initbits = alloca i32, align 4
  %res = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !205, metadata !124), !dbg !206
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !207, metadata !124), !dbg !208
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !209, metadata !124), !dbg !210
  call void @llvm.dbg.declare(metadata i32* %byte_offset, metadata !211, metadata !124), !dbg !212
  call void @llvm.dbg.declare(metadata i32* %bit_offset, metadata !213, metadata !124), !dbg !214
  call void @llvm.dbg.declare(metadata i32* %present, metadata !215, metadata !124), !dbg !216
  call void @llvm.dbg.declare(metadata i32* %initbits, metadata !217, metadata !124), !dbg !218
  call void @llvm.dbg.declare(metadata i32* %res, metadata !219, metadata !124), !dbg !220
  %0 = load i32, i32* %offset.addr, align 4, !dbg !221
  %shr = ashr i32 %0, 3, !dbg !222
  store i32 %shr, i32* %byte_offset, align 4, !dbg !223
  %1 = load i32, i32* %offset.addr, align 4, !dbg !224
  %and = and i32 %1, 7, !dbg !225
  store i32 %and, i32* %bit_offset, align 4, !dbg !226
  %2 = load i32, i32* %bit_offset, align 4, !dbg !227
  %sub = sub nsw i32 8, %2, !dbg !228
  store i32 %sub, i32* %initbits, align 4, !dbg !229
  %3 = load i32, i32* %byte_offset, align 4, !dbg !230
  %idxprom = sext i32 %3 to i64, !dbg !231
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !231
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 %idxprom, !dbg !231
  %5 = load i8, i8* %arrayidx, align 1, !dbg !231
  %conv = zext i8 %5 to i32, !dbg !232
  %and1 = and i32 %conv, 255, !dbg !233
  store i32 %and1, i32* %present, align 4, !dbg !234
  %6 = load i32, i32* %present, align 4, !dbg !235
  %7 = load i32, i32* %initbits, align 4, !dbg !236
  %shl = shl i32 1, %7, !dbg !237
  %sub2 = sub nsw i32 %shl, 1, !dbg !238
  %and3 = and i32 %6, %sub2, !dbg !239
  store i32 %and3, i32* %res, align 4, !dbg !240
  br label %while.cond, !dbg !241

while.cond:                                       ; preds = %while.body, %entry
  %8 = load i32, i32* %x.addr, align 4, !dbg !242
  %9 = load i32, i32* %initbits, align 4, !dbg !245
  %cmp = icmp sgt i32 %8, %9, !dbg !246
  br i1 %cmp, label %while.body, label %while.end, !dbg !241

while.body:                                       ; preds = %while.cond
  %10 = load i32, i32* %byte_offset, align 4, !dbg !247
  %inc = add nsw i32 %10, 1, !dbg !247
  store i32 %inc, i32* %byte_offset, align 4, !dbg !247
  %11 = load i32, i32* %byte_offset, align 4, !dbg !249
  %idxprom5 = sext i32 %11 to i64, !dbg !250
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !250
  %arrayidx6 = getelementptr inbounds i8, i8* %12, i64 %idxprom5, !dbg !250
  %13 = load i8, i8* %arrayidx6, align 1, !dbg !250
  %conv7 = zext i8 %13 to i32, !dbg !251
  %and8 = and i32 %conv7, 255, !dbg !252
  store i32 %and8, i32* %present, align 4, !dbg !253
  %14 = load i32, i32* %res, align 4, !dbg !254
  %shl9 = shl i32 %14, 8, !dbg !255
  %15 = load i32, i32* %present, align 4, !dbg !256
  %or = or i32 %shl9, %15, !dbg !257
  store i32 %or, i32* %res, align 4, !dbg !258
  %16 = load i32, i32* %initbits, align 4, !dbg !259
  %add = add nsw i32 %16, 8, !dbg !259
  store i32 %add, i32* %initbits, align 4, !dbg !259
  br label %while.cond, !dbg !241

while.end:                                        ; preds = %while.cond
  %17 = load i32, i32* %res, align 4, !dbg !260
  %18 = load i32, i32* %initbits, align 4, !dbg !261
  %19 = load i32, i32* %x.addr, align 4, !dbg !262
  %sub10 = sub nsw i32 %18, %19, !dbg !263
  %shr11 = ashr i32 %17, %sub10, !dbg !264
  ret i32 %shr11, !dbg !265
}

; Function Attrs: nounwind uwtable
define i32 @read_11_bits(i8* %buf, i32 %offset) #0 {
entry:
  %retval = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %byte_offset = alloca i32, align 4
  %ioffset = alloca i32, align 4
  %present = alloca i32, align 4
  %initbits = alloca i32, align 4
  %res = alloca i32, align 4
  %b0 = alloca i32, align 4
  %b1 = alloca i32, align 4
  %b2 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !266, metadata !124), !dbg !267
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !268, metadata !124), !dbg !269
  call void @llvm.dbg.declare(metadata i32* %byte_offset, metadata !270, metadata !124), !dbg !271
  call void @llvm.dbg.declare(metadata i32* %ioffset, metadata !272, metadata !124), !dbg !273
  call void @llvm.dbg.declare(metadata i32* %present, metadata !274, metadata !124), !dbg !275
  call void @llvm.dbg.declare(metadata i32* %initbits, metadata !276, metadata !124), !dbg !277
  call void @llvm.dbg.declare(metadata i32* %res, metadata !278, metadata !124), !dbg !279
  call void @llvm.dbg.declare(metadata i32* %b0, metadata !280, metadata !124), !dbg !281
  call void @llvm.dbg.declare(metadata i32* %b1, metadata !282, metadata !124), !dbg !283
  call void @llvm.dbg.declare(metadata i32* %b2, metadata !284, metadata !124), !dbg !285
  %0 = load i32, i32* %offset.addr, align 4, !dbg !286
  %shr = ashr i32 %0, 3, !dbg !287
  store i32 %shr, i32* %byte_offset, align 4, !dbg !288
  %1 = load i32, i32* %offset.addr, align 4, !dbg !289
  %and = and i32 %1, 7, !dbg !290
  %sub = sub nsw i32 8, %and, !dbg !291
  store i32 %sub, i32* %ioffset, align 4, !dbg !292
  %2 = load i32, i32* %byte_offset, align 4, !dbg !293
  %idxprom = sext i32 %2 to i64, !dbg !294
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !294
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %idxprom, !dbg !294
  %4 = load i8, i8* %arrayidx, align 1, !dbg !294
  %conv = zext i8 %4 to i32, !dbg !295
  %and1 = and i32 %conv, 255, !dbg !296
  store i32 %and1, i32* %b0, align 4, !dbg !297
  %5 = load i32, i32* %byte_offset, align 4, !dbg !298
  %add = add nsw i32 %5, 1, !dbg !299
  %idxprom2 = sext i32 %add to i64, !dbg !300
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !300
  %arrayidx3 = getelementptr inbounds i8, i8* %6, i64 %idxprom2, !dbg !300
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !300
  %conv4 = zext i8 %7 to i32, !dbg !301
  %and5 = and i32 %conv4, 255, !dbg !302
  store i32 %and5, i32* %b1, align 4, !dbg !303
  %8 = load i32, i32* %b0, align 4, !dbg !304
  %9 = load i32, i32* %ioffset, align 4, !dbg !305
  %sub6 = sub nsw i32 11, %9, !dbg !306
  %shl = shl i32 %8, %sub6, !dbg !307
  store i32 %shl, i32* %res, align 4, !dbg !308
  %10 = load i32, i32* %ioffset, align 4, !dbg !309
  %cmp = icmp sge i32 %10, 3, !dbg !311
  br i1 %cmp, label %if.then, label %if.else, !dbg !312

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %res, align 4, !dbg !313
  %12 = load i32, i32* %b1, align 4, !dbg !315
  %13 = load i32, i32* %ioffset, align 4, !dbg !316
  %sub8 = sub nsw i32 %13, 3, !dbg !317
  %shr9 = ashr i32 %12, %sub8, !dbg !318
  %or = or i32 %11, %shr9, !dbg !319
  %and10 = and i32 %or, 2047, !dbg !320
  store i32 %and10, i32* %retval, !dbg !321
  br label %return, !dbg !321

if.else:                                          ; preds = %entry
  %14 = load i32, i32* %byte_offset, align 4, !dbg !322
  %add11 = add nsw i32 %14, 2, !dbg !323
  %idxprom12 = sext i32 %add11 to i64, !dbg !324
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !324
  %arrayidx13 = getelementptr inbounds i8, i8* %15, i64 %idxprom12, !dbg !324
  %16 = load i8, i8* %arrayidx13, align 1, !dbg !324
  %conv14 = zext i8 %16 to i32, !dbg !325
  %and15 = and i32 %conv14, 255, !dbg !326
  store i32 %and15, i32* %b2, align 4, !dbg !327
  br label %if.end

if.end:                                           ; preds = %if.else
  %17 = load i32, i32* %res, align 4, !dbg !328
  %18 = load i32, i32* %b1, align 4, !dbg !329
  %19 = load i32, i32* %ioffset, align 4, !dbg !330
  %sub16 = sub nsw i32 3, %19, !dbg !331
  %shl17 = shl i32 %18, %sub16, !dbg !332
  %or18 = or i32 %17, %shl17, !dbg !333
  %20 = load i32, i32* %b2, align 4, !dbg !334
  %21 = load i32, i32* %ioffset, align 4, !dbg !335
  %add19 = add nsw i32 %21, 5, !dbg !336
  %shr20 = ashr i32 %20, %add19, !dbg !337
  %or21 = or i32 %or18, %shr20, !dbg !338
  %and22 = and i32 %or21, 2047, !dbg !339
  store i32 %and22, i32* %retval, !dbg !340
  br label %return, !dbg !340

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, !dbg !341
  ret i32 %22, !dbg !341
}

; Function Attrs: nounwind uwtable
define %struct.linked_list_lli* @five11(i8* %inbuf) #0 {
entry:
  %inbuf.addr = alloca i8*, align 8
  %offset = alloca i32, align 4
  %nof_packets = alloca i32, align 4
  %nof_channels = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %chan = alloca i32, align 4
  %packet = alloca %struct.linked_list_int*, align 8
  %res = alloca %struct.linked_list_lli*, align 8
  store i8* %inbuf, i8** %inbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inbuf.addr, metadata !342, metadata !124), !dbg !343
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !344, metadata !124), !dbg !345
  call void @llvm.dbg.declare(metadata i32* %nof_packets, metadata !346, metadata !124), !dbg !347
  call void @llvm.dbg.declare(metadata i32* %nof_channels, metadata !348, metadata !124), !dbg !349
  call void @llvm.dbg.declare(metadata i32* %i, metadata !350, metadata !124), !dbg !351
  call void @llvm.dbg.declare(metadata i32* %j, metadata !352, metadata !124), !dbg !353
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !354, metadata !124), !dbg !355
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %packet, metadata !356, metadata !124), !dbg !357
  store %struct.linked_list_int* null, %struct.linked_list_int** %packet, align 8, !dbg !357
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %res, metadata !358, metadata !124), !dbg !359
  store %struct.linked_list_lli* null, %struct.linked_list_lli** %res, align 8, !dbg !359
  store i32 0, i32* %offset, align 4, !dbg !360
  %0 = load i8*, i8** %inbuf.addr, align 8, !dbg !361
  %1 = load i32, i32* %offset, align 4, !dbg !362
  %call = call i32 @read_x_bits(i8* %0, i32 %1, i32 16), !dbg !363
  store i32 %call, i32* %nof_packets, align 4, !dbg !364
  %2 = load i32, i32* %offset, align 4, !dbg !365
  %add = add nsw i32 %2, 16, !dbg !366
  store i32 %add, i32* %offset, align 4, !dbg !367
  store i32 0, i32* %i, align 4, !dbg !368
  br label %for.cond, !dbg !370

for.cond:                                         ; preds = %for.inc.12, %entry
  %3 = load i32, i32* %i, align 4, !dbg !371
  %4 = load i32, i32* %nof_packets, align 4, !dbg !375
  %cmp = icmp slt i32 %3, %4, !dbg !376
  br i1 %cmp, label %for.body, label %for.end.14, !dbg !377

for.body:                                         ; preds = %for.cond
  %5 = load i8*, i8** %inbuf.addr, align 8, !dbg !378
  %6 = load i32, i32* %offset, align 4, !dbg !380
  %call1 = call i32 @read_x_bits(i8* %5, i32 %6, i32 5), !dbg !381
  store i32 %call1, i32* %nof_channels, align 4, !dbg !382
  %7 = load i32, i32* %offset, align 4, !dbg !383
  %add2 = add nsw i32 %7, 5, !dbg !383
  store i32 %add2, i32* %offset, align 4, !dbg !383
  store i32 0, i32* %j, align 4, !dbg !384
  br label %for.cond.3, !dbg !386

for.cond.3:                                       ; preds = %for.inc, %for.body
  %8 = load i32, i32* %j, align 4, !dbg !387
  %9 = load i32, i32* %nof_channels, align 4, !dbg !391
  %cmp4 = icmp slt i32 %8, %9, !dbg !392
  br i1 %cmp4, label %for.body.5, label %for.end, !dbg !393

for.body.5:                                       ; preds = %for.cond.3
  %10 = load i8*, i8** %inbuf.addr, align 8, !dbg !394
  %11 = load i32, i32* %offset, align 4, !dbg !396
  %call6 = call i32 @read_11_bits(i8* %10, i32 %11), !dbg !397
  store i32 %call6, i32* %chan, align 4, !dbg !398
  %12 = load i32, i32* %offset, align 4, !dbg !399
  %add7 = add nsw i32 %12, 11, !dbg !400
  store i32 %add7, i32* %offset, align 4, !dbg !401
  %13 = load i32, i32* %chan, align 4, !dbg !402
  %14 = load %struct.linked_list_int*, %struct.linked_list_int** %packet, align 8, !dbg !403
  %call8 = call %struct.linked_list_int* @cons1(i32 %13, %struct.linked_list_int* %14), !dbg !404
  store %struct.linked_list_int* %call8, %struct.linked_list_int** %packet, align 8, !dbg !405
  br label %for.inc, !dbg !406

for.inc:                                          ; preds = %for.body.5
  %15 = load i32, i32* %j, align 4, !dbg !407
  %inc = add nsw i32 %15, 1, !dbg !407
  store i32 %inc, i32* %j, align 4, !dbg !407
  br label %for.cond.3, !dbg !408

for.end:                                          ; preds = %for.cond.3
  %16 = load i32, i32* %offset, align 4, !dbg !409
  %17 = load i32, i32* %nof_channels, align 4, !dbg !410
  %call9 = call i32 @pad_size(i32 %17), !dbg !411
  %add10 = add nsw i32 %16, %call9, !dbg !412
  store i32 %add10, i32* %offset, align 4, !dbg !413
  %18 = load %struct.linked_list_int*, %struct.linked_list_int** %packet, align 8, !dbg !414
  %19 = load %struct.linked_list_lli*, %struct.linked_list_lli** %res, align 8, !dbg !415
  %call11 = call %struct.linked_list_lli* @cons2(%struct.linked_list_int* %18, %struct.linked_list_lli* %19), !dbg !416
  store %struct.linked_list_lli* %call11, %struct.linked_list_lli** %res, align 8, !dbg !417
  store %struct.linked_list_int* null, %struct.linked_list_int** %packet, align 8, !dbg !418
  br label %for.inc.12, !dbg !419

for.inc.12:                                       ; preds = %for.end
  %20 = load i32, i32* %i, align 4, !dbg !420
  %inc13 = add nsw i32 %20, 1, !dbg !420
  store i32 %inc13, i32* %i, align 4, !dbg !420
  br label %for.cond, !dbg !421

for.end.14:                                       ; preds = %for.cond
  %21 = load %struct.linked_list_lli*, %struct.linked_list_lli** %res, align 8, !dbg !422
  ret %struct.linked_list_lli* %21, !dbg !423
}

; Function Attrs: nounwind uwtable
define i32 @pad_size(i32 %nof_channels) #0 {
entry:
  %nof_channels.addr = alloca i32, align 4
  %bits = alloca i32, align 4
  store i32 %nof_channels, i32* %nof_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nof_channels.addr, metadata !424, metadata !124), !dbg !425
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !426, metadata !124), !dbg !427
  %0 = load i32, i32* %nof_channels.addr, align 4, !dbg !428
  %mul = mul nsw i32 %0, 11, !dbg !429
  %add = add nsw i32 5, %mul, !dbg !430
  store i32 %add, i32* %bits, align 4, !dbg !427
  %1 = load i32, i32* %bits, align 4, !dbg !431
  %and = and i32 %1, 7, !dbg !432
  %sub = sub nsw i32 8, %and, !dbg !433
  %and1 = and i32 %sub, 7, !dbg !434
  ret i32 %and1, !dbg !435
}

; Function Attrs: nounwind uwtable
define i32 @calc_sum2(%struct.linked_list_lli* %list) #0 {
entry:
  %list.addr = alloca %struct.linked_list_lli*, align 8
  %next = alloca %struct.linked_list_lli*, align 8
  %hd = alloca %struct.linked_list_int*, align 8
  %res = alloca i32, align 4
  store %struct.linked_list_lli* %list, %struct.linked_list_lli** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %list.addr, metadata !436, metadata !124), !dbg !437
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %next, metadata !438, metadata !124), !dbg !439
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %hd, metadata !440, metadata !124), !dbg !441
  call void @llvm.dbg.declare(metadata i32* %res, metadata !442, metadata !124), !dbg !443
  store i32 0, i32* %res, align 4, !dbg !443
  br label %while.cond, !dbg !444

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !445
  %cmp = icmp ne %struct.linked_list_lli* %0, null, !dbg !448
  br i1 %cmp, label %while.body, label %while.end, !dbg !444

while.body:                                       ; preds = %while.cond
  %1 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !449
  %cdr = getelementptr inbounds %struct.linked_list_lli, %struct.linked_list_lli* %1, i32 0, i32 1, !dbg !451
  %2 = load i8*, i8** %cdr, align 8, !dbg !451
  %3 = bitcast i8* %2 to %struct.linked_list_lli*, !dbg !449
  store %struct.linked_list_lli* %3, %struct.linked_list_lli** %next, align 8, !dbg !452
  %4 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list.addr, align 8, !dbg !453
  %car = getelementptr inbounds %struct.linked_list_lli, %struct.linked_list_lli* %4, i32 0, i32 0, !dbg !454
  %5 = load %struct.linked_list_int*, %struct.linked_list_int** %car, align 8, !dbg !454
  store %struct.linked_list_int* %5, %struct.linked_list_int** %hd, align 8, !dbg !455
  %6 = load %struct.linked_list_int*, %struct.linked_list_int** %hd, align 8, !dbg !456
  %call = call i32 @calc_sum1(%struct.linked_list_int* %6), !dbg !457
  %7 = load i32, i32* %res, align 4, !dbg !458
  %add = add nsw i32 %7, %call, !dbg !458
  store i32 %add, i32* %res, align 4, !dbg !458
  %8 = load %struct.linked_list_lli*, %struct.linked_list_lli** %next, align 8, !dbg !459
  store %struct.linked_list_lli* %8, %struct.linked_list_lli** %list.addr, align 8, !dbg !460
  br label %while.cond, !dbg !444

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %res, align 4, !dbg !461
  ret i32 %9, !dbg !462
}

; Function Attrs: nounwind uwtable
define i32 @calc_sum1(%struct.linked_list_int* %list) #0 {
entry:
  %list.addr = alloca %struct.linked_list_int*, align 8
  %next = alloca %struct.linked_list_int*, align 8
  %hd = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.linked_list_int* %list, %struct.linked_list_int** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %list.addr, metadata !463, metadata !124), !dbg !464
  call void @llvm.dbg.declare(metadata %struct.linked_list_int** %next, metadata !465, metadata !124), !dbg !466
  call void @llvm.dbg.declare(metadata i32* %hd, metadata !467, metadata !124), !dbg !468
  call void @llvm.dbg.declare(metadata i32* %res, metadata !469, metadata !124), !dbg !470
  store i32 0, i32* %res, align 4, !dbg !470
  br label %while.cond, !dbg !471

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.linked_list_int*, %struct.linked_list_int** %list.addr, align 8, !dbg !472
  %cmp = icmp ne %struct.linked_list_int* %0, null, !dbg !475
  br i1 %cmp, label %while.body, label %while.end, !dbg !471

while.body:                                       ; preds = %while.cond
  %1 = load %struct.linked_list_int*, %struct.linked_list_int** %list.addr, align 8, !dbg !476
  %cdr = getelementptr inbounds %struct.linked_list_int, %struct.linked_list_int* %1, i32 0, i32 1, !dbg !478
  %2 = load i8*, i8** %cdr, align 8, !dbg !478
  %3 = bitcast i8* %2 to %struct.linked_list_int*, !dbg !476
  store %struct.linked_list_int* %3, %struct.linked_list_int** %next, align 8, !dbg !479
  %4 = load %struct.linked_list_int*, %struct.linked_list_int** %list.addr, align 8, !dbg !480
  %car = getelementptr inbounds %struct.linked_list_int, %struct.linked_list_int* %4, i32 0, i32 0, !dbg !481
  %5 = load i32, i32* %car, align 4, !dbg !481
  store i32 %5, i32* %hd, align 4, !dbg !482
  %6 = load i32, i32* %hd, align 4, !dbg !483
  %7 = load i32, i32* %res, align 4, !dbg !484
  %add = add nsw i32 %7, %6, !dbg !484
  store i32 %add, i32* %res, align 4, !dbg !484
  %8 = load %struct.linked_list_int*, %struct.linked_list_int** %next, align 8, !dbg !485
  store %struct.linked_list_int* %8, %struct.linked_list_int** %list.addr, align 8, !dbg !486
  br label %while.cond, !dbg !471

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %res, align 4, !dbg !487
  ret i32 %9, !dbg !488
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %in = alloca %struct._IO_FILE*, align 8
  %i = alloca i32, align 4
  %size = alloca i64, align 8
  %outsize = alloca i32, align 4
  %time = alloca i32, align 4
  %list = alloca %struct.linked_list_lli*, align 8
  %inbuf = alloca i8*, align 8
  %outbuf = alloca i8*, align 8
  %temp = alloca i8*, align 8
  %pre = alloca %struct.timeval, align 8
  %post = alloca %struct.timeval, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !489, metadata !124), !dbg !490
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !491, metadata !124), !dbg !492
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in, metadata !493, metadata !124), !dbg !494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !495, metadata !124), !dbg !496
  call void @llvm.dbg.declare(metadata i64* %size, metadata !497, metadata !124), !dbg !498
  call void @llvm.dbg.declare(metadata i32* %outsize, metadata !499, metadata !124), !dbg !500
  call void @llvm.dbg.declare(metadata i32* %time, metadata !501, metadata !124), !dbg !502
  call void @llvm.dbg.declare(metadata %struct.linked_list_lli** %list, metadata !503, metadata !124), !dbg !504
  call void @llvm.dbg.declare(metadata i8** %inbuf, metadata !505, metadata !124), !dbg !506
  call void @llvm.dbg.declare(metadata i8** %outbuf, metadata !507, metadata !124), !dbg !508
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !509, metadata !124), !dbg !510
  call void @llvm.dbg.declare(metadata %struct.timeval* %pre, metadata !511, metadata !124), !dbg !519
  call void @llvm.dbg.declare(metadata %struct.timeval* %post, metadata !520, metadata !124), !dbg !521
  %call = call noalias i8* @malloc(i64 150000) #5, !dbg !522
  store i8* %call, i8** %inbuf, align 8, !dbg !523
  %0 = load i32, i32* %argc.addr, align 4, !dbg !524
  %cmp = icmp sgt i32 %0, 1, !dbg !526
  br i1 %cmp, label %if.then, label %if.else, !dbg !527

if.then:                                          ; preds = %entry
  %1 = load i8**, i8*** %argv.addr, align 8, !dbg !528
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 1, !dbg !528
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !528
  %call1 = call %struct._IO_FILE* @fopen(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !531
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %in, align 8, !dbg !532
  %cmp2 = icmp eq %struct._IO_FILE* %call1, null, !dbg !533
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !534

if.then.3:                                        ; preds = %if.then
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !535
  %arrayidx4 = getelementptr inbounds i8*, i8** %3, i64 1, !dbg !535
  %4 = load i8*, i8** %arrayidx4, align 8, !dbg !535
  call void @perror(i8* %4), !dbg !537
  call void @exit(i32 1) #6, !dbg !538
  unreachable, !dbg !538

if.end:                                           ; preds = %if.then
  %5 = load i8**, i8*** %argv.addr, align 8, !dbg !539
  %incdec.ptr = getelementptr inbounds i8*, i8** %5, i32 1, !dbg !539
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !539
  %6 = load i32, i32* %argc.addr, align 4, !dbg !540
  %dec = add nsw i32 %6, -1, !dbg !540
  store i32 %dec, i32* %argc.addr, align 4, !dbg !540
  br label %if.end.5, !dbg !541

if.else:                                          ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !542
  store %struct._IO_FILE* %7, %struct._IO_FILE** %in, align 8, !dbg !543
  br label %if.end.5

if.end.5:                                         ; preds = %if.else, %if.end
  %8 = load i32, i32* %argc.addr, align 4, !dbg !544
  %cmp6 = icmp ne i32 %8, 1, !dbg !546
  br i1 %cmp6, label %if.then.7, label %if.end.9, !dbg !547

if.then.7:                                        ; preds = %if.end.5
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !548
  call void @exit(i32 2) #6, !dbg !550
  unreachable, !dbg !550

if.end.9:                                         ; preds = %if.end.5
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %in, align 8, !dbg !551
  %10 = load i8*, i8** %inbuf, align 8, !dbg !552
  %call10 = call i64 @read_data(%struct._IO_FILE* %9, i8* %10), !dbg !553
  store i64 %call10, i64* %size, align 8, !dbg !554
  %call11 = call i32 @gettimeofday(%struct.timeval* %pre, %struct.timezone* null) #5, !dbg !555
  store i32 0, i32* %i, align 4, !dbg !556
  br label %for.cond, !dbg !558

for.cond:                                         ; preds = %for.inc, %if.end.9
  %11 = load i32, i32* %i, align 4, !dbg !559
  %cmp12 = icmp slt i32 %11, 10000, !dbg !563
  br i1 %cmp12, label %for.body, label %for.end, !dbg !564

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %inbuf, align 8, !dbg !565
  %call13 = call %struct.linked_list_lli* @five11(i8* %12), !dbg !567
  store %struct.linked_list_lli* %call13, %struct.linked_list_lli** %list, align 8, !dbg !568
  %13 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list, align 8, !dbg !569
  %call14 = call i32 @calc_sum2(%struct.linked_list_lli* %13), !dbg !570
  store i32 %call14, i32* %outsize, align 4, !dbg !571
  %14 = load %struct.linked_list_lli*, %struct.linked_list_lli** %list, align 8, !dbg !572
  call void @free_list2(%struct.linked_list_lli* %14), !dbg !573
  br label %for.inc, !dbg !574

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !575
  %inc = add nsw i32 %15, 1, !dbg !575
  store i32 %inc, i32* %i, align 4, !dbg !575
  br label %for.cond, !dbg !576

for.end:                                          ; preds = %for.cond
  %call15 = call i32 @gettimeofday(%struct.timeval* %post, %struct.timezone* null) #5, !dbg !577
  %16 = load i32, i32* %outsize, align 4, !dbg !578
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 %16), !dbg !579
  call void @exit(i32 0) #6, !dbg !580
  unreachable, !dbg !580

return:                                           ; No predecessors!
  %17 = load i32, i32* %retval, !dbg !581
  ret i32 %17, !dbg !581
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare void @perror(i8*) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i64 @read_data(%struct._IO_FILE* %in, i8* %buffer) #0 {
entry:
  %in.addr = alloca %struct._IO_FILE*, align 8
  %buffer.addr = alloca i8*, align 8
  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %in.addr, metadata !582, metadata !124), !dbg !583
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !584, metadata !124), !dbg !585
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !586
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %in.addr, align 8, !dbg !587
  %call = call i64 @fread(i8* %0, i64 1, i64 150000, %struct._IO_FILE* %1), !dbg !588
  ret i64 %call, !dbg !589
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!120, !121}
!llvm.ident = !{!122}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !19)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!2 = !{}
!3 = !{!4, !13, !12, !10}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "linked_list_int", file: !6, line: 12, baseType: !7)
!6 = !DIFile(filename: "/home/gleison/tf/Benchmarks/BitBench/five11/tmp.c", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "linked_list_int", file: !6, line: 9, size: 128, align: 64, elements: !8)
!8 = !{!9, !11}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "car", scope: !7, file: !6, line: 10, baseType: !10, size: 32, align: 32)
!10 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "cdr", scope: !7, file: !6, line: 11, baseType: !12, size: 64, align: 64, offset: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64, align: 64)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "linked_list_lli", file: !6, line: 17, baseType: !15)
!15 = !DICompositeType(tag: DW_TAG_structure_type, name: "linked_list_lli", file: !6, line: 14, size: 128, align: 64, elements: !16)
!16 = !{!17, !18}
!17 = !DIDerivedType(tag: DW_TAG_member, name: "car", scope: !15, file: !6, line: 15, baseType: !4, size: 64, align: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "cdr", scope: !15, file: !6, line: 16, baseType: !12, size: 64, align: 64, offset: 64)
!19 = !{!20, !23, !26, !29, !32, !37, !40, !43, !46, !49, !52, !58}
!20 = !DISubprogram(name: "cons1", scope: !6, file: !6, line: 22, type: !21, isLocal: false, isDefinition: true, scopeLine: 22, flags: DIFlagPrototyped, isOptimized: false, function: %struct.linked_list_int* (i32, %struct.linked_list_int*)* @cons1, variables: !2)
!21 = !DISubroutineType(types: !22)
!22 = !{!4, !10, !4}
!23 = !DISubprogram(name: "cons2", scope: !6, file: !6, line: 30, type: !24, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, function: %struct.linked_list_lli* (%struct.linked_list_int*, %struct.linked_list_lli*)* @cons2, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{!13, !4, !13}
!26 = !DISubprogram(name: "free_list1", scope: !6, file: !6, line: 38, type: !27, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.linked_list_int*)* @free_list1, variables: !2)
!27 = !DISubroutineType(types: !28)
!28 = !{null, !4}
!29 = !DISubprogram(name: "free_list2", scope: !6, file: !6, line: 48, type: !30, isLocal: false, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.linked_list_lli*)* @free_list2, variables: !2)
!30 = !DISubroutineType(types: !31)
!31 = !{null, !13}
!32 = !DISubprogram(name: "read_x_bits", scope: !6, file: !6, line: 62, type: !33, isLocal: false, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i8*, i32, i32)* @read_x_bits, variables: !2)
!33 = !DISubroutineType(types: !34)
!34 = !{!10, !35, !10, !10}
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!37 = !DISubprogram(name: "read_11_bits", scope: !6, file: !6, line: 78, type: !38, isLocal: false, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i8*, i32)* @read_11_bits, variables: !2)
!38 = !DISubroutineType(types: !39)
!39 = !{!10, !35, !10}
!40 = !DISubprogram(name: "five11", scope: !6, file: !6, line: 93, type: !41, isLocal: false, isDefinition: true, scopeLine: 93, flags: DIFlagPrototyped, isOptimized: false, function: %struct.linked_list_lli* (i8*)* @five11, variables: !2)
!41 = !DISubroutineType(types: !42)
!42 = !{!13, !35}
!43 = !DISubprogram(name: "pad_size", scope: !6, file: !6, line: 115, type: !44, isLocal: false, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32)* @pad_size, variables: !2)
!44 = !DISubroutineType(types: !45)
!45 = !{!10, !10}
!46 = !DISubprogram(name: "calc_sum2", scope: !6, file: !6, line: 120, type: !47, isLocal: false, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.linked_list_lli*)* @calc_sum2, variables: !2)
!47 = !DISubroutineType(types: !48)
!48 = !{!10, !13}
!49 = !DISubprogram(name: "calc_sum1", scope: !6, file: !6, line: 133, type: !50, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.linked_list_int*)* @calc_sum1, variables: !2)
!50 = !DISubroutineType(types: !51)
!51 = !{!10, !4}
!52 = !DISubprogram(name: "main", scope: !6, file: !6, line: 151, type: !53, isLocal: false, isDefinition: true, scopeLine: 151, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!53 = !DISubroutineType(types: !54)
!54 = !{!10, !10, !55}
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!57 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!58 = !DISubprogram(name: "read_data", scope: !6, file: !6, line: 147, type: !59, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: false, function: i64 (%struct._IO_FILE*, i8*)* @read_data, variables: !2)
!59 = !DISubroutineType(types: !60)
!60 = !{!61, !64, !12}
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !62, line: 62, baseType: !63)
!62 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!63 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !66, line: 48, baseType: !67)
!66 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!67 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !68, line: 241, size: 1728, align: 64, elements: !69)
!68 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!69 = !{!70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !90, !91, !92, !93, !97, !99, !101, !105, !108, !110, !111, !112, !113, !114, !115, !116}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !67, file: !68, line: 242, baseType: !10, size: 32, align: 32)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !67, file: !68, line: 247, baseType: !56, size: 64, align: 64, offset: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !67, file: !68, line: 248, baseType: !56, size: 64, align: 64, offset: 128)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !67, file: !68, line: 249, baseType: !56, size: 64, align: 64, offset: 192)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !67, file: !68, line: 250, baseType: !56, size: 64, align: 64, offset: 256)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !67, file: !68, line: 251, baseType: !56, size: 64, align: 64, offset: 320)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !67, file: !68, line: 252, baseType: !56, size: 64, align: 64, offset: 384)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !67, file: !68, line: 253, baseType: !56, size: 64, align: 64, offset: 448)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !67, file: !68, line: 254, baseType: !56, size: 64, align: 64, offset: 512)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !67, file: !68, line: 256, baseType: !56, size: 64, align: 64, offset: 576)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !67, file: !68, line: 257, baseType: !56, size: 64, align: 64, offset: 640)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !67, file: !68, line: 258, baseType: !56, size: 64, align: 64, offset: 704)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !67, file: !68, line: 260, baseType: !83, size: 64, align: 64, offset: 768)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64, align: 64)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !68, line: 156, size: 192, align: 64, elements: !85)
!85 = !{!86, !87, !89}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !84, file: !68, line: 157, baseType: !83, size: 64, align: 64)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !84, file: !68, line: 158, baseType: !88, size: 64, align: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64, align: 64)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !84, file: !68, line: 162, baseType: !10, size: 32, align: 32, offset: 128)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !67, file: !68, line: 262, baseType: !88, size: 64, align: 64, offset: 832)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !67, file: !68, line: 264, baseType: !10, size: 32, align: 32, offset: 896)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !67, file: !68, line: 268, baseType: !10, size: 32, align: 32, offset: 928)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !67, file: !68, line: 270, baseType: !94, size: 64, align: 64, offset: 960)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !95, line: 131, baseType: !96)
!95 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!96 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !67, file: !68, line: 274, baseType: !98, size: 16, align: 16, offset: 1024)
!98 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !67, file: !68, line: 275, baseType: !100, size: 8, align: 8, offset: 1040)
!100 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !67, file: !68, line: 276, baseType: !102, size: 8, align: 8, offset: 1048)
!102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 8, align: 8, elements: !103)
!103 = !{!104}
!104 = !DISubrange(count: 1)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !67, file: !68, line: 280, baseType: !106, size: 64, align: 64, offset: 1088)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64, align: 64)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !68, line: 150, baseType: null)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !67, file: !68, line: 289, baseType: !109, size: 64, align: 64, offset: 1152)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !95, line: 132, baseType: !96)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !67, file: !68, line: 297, baseType: !12, size: 64, align: 64, offset: 1216)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !67, file: !68, line: 298, baseType: !12, size: 64, align: 64, offset: 1280)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !67, file: !68, line: 299, baseType: !12, size: 64, align: 64, offset: 1344)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !67, file: !68, line: 300, baseType: !12, size: 64, align: 64, offset: 1408)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !67, file: !68, line: 302, baseType: !61, size: 64, align: 64, offset: 1472)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !67, file: !68, line: 303, baseType: !10, size: 32, align: 32, offset: 1536)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !67, file: !68, line: 305, baseType: !117, size: 160, align: 8, offset: 1568)
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 160, align: 8, elements: !118)
!118 = !{!119}
!119 = !DISubrange(count: 20)
!120 = !{i32 2, !"Dwarf Version", i32 4}
!121 = !{i32 2, !"Debug Info Version", i32 3}
!122 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!123 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hd", arg: 1, scope: !20, file: !6, line: 22, type: !10)
!124 = !DIExpression()
!125 = !DILocation(line: 22, column: 28, scope: !20)
!126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tl", arg: 2, scope: !20, file: !6, line: 22, type: !4)
!127 = !DILocation(line: 22, column: 49, scope: !20)
!128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !20, file: !6, line: 23, type: !4)
!129 = !DILocation(line: 23, column: 20, scope: !20)
!130 = !DILocation(line: 24, column: 28, scope: !20)
!131 = !DILocation(line: 24, column: 9, scope: !20)
!132 = !DILocation(line: 24, column: 7, scope: !20)
!133 = !DILocation(line: 25, column: 14, scope: !20)
!134 = !DILocation(line: 25, column: 3, scope: !20)
!135 = !DILocation(line: 25, column: 8, scope: !20)
!136 = !DILocation(line: 25, column: 12, scope: !20)
!137 = !DILocation(line: 26, column: 14, scope: !20)
!138 = !DILocation(line: 26, column: 3, scope: !20)
!139 = !DILocation(line: 26, column: 8, scope: !20)
!140 = !DILocation(line: 26, column: 12, scope: !20)
!141 = !DILocation(line: 27, column: 10, scope: !20)
!142 = !DILocation(line: 27, column: 3, scope: !20)
!143 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hd", arg: 1, scope: !23, file: !6, line: 30, type: !4)
!144 = !DILocation(line: 30, column: 41, scope: !23)
!145 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tl", arg: 2, scope: !23, file: !6, line: 30, type: !13)
!146 = !DILocation(line: 30, column: 62, scope: !23)
!147 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !23, file: !6, line: 31, type: !13)
!148 = !DILocation(line: 31, column: 20, scope: !23)
!149 = !DILocation(line: 32, column: 28, scope: !23)
!150 = !DILocation(line: 32, column: 9, scope: !23)
!151 = !DILocation(line: 32, column: 7, scope: !23)
!152 = !DILocation(line: 33, column: 14, scope: !23)
!153 = !DILocation(line: 33, column: 3, scope: !23)
!154 = !DILocation(line: 33, column: 8, scope: !23)
!155 = !DILocation(line: 33, column: 12, scope: !23)
!156 = !DILocation(line: 34, column: 14, scope: !23)
!157 = !DILocation(line: 34, column: 3, scope: !23)
!158 = !DILocation(line: 34, column: 8, scope: !23)
!159 = !DILocation(line: 34, column: 12, scope: !23)
!160 = !DILocation(line: 35, column: 10, scope: !23)
!161 = !DILocation(line: 35, column: 3, scope: !23)
!162 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "list", arg: 1, scope: !26, file: !6, line: 38, type: !4)
!163 = !DILocation(line: 38, column: 34, scope: !26)
!164 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !26, file: !6, line: 39, type: !4)
!165 = !DILocation(line: 39, column: 20, scope: !26)
!166 = !DILocation(line: 40, column: 3, scope: !26)
!167 = !DILocation(line: 40, column: 10, scope: !168)
!168 = !DILexicalBlockFile(scope: !169, file: !6, discriminator: 2)
!169 = !DILexicalBlockFile(scope: !26, file: !6, discriminator: 1)
!170 = !DILocation(line: 40, column: 15, scope: !26)
!171 = !DILocation(line: 41, column: 12, scope: !172)
!172 = distinct !DILexicalBlock(scope: !26, file: !6, line: 40, column: 24)
!173 = !DILocation(line: 41, column: 18, scope: !172)
!174 = !DILocation(line: 41, column: 10, scope: !172)
!175 = !DILocation(line: 42, column: 10, scope: !172)
!176 = !DILocation(line: 42, column: 5, scope: !172)
!177 = !DILocation(line: 43, column: 12, scope: !172)
!178 = !DILocation(line: 43, column: 10, scope: !172)
!179 = !DILocation(line: 45, column: 3, scope: !26)
!180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "list", arg: 1, scope: !29, file: !6, line: 48, type: !13)
!181 = !DILocation(line: 48, column: 34, scope: !29)
!182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !29, file: !6, line: 49, type: !13)
!183 = !DILocation(line: 49, column: 20, scope: !29)
!184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hd", scope: !29, file: !6, line: 50, type: !4)
!185 = !DILocation(line: 50, column: 20, scope: !29)
!186 = !DILocation(line: 51, column: 3, scope: !29)
!187 = !DILocation(line: 51, column: 10, scope: !188)
!188 = !DILexicalBlockFile(scope: !189, file: !6, discriminator: 2)
!189 = !DILexicalBlockFile(scope: !29, file: !6, discriminator: 1)
!190 = !DILocation(line: 51, column: 15, scope: !29)
!191 = !DILocation(line: 52, column: 12, scope: !192)
!192 = distinct !DILexicalBlock(scope: !29, file: !6, line: 51, column: 24)
!193 = !DILocation(line: 52, column: 18, scope: !192)
!194 = !DILocation(line: 52, column: 10, scope: !192)
!195 = !DILocation(line: 53, column: 10, scope: !192)
!196 = !DILocation(line: 53, column: 16, scope: !192)
!197 = !DILocation(line: 53, column: 8, scope: !192)
!198 = !DILocation(line: 54, column: 16, scope: !192)
!199 = !DILocation(line: 54, column: 5, scope: !192)
!200 = !DILocation(line: 55, column: 10, scope: !192)
!201 = !DILocation(line: 55, column: 5, scope: !192)
!202 = !DILocation(line: 56, column: 12, scope: !192)
!203 = !DILocation(line: 56, column: 10, scope: !192)
!204 = !DILocation(line: 58, column: 3, scope: !29)
!205 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !32, file: !6, line: 62, type: !35)
!206 = !DILocation(line: 62, column: 32, scope: !32)
!207 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 2, scope: !32, file: !6, line: 62, type: !10)
!208 = !DILocation(line: 62, column: 41, scope: !32)
!209 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 3, scope: !32, file: !6, line: 62, type: !10)
!210 = !DILocation(line: 62, column: 53, scope: !32)
!211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "byte_offset", scope: !32, file: !6, line: 63, type: !10)
!212 = !DILocation(line: 63, column: 7, scope: !32)
!213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bit_offset", scope: !32, file: !6, line: 63, type: !10)
!214 = !DILocation(line: 63, column: 20, scope: !32)
!215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "present", scope: !32, file: !6, line: 63, type: !10)
!216 = !DILocation(line: 63, column: 32, scope: !32)
!217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "initbits", scope: !32, file: !6, line: 63, type: !10)
!218 = !DILocation(line: 63, column: 41, scope: !32)
!219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !32, file: !6, line: 63, type: !10)
!220 = !DILocation(line: 63, column: 51, scope: !32)
!221 = !DILocation(line: 64, column: 17, scope: !32)
!222 = !DILocation(line: 64, column: 24, scope: !32)
!223 = !DILocation(line: 64, column: 15, scope: !32)
!224 = !DILocation(line: 65, column: 16, scope: !32)
!225 = !DILocation(line: 65, column: 23, scope: !32)
!226 = !DILocation(line: 65, column: 14, scope: !32)
!227 = !DILocation(line: 66, column: 18, scope: !32)
!228 = !DILocation(line: 66, column: 16, scope: !32)
!229 = !DILocation(line: 66, column: 12, scope: !32)
!230 = !DILocation(line: 67, column: 22, scope: !32)
!231 = !DILocation(line: 67, column: 18, scope: !32)
!232 = !DILocation(line: 67, column: 13, scope: !32)
!233 = !DILocation(line: 67, column: 35, scope: !32)
!234 = !DILocation(line: 67, column: 11, scope: !32)
!235 = !DILocation(line: 68, column: 9, scope: !32)
!236 = !DILocation(line: 68, column: 26, scope: !32)
!237 = !DILocation(line: 68, column: 23, scope: !32)
!238 = !DILocation(line: 68, column: 36, scope: !32)
!239 = !DILocation(line: 68, column: 17, scope: !32)
!240 = !DILocation(line: 68, column: 7, scope: !32)
!241 = !DILocation(line: 69, column: 3, scope: !32)
!242 = !DILocation(line: 69, column: 10, scope: !243)
!243 = !DILexicalBlockFile(scope: !244, file: !6, discriminator: 2)
!244 = !DILexicalBlockFile(scope: !32, file: !6, discriminator: 1)
!245 = !DILocation(line: 69, column: 14, scope: !32)
!246 = !DILocation(line: 69, column: 12, scope: !32)
!247 = !DILocation(line: 70, column: 16, scope: !248)
!248 = distinct !DILexicalBlock(scope: !32, file: !6, line: 69, column: 24)
!249 = !DILocation(line: 71, column: 24, scope: !248)
!250 = !DILocation(line: 71, column: 20, scope: !248)
!251 = !DILocation(line: 71, column: 15, scope: !248)
!252 = !DILocation(line: 71, column: 37, scope: !248)
!253 = !DILocation(line: 71, column: 13, scope: !248)
!254 = !DILocation(line: 72, column: 12, scope: !248)
!255 = !DILocation(line: 72, column: 16, scope: !248)
!256 = !DILocation(line: 72, column: 24, scope: !248)
!257 = !DILocation(line: 72, column: 22, scope: !248)
!258 = !DILocation(line: 72, column: 9, scope: !248)
!259 = !DILocation(line: 73, column: 14, scope: !248)
!260 = !DILocation(line: 75, column: 10, scope: !32)
!261 = !DILocation(line: 75, column: 18, scope: !32)
!262 = !DILocation(line: 75, column: 29, scope: !32)
!263 = !DILocation(line: 75, column: 27, scope: !32)
!264 = !DILocation(line: 75, column: 14, scope: !32)
!265 = !DILocation(line: 75, column: 3, scope: !32)
!266 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buf", arg: 1, scope: !37, file: !6, line: 78, type: !35)
!267 = !DILocation(line: 78, column: 33, scope: !37)
!268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "offset", arg: 2, scope: !37, file: !6, line: 78, type: !10)
!269 = !DILocation(line: 78, column: 42, scope: !37)
!270 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "byte_offset", scope: !37, file: !6, line: 79, type: !10)
!271 = !DILocation(line: 79, column: 7, scope: !37)
!272 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ioffset", scope: !37, file: !6, line: 79, type: !10)
!273 = !DILocation(line: 79, column: 20, scope: !37)
!274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "present", scope: !37, file: !6, line: 79, type: !10)
!275 = !DILocation(line: 79, column: 29, scope: !37)
!276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "initbits", scope: !37, file: !6, line: 79, type: !10)
!277 = !DILocation(line: 79, column: 38, scope: !37)
!278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !37, file: !6, line: 79, type: !10)
!279 = !DILocation(line: 79, column: 48, scope: !37)
!280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b0", scope: !37, file: !6, line: 80, type: !10)
!281 = !DILocation(line: 80, column: 7, scope: !37)
!282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b1", scope: !37, file: !6, line: 80, type: !10)
!283 = !DILocation(line: 80, column: 11, scope: !37)
!284 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b2", scope: !37, file: !6, line: 80, type: !10)
!285 = !DILocation(line: 80, column: 15, scope: !37)
!286 = !DILocation(line: 81, column: 17, scope: !37)
!287 = !DILocation(line: 81, column: 24, scope: !37)
!288 = !DILocation(line: 81, column: 15, scope: !37)
!289 = !DILocation(line: 82, column: 19, scope: !37)
!290 = !DILocation(line: 82, column: 26, scope: !37)
!291 = !DILocation(line: 82, column: 16, scope: !37)
!292 = !DILocation(line: 82, column: 11, scope: !37)
!293 = !DILocation(line: 83, column: 17, scope: !37)
!294 = !DILocation(line: 83, column: 13, scope: !37)
!295 = !DILocation(line: 83, column: 8, scope: !37)
!296 = !DILocation(line: 83, column: 30, scope: !37)
!297 = !DILocation(line: 83, column: 6, scope: !37)
!298 = !DILocation(line: 84, column: 17, scope: !37)
!299 = !DILocation(line: 84, column: 29, scope: !37)
!300 = !DILocation(line: 84, column: 13, scope: !37)
!301 = !DILocation(line: 84, column: 8, scope: !37)
!302 = !DILocation(line: 84, column: 34, scope: !37)
!303 = !DILocation(line: 84, column: 6, scope: !37)
!304 = !DILocation(line: 85, column: 9, scope: !37)
!305 = !DILocation(line: 85, column: 21, scope: !37)
!306 = !DILocation(line: 85, column: 19, scope: !37)
!307 = !DILocation(line: 85, column: 12, scope: !37)
!308 = !DILocation(line: 85, column: 7, scope: !37)
!309 = !DILocation(line: 86, column: 7, scope: !310)
!310 = distinct !DILexicalBlock(scope: !37, file: !6, line: 86, column: 7)
!311 = !DILocation(line: 86, column: 15, scope: !310)
!312 = !DILocation(line: 86, column: 7, scope: !37)
!313 = !DILocation(line: 87, column: 13, scope: !314)
!314 = distinct !DILexicalBlock(scope: !310, file: !6, line: 86, column: 21)
!315 = !DILocation(line: 87, column: 20, scope: !314)
!316 = !DILocation(line: 87, column: 27, scope: !314)
!317 = !DILocation(line: 87, column: 35, scope: !314)
!318 = !DILocation(line: 87, column: 23, scope: !314)
!319 = !DILocation(line: 87, column: 17, scope: !314)
!320 = !DILocation(line: 87, column: 42, scope: !314)
!321 = !DILocation(line: 87, column: 5, scope: !314)
!322 = !DILocation(line: 89, column: 19, scope: !310)
!323 = !DILocation(line: 89, column: 31, scope: !310)
!324 = !DILocation(line: 89, column: 15, scope: !310)
!325 = !DILocation(line: 89, column: 10, scope: !310)
!326 = !DILocation(line: 89, column: 36, scope: !310)
!327 = !DILocation(line: 89, column: 8, scope: !310)
!328 = !DILocation(line: 90, column: 11, scope: !37)
!329 = !DILocation(line: 90, column: 18, scope: !37)
!330 = !DILocation(line: 90, column: 29, scope: !37)
!331 = !DILocation(line: 90, column: 27, scope: !37)
!332 = !DILocation(line: 90, column: 21, scope: !37)
!333 = !DILocation(line: 90, column: 15, scope: !37)
!334 = !DILocation(line: 90, column: 41, scope: !37)
!335 = !DILocation(line: 90, column: 48, scope: !37)
!336 = !DILocation(line: 90, column: 56, scope: !37)
!337 = !DILocation(line: 90, column: 44, scope: !37)
!338 = !DILocation(line: 90, column: 39, scope: !37)
!339 = !DILocation(line: 90, column: 62, scope: !37)
!340 = !DILocation(line: 90, column: 3, scope: !37)
!341 = !DILocation(line: 91, column: 1, scope: !37)
!342 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inbuf", arg: 1, scope: !40, file: !6, line: 93, type: !35)
!343 = !DILocation(line: 93, column: 40, scope: !40)
!344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !40, file: !6, line: 94, type: !10)
!345 = !DILocation(line: 94, column: 7, scope: !40)
!346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nof_packets", scope: !40, file: !6, line: 94, type: !10)
!347 = !DILocation(line: 94, column: 15, scope: !40)
!348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nof_channels", scope: !40, file: !6, line: 94, type: !10)
!349 = !DILocation(line: 94, column: 28, scope: !40)
!350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !40, file: !6, line: 94, type: !10)
!351 = !DILocation(line: 94, column: 42, scope: !40)
!352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !40, file: !6, line: 94, type: !10)
!353 = !DILocation(line: 94, column: 45, scope: !40)
!354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "chan", scope: !40, file: !6, line: 94, type: !10)
!355 = !DILocation(line: 94, column: 48, scope: !40)
!356 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "packet", scope: !40, file: !6, line: 95, type: !4)
!357 = !DILocation(line: 95, column: 20, scope: !40)
!358 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !40, file: !6, line: 96, type: !13)
!359 = !DILocation(line: 96, column: 20, scope: !40)
!360 = !DILocation(line: 97, column: 10, scope: !40)
!361 = !DILocation(line: 98, column: 29, scope: !40)
!362 = !DILocation(line: 98, column: 36, scope: !40)
!363 = !DILocation(line: 98, column: 17, scope: !40)
!364 = !DILocation(line: 98, column: 15, scope: !40)
!365 = !DILocation(line: 99, column: 12, scope: !40)
!366 = !DILocation(line: 99, column: 19, scope: !40)
!367 = !DILocation(line: 99, column: 10, scope: !40)
!368 = !DILocation(line: 100, column: 10, scope: !369)
!369 = distinct !DILexicalBlock(scope: !40, file: !6, line: 100, column: 3)
!370 = !DILocation(line: 100, column: 8, scope: !369)
!371 = !DILocation(line: 100, column: 15, scope: !372)
!372 = !DILexicalBlockFile(scope: !373, file: !6, discriminator: 2)
!373 = !DILexicalBlockFile(scope: !374, file: !6, discriminator: 1)
!374 = distinct !DILexicalBlock(scope: !369, file: !6, line: 100, column: 3)
!375 = !DILocation(line: 100, column: 19, scope: !374)
!376 = !DILocation(line: 100, column: 17, scope: !374)
!377 = !DILocation(line: 100, column: 3, scope: !369)
!378 = !DILocation(line: 101, column: 32, scope: !379)
!379 = distinct !DILexicalBlock(scope: !374, file: !6, line: 100, column: 37)
!380 = !DILocation(line: 101, column: 39, scope: !379)
!381 = !DILocation(line: 101, column: 20, scope: !379)
!382 = !DILocation(line: 101, column: 18, scope: !379)
!383 = !DILocation(line: 102, column: 12, scope: !379)
!384 = !DILocation(line: 103, column: 12, scope: !385)
!385 = distinct !DILexicalBlock(scope: !379, file: !6, line: 103, column: 5)
!386 = !DILocation(line: 103, column: 10, scope: !385)
!387 = !DILocation(line: 103, column: 17, scope: !388)
!388 = !DILexicalBlockFile(scope: !389, file: !6, discriminator: 2)
!389 = !DILexicalBlockFile(scope: !390, file: !6, discriminator: 1)
!390 = distinct !DILexicalBlock(scope: !385, file: !6, line: 103, column: 5)
!391 = !DILocation(line: 103, column: 21, scope: !390)
!392 = !DILocation(line: 103, column: 19, scope: !390)
!393 = !DILocation(line: 103, column: 5, scope: !385)
!394 = !DILocation(line: 104, column: 27, scope: !395)
!395 = distinct !DILexicalBlock(scope: !390, file: !6, line: 103, column: 40)
!396 = !DILocation(line: 104, column: 34, scope: !395)
!397 = !DILocation(line: 104, column: 14, scope: !395)
!398 = !DILocation(line: 104, column: 12, scope: !395)
!399 = !DILocation(line: 105, column: 16, scope: !395)
!400 = !DILocation(line: 105, column: 23, scope: !395)
!401 = !DILocation(line: 105, column: 14, scope: !395)
!402 = !DILocation(line: 106, column: 22, scope: !395)
!403 = !DILocation(line: 106, column: 28, scope: !395)
!404 = !DILocation(line: 106, column: 16, scope: !395)
!405 = !DILocation(line: 106, column: 14, scope: !395)
!406 = !DILocation(line: 107, column: 5, scope: !395)
!407 = !DILocation(line: 103, column: 36, scope: !390)
!408 = !DILocation(line: 103, column: 5, scope: !390)
!409 = !DILocation(line: 108, column: 14, scope: !379)
!410 = !DILocation(line: 108, column: 32, scope: !379)
!411 = !DILocation(line: 108, column: 23, scope: !379)
!412 = !DILocation(line: 108, column: 21, scope: !379)
!413 = !DILocation(line: 108, column: 12, scope: !379)
!414 = !DILocation(line: 109, column: 17, scope: !379)
!415 = !DILocation(line: 109, column: 25, scope: !379)
!416 = !DILocation(line: 109, column: 11, scope: !379)
!417 = !DILocation(line: 109, column: 9, scope: !379)
!418 = !DILocation(line: 110, column: 12, scope: !379)
!419 = !DILocation(line: 111, column: 3, scope: !379)
!420 = !DILocation(line: 100, column: 33, scope: !374)
!421 = !DILocation(line: 100, column: 3, scope: !374)
!422 = !DILocation(line: 112, column: 10, scope: !40)
!423 = !DILocation(line: 112, column: 3, scope: !40)
!424 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nof_channels", arg: 1, scope: !43, file: !6, line: 115, type: !10)
!425 = !DILocation(line: 115, column: 18, scope: !43)
!426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bits", scope: !43, file: !6, line: 116, type: !10)
!427 = !DILocation(line: 116, column: 7, scope: !43)
!428 = !DILocation(line: 116, column: 18, scope: !43)
!429 = !DILocation(line: 116, column: 31, scope: !43)
!430 = !DILocation(line: 116, column: 16, scope: !43)
!431 = !DILocation(line: 117, column: 17, scope: !43)
!432 = !DILocation(line: 117, column: 22, scope: !43)
!433 = !DILocation(line: 117, column: 14, scope: !43)
!434 = !DILocation(line: 117, column: 28, scope: !43)
!435 = !DILocation(line: 117, column: 3, scope: !43)
!436 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "list", arg: 1, scope: !46, file: !6, line: 120, type: !13)
!437 = !DILocation(line: 120, column: 32, scope: !46)
!438 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !46, file: !6, line: 121, type: !13)
!439 = !DILocation(line: 121, column: 20, scope: !46)
!440 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hd", scope: !46, file: !6, line: 122, type: !4)
!441 = !DILocation(line: 122, column: 20, scope: !46)
!442 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !46, file: !6, line: 123, type: !10)
!443 = !DILocation(line: 123, column: 7, scope: !46)
!444 = !DILocation(line: 124, column: 3, scope: !46)
!445 = !DILocation(line: 124, column: 10, scope: !446)
!446 = !DILexicalBlockFile(scope: !447, file: !6, discriminator: 2)
!447 = !DILexicalBlockFile(scope: !46, file: !6, discriminator: 1)
!448 = !DILocation(line: 124, column: 15, scope: !46)
!449 = !DILocation(line: 125, column: 12, scope: !450)
!450 = distinct !DILexicalBlock(scope: !46, file: !6, line: 124, column: 24)
!451 = !DILocation(line: 125, column: 18, scope: !450)
!452 = !DILocation(line: 125, column: 10, scope: !450)
!453 = !DILocation(line: 126, column: 10, scope: !450)
!454 = !DILocation(line: 126, column: 16, scope: !450)
!455 = !DILocation(line: 126, column: 8, scope: !450)
!456 = !DILocation(line: 127, column: 22, scope: !450)
!457 = !DILocation(line: 127, column: 12, scope: !450)
!458 = !DILocation(line: 127, column: 9, scope: !450)
!459 = !DILocation(line: 128, column: 12, scope: !450)
!460 = !DILocation(line: 128, column: 10, scope: !450)
!461 = !DILocation(line: 130, column: 10, scope: !46)
!462 = !DILocation(line: 130, column: 3, scope: !46)
!463 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "list", arg: 1, scope: !49, file: !6, line: 133, type: !4)
!464 = !DILocation(line: 133, column: 32, scope: !49)
!465 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !49, file: !6, line: 134, type: !4)
!466 = !DILocation(line: 134, column: 20, scope: !49)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hd", scope: !49, file: !6, line: 135, type: !10)
!468 = !DILocation(line: 135, column: 7, scope: !49)
!469 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "res", scope: !49, file: !6, line: 135, type: !10)
!470 = !DILocation(line: 135, column: 11, scope: !49)
!471 = !DILocation(line: 136, column: 3, scope: !49)
!472 = !DILocation(line: 136, column: 10, scope: !473)
!473 = !DILexicalBlockFile(scope: !474, file: !6, discriminator: 2)
!474 = !DILexicalBlockFile(scope: !49, file: !6, discriminator: 1)
!475 = !DILocation(line: 136, column: 15, scope: !49)
!476 = !DILocation(line: 137, column: 12, scope: !477)
!477 = distinct !DILexicalBlock(scope: !49, file: !6, line: 136, column: 24)
!478 = !DILocation(line: 137, column: 18, scope: !477)
!479 = !DILocation(line: 137, column: 10, scope: !477)
!480 = !DILocation(line: 138, column: 10, scope: !477)
!481 = !DILocation(line: 138, column: 16, scope: !477)
!482 = !DILocation(line: 138, column: 8, scope: !477)
!483 = !DILocation(line: 139, column: 12, scope: !477)
!484 = !DILocation(line: 139, column: 9, scope: !477)
!485 = !DILocation(line: 140, column: 12, scope: !477)
!486 = !DILocation(line: 140, column: 10, scope: !477)
!487 = !DILocation(line: 142, column: 10, scope: !49)
!488 = !DILocation(line: 142, column: 3, scope: !49)
!489 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !52, file: !6, line: 151, type: !10)
!490 = !DILocation(line: 151, column: 14, scope: !52)
!491 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !52, file: !6, line: 151, type: !55)
!492 = !DILocation(line: 151, column: 26, scope: !52)
!493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !52, file: !6, line: 152, type: !64)
!494 = !DILocation(line: 152, column: 9, scope: !52)
!495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !52, file: !6, line: 153, type: !10)
!496 = !DILocation(line: 153, column: 7, scope: !52)
!497 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !52, file: !6, line: 154, type: !61)
!498 = !DILocation(line: 154, column: 10, scope: !52)
!499 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outsize", scope: !52, file: !6, line: 155, type: !10)
!500 = !DILocation(line: 155, column: 7, scope: !52)
!501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "time", scope: !52, file: !6, line: 155, type: !10)
!502 = !DILocation(line: 155, column: 16, scope: !52)
!503 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "list", scope: !52, file: !6, line: 156, type: !13)
!504 = !DILocation(line: 156, column: 20, scope: !52)
!505 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inbuf", scope: !52, file: !6, line: 157, type: !35)
!506 = !DILocation(line: 157, column: 18, scope: !52)
!507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outbuf", scope: !52, file: !6, line: 157, type: !35)
!508 = !DILocation(line: 157, column: 26, scope: !52)
!509 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !52, file: !6, line: 157, type: !35)
!510 = !DILocation(line: 157, column: 35, scope: !52)
!511 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pre", scope: !52, file: !6, line: 159, type: !512)
!512 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !513, line: 30, size: 128, align: 64, elements: !514)
!513 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/tf/Benchmarks/BitBench/five11")
!514 = !{!515, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !512, file: !513, line: 32, baseType: !516, size: 64, align: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !95, line: 139, baseType: !96)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !512, file: !513, line: 33, baseType: !518, size: 64, align: 64, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !95, line: 141, baseType: !96)
!519 = !DILocation(line: 159, column: 18, scope: !52)
!520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "post", scope: !52, file: !6, line: 159, type: !512)
!521 = !DILocation(line: 159, column: 23, scope: !52)
!522 = !DILocation(line: 162, column: 11, scope: !52)
!523 = !DILocation(line: 162, column: 9, scope: !52)
!524 = !DILocation(line: 164, column: 7, scope: !525)
!525 = distinct !DILexicalBlock(scope: !52, file: !6, line: 164, column: 7)
!526 = !DILocation(line: 164, column: 12, scope: !525)
!527 = !DILocation(line: 164, column: 7, scope: !52)
!528 = !DILocation(line: 166, column: 21, scope: !529)
!529 = distinct !DILexicalBlock(scope: !530, file: !6, line: 166, column: 9)
!530 = distinct !DILexicalBlock(scope: !525, file: !6, line: 164, column: 17)
!531 = !DILocation(line: 166, column: 15, scope: !529)
!532 = !DILocation(line: 166, column: 13, scope: !529)
!533 = !DILocation(line: 166, column: 36, scope: !529)
!534 = !DILocation(line: 166, column: 9, scope: !530)
!535 = !DILocation(line: 167, column: 14, scope: !536)
!536 = distinct !DILexicalBlock(scope: !529, file: !6, line: 166, column: 45)
!537 = !DILocation(line: 167, column: 7, scope: !536)
!538 = !DILocation(line: 168, column: 7, scope: !536)
!539 = !DILocation(line: 170, column: 9, scope: !530)
!540 = !DILocation(line: 171, column: 9, scope: !530)
!541 = !DILocation(line: 172, column: 3, scope: !530)
!542 = !DILocation(line: 173, column: 10, scope: !525)
!543 = !DILocation(line: 173, column: 8, scope: !525)
!544 = !DILocation(line: 174, column: 7, scope: !545)
!545 = distinct !DILexicalBlock(scope: !52, file: !6, line: 174, column: 7)
!546 = !DILocation(line: 174, column: 12, scope: !545)
!547 = !DILocation(line: 174, column: 7, scope: !52)
!548 = !DILocation(line: 175, column: 5, scope: !549)
!549 = distinct !DILexicalBlock(scope: !545, file: !6, line: 174, column: 18)
!550 = !DILocation(line: 176, column: 5, scope: !549)
!551 = !DILocation(line: 178, column: 20, scope: !52)
!552 = !DILocation(line: 178, column: 24, scope: !52)
!553 = !DILocation(line: 178, column: 10, scope: !52)
!554 = !DILocation(line: 178, column: 8, scope: !52)
!555 = !DILocation(line: 179, column: 3, scope: !52)
!556 = !DILocation(line: 183, column: 10, scope: !557)
!557 = distinct !DILexicalBlock(scope: !52, file: !6, line: 183, column: 3)
!558 = !DILocation(line: 183, column: 8, scope: !557)
!559 = !DILocation(line: 183, column: 15, scope: !560)
!560 = !DILexicalBlockFile(scope: !561, file: !6, discriminator: 2)
!561 = !DILexicalBlockFile(scope: !562, file: !6, discriminator: 1)
!562 = distinct !DILexicalBlock(scope: !557, file: !6, line: 183, column: 3)
!563 = !DILocation(line: 183, column: 17, scope: !562)
!564 = !DILocation(line: 183, column: 3, scope: !557)
!565 = !DILocation(line: 185, column: 19, scope: !566)
!566 = distinct !DILexicalBlock(scope: !562, file: !6, line: 183, column: 31)
!567 = !DILocation(line: 185, column: 12, scope: !566)
!568 = !DILocation(line: 185, column: 10, scope: !566)
!569 = !DILocation(line: 186, column: 25, scope: !566)
!570 = !DILocation(line: 186, column: 15, scope: !566)
!571 = !DILocation(line: 186, column: 13, scope: !566)
!572 = !DILocation(line: 187, column: 16, scope: !566)
!573 = !DILocation(line: 187, column: 5, scope: !566)
!574 = !DILocation(line: 188, column: 3, scope: !566)
!575 = !DILocation(line: 183, column: 27, scope: !562)
!576 = !DILocation(line: 183, column: 3, scope: !562)
!577 = !DILocation(line: 189, column: 3, scope: !52)
!578 = !DILocation(line: 190, column: 18, scope: !52)
!579 = !DILocation(line: 190, column: 3, scope: !52)
!580 = !DILocation(line: 191, column: 3, scope: !52)
!581 = !DILocation(line: 192, column: 1, scope: !52)
!582 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "in", arg: 1, scope: !58, file: !6, line: 147, type: !64)
!583 = !DILocation(line: 147, column: 31, scope: !58)
!584 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "buffer", arg: 2, scope: !58, file: !6, line: 147, type: !12)
!585 = !DILocation(line: 147, column: 41, scope: !58)
!586 = !DILocation(line: 148, column: 16, scope: !58)
!587 = !DILocation(line: 148, column: 37, scope: !58)
!588 = !DILocation(line: 148, column: 10, scope: !58)
!589 = !DILocation(line: 148, column: 3, scope: !58)
