; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [4 x i8] c"-ga\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"\0Alpbench (Std. C) run time: %f\0A\0A\00", align 1
@seed = internal global i64 1325, align 8

; Function Attrs: nounwind uwtable
define void @matgen(double** %a, double* %b) #0 {
entry:
  call void @llvm.dbg.value(metadata double** %a, i64 0, metadata !56, metadata !57), !dbg !58
  call void @llvm.dbg.value(metadata double* %b, i64 0, metadata !59, metadata !57), !dbg !60
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !61, metadata !57), !dbg !62
  %0 = ptrtoint double* %b to i64
  %b24 = ptrtoint double* %b to i64
  br label %for.cond, !dbg !63

for.cond:                                         ; preds = %for.inc.6, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc7, %for.inc.6 ]
  %cmp = icmp slt i32 %i.0, 2000, !dbg !65
  br i1 %cmp, label %for.body, label %for.end.8, !dbg !67

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !68, metadata !57), !dbg !69
  br label %for.cond.1, !dbg !70

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 2000, !dbg !72
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !74

for.body.3:                                       ; preds = %for.cond.1
  %call = call double @random_double(), !dbg !75
  %idxprom = sext i32 %i.0 to i64, !dbg !76
  %idxprom4 = sext i32 %j.0 to i64, !dbg !76
  %arrayidx = getelementptr inbounds double*, double** %a, i64 %idxprom4, !dbg !76
  %tmp5 = load double*, double** %arrayidx, align 8, !dbg !76
  %arrayidx5 = getelementptr inbounds double, double* %tmp5, i64 %idxprom, !dbg !76
  store double %call, double* %arrayidx5, align 8, !dbg !77
  br label %for.inc, !dbg !76

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !78
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !68, metadata !57), !dbg !69
  br label %for.cond.1, !dbg !79

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.6, !dbg !80

for.inc.6:                                        ; preds = %for.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !81
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !61, metadata !57), !dbg !62
  br label %for.cond, !dbg !82

for.end.8:                                        ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !61, metadata !57), !dbg !62
  %1 = add i64 %b24, 8, !dbg !83
  %2 = add i64 %b24, 8, !dbg !83
  %3 = add i64 %0, 8, !dbg !83
  %4 = add i64 %0, 8, !dbg !83
  br label %for.cond.9, !dbg !85

for.cond.9:                                       ; preds = %for.inc.14, %for.end.8
  %i.1 = phi i32 [ 0, %for.end.8 ], [ %inc15, %for.inc.14 ]
  %cmp10 = icmp slt i32 %i.1, 2000, !dbg !86
  %5 = ptrtoint double* undef to i64, !dbg !83
  %6 = sub i64 %1, %0, !dbg !83
  %7 = ptrtoint double* %b to i64, !dbg !83
  %8 = sub i64 %3, %7, !dbg !83
  br i1 %cmp10, label %for.body.11, label %for.end.16, !dbg !83

for.body.11:                                      ; preds = %for.cond.9
  %idxprom12 = sext i32 %i.1 to i64, !dbg !88
  %arrayidx13 = getelementptr inbounds double, double* %b, i64 %idxprom12, !dbg !88
  store double 0.000000e+00, double* %arrayidx13, align 8, !dbg !89
  br label %for.inc.14, !dbg !88

for.inc.14:                                       ; preds = %for.body.11
  %inc15 = add nsw i32 %i.1, 1, !dbg !90
  call void @llvm.dbg.value(metadata i32 %inc15, i64 0, metadata !61, metadata !57), !dbg !62
  br label %for.cond.9, !dbg !91

for.end.16:                                       ; preds = %for.cond.9
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !68, metadata !57), !dbg !69
  br label %for.cond.17, !dbg !92

for.cond.17:                                      ; preds = %for.inc.32, %for.end.16
  %j.1 = phi i32 [ 0, %for.end.16 ], [ %inc33, %for.inc.32 ]
  %cmp18 = icmp slt i32 %j.1, 2000, !dbg !94
  br i1 %cmp18, label %for.body.19, label %for.end.34, !dbg !96

for.body.19:                                      ; preds = %for.cond.17
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !61, metadata !57), !dbg !62
  br label %for.cond.20, !dbg !97

for.cond.20:                                      ; preds = %for.inc.29, %for.body.19
  %i.2 = phi i32 [ 0, %for.body.19 ], [ %inc30, %for.inc.29 ]
  %cmp21 = icmp slt i32 %i.2, 2000, !dbg !99
  br i1 %cmp21, label %for.body.22, label %for.end.31, !dbg !101

for.body.22:                                      ; preds = %for.cond.20
  %idxprom23 = sext i32 %i.2 to i64, !dbg !102
  %idxprom24 = sext i32 %j.1 to i64, !dbg !102
  %arrayidx25 = getelementptr inbounds double*, double** %a, i64 %idxprom24, !dbg !102
  %tmp17 = load double*, double** %arrayidx25, align 8, !dbg !102
  %arrayidx26 = getelementptr inbounds double, double* %tmp17, i64 %idxprom23, !dbg !102
  %tmp18 = load double, double* %arrayidx26, align 8, !dbg !102
  %idxprom27 = sext i32 %i.2 to i64, !dbg !103
  %arrayidx28 = getelementptr inbounds double, double* %b, i64 %idxprom27, !dbg !103
  %tmp21 = load double, double* %arrayidx28, align 8, !dbg !104
  %add = fadd double %tmp21, %tmp18, !dbg !104
  store double %add, double* %arrayidx28, align 8, !dbg !104
  br label %for.inc.29, !dbg !103

for.inc.29:                                       ; preds = %for.body.22
  %inc30 = add nsw i32 %i.2, 1, !dbg !105
  call void @llvm.dbg.value(metadata i32 %inc30, i64 0, metadata !61, metadata !57), !dbg !62
  br label %for.cond.20, !dbg !106

for.end.31:                                       ; preds = %for.cond.20
  br label %for.inc.32, !dbg !107

for.inc.32:                                       ; preds = %for.end.31
  %inc33 = add nsw i32 %j.1, 1, !dbg !108
  call void @llvm.dbg.value(metadata i32 %inc33, i64 0, metadata !68, metadata !57), !dbg !69
  br label %for.cond.17, !dbg !109

for.end.34:                                       ; preds = %for.cond.17
  ret void, !dbg !110
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @idamax(i32 %n, double* %dx, i32 %dx_off, i32 %incx) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !111, metadata !57), !dbg !112
  call void @llvm.dbg.value(metadata double* %dx, i64 0, metadata !113, metadata !57), !dbg !114
  call void @llvm.dbg.value(metadata i32 %dx_off, i64 0, metadata !115, metadata !57), !dbg !116
  call void @llvm.dbg.value(metadata i32 %incx, i64 0, metadata !117, metadata !57), !dbg !118
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !119, metadata !57), !dbg !120
  %cmp = icmp slt i32 %n, 1, !dbg !121
  br i1 %cmp, label %if.then, label %if.else, !dbg !123

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !119, metadata !57), !dbg !120
  br label %if.end.33, !dbg !124

if.else:                                          ; preds = %entry
  %cmp1 = icmp eq i32 %n, 1, !dbg !125
  br i1 %cmp1, label %if.then.2, label %if.else.3, !dbg !128

if.then.2:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !119, metadata !57), !dbg !120
  br label %if.end.32, !dbg !129

if.else.3:                                        ; preds = %if.else
  %cmp4 = icmp ne i32 %incx, 1, !dbg !130
  br i1 %cmp4, label %if.then.5, label %if.else.14, !dbg !133

if.then.5:                                        ; preds = %if.else.3
  %idxprom = sext i32 %dx_off to i64, !dbg !134
  %arrayidx = getelementptr inbounds double, double* %dx, i64 %idxprom, !dbg !134
  %tmp5 = load double, double* %arrayidx, align 8, !dbg !134
  %call = call double @fabs(double %tmp5) #1, !dbg !136
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !137, metadata !57), !dbg !138
  %add = add nsw i32 1, %incx, !dbg !139
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !140, metadata !57), !dbg !141
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !142, metadata !57), !dbg !143
  %0 = add i32 %incx, %dx_off, !dbg !144
  %1 = add i32 %0, 1, !dbg !144
  %2 = add i32 %dx_off, 1, !dbg !144
  %3 = add i32 %incx, %dx_off, !dbg !144
  %4 = add i32 %3, 1, !dbg !144
  %5 = add i32 %dx_off, 1, !dbg !144
  %6 = add i32 %n, -1, !dbg !144
  %7 = mul i32 1, %6, !dbg !144
  %8 = add i32 %5, %7, !dbg !144
  %9 = mul i32 1, %6, !dbg !144
  %10 = add i32 1, %9, !dbg !144
  %11 = add i32 %incx, %dx_off, !dbg !144
  %12 = add i32 %11, 1, !dbg !144
  %13 = add i32 %dx_off, 1, !dbg !144
  %14 = add i32 %incx, %dx_off, !dbg !144
  %15 = add i32 %14, 1, !dbg !144
  %16 = add i32 %dx_off, 1, !dbg !144
  %17 = add i32 %n, -1, !dbg !144
  %18 = mul i32 1, %17, !dbg !144
  %19 = add i32 %16, %18, !dbg !144
  %20 = mul i32 1, %17, !dbg !144
  %21 = add i32 1, %20, !dbg !144
  br label %for.cond, !dbg !146

for.cond:                                         ; preds = %for.inc, %if.then.5
  %dmax.0 = phi double [ %call, %if.then.5 ], [ %dmax.1, %for.inc ]
  %i.0 = phi i32 [ 1, %if.then.5 ], [ %inc, %for.inc ]
  %ix.0 = phi i32 [ %add, %if.then.5 ], [ %add13, %for.inc ]
  %itemp.0 = phi i32 [ 0, %if.then.5 ], [ %itemp.1, %for.inc ]
  %cmp6 = icmp slt i32 %i.0, %n, !dbg !147
  %22 = sext i32 %dx_off to i64, !dbg !144
  %23 = mul i64 8, %22, !dbg !144
  %scevgep = getelementptr double, double* %dx, i64 %22, !dbg !144
  %24 = sext i32 %1 to i64, !dbg !144
  %25 = mul i64 8, %24, !dbg !144
  %scevgep35 = getelementptr double, double* %dx, i64 %24, !dbg !144
  %26 = icmp ult double* %scevgep35, %scevgep, !dbg !144
  %umin = select i1 %26, double* %scevgep35, double* %scevgep, !dbg !144
  %27 = icmp ult double* %scevgep, %umin, !dbg !144
  %umin36 = select i1 %27, double* %scevgep, double* %umin, !dbg !144
  %28 = sext i32 %2 to i64, !dbg !144
  %29 = mul i64 8, %28, !dbg !144
  %scevgep37 = getelementptr double, double* %dx, i64 %28, !dbg !144
  %30 = icmp ult double* %scevgep37, %umin36, !dbg !144
  %umin38 = select i1 %30, double* %scevgep37, double* %umin36, !dbg !144
  %31 = sext i32 %dx_off to i64, !dbg !144
  %32 = mul i64 8, %31, !dbg !144
  %scevgep39 = getelementptr double, double* %dx, i64 %31, !dbg !144
  %33 = sext i32 %4 to i64, !dbg !144
  %34 = mul i64 8, %33, !dbg !144
  %scevgep40 = getelementptr double, double* %dx, i64 %33, !dbg !144
  %35 = icmp ugt double* %scevgep40, %scevgep39, !dbg !144
  %umax = select i1 %35, double* %scevgep40, double* %scevgep39, !dbg !144
  %36 = icmp ugt double* %scevgep39, %umax, !dbg !144
  %umax41 = select i1 %36, double* %scevgep39, double* %umax, !dbg !144
  %37 = sext i32 %8 to i64, !dbg !144
  %38 = mul i64 8, %37, !dbg !144
  %scevgep42 = getelementptr double, double* %dx, i64 %37, !dbg !144
  %39 = icmp ugt double* %scevgep42, %umax41, !dbg !144
  %umax43 = select i1 %39, double* %scevgep42, double* %umax41, !dbg !144
  %umax4344 = ptrtoint double* %umax43 to i64
  %40 = add i64 %umax4344, 8, !dbg !144
  %41 = icmp ult double* %scevgep35, %scevgep, !dbg !144
  %umin45 = select i1 %41, double* %scevgep35, double* %scevgep, !dbg !144
  %42 = icmp ult double* %scevgep, %umin45, !dbg !144
  %umin46 = select i1 %42, double* %scevgep, double* %umin45, !dbg !144
  %43 = icmp ult double* %scevgep37, %umin46, !dbg !144
  %umin47 = select i1 %43, double* %scevgep37, double* %umin46, !dbg !144
  %44 = icmp ugt double* %scevgep40, %scevgep39, !dbg !144
  %umax48 = select i1 %44, double* %scevgep40, double* %scevgep39, !dbg !144
  %45 = icmp ugt double* %scevgep39, %umax48, !dbg !144
  %umax49 = select i1 %45, double* %scevgep39, double* %umax48, !dbg !144
  %46 = icmp ugt double* %scevgep42, %umax49, !dbg !144
  %umax50 = select i1 %46, double* %scevgep42, double* %umax49, !dbg !144
  %umax5051 = ptrtoint double* %umax50 to i64
  %47 = add i64 %umax5051, 8, !dbg !144
  %48 = ptrtoint double* %umin38 to i64, !dbg !144
  %49 = sub i64 %40, %48, !dbg !144
  %50 = icmp ult i32 %1, %1, !dbg !144
  %umin52 = select i1 %50, i32 %1, i32 %1, !dbg !144
  %51 = icmp ugt i32 %1, %1, !dbg !144
  %umax53 = select i1 %51, i32 %1, i32 %1, !dbg !144
  %52 = sext i32 %i.0 to i64, !dbg !144
  %53 = sext i32 %incx to i64, !dbg !144
  %54 = sub i64 %52, 1, !dbg !144
  %55 = sext i32 %umin52 to i64, !dbg !144
  %56 = mul i64 %54, %53, !dbg !144
  %57 = add i64 %56, %48, !dbg !144
  %58 = sext i32 %umax53 to i64, !dbg !144
  %59 = add i64 %54, %58, !dbg !144
  %60 = mul i64 %59, %53, !dbg !144
  %61 = add i64 %60, %40, !dbg !144
  %62 = sext i32 %dx_off to i64, !dbg !144
  %63 = mul i64 8, %62, !dbg !144
  %scevgep76 = getelementptr double, double* %dx, i64 %62, !dbg !144
  %64 = sext i32 %12 to i64, !dbg !144
  %65 = mul i64 8, %64, !dbg !144
  %scevgep77 = getelementptr double, double* %dx, i64 %64, !dbg !144
  %66 = icmp ult double* %scevgep77, %scevgep76, !dbg !144
  %umin78 = select i1 %66, double* %scevgep77, double* %scevgep76, !dbg !144
  %67 = icmp ult double* %scevgep76, %umin78, !dbg !144
  %umin79 = select i1 %67, double* %scevgep76, double* %umin78, !dbg !144
  %68 = sext i32 %13 to i64, !dbg !144
  %69 = mul i64 8, %68, !dbg !144
  %scevgep80 = getelementptr double, double* %dx, i64 %68, !dbg !144
  %70 = icmp ult double* %scevgep80, %umin79, !dbg !144
  %umin81 = select i1 %70, double* %scevgep80, double* %umin79, !dbg !144
  %71 = sext i32 %dx_off to i64, !dbg !144
  %72 = mul i64 8, %71, !dbg !144
  %scevgep82 = getelementptr double, double* %dx, i64 %71, !dbg !144
  %73 = sext i32 %15 to i64, !dbg !144
  %74 = mul i64 8, %73, !dbg !144
  %scevgep83 = getelementptr double, double* %dx, i64 %73, !dbg !144
  %75 = icmp ugt double* %scevgep83, %scevgep82, !dbg !144
  %umax84 = select i1 %75, double* %scevgep83, double* %scevgep82, !dbg !144
  %76 = icmp ugt double* %scevgep82, %umax84, !dbg !144
  %umax85 = select i1 %76, double* %scevgep82, double* %umax84, !dbg !144
  %77 = sext i32 %19 to i64, !dbg !144
  %78 = mul i64 8, %77, !dbg !144
  %scevgep86 = getelementptr double, double* %dx, i64 %77, !dbg !144
  %79 = icmp ugt double* %scevgep86, %umax85, !dbg !144
  %umax87 = select i1 %79, double* %scevgep86, double* %umax85, !dbg !144
  %umax8788 = ptrtoint double* %umax87 to i64
  %80 = add i64 %umax8788, 8, !dbg !144
  %81 = icmp ult double* %scevgep77, %scevgep76, !dbg !144
  %umin89 = select i1 %81, double* %scevgep77, double* %scevgep76, !dbg !144
  %82 = icmp ult double* %scevgep76, %umin89, !dbg !144
  %umin90 = select i1 %82, double* %scevgep76, double* %umin89, !dbg !144
  %83 = icmp ult double* %scevgep80, %umin90, !dbg !144
  %umin91 = select i1 %83, double* %scevgep80, double* %umin90, !dbg !144
  %84 = icmp ugt double* %scevgep83, %scevgep82, !dbg !144
  %umax92 = select i1 %84, double* %scevgep83, double* %scevgep82, !dbg !144
  %85 = icmp ugt double* %scevgep82, %umax92, !dbg !144
  %umax93 = select i1 %85, double* %scevgep82, double* %umax92, !dbg !144
  %86 = icmp ugt double* %scevgep86, %umax93, !dbg !144
  %umax94 = select i1 %86, double* %scevgep86, double* %umax93, !dbg !144
  %umax9495 = ptrtoint double* %umax94 to i64
  %87 = add i64 %umax9495, 8, !dbg !144
  %88 = ptrtoint double* %umin81 to i64, !dbg !144
  %89 = sub i64 %80, %88, !dbg !144
  %90 = icmp ult i32 %12, %12, !dbg !144
  %umin96 = select i1 %90, i32 %12, i32 %12, !dbg !144
  %91 = icmp ugt i32 %12, %12, !dbg !144
  %umax97 = select i1 %91, i32 %12, i32 %12, !dbg !144
  %92 = sext i32 %i.0 to i64, !dbg !144
  %93 = sext i32 %incx to i64, !dbg !144
  %94 = sub i64 %92, 1, !dbg !144
  %95 = sext i32 %umin96 to i64, !dbg !144
  %96 = mul i64 %94, %93, !dbg !144
  %97 = add i64 %96, %88, !dbg !144
  %98 = sext i32 %umax97 to i64, !dbg !144
  %99 = add i64 %94, %98, !dbg !144
  %100 = mul i64 %99, %93, !dbg !144
  %101 = add i64 %100, %80, !dbg !144
  br i1 %cmp6, label %for.body, label %for.end, !dbg !144

for.body:                                         ; preds = %for.cond
  %add7 = add nsw i32 %ix.0, %dx_off, !dbg !149
  %idxprom8 = sext i32 %add7 to i64, !dbg !151
  %arrayidx9 = getelementptr inbounds double, double* %dx, i64 %idxprom8, !dbg !151
  %tmp12 = load double, double* %arrayidx9, align 8, !dbg !151
  %call10 = call double @fabs(double %tmp12) #1, !dbg !152
  call void @llvm.dbg.value(metadata double %call10, i64 0, metadata !153, metadata !57), !dbg !154
  %cmp11 = fcmp ogt double %call10, %dmax.0, !dbg !155
  br i1 %cmp11, label %if.then.12, label %if.end, !dbg !157

if.then.12:                                       ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %i.0, i64 0, metadata !119, metadata !57), !dbg !120
  call void @llvm.dbg.value(metadata double %call10, i64 0, metadata !137, metadata !57), !dbg !138
  br label %if.end, !dbg !158

if.end:                                           ; preds = %if.then.12, %for.body
  %dmax.1 = phi double [ %call10, %if.then.12 ], [ %dmax.0, %for.body ]
  %itemp.1 = phi i32 [ %i.0, %if.then.12 ], [ %itemp.0, %for.body ]
  %add13 = add nsw i32 %ix.0, %incx, !dbg !160
  call void @llvm.dbg.value(metadata i32 %add13, i64 0, metadata !140, metadata !57), !dbg !141
  br label %for.inc, !dbg !161

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %i.0, 1, !dbg !162
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !142, metadata !57), !dbg !143
  br label %for.cond, !dbg !163

for.end:                                          ; preds = %for.cond
  %itemp.0.lcssa = phi i32 [ %itemp.0, %for.cond ]
  br label %if.end.31, !dbg !164

if.else.14:                                       ; preds = %if.else.3
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !119, metadata !57), !dbg !120
  %idxprom15 = sext i32 %dx_off to i64, !dbg !165
  %arrayidx16 = getelementptr inbounds double, double* %dx, i64 %idxprom15, !dbg !165
  %tmp22 = load double, double* %arrayidx16, align 8, !dbg !165
  %call17 = call double @fabs(double %tmp22) #1, !dbg !167
  call void @llvm.dbg.value(metadata double %call17, i64 0, metadata !137, metadata !57), !dbg !138
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !142, metadata !57), !dbg !143
  %102 = add i32 %incx, %dx_off, !dbg !168
  %103 = add i32 %102, 1, !dbg !168
  %104 = add i32 %dx_off, 1, !dbg !168
  %105 = add i32 %incx, %dx_off, !dbg !168
  %106 = add i32 %105, 1, !dbg !168
  %107 = add i32 %n, -1, !dbg !168
  %108 = mul i32 %incx, %107, !dbg !168
  %109 = add i32 %106, %108, !dbg !168
  %110 = add i32 %dx_off, 1, !dbg !168
  %111 = mul i32 1, %107, !dbg !168
  %112 = add i32 1, %111, !dbg !168
  %113 = add i32 %incx, %dx_off, !dbg !168
  %114 = add i32 %113, 1, !dbg !168
  %115 = add i32 %dx_off, 1, !dbg !168
  %116 = add i32 %incx, %dx_off, !dbg !168
  %117 = add i32 %116, 1, !dbg !168
  %118 = add i32 %n, -1, !dbg !168
  %119 = mul i32 %incx, %118, !dbg !168
  %120 = add i32 %117, %119, !dbg !168
  %121 = add i32 %dx_off, 1, !dbg !168
  %122 = mul i32 1, %118, !dbg !168
  %123 = add i32 1, %122, !dbg !168
  br label %for.cond.18, !dbg !170

for.cond.18:                                      ; preds = %for.inc.28, %if.else.14
  %dmax.2 = phi double [ %call17, %if.else.14 ], [ %dmax.3, %for.inc.28 ]
  %i.1 = phi i32 [ 1, %if.else.14 ], [ %inc29, %for.inc.28 ]
  %itemp.2 = phi i32 [ 0, %if.else.14 ], [ %itemp.3, %for.inc.28 ]
  %cmp19 = icmp slt i32 %i.1, %n, !dbg !171
  %124 = sext i32 %dx_off to i64, !dbg !168
  %125 = mul i64 8, %124, !dbg !168
  %scevgep54 = getelementptr double, double* %dx, i64 %124, !dbg !168
  %126 = sext i32 %103 to i64, !dbg !168
  %127 = mul i64 8, %126, !dbg !168
  %scevgep55 = getelementptr double, double* %dx, i64 %126, !dbg !168
  %128 = icmp ult double* %scevgep55, %scevgep54, !dbg !168
  %umin56 = select i1 %128, double* %scevgep55, double* %scevgep54, !dbg !168
  %129 = icmp ult double* %scevgep54, %umin56, !dbg !168
  %umin57 = select i1 %129, double* %scevgep54, double* %umin56, !dbg !168
  %130 = sext i32 %104 to i64, !dbg !168
  %131 = mul i64 8, %130, !dbg !168
  %scevgep58 = getelementptr double, double* %dx, i64 %130, !dbg !168
  %132 = icmp ult double* %scevgep58, %umin57, !dbg !168
  %umin59 = select i1 %132, double* %scevgep58, double* %umin57, !dbg !168
  %133 = sext i32 %dx_off to i64, !dbg !168
  %134 = mul i64 8, %133, !dbg !168
  %scevgep60 = getelementptr double, double* %dx, i64 %133, !dbg !168
  %135 = sext i32 %109 to i64, !dbg !168
  %136 = mul i64 8, %135, !dbg !168
  %scevgep61 = getelementptr double, double* %dx, i64 %135, !dbg !168
  %137 = icmp ugt double* %scevgep61, %scevgep60, !dbg !168
  %umax62 = select i1 %137, double* %scevgep61, double* %scevgep60, !dbg !168
  %138 = icmp ugt double* %scevgep60, %umax62, !dbg !168
  %umax63 = select i1 %138, double* %scevgep60, double* %umax62, !dbg !168
  %139 = sext i32 %110 to i64, !dbg !168
  %140 = mul i64 8, %139, !dbg !168
  %scevgep64 = getelementptr double, double* %dx, i64 %139, !dbg !168
  %141 = icmp ugt double* %scevgep64, %umax63, !dbg !168
  %umax65 = select i1 %141, double* %scevgep64, double* %umax63, !dbg !168
  %umax6566 = ptrtoint double* %umax65 to i64
  %142 = add i64 %umax6566, 8, !dbg !168
  %143 = icmp ult double* %scevgep55, %scevgep54, !dbg !168
  %umin67 = select i1 %143, double* %scevgep55, double* %scevgep54, !dbg !168
  %144 = icmp ult double* %scevgep54, %umin67, !dbg !168
  %umin68 = select i1 %144, double* %scevgep54, double* %umin67, !dbg !168
  %145 = icmp ult double* %scevgep58, %umin68, !dbg !168
  %umin69 = select i1 %145, double* %scevgep58, double* %umin68, !dbg !168
  %146 = icmp ugt double* %scevgep61, %scevgep60, !dbg !168
  %umax70 = select i1 %146, double* %scevgep61, double* %scevgep60, !dbg !168
  %147 = icmp ugt double* %scevgep60, %umax70, !dbg !168
  %umax71 = select i1 %147, double* %scevgep60, double* %umax70, !dbg !168
  %148 = icmp ugt double* %scevgep64, %umax71, !dbg !168
  %umax72 = select i1 %148, double* %scevgep64, double* %umax71, !dbg !168
  %umax7273 = ptrtoint double* %umax72 to i64
  %149 = add i64 %umax7273, 8, !dbg !168
  %150 = ptrtoint double* %umin59 to i64, !dbg !168
  %151 = sub i64 %142, %150, !dbg !168
  %152 = icmp ult i32 %104, %104, !dbg !168
  %umin74 = select i1 %152, i32 %104, i32 %104, !dbg !168
  %153 = icmp ugt i32 %104, %104, !dbg !168
  %umax75 = select i1 %153, i32 %104, i32 %104, !dbg !168
  %154 = sext i32 %i.1 to i64, !dbg !168
  %155 = sub i64 %154, 1, !dbg !168
  %156 = sext i32 %umin74 to i64, !dbg !168
  %157 = mul i64 %155, 1, !dbg !168
  %158 = add i64 %157, %150, !dbg !168
  %159 = sext i32 %umax75 to i64, !dbg !168
  %160 = add i64 %155, %159, !dbg !168
  %161 = mul i64 %160, 1, !dbg !168
  %162 = add i64 %161, %142, !dbg !168
  %163 = sext i32 %dx_off to i64, !dbg !168
  %164 = mul i64 8, %163, !dbg !168
  %scevgep98 = getelementptr double, double* %dx, i64 %163, !dbg !168
  %165 = sext i32 %114 to i64, !dbg !168
  %166 = mul i64 8, %165, !dbg !168
  %scevgep99 = getelementptr double, double* %dx, i64 %165, !dbg !168
  %167 = icmp ult double* %scevgep99, %scevgep98, !dbg !168
  %umin100 = select i1 %167, double* %scevgep99, double* %scevgep98, !dbg !168
  %168 = icmp ult double* %scevgep98, %umin100, !dbg !168
  %umin101 = select i1 %168, double* %scevgep98, double* %umin100, !dbg !168
  %169 = sext i32 %115 to i64, !dbg !168
  %170 = mul i64 8, %169, !dbg !168
  %scevgep102 = getelementptr double, double* %dx, i64 %169, !dbg !168
  %171 = icmp ult double* %scevgep102, %umin101, !dbg !168
  %umin103 = select i1 %171, double* %scevgep102, double* %umin101, !dbg !168
  %172 = sext i32 %dx_off to i64, !dbg !168
  %173 = mul i64 8, %172, !dbg !168
  %scevgep104 = getelementptr double, double* %dx, i64 %172, !dbg !168
  %174 = sext i32 %120 to i64, !dbg !168
  %175 = mul i64 8, %174, !dbg !168
  %scevgep105 = getelementptr double, double* %dx, i64 %174, !dbg !168
  %176 = icmp ugt double* %scevgep105, %scevgep104, !dbg !168
  %umax106 = select i1 %176, double* %scevgep105, double* %scevgep104, !dbg !168
  %177 = icmp ugt double* %scevgep104, %umax106, !dbg !168
  %umax107 = select i1 %177, double* %scevgep104, double* %umax106, !dbg !168
  %178 = sext i32 %121 to i64, !dbg !168
  %179 = mul i64 8, %178, !dbg !168
  %scevgep108 = getelementptr double, double* %dx, i64 %178, !dbg !168
  %180 = icmp ugt double* %scevgep108, %umax107, !dbg !168
  %umax109 = select i1 %180, double* %scevgep108, double* %umax107, !dbg !168
  %umax109110 = ptrtoint double* %umax109 to i64
  %181 = add i64 %umax109110, 8, !dbg !168
  %182 = icmp ult double* %scevgep99, %scevgep98, !dbg !168
  %umin111 = select i1 %182, double* %scevgep99, double* %scevgep98, !dbg !168
  %183 = icmp ult double* %scevgep98, %umin111, !dbg !168
  %umin112 = select i1 %183, double* %scevgep98, double* %umin111, !dbg !168
  %184 = icmp ult double* %scevgep102, %umin112, !dbg !168
  %umin113 = select i1 %184, double* %scevgep102, double* %umin112, !dbg !168
  %185 = icmp ugt double* %scevgep105, %scevgep104, !dbg !168
  %umax114 = select i1 %185, double* %scevgep105, double* %scevgep104, !dbg !168
  %186 = icmp ugt double* %scevgep104, %umax114, !dbg !168
  %umax115 = select i1 %186, double* %scevgep104, double* %umax114, !dbg !168
  %187 = icmp ugt double* %scevgep108, %umax115, !dbg !168
  %umax116 = select i1 %187, double* %scevgep108, double* %umax115, !dbg !168
  %umax116117 = ptrtoint double* %umax116 to i64
  %188 = add i64 %umax116117, 8, !dbg !168
  %189 = ptrtoint double* %umin103 to i64, !dbg !168
  %190 = sub i64 %181, %189, !dbg !168
  %191 = icmp ult i32 %115, %115, !dbg !168
  %umin118 = select i1 %191, i32 %115, i32 %115, !dbg !168
  %192 = icmp ugt i32 %115, %115, !dbg !168
  %umax119 = select i1 %192, i32 %115, i32 %115, !dbg !168
  %193 = sext i32 %i.1 to i64, !dbg !168
  %194 = sub i64 %193, 1, !dbg !168
  %195 = sext i32 %umin118 to i64, !dbg !168
  %196 = mul i64 %194, 1, !dbg !168
  %197 = add i64 %196, %189, !dbg !168
  %198 = sext i32 %umax119 to i64, !dbg !168
  %199 = add i64 %194, %198, !dbg !168
  %200 = mul i64 %199, 1, !dbg !168
  %201 = add i64 %200, %181, !dbg !168
  br i1 %cmp19, label %for.body.20, label %for.end.30, !dbg !168

for.body.20:                                      ; preds = %for.cond.18
  %add21 = add nsw i32 %i.1, %dx_off, !dbg !173
  %idxprom22 = sext i32 %add21 to i64, !dbg !175
  %arrayidx23 = getelementptr inbounds double, double* %dx, i64 %idxprom22, !dbg !175
  %tmp28 = load double, double* %arrayidx23, align 8, !dbg !175
  %call24 = call double @fabs(double %tmp28) #1, !dbg !176
  call void @llvm.dbg.value(metadata double %call24, i64 0, metadata !153, metadata !57), !dbg !154
  %cmp25 = fcmp ogt double %call24, %dmax.2, !dbg !177
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !179

if.then.26:                                       ; preds = %for.body.20
  call void @llvm.dbg.value(metadata i32 %i.1, i64 0, metadata !119, metadata !57), !dbg !120
  call void @llvm.dbg.value(metadata double %call24, i64 0, metadata !137, metadata !57), !dbg !138
  br label %if.end.27, !dbg !180

if.end.27:                                        ; preds = %if.then.26, %for.body.20
  %dmax.3 = phi double [ %call24, %if.then.26 ], [ %dmax.2, %for.body.20 ]
  %itemp.3 = phi i32 [ %i.1, %if.then.26 ], [ %itemp.2, %for.body.20 ]
  br label %for.inc.28, !dbg !182

for.inc.28:                                       ; preds = %if.end.27
  %inc29 = add nsw i32 %i.1, 1, !dbg !183
  call void @llvm.dbg.value(metadata i32 %inc29, i64 0, metadata !142, metadata !57), !dbg !143
  br label %for.cond.18, !dbg !184

for.end.30:                                       ; preds = %for.cond.18
  %itemp.2.lcssa = phi i32 [ %itemp.2, %for.cond.18 ]
  br label %if.end.31

if.end.31:                                        ; preds = %for.end.30, %for.end
  %itemp.4 = phi i32 [ %itemp.0.lcssa, %for.end ], [ %itemp.2.lcssa, %for.end.30 ]
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.2
  %itemp.5 = phi i32 [ 0, %if.then.2 ], [ %itemp.4, %if.end.31 ]
  br label %if.end.33

if.end.33:                                        ; preds = %if.end.32, %if.then
  %itemp.6 = phi i32 [ -1, %if.then ], [ %itemp.5, %if.end.32 ]
  ret i32 %itemp.6, !dbg !185
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #2

; Function Attrs: nounwind uwtable
define void @dscal(i32 %n, double %da, double* %dx, i32 %dx_off, i32 %incx) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !186, metadata !57), !dbg !187
  call void @llvm.dbg.value(metadata double %da, i64 0, metadata !188, metadata !57), !dbg !189
  call void @llvm.dbg.value(metadata double* %dx, i64 0, metadata !190, metadata !57), !dbg !191
  call void @llvm.dbg.value(metadata i32 %dx_off, i64 0, metadata !192, metadata !57), !dbg !193
  call void @llvm.dbg.value(metadata i32 %incx, i64 0, metadata !194, metadata !57), !dbg !195
  %cmp = icmp sgt i32 %n, 0, !dbg !196
  br i1 %cmp, label %if.then, label %if.end.15, !dbg !198

if.then:                                          ; preds = %entry
  %cmp1 = icmp ne i32 %incx, 1, !dbg !199
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !202

if.then.2:                                        ; preds = %if.then
  %mul = mul nsw i32 %n, %incx, !dbg !203
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !205, metadata !57), !dbg !206
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !207, metadata !57), !dbg !208
  br label %for.cond, !dbg !209

for.cond:                                         ; preds = %for.inc, %if.then.2
  %i.0 = phi i32 [ 0, %if.then.2 ], [ %add5, %for.inc ]
  %cmp3 = icmp slt i32 %i.0, %mul, !dbg !211
  br i1 %cmp3, label %for.body, label %for.end, !dbg !213

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, %dx_off, !dbg !214
  %idxprom = sext i32 %add to i64, !dbg !215
  %arrayidx = getelementptr inbounds double, double* %dx, i64 %idxprom, !dbg !215
  %tmp10 = load double, double* %arrayidx, align 8, !dbg !216
  %mul4 = fmul double %tmp10, %da, !dbg !216
  store double %mul4, double* %arrayidx, align 8, !dbg !216
  br label %for.inc, !dbg !215

for.inc:                                          ; preds = %for.body
  %add5 = add nsw i32 %i.0, %incx, !dbg !217
  call void @llvm.dbg.value(metadata i32 %add5, i64 0, metadata !207, metadata !57), !dbg !208
  br label %for.cond, !dbg !218

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !219

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !207, metadata !57), !dbg !208
  %0 = mul i32 1, %n, !dbg !220
  %1 = add i32 0, %0, !dbg !220
  %2 = mul i32 1, %n, !dbg !220
  %3 = add i32 0, %2, !dbg !220
  br label %for.cond.6, !dbg !223

for.cond.6:                                       ; preds = %for.inc.13, %if.else
  %i.1 = phi i32 [ 0, %if.else ], [ %inc, %for.inc.13 ]
  %cmp7 = icmp slt i32 %i.1, %n, !dbg !224
  %4 = sext i32 %dx_off to i64, !dbg !220
  %5 = mul i64 8, %4, !dbg !220
  %scevgep = getelementptr double, double* %dx, i64 %4, !dbg !220
  %6 = icmp ult double* %scevgep, %scevgep, !dbg !220
  %umin = select i1 %6, double* %scevgep, double* %scevgep, !dbg !220
  %7 = sext i32 %dx_off to i64, !dbg !220
  %8 = mul i64 8, %7, !dbg !220
  %scevgep21 = getelementptr double, double* %dx, i64 %7, !dbg !220
  %9 = icmp ugt double* %scevgep21, %scevgep21, !dbg !220
  %umax = select i1 %9, double* %scevgep21, double* %scevgep21, !dbg !220
  %umax22 = ptrtoint double* %umax to i64
  %10 = add i64 %umax22, 8, !dbg !220
  %11 = icmp ult double* %scevgep, %scevgep, !dbg !220
  %umin23 = select i1 %11, double* %scevgep, double* %scevgep, !dbg !220
  %12 = icmp ugt double* %scevgep21, %scevgep21, !dbg !220
  %umax24 = select i1 %12, double* %scevgep21, double* %scevgep21, !dbg !220
  %umax2425 = ptrtoint double* %umax24 to i64
  %13 = add i64 %umax2425, 8, !dbg !220
  %14 = ptrtoint double* %umin to i64, !dbg !220
  %15 = sub i64 %10, %14, !dbg !220
  %16 = icmp ult i32 %dx_off, %dx_off, !dbg !220
  %umin26 = select i1 %16, i32 %dx_off, i32 %dx_off, !dbg !220
  %17 = icmp ugt i32 %dx_off, %dx_off, !dbg !220
  %umax27 = select i1 %17, i32 %dx_off, i32 %dx_off, !dbg !220
  %18 = sext i32 %i.1 to i64, !dbg !220
  %19 = sub i64 %18, 0, !dbg !220
  %20 = sext i32 %umin26 to i64, !dbg !220
  %21 = mul i64 %19, 1, !dbg !220
  %22 = add i64 %21, %14, !dbg !220
  %23 = sext i32 %umax27 to i64, !dbg !220
  %24 = add i64 %19, %23, !dbg !220
  %25 = mul i64 %24, 1, !dbg !220
  %26 = add i64 %25, %10, !dbg !220
  %27 = sext i32 %dx_off to i64, !dbg !220
  %28 = mul i64 8, %27, !dbg !220
  %scevgep28 = getelementptr double, double* %dx, i64 %27, !dbg !220
  %29 = icmp ult double* %scevgep28, %scevgep28, !dbg !220
  %umin29 = select i1 %29, double* %scevgep28, double* %scevgep28, !dbg !220
  %30 = sext i32 %dx_off to i64, !dbg !220
  %31 = mul i64 8, %30, !dbg !220
  %scevgep30 = getelementptr double, double* %dx, i64 %30, !dbg !220
  %32 = icmp ugt double* %scevgep30, %scevgep30, !dbg !220
  %umax31 = select i1 %32, double* %scevgep30, double* %scevgep30, !dbg !220
  %umax3132 = ptrtoint double* %umax31 to i64
  %33 = add i64 %umax3132, 8, !dbg !220
  %34 = icmp ult double* %scevgep28, %scevgep28, !dbg !220
  %umin33 = select i1 %34, double* %scevgep28, double* %scevgep28, !dbg !220
  %35 = icmp ugt double* %scevgep30, %scevgep30, !dbg !220
  %umax34 = select i1 %35, double* %scevgep30, double* %scevgep30, !dbg !220
  %umax3435 = ptrtoint double* %umax34 to i64
  %36 = add i64 %umax3435, 8, !dbg !220
  %37 = ptrtoint double* %umin29 to i64, !dbg !220
  %38 = sub i64 %33, %37, !dbg !220
  %39 = icmp ult i32 %dx_off, %dx_off, !dbg !220
  %umin36 = select i1 %39, i32 %dx_off, i32 %dx_off, !dbg !220
  %40 = icmp ugt i32 %dx_off, %dx_off, !dbg !220
  %umax37 = select i1 %40, i32 %dx_off, i32 %dx_off, !dbg !220
  %41 = sext i32 %i.1 to i64, !dbg !220
  %42 = sub i64 %41, 0, !dbg !220
  %43 = sext i32 %umin36 to i64, !dbg !220
  %44 = mul i64 %42, 1, !dbg !220
  %45 = add i64 %44, %37, !dbg !220
  %46 = sext i32 %umax37 to i64, !dbg !220
  %47 = add i64 %42, %46, !dbg !220
  %48 = mul i64 %47, 1, !dbg !220
  %49 = add i64 %48, %33, !dbg !220
  br i1 %cmp7, label %for.body.8, label %for.end.14, !dbg !220

for.body.8:                                       ; preds = %for.cond.6
  %add9 = add nsw i32 %i.1, %dx_off, !dbg !226
  %idxprom10 = sext i32 %add9 to i64, !dbg !227
  %arrayidx11 = getelementptr inbounds double, double* %dx, i64 %idxprom10, !dbg !227
  %tmp19 = load double, double* %arrayidx11, align 8, !dbg !228
  %mul12 = fmul double %tmp19, %da, !dbg !228
  store double %mul12, double* %arrayidx11, align 8, !dbg !228
  br label %for.inc.13, !dbg !227

for.inc.13:                                       ; preds = %for.body.8
  %inc = add nsw i32 %i.1, 1, !dbg !229
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !207, metadata !57), !dbg !208
  br label %for.cond.6, !dbg !230

for.end.14:                                       ; preds = %for.cond.6
  br label %if.end

if.end:                                           ; preds = %for.end.14, %for.end
  br label %if.end.15, !dbg !231

if.end.15:                                        ; preds = %if.end, %entry
  ret void, !dbg !232
}

; Function Attrs: nounwind uwtable
define void @daxpy(i32 %n, double %da, double* %dx, i32 %dx_off, i32 %incx, double* %dy, i32 %dy_off, i32 %incy) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !233, metadata !57), !dbg !234
  call void @llvm.dbg.value(metadata double %da, i64 0, metadata !235, metadata !57), !dbg !236
  call void @llvm.dbg.value(metadata double* %dx, i64 0, metadata !237, metadata !57), !dbg !238
  call void @llvm.dbg.value(metadata i32 %dx_off, i64 0, metadata !239, metadata !57), !dbg !240
  call void @llvm.dbg.value(metadata i32 %incx, i64 0, metadata !241, metadata !57), !dbg !242
  call void @llvm.dbg.value(metadata double* %dy, i64 0, metadata !243, metadata !57), !dbg !244
  call void @llvm.dbg.value(metadata i32 %dy_off, i64 0, metadata !245, metadata !57), !dbg !246
  call void @llvm.dbg.value(metadata i32 %incy, i64 0, metadata !247, metadata !57), !dbg !248
  %cmp = icmp sgt i32 %n, 0, !dbg !249
  br i1 %cmp, label %land.lhs.true, label %if.end.35, !dbg !251

land.lhs.true:                                    ; preds = %entry
  %cmp1 = fcmp une double %da, 0.000000e+00, !dbg !252
  br i1 %cmp1, label %if.then, label %if.end.35, !dbg !253

if.then:                                          ; preds = %land.lhs.true
  %cmp2 = icmp ne i32 %incx, 1, !dbg !254
  br i1 %cmp2, label %if.then.4, label %lor.lhs.false, !dbg !257

lor.lhs.false:                                    ; preds = %if.then
  %cmp3 = icmp ne i32 %incy, 1, !dbg !258
  br i1 %cmp3, label %if.then.4, label %if.else, !dbg !259

if.then.4:                                        ; preds = %lor.lhs.false, %if.then
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !260, metadata !57), !dbg !262
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !263, metadata !57), !dbg !264
  %cmp5 = icmp slt i32 %incx, 0, !dbg !265
  br i1 %cmp5, label %if.then.6, label %if.end, !dbg !267

if.then.6:                                        ; preds = %if.then.4
  %sub = sub nsw i32 1, %n, !dbg !268
  %mul = mul nsw i32 %sub, %incx, !dbg !269
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !260, metadata !57), !dbg !262
  br label %if.end, !dbg !270

if.end:                                           ; preds = %if.then.6, %if.then.4
  %ix.0 = phi i32 [ %mul, %if.then.6 ], [ 0, %if.then.4 ]
  %cmp7 = icmp slt i32 %incy, 0, !dbg !271
  br i1 %cmp7, label %if.then.8, label %if.end.11, !dbg !273

if.then.8:                                        ; preds = %if.end
  %sub9 = sub nsw i32 1, %n, !dbg !274
  %mul10 = mul nsw i32 %sub9, %incy, !dbg !275
  call void @llvm.dbg.value(metadata i32 %mul10, i64 0, metadata !263, metadata !57), !dbg !264
  br label %if.end.11, !dbg !276

if.end.11:                                        ; preds = %if.then.8, %if.end
  %iy.0 = phi i32 [ %mul10, %if.then.8 ], [ 0, %if.end ]
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !277, metadata !57), !dbg !278
  %0 = add i32 %ix.0, %dx_off, !dbg !279
  %1 = add i32 %ix.0, %dx_off, !dbg !279
  %2 = add i32 %iy.0, %dy_off, !dbg !279
  %3 = add i32 %iy.0, %dy_off, !dbg !279
  %4 = add i32 %ix.0, %dx_off, !dbg !279
  %5 = add i32 %ix.0, %dx_off, !dbg !279
  %6 = add i32 %iy.0, %dy_off, !dbg !279
  %7 = add i32 %iy.0, %dy_off, !dbg !279
  br label %for.cond, !dbg !281

for.cond:                                         ; preds = %for.inc, %if.end.11
  %i.0 = phi i32 [ 0, %if.end.11 ], [ %inc, %for.inc ]
  %ix.1 = phi i32 [ %ix.0, %if.end.11 ], [ %add18, %for.inc ]
  %iy.1 = phi i32 [ %iy.0, %if.end.11 ], [ %add19, %for.inc ]
  %cmp12 = icmp slt i32 %i.0, %n, !dbg !282
  %8 = sext i32 %0 to i64, !dbg !279
  %9 = mul i64 8, %8, !dbg !279
  %scevgep = getelementptr double, double* %dx, i64 %8, !dbg !279
  %10 = sext i32 %1 to i64, !dbg !279
  %11 = mul i64 8, %10, !dbg !279
  %scevgep38 = getelementptr double, double* %dx, i64 %10, !dbg !279
  %scevgep3839 = ptrtoint double* %scevgep38 to i64
  %12 = add i64 %scevgep3839, 8, !dbg !279
  %13 = icmp sgt i32 %n, 0, !dbg !279
  %smax = select i1 %13, i32 %n, i32 0, !dbg !279
  %14 = mul i32 1, %smax, !dbg !279
  %15 = add i32 0, %14, !dbg !279
  %16 = ptrtoint double* %scevgep to i64, !dbg !279
  %17 = sub i64 %12, %16, !dbg !279
  %18 = icmp ult i32 %0, %0, !dbg !279
  %umin = select i1 %18, i32 %0, i32 %0, !dbg !279
  %19 = icmp ugt i32 %0, %0, !dbg !279
  %umax = select i1 %19, i32 %0, i32 %0, !dbg !279
  %20 = sext i32 %i.0 to i64, !dbg !279
  %21 = sext i32 %incx to i64, !dbg !279
  %22 = sub i64 %20, 0, !dbg !279
  %23 = sext i32 %umin to i64, !dbg !279
  %24 = mul i64 %22, %21, !dbg !279
  %25 = add i64 %24, %16, !dbg !279
  %26 = sext i32 %umax to i64, !dbg !279
  %27 = add i64 %22, %26, !dbg !279
  %28 = mul i64 %27, %21, !dbg !279
  %29 = add i64 %28, %12, !dbg !279
  %30 = sext i32 %2 to i64, !dbg !279
  %31 = mul i64 8, %30, !dbg !279
  %scevgep40 = getelementptr double, double* %dy, i64 %30, !dbg !279
  %32 = icmp ult double* %scevgep40, %scevgep40, !dbg !279
  %umin41 = select i1 %32, double* %scevgep40, double* %scevgep40, !dbg !279
  %33 = sext i32 %3 to i64, !dbg !279
  %34 = mul i64 8, %33, !dbg !279
  %scevgep42 = getelementptr double, double* %dy, i64 %33, !dbg !279
  %35 = icmp ugt double* %scevgep42, %scevgep42, !dbg !279
  %umax43 = select i1 %35, double* %scevgep42, double* %scevgep42, !dbg !279
  %umax4344 = ptrtoint double* %umax43 to i64
  %36 = add i64 %umax4344, 8, !dbg !279
  %37 = icmp ult double* %scevgep40, %scevgep40, !dbg !279
  %umin45 = select i1 %37, double* %scevgep40, double* %scevgep40, !dbg !279
  %38 = icmp ugt double* %scevgep42, %scevgep42, !dbg !279
  %umax46 = select i1 %38, double* %scevgep42, double* %scevgep42, !dbg !279
  %umax4647 = ptrtoint double* %umax46 to i64
  %39 = add i64 %umax4647, 8, !dbg !279
  %40 = ptrtoint double* %umin41 to i64, !dbg !279
  %41 = sub i64 %36, %40, !dbg !279
  %42 = icmp ult i32 %2, %2, !dbg !279
  %umin48 = select i1 %42, i32 %2, i32 %2, !dbg !279
  %43 = icmp ugt i32 %2, %2, !dbg !279
  %umax49 = select i1 %43, i32 %2, i32 %2, !dbg !279
  %44 = sext i32 %i.0 to i64, !dbg !279
  %45 = sext i32 %incy to i64, !dbg !279
  %46 = sub i64 %44, 0, !dbg !279
  %47 = sext i32 %umin48 to i64, !dbg !279
  %48 = mul i64 %46, %45, !dbg !279
  %49 = add i64 %48, %40, !dbg !279
  %50 = sext i32 %umax49 to i64, !dbg !279
  %51 = add i64 %46, %50, !dbg !279
  %52 = mul i64 %51, %45, !dbg !279
  %53 = add i64 %52, %36, !dbg !279
  %54 = sext i32 %4 to i64, !dbg !279
  %55 = mul i64 8, %54, !dbg !279
  %scevgep65 = getelementptr double, double* %dx, i64 %54, !dbg !279
  %56 = sext i32 %5 to i64, !dbg !279
  %57 = mul i64 8, %56, !dbg !279
  %scevgep66 = getelementptr double, double* %dx, i64 %56, !dbg !279
  %scevgep6667 = ptrtoint double* %scevgep66 to i64
  %58 = add i64 %scevgep6667, 8, !dbg !279
  %59 = icmp sgt i32 %n, 0, !dbg !279
  %smax68 = select i1 %59, i32 %n, i32 0, !dbg !279
  %60 = mul i32 1, %smax68, !dbg !279
  %61 = add i32 0, %60, !dbg !279
  %62 = ptrtoint double* %scevgep65 to i64, !dbg !279
  %63 = sub i64 %58, %62, !dbg !279
  %64 = icmp ult i32 %4, %4, !dbg !279
  %umin69 = select i1 %64, i32 %4, i32 %4, !dbg !279
  %65 = icmp ugt i32 %4, %4, !dbg !279
  %umax70 = select i1 %65, i32 %4, i32 %4, !dbg !279
  %66 = sext i32 %i.0 to i64, !dbg !279
  %67 = sext i32 %incx to i64, !dbg !279
  %68 = sub i64 %66, 0, !dbg !279
  %69 = sext i32 %umin69 to i64, !dbg !279
  %70 = mul i64 %68, %67, !dbg !279
  %71 = add i64 %70, %62, !dbg !279
  %72 = sext i32 %umax70 to i64, !dbg !279
  %73 = add i64 %68, %72, !dbg !279
  %74 = mul i64 %73, %67, !dbg !279
  %75 = add i64 %74, %58, !dbg !279
  %76 = sext i32 %6 to i64, !dbg !279
  %77 = mul i64 8, %76, !dbg !279
  %scevgep71 = getelementptr double, double* %dy, i64 %76, !dbg !279
  %78 = icmp ult double* %scevgep71, %scevgep71, !dbg !279
  %umin72 = select i1 %78, double* %scevgep71, double* %scevgep71, !dbg !279
  %79 = sext i32 %7 to i64, !dbg !279
  %80 = mul i64 8, %79, !dbg !279
  %scevgep73 = getelementptr double, double* %dy, i64 %79, !dbg !279
  %81 = icmp ugt double* %scevgep73, %scevgep73, !dbg !279
  %umax74 = select i1 %81, double* %scevgep73, double* %scevgep73, !dbg !279
  %umax7475 = ptrtoint double* %umax74 to i64
  %82 = add i64 %umax7475, 8, !dbg !279
  %83 = icmp ult double* %scevgep71, %scevgep71, !dbg !279
  %umin76 = select i1 %83, double* %scevgep71, double* %scevgep71, !dbg !279
  %84 = icmp ugt double* %scevgep73, %scevgep73, !dbg !279
  %umax77 = select i1 %84, double* %scevgep73, double* %scevgep73, !dbg !279
  %umax7778 = ptrtoint double* %umax77 to i64
  %85 = add i64 %umax7778, 8, !dbg !279
  %86 = ptrtoint double* %umin72 to i64, !dbg !279
  %87 = sub i64 %82, %86, !dbg !279
  %88 = icmp ult i32 %6, %6, !dbg !279
  %umin79 = select i1 %88, i32 %6, i32 %6, !dbg !279
  %89 = icmp ugt i32 %6, %6, !dbg !279
  %umax80 = select i1 %89, i32 %6, i32 %6, !dbg !279
  %90 = sext i32 %i.0 to i64, !dbg !279
  %91 = sext i32 %incy to i64, !dbg !279
  %92 = sub i64 %90, 0, !dbg !279
  %93 = sext i32 %umin79 to i64, !dbg !279
  %94 = mul i64 %92, %91, !dbg !279
  %95 = add i64 %94, %86, !dbg !279
  %96 = sext i32 %umax80 to i64, !dbg !279
  %97 = add i64 %92, %96, !dbg !279
  %98 = mul i64 %97, %91, !dbg !279
  %99 = add i64 %98, %82, !dbg !279
  br i1 %cmp12, label %for.body, label %for.end, !dbg !279

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %ix.1, %dx_off, !dbg !284
  %idxprom = sext i32 %add to i64, !dbg !286
  %arrayidx = getelementptr inbounds double, double* %dx, i64 %idxprom, !dbg !286
  %tmp16 = load double, double* %arrayidx, align 8, !dbg !286
  %mul13 = fmul double %da, %tmp16, !dbg !287
  %add14 = add nsw i32 %iy.1, %dy_off, !dbg !288
  %idxprom15 = sext i32 %add14 to i64, !dbg !289
  %arrayidx16 = getelementptr inbounds double, double* %dy, i64 %idxprom15, !dbg !289
  %tmp20 = load double, double* %arrayidx16, align 8, !dbg !290
  %add17 = fadd double %tmp20, %mul13, !dbg !290
  store double %add17, double* %arrayidx16, align 8, !dbg !290
  %add18 = add nsw i32 %ix.1, %incx, !dbg !291
  call void @llvm.dbg.value(metadata i32 %add18, i64 0, metadata !260, metadata !57), !dbg !262
  %add19 = add nsw i32 %iy.1, %incy, !dbg !292
  call void @llvm.dbg.value(metadata i32 %add19, i64 0, metadata !263, metadata !57), !dbg !264
  br label %for.inc, !dbg !293

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !294
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !277, metadata !57), !dbg !278
  br label %for.cond, !dbg !295

for.end:                                          ; preds = %for.cond
  br label %if.end.35, !dbg !296

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !277, metadata !57), !dbg !278
  %100 = mul i32 1, %n, !dbg !297
  %101 = add i32 0, %100, !dbg !297
  %102 = mul i32 1, %n, !dbg !297
  %103 = add i32 0, %102, !dbg !297
  br label %for.cond.20, !dbg !300

for.cond.20:                                      ; preds = %for.inc.31, %if.else
  %i.1 = phi i32 [ 0, %if.else ], [ %inc32, %for.inc.31 ]
  %cmp21 = icmp slt i32 %i.1, %n, !dbg !301
  %104 = sext i32 %dx_off to i64, !dbg !297
  %105 = mul i64 8, %104, !dbg !297
  %scevgep50 = getelementptr double, double* %dx, i64 %104, !dbg !297
  %106 = sext i32 %dx_off to i64, !dbg !297
  %107 = mul i64 8, %106, !dbg !297
  %scevgep51 = getelementptr double, double* %dx, i64 %106, !dbg !297
  %scevgep5152 = ptrtoint double* %scevgep51 to i64
  %108 = add i64 %scevgep5152, 8, !dbg !297
  %109 = ptrtoint double* %scevgep50 to i64, !dbg !297
  %110 = sub i64 %108, %109, !dbg !297
  %111 = icmp ult i32 %dx_off, %dx_off, !dbg !297
  %umin53 = select i1 %111, i32 %dx_off, i32 %dx_off, !dbg !297
  %112 = icmp ugt i32 %dx_off, %dx_off, !dbg !297
  %umax54 = select i1 %112, i32 %dx_off, i32 %dx_off, !dbg !297
  %113 = sext i32 %i.1 to i64, !dbg !297
  %114 = sub i64 %113, 0, !dbg !297
  %115 = sext i32 %umin53 to i64, !dbg !297
  %116 = mul i64 %114, 1, !dbg !297
  %117 = add i64 %116, %109, !dbg !297
  %118 = sext i32 %umax54 to i64, !dbg !297
  %119 = add i64 %114, %118, !dbg !297
  %120 = mul i64 %119, 1, !dbg !297
  %121 = add i64 %120, %108, !dbg !297
  %122 = sext i32 %dy_off to i64, !dbg !297
  %123 = mul i64 8, %122, !dbg !297
  %scevgep55 = getelementptr double, double* %dy, i64 %122, !dbg !297
  %124 = icmp ult double* %scevgep55, %scevgep55, !dbg !297
  %umin56 = select i1 %124, double* %scevgep55, double* %scevgep55, !dbg !297
  %125 = sext i32 %dy_off to i64, !dbg !297
  %126 = mul i64 8, %125, !dbg !297
  %scevgep57 = getelementptr double, double* %dy, i64 %125, !dbg !297
  %127 = icmp ugt double* %scevgep57, %scevgep57, !dbg !297
  %umax58 = select i1 %127, double* %scevgep57, double* %scevgep57, !dbg !297
  %umax5859 = ptrtoint double* %umax58 to i64
  %128 = add i64 %umax5859, 8, !dbg !297
  %129 = icmp ult double* %scevgep55, %scevgep55, !dbg !297
  %umin60 = select i1 %129, double* %scevgep55, double* %scevgep55, !dbg !297
  %130 = icmp ugt double* %scevgep57, %scevgep57, !dbg !297
  %umax61 = select i1 %130, double* %scevgep57, double* %scevgep57, !dbg !297
  %umax6162 = ptrtoint double* %umax61 to i64
  %131 = add i64 %umax6162, 8, !dbg !297
  %132 = ptrtoint double* %umin56 to i64, !dbg !297
  %133 = sub i64 %128, %132, !dbg !297
  %134 = icmp ult i32 %dy_off, %dy_off, !dbg !297
  %umin63 = select i1 %134, i32 %dy_off, i32 %dy_off, !dbg !297
  %135 = icmp ugt i32 %dy_off, %dy_off, !dbg !297
  %umax64 = select i1 %135, i32 %dy_off, i32 %dy_off, !dbg !297
  %136 = sext i32 %i.1 to i64, !dbg !297
  %137 = sub i64 %136, 0, !dbg !297
  %138 = sext i32 %umin63 to i64, !dbg !297
  %139 = mul i64 %137, 1, !dbg !297
  %140 = add i64 %139, %132, !dbg !297
  %141 = sext i32 %umax64 to i64, !dbg !297
  %142 = add i64 %137, %141, !dbg !297
  %143 = mul i64 %142, 1, !dbg !297
  %144 = add i64 %143, %128, !dbg !297
  %145 = sext i32 %dx_off to i64, !dbg !297
  %146 = mul i64 8, %145, !dbg !297
  %scevgep81 = getelementptr double, double* %dx, i64 %145, !dbg !297
  %147 = sext i32 %dx_off to i64, !dbg !297
  %148 = mul i64 8, %147, !dbg !297
  %scevgep82 = getelementptr double, double* %dx, i64 %147, !dbg !297
  %scevgep8283 = ptrtoint double* %scevgep82 to i64
  %149 = add i64 %scevgep8283, 8, !dbg !297
  %150 = ptrtoint double* %scevgep81 to i64, !dbg !297
  %151 = sub i64 %149, %150, !dbg !297
  %152 = icmp ult i32 %dx_off, %dx_off, !dbg !297
  %umin84 = select i1 %152, i32 %dx_off, i32 %dx_off, !dbg !297
  %153 = icmp ugt i32 %dx_off, %dx_off, !dbg !297
  %umax85 = select i1 %153, i32 %dx_off, i32 %dx_off, !dbg !297
  %154 = sext i32 %i.1 to i64, !dbg !297
  %155 = sub i64 %154, 0, !dbg !297
  %156 = sext i32 %umin84 to i64, !dbg !297
  %157 = mul i64 %155, 1, !dbg !297
  %158 = add i64 %157, %150, !dbg !297
  %159 = sext i32 %umax85 to i64, !dbg !297
  %160 = add i64 %155, %159, !dbg !297
  %161 = mul i64 %160, 1, !dbg !297
  %162 = add i64 %161, %149, !dbg !297
  %163 = sext i32 %dy_off to i64, !dbg !297
  %164 = mul i64 8, %163, !dbg !297
  %scevgep86 = getelementptr double, double* %dy, i64 %163, !dbg !297
  %165 = icmp ult double* %scevgep86, %scevgep86, !dbg !297
  %umin87 = select i1 %165, double* %scevgep86, double* %scevgep86, !dbg !297
  %166 = sext i32 %dy_off to i64, !dbg !297
  %167 = mul i64 8, %166, !dbg !297
  %scevgep88 = getelementptr double, double* %dy, i64 %166, !dbg !297
  %168 = icmp ugt double* %scevgep88, %scevgep88, !dbg !297
  %umax89 = select i1 %168, double* %scevgep88, double* %scevgep88, !dbg !297
  %umax8990 = ptrtoint double* %umax89 to i64
  %169 = add i64 %umax8990, 8, !dbg !297
  %170 = icmp ult double* %scevgep86, %scevgep86, !dbg !297
  %umin91 = select i1 %170, double* %scevgep86, double* %scevgep86, !dbg !297
  %171 = icmp ugt double* %scevgep88, %scevgep88, !dbg !297
  %umax92 = select i1 %171, double* %scevgep88, double* %scevgep88, !dbg !297
  %umax9293 = ptrtoint double* %umax92 to i64
  %172 = add i64 %umax9293, 8, !dbg !297
  %173 = ptrtoint double* %umin87 to i64, !dbg !297
  %174 = sub i64 %169, %173, !dbg !297
  %175 = icmp ult i32 %dy_off, %dy_off, !dbg !297
  %umin94 = select i1 %175, i32 %dy_off, i32 %dy_off, !dbg !297
  %176 = icmp ugt i32 %dy_off, %dy_off, !dbg !297
  %umax95 = select i1 %176, i32 %dy_off, i32 %dy_off, !dbg !297
  %177 = sext i32 %i.1 to i64, !dbg !297
  %178 = sub i64 %177, 0, !dbg !297
  %179 = sext i32 %umin94 to i64, !dbg !297
  %180 = mul i64 %178, 1, !dbg !297
  %181 = add i64 %180, %173, !dbg !297
  %182 = sext i32 %umax95 to i64, !dbg !297
  %183 = add i64 %178, %182, !dbg !297
  %184 = mul i64 %183, 1, !dbg !297
  %185 = add i64 %184, %169, !dbg !297
  br i1 %cmp21, label %for.body.22, label %for.end.33, !dbg !297

for.body.22:                                      ; preds = %for.cond.20
  %add23 = add nsw i32 %i.1, %dx_off, !dbg !303
  %idxprom24 = sext i32 %add23 to i64, !dbg !304
  %arrayidx25 = getelementptr inbounds double, double* %dx, i64 %idxprom24, !dbg !304
  %tmp32 = load double, double* %arrayidx25, align 8, !dbg !304
  %mul26 = fmul double %da, %tmp32, !dbg !305
  %add27 = add nsw i32 %i.1, %dy_off, !dbg !306
  %idxprom28 = sext i32 %add27 to i64, !dbg !307
  %arrayidx29 = getelementptr inbounds double, double* %dy, i64 %idxprom28, !dbg !307
  %tmp36 = load double, double* %arrayidx29, align 8, !dbg !308
  %add30 = fadd double %tmp36, %mul26, !dbg !308
  store double %add30, double* %arrayidx29, align 8, !dbg !308
  br label %for.inc.31, !dbg !307

for.inc.31:                                       ; preds = %for.body.22
  %inc32 = add nsw i32 %i.1, 1, !dbg !309
  call void @llvm.dbg.value(metadata i32 %inc32, i64 0, metadata !277, metadata !57), !dbg !278
  br label %for.cond.20, !dbg !310

for.end.33:                                       ; preds = %for.cond.20
  br label %if.end.34

if.end.34:                                        ; preds = %for.end.33
  br label %if.end.35, !dbg !311

if.end.35:                                        ; preds = %if.end.34, %for.end, %land.lhs.true, %entry
  ret void, !dbg !312
}

; Function Attrs: nounwind uwtable
define void @dgefa(double** %a, i32* %ipvt) #0 {
entry:
  call void @llvm.dbg.value(metadata double** %a, i64 0, metadata !313, metadata !57), !dbg !314
  call void @llvm.dbg.value(metadata i32* %ipvt, i64 0, metadata !315, metadata !57), !dbg !316
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !317, metadata !57), !dbg !318
  br label %for.cond, !dbg !319

for.cond:                                         ; preds = %for.inc.38, %entry
  %k.0 = phi i32 [ 0, %entry ], [ %inc39, %for.inc.38 ]
  %cmp = icmp slt i32 %k.0, 1999, !dbg !321
  br i1 %cmp, label %for.body, label %for.end.40, !dbg !323

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %k.0 to i64, !dbg !324
  %arrayidx = getelementptr inbounds double*, double** %a, i64 %idxprom, !dbg !324
  %tmp3 = load double*, double** %arrayidx, align 8, !dbg !324
  call void @llvm.dbg.value(metadata double* %tmp3, i64 0, metadata !326, metadata !57), !dbg !327
  %add = add nsw i32 %k.0, 1, !dbg !328
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !329, metadata !57), !dbg !330
  %sub = sub nsw i32 2000, %k.0, !dbg !331
  %call = call i32 @idamax(i32 %sub, double* %tmp3, i32 %k.0, i32 1), !dbg !332
  %add1 = add nsw i32 %call, %k.0, !dbg !333
  call void @llvm.dbg.value(metadata i32 %add1, i64 0, metadata !334, metadata !57), !dbg !335
  %idxprom2 = sext i32 %k.0 to i64, !dbg !336
  %arrayidx3 = getelementptr inbounds i32, i32* %ipvt, i64 %idxprom2, !dbg !336
  store i32 %add1, i32* %arrayidx3, align 4, !dbg !337
  %idxprom4 = sext i32 %add1 to i64, !dbg !338
  %arrayidx5 = getelementptr inbounds double, double* %tmp3, i64 %idxprom4, !dbg !338
  %tmp14 = load double, double* %arrayidx5, align 8, !dbg !338
  %cmp6 = fcmp une double %tmp14, 0.000000e+00, !dbg !340
  br i1 %cmp6, label %if.then, label %if.end.37, !dbg !341

if.then:                                          ; preds = %for.body
  %cmp7 = icmp ne i32 %add1, %k.0, !dbg !342
  br i1 %cmp7, label %if.then.8, label %if.end, !dbg !345

if.then.8:                                        ; preds = %if.then
  %idxprom9 = sext i32 %add1 to i64, !dbg !346
  %arrayidx10 = getelementptr inbounds double, double* %tmp3, i64 %idxprom9, !dbg !346
  %tmp19 = load double, double* %arrayidx10, align 8, !dbg !346
  call void @llvm.dbg.value(metadata double %tmp19, i64 0, metadata !348, metadata !57), !dbg !349
  %idxprom11 = sext i32 %k.0 to i64, !dbg !350
  %arrayidx12 = getelementptr inbounds double, double* %tmp3, i64 %idxprom11, !dbg !350
  %tmp22 = load double, double* %arrayidx12, align 8, !dbg !350
  %idxprom13 = sext i32 %add1 to i64, !dbg !351
  %arrayidx14 = getelementptr inbounds double, double* %tmp3, i64 %idxprom13, !dbg !351
  store double %tmp22, double* %arrayidx14, align 8, !dbg !352
  %idxprom15 = sext i32 %k.0 to i64, !dbg !353
  %arrayidx16 = getelementptr inbounds double, double* %tmp3, i64 %idxprom15, !dbg !353
  store double %tmp19, double* %arrayidx16, align 8, !dbg !354
  br label %if.end, !dbg !355

if.end:                                           ; preds = %if.then.8, %if.then
  %idxprom17 = sext i32 %k.0 to i64, !dbg !356
  %arrayidx18 = getelementptr inbounds double, double* %tmp3, i64 %idxprom17, !dbg !356
  %tmp30 = load double, double* %arrayidx18, align 8, !dbg !356
  %div = fdiv double -1.000000e+00, %tmp30, !dbg !357
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !348, metadata !57), !dbg !349
  %sub19 = sub nsw i32 2000, %add, !dbg !358
  call void @dscal(i32 %sub19, double %div, double* %tmp3, i32 %add, i32 1), !dbg !359
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !360, metadata !57), !dbg !361
  br label %for.cond.20, !dbg !362

for.cond.20:                                      ; preds = %for.inc, %if.end
  %j.0 = phi i32 [ %add, %if.end ], [ %inc, %for.inc ]
  %cmp21 = icmp slt i32 %j.0, 2000, !dbg !364
  br i1 %cmp21, label %for.body.22, label %for.end, !dbg !366

for.body.22:                                      ; preds = %for.cond.20
  %idxprom23 = sext i32 %j.0 to i64, !dbg !367
  %arrayidx24 = getelementptr inbounds double*, double** %a, i64 %idxprom23, !dbg !367
  %tmp39 = load double*, double** %arrayidx24, align 8, !dbg !367
  call void @llvm.dbg.value(metadata double* %tmp39, i64 0, metadata !369, metadata !57), !dbg !370
  %idxprom25 = sext i32 %add1 to i64, !dbg !371
  %arrayidx26 = getelementptr inbounds double, double* %tmp39, i64 %idxprom25, !dbg !371
  %tmp42 = load double, double* %arrayidx26, align 8, !dbg !371
  call void @llvm.dbg.value(metadata double %tmp42, i64 0, metadata !348, metadata !57), !dbg !349
  %cmp27 = icmp ne i32 %add1, %k.0, !dbg !372
  br i1 %cmp27, label %if.then.28, label %if.end.35, !dbg !374

if.then.28:                                       ; preds = %for.body.22
  %idxprom29 = sext i32 %k.0 to i64, !dbg !375
  %arrayidx30 = getelementptr inbounds double, double* %tmp39, i64 %idxprom29, !dbg !375
  %tmp47 = load double, double* %arrayidx30, align 8, !dbg !375
  %idxprom31 = sext i32 %add1 to i64, !dbg !377
  %arrayidx32 = getelementptr inbounds double, double* %tmp39, i64 %idxprom31, !dbg !377
  store double %tmp47, double* %arrayidx32, align 8, !dbg !378
  %idxprom33 = sext i32 %k.0 to i64, !dbg !379
  %arrayidx34 = getelementptr inbounds double, double* %tmp39, i64 %idxprom33, !dbg !379
  store double %tmp42, double* %arrayidx34, align 8, !dbg !380
  br label %if.end.35, !dbg !381

if.end.35:                                        ; preds = %if.then.28, %for.body.22
  %sub36 = sub nsw i32 2000, %add, !dbg !382
  call void @daxpy(i32 %sub36, double %tmp42, double* %tmp3, i32 %add, i32 1, double* %tmp39, i32 %add, i32 1), !dbg !383
  br label %for.inc, !dbg !384

for.inc:                                          ; preds = %if.end.35
  %inc = add nsw i32 %j.0, 1, !dbg !385
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !360, metadata !57), !dbg !361
  br label %for.cond.20, !dbg !386

for.end:                                          ; preds = %for.cond.20
  br label %if.end.37, !dbg !387

if.end.37:                                        ; preds = %for.end, %for.body
  br label %for.inc.38, !dbg !388

for.inc.38:                                       ; preds = %if.end.37
  %inc39 = add nsw i32 %k.0, 1, !dbg !389
  call void @llvm.dbg.value(metadata i32 %inc39, i64 0, metadata !317, metadata !57), !dbg !318
  br label %for.cond, !dbg !390

for.end.40:                                       ; preds = %for.cond
  %arrayidx41 = getelementptr inbounds i32, i32* %ipvt, i64 1999, !dbg !391
  store i32 1999, i32* %arrayidx41, align 4, !dbg !392
  ret void, !dbg !393
}

; Function Attrs: nounwind uwtable
define void @dgesl(double** %a, i32* %ipvt, double* %b) #0 {
entry:
  call void @llvm.dbg.value(metadata double** %a, i64 0, metadata !394, metadata !57), !dbg !395
  call void @llvm.dbg.value(metadata i32* %ipvt, i64 0, metadata !396, metadata !57), !dbg !397
  call void @llvm.dbg.value(metadata double* %b, i64 0, metadata !398, metadata !57), !dbg !399
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !400, metadata !57), !dbg !401
  br label %for.cond, !dbg !402

for.cond:                                         ; preds = %for.inc, %entry
  %k.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %k.0, 1999, !dbg !404
  br i1 %cmp, label %for.body, label %for.end, !dbg !406

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %k.0 to i64, !dbg !407
  %arrayidx = getelementptr inbounds i32, i32* %ipvt, i64 %idxprom, !dbg !407
  %tmp3 = load i32, i32* %arrayidx, align 4, !dbg !407
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !409, metadata !57), !dbg !410
  %idxprom1 = sext i32 %tmp3 to i64, !dbg !411
  %arrayidx2 = getelementptr inbounds double, double* %b, i64 %idxprom1, !dbg !411
  %tmp6 = load double, double* %arrayidx2, align 8, !dbg !411
  call void @llvm.dbg.value(metadata double %tmp6, i64 0, metadata !412, metadata !57), !dbg !413
  %cmp3 = icmp ne i32 %tmp3, %k.0, !dbg !414
  br i1 %cmp3, label %if.then, label %if.end, !dbg !416

if.then:                                          ; preds = %for.body
  %idxprom4 = sext i32 %k.0 to i64, !dbg !417
  %arrayidx5 = getelementptr inbounds double, double* %b, i64 %idxprom4, !dbg !417
  %tmp11 = load double, double* %arrayidx5, align 8, !dbg !417
  %idxprom6 = sext i32 %tmp3 to i64, !dbg !419
  %arrayidx7 = getelementptr inbounds double, double* %b, i64 %idxprom6, !dbg !419
  store double %tmp11, double* %arrayidx7, align 8, !dbg !420
  %idxprom8 = sext i32 %k.0 to i64, !dbg !421
  %arrayidx9 = getelementptr inbounds double, double* %b, i64 %idxprom8, !dbg !421
  store double %tmp6, double* %arrayidx9, align 8, !dbg !422
  br label %if.end, !dbg !423

if.end:                                           ; preds = %if.then, %for.body
  %add = add nsw i32 %k.0, 1, !dbg !424
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !425, metadata !57), !dbg !426
  %sub = sub nsw i32 2000, %add, !dbg !427
  %idxprom10 = sext i32 %k.0 to i64, !dbg !428
  %arrayidx11 = getelementptr inbounds double*, double** %a, i64 %idxprom10, !dbg !428
  %tmp22 = load double*, double** %arrayidx11, align 8, !dbg !428
  call void @daxpy(i32 %sub, double %tmp6, double* %tmp22, i32 %add, i32 1, double* %b, i32 %add, i32 1), !dbg !429
  br label %for.inc, !dbg !430

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %k.0, 1, !dbg !431
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !400, metadata !57), !dbg !401
  br label %for.cond, !dbg !432

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !433, metadata !57), !dbg !434
  br label %for.cond.12, !dbg !435

for.cond.12:                                      ; preds = %for.inc.28, %for.end
  %kb.0 = phi i32 [ 0, %for.end ], [ %inc29, %for.inc.28 ]
  %cmp13 = icmp slt i32 %kb.0, 2000, !dbg !437
  br i1 %cmp13, label %for.body.14, label %for.end.30, !dbg !439

for.body.14:                                      ; preds = %for.cond.12
  %add15 = add nsw i32 %kb.0, 1, !dbg !440
  %sub16 = sub nsw i32 2000, %add15, !dbg !442
  call void @llvm.dbg.value(metadata i32 %sub16, i64 0, metadata !400, metadata !57), !dbg !401
  %idxprom17 = sext i32 %sub16 to i64, !dbg !443
  %idxprom18 = sext i32 %sub16 to i64, !dbg !443
  %arrayidx19 = getelementptr inbounds double*, double** %a, i64 %idxprom18, !dbg !443
  %tmp32 = load double*, double** %arrayidx19, align 8, !dbg !443
  %arrayidx20 = getelementptr inbounds double, double* %tmp32, i64 %idxprom17, !dbg !443
  %tmp33 = load double, double* %arrayidx20, align 8, !dbg !443
  %idxprom21 = sext i32 %sub16 to i64, !dbg !444
  %arrayidx22 = getelementptr inbounds double, double* %b, i64 %idxprom21, !dbg !444
  %tmp36 = load double, double* %arrayidx22, align 8, !dbg !445
  %div = fdiv double %tmp36, %tmp33, !dbg !445
  store double %div, double* %arrayidx22, align 8, !dbg !445
  %idxprom23 = sext i32 %sub16 to i64, !dbg !446
  %arrayidx24 = getelementptr inbounds double, double* %b, i64 %idxprom23, !dbg !446
  %tmp39 = load double, double* %arrayidx24, align 8, !dbg !446
  %sub25 = fsub double -0.000000e+00, %tmp39, !dbg !447
  call void @llvm.dbg.value(metadata double %sub25, i64 0, metadata !412, metadata !57), !dbg !413
  %idxprom26 = sext i32 %sub16 to i64, !dbg !448
  %arrayidx27 = getelementptr inbounds double*, double** %a, i64 %idxprom26, !dbg !448
  %tmp44 = load double*, double** %arrayidx27, align 8, !dbg !448
  call void @daxpy(i32 %sub16, double %sub25, double* %tmp44, i32 0, i32 1, double* %b, i32 0, i32 1), !dbg !449
  br label %for.inc.28, !dbg !450

for.inc.28:                                       ; preds = %for.body.14
  %inc29 = add nsw i32 %kb.0, 1, !dbg !451
  call void @llvm.dbg.value(metadata i32 %inc29, i64 0, metadata !433, metadata !57), !dbg !434
  br label %for.cond.12, !dbg !452

for.end.30:                                       ; preds = %for.cond.12
  ret void, !dbg !453
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !454, metadata !57), !dbg !455
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !456, metadata !57), !dbg !457
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !458, metadata !57), !dbg !460
  %cmp = icmp sgt i32 %argc, 1, !dbg !461
  br i1 %cmp, label %if.then, label %if.end.3, !dbg !463

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !464, metadata !57), !dbg !465
  br label %for.cond, !dbg !466

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 1, %if.then ], [ %inc, %for.inc ]
  %cmp1 = icmp slt i32 %i.0, %argc, !dbg !469
  br i1 %cmp1, label %for.body, label %for.end.loopexit, !dbg !471

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !472
  %tmp4 = load i8*, i8** %arrayidx, align 8, !dbg !472
  %call = call i32 @strcmp(i8* %tmp4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0)) #6, !dbg !475
  %tobool = icmp ne i32 %call, 0, !dbg !475
  br i1 %tobool, label %if.end, label %if.then.2, !dbg !476

if.then.2:                                        ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !458, metadata !57), !dbg !460
  br label %for.end, !dbg !477

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !479

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %i.0, 1, !dbg !480
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !464, metadata !57), !dbg !465
  br label %for.cond, !dbg !481

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !482

for.end:                                          ; preds = %for.end.loopexit, %if.then.2
  %ga_testing.0 = phi i8 [ 1, %if.then.2 ], [ 0, %for.end.loopexit ]
  br label %if.end.3, !dbg !482

if.end.3:                                         ; preds = %for.end, %entry
  %ga_testing.1 = phi i8 [ %ga_testing.0, %for.end ], [ 0, %entry ]
  %call4 = call noalias i8* @malloc(i64 16000) #7, !dbg !483
  %tmp6 = bitcast i8* %call4 to double**, !dbg !484
  call void @llvm.dbg.value(metadata double** %tmp6, i64 0, metadata !485, metadata !57), !dbg !486
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !464, metadata !57), !dbg !465
  br label %for.cond.5, !dbg !487

for.cond.5:                                       ; preds = %for.inc.10, %if.end.3
  %i.1 = phi i32 [ 0, %if.end.3 ], [ %inc11, %for.inc.10 ]
  %cmp6 = icmp slt i32 %i.1, 2000, !dbg !489
  br i1 %cmp6, label %for.body.7, label %for.end.12, !dbg !491

for.body.7:                                       ; preds = %for.cond.5
  %call8 = call noalias i8* @malloc(i64 16008) #7, !dbg !492
  %tmp8 = bitcast i8* %call8 to double*, !dbg !493
  %idxprom = sext i32 %i.1 to i64, !dbg !494
  %arrayidx9 = getelementptr inbounds double*, double** %tmp6, i64 %idxprom, !dbg !494
  store double* %tmp8, double** %arrayidx9, align 8, !dbg !495
  br label %for.inc.10, !dbg !494

for.inc.10:                                       ; preds = %for.body.7
  %inc11 = add nsw i32 %i.1, 1, !dbg !496
  call void @llvm.dbg.value(metadata i32 %inc11, i64 0, metadata !464, metadata !57), !dbg !465
  br label %for.cond.5, !dbg !497

for.end.12:                                       ; preds = %for.cond.5
  %call13 = call noalias i8* @malloc(i64 16000) #7, !dbg !498
  %tmp12 = bitcast i8* %call13 to double*, !dbg !499
  call void @llvm.dbg.value(metadata double* %tmp12, i64 0, metadata !500, metadata !57), !dbg !501
  %call14 = call noalias i8* @malloc(i64 16000) #7, !dbg !502
  %tmp13 = bitcast i8* %call14 to double*, !dbg !503
  call void @llvm.dbg.value(metadata double* %tmp13, i64 0, metadata !504, metadata !57), !dbg !505
  %call15 = call noalias i8* @malloc(i64 8000) #7, !dbg !506
  %tmp14 = bitcast i8* %call15 to i32*, !dbg !507
  call void @llvm.dbg.value(metadata i32* %tmp14, i64 0, metadata !508, metadata !57), !dbg !509
  call void @llvm.dbg.value(metadata double 0x41F3E5E475555555, i64 0, metadata !510, metadata !57), !dbg !511
  call void @matgen(double** %tmp6, double* %tmp12), !dbg !512
  call void @dgefa(double** %tmp6, i32* %tmp14), !dbg !513
  call void @dgesl(double** %tmp6, i32* %tmp14, double* %tmp12), !dbg !514
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !515, metadata !57), !dbg !516
  %tmp23 = bitcast i32* %tmp14 to i8*, !dbg !517
  call void @free(i8* %tmp23) #7, !dbg !518
  %tmp25 = bitcast double* %tmp13 to i8*, !dbg !519
  call void @free(i8* %tmp25) #7, !dbg !520
  %tmp27 = bitcast double* %tmp12 to i8*, !dbg !521
  call void @free(i8* %tmp27) #7, !dbg !522
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !464, metadata !57), !dbg !465
  br label %for.cond.16, !dbg !523

for.cond.16:                                      ; preds = %for.inc.21, %for.end.12
  %i.2 = phi i32 [ 0, %for.end.12 ], [ %inc22, %for.inc.21 ]
  %cmp17 = icmp slt i32 %i.2, 2000, !dbg !525
  br i1 %cmp17, label %for.body.18, label %for.end.23, !dbg !527

for.body.18:                                      ; preds = %for.cond.16
  %idxprom19 = sext i32 %i.2 to i64, !dbg !528
  %arrayidx20 = getelementptr inbounds double*, double** %tmp6, i64 %idxprom19, !dbg !528
  %tmp31 = load double*, double** %arrayidx20, align 8, !dbg !528
  %tmp32 = bitcast double* %tmp31 to i8*, !dbg !528
  call void @free(i8* %tmp32) #7, !dbg !529
  br label %for.inc.21, !dbg !529

for.inc.21:                                       ; preds = %for.body.18
  %inc22 = add nsw i32 %i.2, 1, !dbg !530
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !464, metadata !57), !dbg !465
  br label %for.cond.16, !dbg !531

for.end.23:                                       ; preds = %for.cond.16
  %tmp35 = bitcast double** %tmp6 to i8*, !dbg !532
  call void @free(i8* %tmp35) #7, !dbg !533
  %tobool24 = trunc i8 %ga_testing.1 to i1, !dbg !534
  br i1 %tobool24, label %if.then.25, label %if.else, !dbg !536

if.then.25:                                       ; preds = %for.end.23
  %tmp37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !537
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), double 0.000000e+00), !dbg !538
  br label %if.end.28, !dbg !538

if.else:                                          ; preds = %for.end.23
  %tmp39 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !539
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp39, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i32 0, i32 0), double 0.000000e+00), !dbg !540
  br label %if.end.28

if.end.28:                                        ; preds = %if.else, %if.then.25
  %tmp41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !541
  %call29 = call i32 @fflush(%struct._IO_FILE* %tmp41), !dbg !542
  ret i32 0, !dbg !543
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare void @free(i8*) #4

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #5

declare i32 @fflush(%struct._IO_FILE*) #5

; Function Attrs: nounwind uwtable
define internal double @random_double() #0 {
entry:
  %tmp = load i64, i64* @seed, align 8, !dbg !544
  %xor = xor i64 %tmp, 123459876, !dbg !544
  store i64 %xor, i64* @seed, align 8, !dbg !544
  %tmp1 = load i64, i64* @seed, align 8, !dbg !545
  %div = sdiv i64 %tmp1, 127773, !dbg !546
  call void @llvm.dbg.value(metadata i64 %div, i64 0, metadata !547, metadata !57), !dbg !548
  %tmp2 = load i64, i64* @seed, align 8, !dbg !549
  %mul = mul nsw i64 %div, 127773, !dbg !550
  %sub = sub nsw i64 %tmp2, %mul, !dbg !551
  %mul1 = mul nsw i64 16807, %sub, !dbg !552
  %mul2 = mul nsw i64 2836, %div, !dbg !553
  %sub3 = sub nsw i64 %mul1, %mul2, !dbg !554
  store i64 %sub3, i64* @seed, align 8, !dbg !555
  %tmp5 = load i64, i64* @seed, align 8, !dbg !556
  %cmp = icmp slt i64 %tmp5, 0, !dbg !558
  br i1 %cmp, label %if.then, label %if.end, !dbg !559

if.then:                                          ; preds = %entry
  %tmp6 = load i64, i64* @seed, align 8, !dbg !560
  %add = add nsw i64 %tmp6, 2147483647, !dbg !560
  store i64 %add, i64* @seed, align 8, !dbg !560
  br label %if.end, !dbg !561

if.end:                                           ; preds = %if.then, %entry
  %tmp7 = load i64, i64* @seed, align 8, !dbg !562
  %conv = sitofp i64 %tmp7 to double, !dbg !562
  %mul4 = fmul double 0x3E00000000200FE1, %conv, !dbg !563
  call void @llvm.dbg.value(metadata double %mul4, i64 0, metadata !564, metadata !57), !dbg !565
  %tmp8 = load i64, i64* @seed, align 8, !dbg !566
  %xor5 = xor i64 %tmp8, 123459876, !dbg !566
  store i64 %xor5, i64* @seed, align 8, !dbg !566
  ret double %mul4, !dbg !567
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!53, !54}
!llvm.ident = !{!55}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !9, globals: !38)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/CoyoteBench/lpbench")
!2 = !{}
!3 = !{!4, !5, !7, !6}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !{!10, !14, !17, !20, !23, !26, !29, !35}
!10 = !DISubprogram(name: "matgen", scope: !11, file: !11, line: 92, type: !12, isLocal: false, isDefinition: true, scopeLine: 92, flags: DIFlagPrototyped, isOptimized: false, function: void (double**, double*)* @matgen, variables: !2)
!11 = !DIFile(filename: "/home/gleison/tf/Benchmarks/CoyoteBench/lpbench/tmp.c", directory: "/home/gleison/tf/Benchmarks/CoyoteBench/lpbench")
!12 = !DISubroutineType(types: !13)
!13 = !{null, !4, !5}
!14 = !DISubprogram(name: "idamax", scope: !11, file: !11, line: 109, type: !15, isLocal: false, isDefinition: true, scopeLine: 109, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, double*, i32, i32)* @idamax, variables: !2)
!15 = !DISubroutineType(types: !16)
!16 = !{!8, !8, !5, !8, !8}
!17 = !DISubprogram(name: "dscal", scope: !11, file: !11, line: 187, type: !18, isLocal: false, isDefinition: true, scopeLine: 187, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, double, double*, i32, i32)* @dscal, variables: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{null, !8, !6, !5, !8, !8}
!20 = !DISubprogram(name: "daxpy", scope: !11, file: !11, line: 206, type: !21, isLocal: false, isDefinition: true, scopeLine: 206, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, double, double*, i32, i32, double*, i32, i32)* @daxpy, variables: !2)
!21 = !DISubroutineType(types: !22)
!22 = !{null, !8, !6, !5, !8, !8, !5, !8, !8}
!23 = !DISubprogram(name: "dgefa", scope: !11, file: !11, line: 237, type: !24, isLocal: false, isDefinition: true, scopeLine: 237, flags: DIFlagPrototyped, isOptimized: false, function: void (double**, i32*)* @dgefa, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{null, !4, !7}
!26 = !DISubprogram(name: "dgesl", scope: !11, file: !11, line: 282, type: !27, isLocal: false, isDefinition: true, scopeLine: 282, flags: DIFlagPrototyped, isOptimized: false, function: void (double**, i32*, double*)* @dgesl, variables: !2)
!27 = !DISubroutineType(types: !28)
!28 = !{null, !4, !7, !5}
!29 = !DISubprogram(name: "main", scope: !11, file: !11, line: 309, type: !30, isLocal: false, isDefinition: true, scopeLine: 309, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!30 = !DISubroutineType(types: !31)
!31 = !{!8, !8, !32}
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!34 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!35 = !DISubprogram(name: "random_double", scope: !11, file: !11, line: 52, type: !36, isLocal: true, isDefinition: true, scopeLine: 52, isOptimized: false, function: double ()* @random_double, variables: !2)
!36 = !DISubroutineType(types: !37)
!37 = !{!6}
!38 = !{!39, !41, !42, !43, !46, !47, !48, !49, !50, !52}
!39 = !DIGlobalVariable(name: "N", scope: !0, file: !11, line: 85, type: !40, isLocal: true, isDefinition: true, variable: i32 2000)
!40 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!41 = !DIGlobalVariable(name: "NM1", scope: !0, file: !11, line: 86, type: !40, isLocal: true, isDefinition: true, variable: i32 1999)
!42 = !DIGlobalVariable(name: "NP1", scope: !0, file: !11, line: 87, type: !40, isLocal: true, isDefinition: true, variable: i32 2001)
!43 = !DIGlobalVariable(name: "MASK", scope: !0, file: !11, line: 50, type: !44, isLocal: true, isDefinition: true, variable: i64 123459876)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!45 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!46 = !DIGlobalVariable(name: "IQ", scope: !0, file: !11, line: 48, type: !44, isLocal: true, isDefinition: true, variable: i64 127773)
!47 = !DIGlobalVariable(name: "IA", scope: !0, file: !11, line: 45, type: !44, isLocal: true, isDefinition: true, variable: i64 16807)
!48 = !DIGlobalVariable(name: "IR", scope: !0, file: !11, line: 49, type: !44, isLocal: true, isDefinition: true, variable: i64 2836)
!49 = !DIGlobalVariable(name: "IM", scope: !0, file: !11, line: 46, type: !44, isLocal: true, isDefinition: true, variable: i64 2147483647)
!50 = !DIGlobalVariable(name: "AM", scope: !0, file: !11, line: 47, type: !51, isLocal: true, isDefinition: true, variable: double 0x3E00000000200FE1)
!51 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!52 = !DIGlobalVariable(name: "seed", scope: !0, file: !11, line: 44, type: !45, isLocal: true, isDefinition: true, variable: i64* @seed)
!53 = !{i32 2, !"Dwarf Version", i32 4}
!54 = !{i32 2, !"Debug Info Version", i32 3}
!55 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!56 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !10, file: !11, line: 92, type: !4)
!57 = !DIExpression()
!58 = !DILocation(line: 92, column: 22, scope: !10)
!59 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 2, scope: !10, file: !11, line: 92, type: !5)
!60 = !DILocation(line: 92, column: 33, scope: !10)
!61 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !10, file: !11, line: 94, type: !8)
!62 = !DILocation(line: 94, column: 7, scope: !10)
!63 = !DILocation(line: 96, column: 8, scope: !64)
!64 = distinct !DILexicalBlock(scope: !10, file: !11, line: 96, column: 3)
!65 = !DILocation(line: 96, column: 17, scope: !66)
!66 = distinct !DILexicalBlock(scope: !64, file: !11, line: 96, column: 3)
!67 = !DILocation(line: 96, column: 3, scope: !64)
!68 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !10, file: !11, line: 94, type: !8)
!69 = !DILocation(line: 94, column: 10, scope: !10)
!70 = !DILocation(line: 97, column: 10, scope: !71)
!71 = distinct !DILexicalBlock(scope: !66, file: !11, line: 97, column: 5)
!72 = !DILocation(line: 97, column: 19, scope: !73)
!73 = distinct !DILexicalBlock(scope: !71, file: !11, line: 97, column: 5)
!74 = !DILocation(line: 97, column: 5, scope: !71)
!75 = !DILocation(line: 98, column: 17, scope: !73)
!76 = !DILocation(line: 98, column: 7, scope: !73)
!77 = !DILocation(line: 98, column: 15, scope: !73)
!78 = !DILocation(line: 97, column: 25, scope: !73)
!79 = !DILocation(line: 97, column: 5, scope: !73)
!80 = !DILocation(line: 98, column: 31, scope: !71)
!81 = !DILocation(line: 96, column: 23, scope: !66)
!82 = !DILocation(line: 96, column: 3, scope: !66)
!83 = !DILocation(line: 100, column: 3, scope: !84)
!84 = distinct !DILexicalBlock(scope: !10, file: !11, line: 100, column: 3)
!85 = !DILocation(line: 100, column: 8, scope: !84)
!86 = !DILocation(line: 100, column: 17, scope: !87)
!87 = distinct !DILexicalBlock(scope: !84, file: !11, line: 100, column: 3)
!88 = !DILocation(line: 101, column: 5, scope: !87)
!89 = !DILocation(line: 101, column: 10, scope: !87)
!90 = !DILocation(line: 100, column: 23, scope: !87)
!91 = !DILocation(line: 100, column: 3, scope: !87)
!92 = !DILocation(line: 103, column: 8, scope: !93)
!93 = distinct !DILexicalBlock(scope: !10, file: !11, line: 103, column: 3)
!94 = !DILocation(line: 103, column: 17, scope: !95)
!95 = distinct !DILexicalBlock(scope: !93, file: !11, line: 103, column: 3)
!96 = !DILocation(line: 103, column: 3, scope: !93)
!97 = !DILocation(line: 104, column: 10, scope: !98)
!98 = distinct !DILexicalBlock(scope: !95, file: !11, line: 104, column: 5)
!99 = !DILocation(line: 104, column: 19, scope: !100)
!100 = distinct !DILexicalBlock(scope: !98, file: !11, line: 104, column: 5)
!101 = !DILocation(line: 104, column: 5, scope: !98)
!102 = !DILocation(line: 105, column: 15, scope: !100)
!103 = !DILocation(line: 105, column: 7, scope: !100)
!104 = !DILocation(line: 105, column: 12, scope: !100)
!105 = !DILocation(line: 104, column: 25, scope: !100)
!106 = !DILocation(line: 104, column: 5, scope: !100)
!107 = !DILocation(line: 105, column: 21, scope: !98)
!108 = !DILocation(line: 103, column: 23, scope: !95)
!109 = !DILocation(line: 103, column: 3, scope: !95)
!110 = !DILocation(line: 106, column: 1, scope: !10)
!111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !14, file: !11, line: 109, type: !8)
!112 = !DILocation(line: 109, column: 16, scope: !14)
!113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx", arg: 2, scope: !14, file: !11, line: 109, type: !5)
!114 = !DILocation(line: 109, column: 27, scope: !14)
!115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx_off", arg: 3, scope: !14, file: !11, line: 109, type: !8)
!116 = !DILocation(line: 109, column: 35, scope: !14)
!117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "incx", arg: 4, scope: !14, file: !11, line: 109, type: !8)
!118 = !DILocation(line: 109, column: 47, scope: !14)
!119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "itemp", scope: !14, file: !11, line: 111, type: !8)
!120 = !DILocation(line: 111, column: 14, scope: !14)
!121 = !DILocation(line: 113, column: 9, scope: !122)
!122 = distinct !DILexicalBlock(scope: !14, file: !11, line: 113, column: 7)
!123 = !DILocation(line: 113, column: 7, scope: !14)
!124 = !DILocation(line: 114, column: 5, scope: !122)
!125 = !DILocation(line: 116, column: 11, scope: !126)
!126 = distinct !DILexicalBlock(scope: !127, file: !11, line: 116, column: 9)
!127 = distinct !DILexicalBlock(scope: !122, file: !11, line: 115, column: 8)
!128 = !DILocation(line: 116, column: 9, scope: !127)
!129 = !DILocation(line: 117, column: 7, scope: !126)
!130 = !DILocation(line: 119, column: 16, scope: !131)
!131 = distinct !DILexicalBlock(scope: !132, file: !11, line: 119, column: 11)
!132 = distinct !DILexicalBlock(scope: !126, file: !11, line: 118, column: 10)
!133 = !DILocation(line: 119, column: 11, scope: !132)
!134 = !DILocation(line: 121, column: 21, scope: !135)
!135 = distinct !DILexicalBlock(scope: !131, file: !11, line: 119, column: 22)
!136 = !DILocation(line: 121, column: 16, scope: !135)
!137 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dmax", scope: !14, file: !11, line: 110, type: !6)
!138 = !DILocation(line: 110, column: 10, scope: !14)
!139 = !DILocation(line: 122, column: 16, scope: !135)
!140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ix", scope: !14, file: !11, line: 111, type: !8)
!141 = !DILocation(line: 111, column: 10, scope: !14)
!142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !14, file: !11, line: 111, type: !8)
!143 = !DILocation(line: 111, column: 7, scope: !14)
!144 = !DILocation(line: 124, column: 9, scope: !145)
!145 = distinct !DILexicalBlock(scope: !135, file: !11, line: 124, column: 9)
!146 = !DILocation(line: 124, column: 14, scope: !145)
!147 = !DILocation(line: 124, column: 23, scope: !148)
!148 = distinct !DILexicalBlock(scope: !145, file: !11, line: 124, column: 9)
!149 = !DILocation(line: 125, column: 30, scope: !150)
!150 = distinct !DILexicalBlock(scope: !148, file: !11, line: 124, column: 33)
!151 = !DILocation(line: 125, column: 24, scope: !150)
!152 = !DILocation(line: 125, column: 19, scope: !150)
!153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dtemp", scope: !14, file: !11, line: 110, type: !6)
!154 = !DILocation(line: 110, column: 16, scope: !14)
!155 = !DILocation(line: 127, column: 21, scope: !156)
!156 = distinct !DILexicalBlock(scope: !150, file: !11, line: 127, column: 15)
!157 = !DILocation(line: 127, column: 15, scope: !150)
!158 = !DILocation(line: 130, column: 11, scope: !159)
!159 = distinct !DILexicalBlock(scope: !156, file: !11, line: 127, column: 29)
!160 = !DILocation(line: 132, column: 14, scope: !150)
!161 = !DILocation(line: 133, column: 9, scope: !150)
!162 = !DILocation(line: 124, column: 29, scope: !148)
!163 = !DILocation(line: 124, column: 9, scope: !148)
!164 = !DILocation(line: 134, column: 7, scope: !135)
!165 = !DILocation(line: 137, column: 21, scope: !166)
!166 = distinct !DILexicalBlock(scope: !131, file: !11, line: 134, column: 14)
!167 = !DILocation(line: 137, column: 16, scope: !166)
!168 = !DILocation(line: 139, column: 9, scope: !169)
!169 = distinct !DILexicalBlock(scope: !166, file: !11, line: 139, column: 9)
!170 = !DILocation(line: 139, column: 14, scope: !169)
!171 = !DILocation(line: 139, column: 23, scope: !172)
!172 = distinct !DILexicalBlock(scope: !169, file: !11, line: 139, column: 9)
!173 = !DILocation(line: 140, column: 29, scope: !174)
!174 = distinct !DILexicalBlock(scope: !172, file: !11, line: 139, column: 33)
!175 = !DILocation(line: 140, column: 24, scope: !174)
!176 = !DILocation(line: 140, column: 19, scope: !174)
!177 = !DILocation(line: 142, column: 21, scope: !178)
!178 = distinct !DILexicalBlock(scope: !174, file: !11, line: 142, column: 15)
!179 = !DILocation(line: 142, column: 15, scope: !174)
!180 = !DILocation(line: 145, column: 11, scope: !181)
!181 = distinct !DILexicalBlock(scope: !178, file: !11, line: 142, column: 29)
!182 = !DILocation(line: 146, column: 9, scope: !174)
!183 = !DILocation(line: 139, column: 29, scope: !172)
!184 = !DILocation(line: 139, column: 9, scope: !172)
!185 = !DILocation(line: 151, column: 3, scope: !14)
!186 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !17, file: !11, line: 187, type: !8)
!187 = !DILocation(line: 187, column: 16, scope: !17)
!188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "da", arg: 2, scope: !17, file: !11, line: 187, type: !6)
!189 = !DILocation(line: 187, column: 26, scope: !17)
!190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx", arg: 3, scope: !17, file: !11, line: 187, type: !5)
!191 = !DILocation(line: 187, column: 38, scope: !17)
!192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx_off", arg: 4, scope: !17, file: !11, line: 187, type: !8)
!193 = !DILocation(line: 187, column: 46, scope: !17)
!194 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "incx", arg: 5, scope: !17, file: !11, line: 187, type: !8)
!195 = !DILocation(line: 187, column: 58, scope: !17)
!196 = !DILocation(line: 190, column: 9, scope: !197)
!197 = distinct !DILexicalBlock(scope: !17, file: !11, line: 190, column: 7)
!198 = !DILocation(line: 190, column: 7, scope: !17)
!199 = !DILocation(line: 191, column: 14, scope: !200)
!200 = distinct !DILexicalBlock(scope: !201, file: !11, line: 191, column: 9)
!201 = distinct !DILexicalBlock(scope: !197, file: !11, line: 190, column: 14)
!202 = !DILocation(line: 191, column: 9, scope: !201)
!203 = !DILocation(line: 193, column: 21, scope: !204)
!204 = distinct !DILexicalBlock(scope: !200, file: !11, line: 191, column: 20)
!205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nincx", scope: !204, file: !11, line: 193, type: !8)
!206 = !DILocation(line: 193, column: 11, scope: !204)
!207 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !17, file: !11, line: 188, type: !8)
!208 = !DILocation(line: 188, column: 7, scope: !17)
!209 = !DILocation(line: 195, column: 12, scope: !210)
!210 = distinct !DILexicalBlock(scope: !204, file: !11, line: 195, column: 7)
!211 = !DILocation(line: 195, column: 21, scope: !212)
!212 = distinct !DILexicalBlock(scope: !210, file: !11, line: 195, column: 7)
!213 = !DILocation(line: 195, column: 7, scope: !210)
!214 = !DILocation(line: 196, column: 14, scope: !212)
!215 = !DILocation(line: 196, column: 9, scope: !212)
!216 = !DILocation(line: 196, column: 24, scope: !212)
!217 = !DILocation(line: 195, column: 32, scope: !212)
!218 = !DILocation(line: 195, column: 7, scope: !212)
!219 = !DILocation(line: 197, column: 5, scope: !204)
!220 = !DILocation(line: 199, column: 7, scope: !221)
!221 = distinct !DILexicalBlock(scope: !222, file: !11, line: 199, column: 7)
!222 = distinct !DILexicalBlock(scope: !200, file: !11, line: 197, column: 12)
!223 = !DILocation(line: 199, column: 12, scope: !221)
!224 = !DILocation(line: 199, column: 21, scope: !225)
!225 = distinct !DILexicalBlock(scope: !221, file: !11, line: 199, column: 7)
!226 = !DILocation(line: 200, column: 14, scope: !225)
!227 = !DILocation(line: 200, column: 9, scope: !225)
!228 = !DILocation(line: 200, column: 24, scope: !225)
!229 = !DILocation(line: 199, column: 27, scope: !225)
!230 = !DILocation(line: 199, column: 7, scope: !225)
!231 = !DILocation(line: 202, column: 3, scope: !201)
!232 = !DILocation(line: 203, column: 1, scope: !17)
!233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !20, file: !11, line: 206, type: !8)
!234 = !DILocation(line: 206, column: 16, scope: !20)
!235 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "da", arg: 2, scope: !20, file: !11, line: 206, type: !6)
!236 = !DILocation(line: 206, column: 26, scope: !20)
!237 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx", arg: 3, scope: !20, file: !11, line: 206, type: !5)
!238 = !DILocation(line: 206, column: 38, scope: !20)
!239 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dx_off", arg: 4, scope: !20, file: !11, line: 206, type: !8)
!240 = !DILocation(line: 206, column: 46, scope: !20)
!241 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "incx", arg: 5, scope: !20, file: !11, line: 206, type: !8)
!242 = !DILocation(line: 206, column: 58, scope: !20)
!243 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dy", arg: 6, scope: !20, file: !11, line: 206, type: !5)
!244 = !DILocation(line: 206, column: 72, scope: !20)
!245 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dy_off", arg: 7, scope: !20, file: !11, line: 206, type: !8)
!246 = !DILocation(line: 206, column: 80, scope: !20)
!247 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "incy", arg: 8, scope: !20, file: !11, line: 206, type: !8)
!248 = !DILocation(line: 206, column: 92, scope: !20)
!249 = !DILocation(line: 209, column: 10, scope: !250)
!250 = distinct !DILexicalBlock(scope: !20, file: !11, line: 209, column: 7)
!251 = !DILocation(line: 209, column: 15, scope: !250)
!252 = !DILocation(line: 209, column: 22, scope: !250)
!253 = !DILocation(line: 209, column: 7, scope: !20)
!254 = !DILocation(line: 210, column: 14, scope: !255)
!255 = distinct !DILexicalBlock(scope: !256, file: !11, line: 210, column: 9)
!256 = distinct !DILexicalBlock(scope: !250, file: !11, line: 209, column: 29)
!257 = !DILocation(line: 210, column: 19, scope: !255)
!258 = !DILocation(line: 210, column: 27, scope: !255)
!259 = !DILocation(line: 210, column: 9, scope: !256)
!260 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ix", scope: !261, file: !11, line: 212, type: !8)
!261 = distinct !DILexicalBlock(scope: !255, file: !11, line: 210, column: 33)
!262 = !DILocation(line: 212, column: 11, scope: !261)
!263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iy", scope: !261, file: !11, line: 213, type: !8)
!264 = !DILocation(line: 213, column: 11, scope: !261)
!265 = !DILocation(line: 215, column: 16, scope: !266)
!266 = distinct !DILexicalBlock(scope: !261, file: !11, line: 215, column: 11)
!267 = !DILocation(line: 215, column: 11, scope: !261)
!268 = !DILocation(line: 216, column: 17, scope: !266)
!269 = !DILocation(line: 216, column: 22, scope: !266)
!270 = !DILocation(line: 216, column: 9, scope: !266)
!271 = !DILocation(line: 218, column: 16, scope: !272)
!272 = distinct !DILexicalBlock(scope: !261, file: !11, line: 218, column: 11)
!273 = !DILocation(line: 218, column: 11, scope: !261)
!274 = !DILocation(line: 219, column: 17, scope: !272)
!275 = !DILocation(line: 219, column: 22, scope: !272)
!276 = !DILocation(line: 219, column: 9, scope: !272)
!277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !20, file: !11, line: 207, type: !8)
!278 = !DILocation(line: 207, column: 7, scope: !20)
!279 = !DILocation(line: 221, column: 7, scope: !280)
!280 = distinct !DILexicalBlock(scope: !261, file: !11, line: 221, column: 7)
!281 = !DILocation(line: 221, column: 12, scope: !280)
!282 = !DILocation(line: 221, column: 21, scope: !283)
!283 = distinct !DILexicalBlock(scope: !280, file: !11, line: 221, column: 7)
!284 = !DILocation(line: 222, column: 39, scope: !285)
!285 = distinct !DILexicalBlock(scope: !283, file: !11, line: 221, column: 31)
!286 = !DILocation(line: 222, column: 33, scope: !285)
!287 = !DILocation(line: 222, column: 31, scope: !285)
!288 = !DILocation(line: 222, column: 15, scope: !285)
!289 = !DILocation(line: 222, column: 9, scope: !285)
!290 = !DILocation(line: 222, column: 25, scope: !285)
!291 = !DILocation(line: 223, column: 12, scope: !285)
!292 = !DILocation(line: 224, column: 12, scope: !285)
!293 = !DILocation(line: 225, column: 7, scope: !285)
!294 = !DILocation(line: 221, column: 27, scope: !283)
!295 = !DILocation(line: 221, column: 7, scope: !283)
!296 = !DILocation(line: 227, column: 7, scope: !261)
!297 = !DILocation(line: 230, column: 7, scope: !298)
!298 = distinct !DILexicalBlock(scope: !299, file: !11, line: 230, column: 7)
!299 = distinct !DILexicalBlock(scope: !255, file: !11, line: 228, column: 12)
!300 = !DILocation(line: 230, column: 12, scope: !298)
!301 = !DILocation(line: 230, column: 21, scope: !302)
!302 = distinct !DILexicalBlock(scope: !298, file: !11, line: 230, column: 7)
!303 = !DILocation(line: 231, column: 37, scope: !302)
!304 = !DILocation(line: 231, column: 32, scope: !302)
!305 = !DILocation(line: 231, column: 30, scope: !302)
!306 = !DILocation(line: 231, column: 14, scope: !302)
!307 = !DILocation(line: 231, column: 9, scope: !302)
!308 = !DILocation(line: 231, column: 24, scope: !302)
!309 = !DILocation(line: 230, column: 27, scope: !302)
!310 = !DILocation(line: 230, column: 7, scope: !302)
!311 = !DILocation(line: 233, column: 3, scope: !256)
!312 = !DILocation(line: 234, column: 1, scope: !20)
!313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !23, file: !11, line: 237, type: !4)
!314 = !DILocation(line: 237, column: 21, scope: !23)
!315 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ipvt", arg: 2, scope: !23, file: !11, line: 237, type: !7)
!316 = !DILocation(line: 237, column: 29, scope: !23)
!317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !23, file: !11, line: 239, type: !8)
!318 = !DILocation(line: 239, column: 7, scope: !23)
!319 = !DILocation(line: 241, column: 8, scope: !320)
!320 = distinct !DILexicalBlock(scope: !23, file: !11, line: 241, column: 3)
!321 = !DILocation(line: 241, column: 17, scope: !322)
!322 = distinct !DILexicalBlock(scope: !320, file: !11, line: 241, column: 3)
!323 = !DILocation(line: 241, column: 3, scope: !320)
!324 = !DILocation(line: 242, column: 21, scope: !325)
!325 = distinct !DILexicalBlock(scope: !322, file: !11, line: 241, column: 29)
!326 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "col_k", scope: !325, file: !11, line: 242, type: !5)
!327 = !DILocation(line: 242, column: 13, scope: !325)
!328 = !DILocation(line: 243, column: 17, scope: !325)
!329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kp1", scope: !325, file: !11, line: 243, type: !8)
!330 = !DILocation(line: 243, column: 9, scope: !325)
!331 = !DILocation(line: 246, column: 22, scope: !325)
!332 = !DILocation(line: 246, column: 13, scope: !325)
!333 = !DILocation(line: 246, column: 40, scope: !325)
!334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !325, file: !11, line: 246, type: !8)
!335 = !DILocation(line: 246, column: 9, scope: !325)
!336 = !DILocation(line: 247, column: 5, scope: !325)
!337 = !DILocation(line: 247, column: 13, scope: !325)
!338 = !DILocation(line: 250, column: 9, scope: !339)
!339 = distinct !DILexicalBlock(scope: !325, file: !11, line: 250, column: 9)
!340 = !DILocation(line: 250, column: 18, scope: !339)
!341 = !DILocation(line: 250, column: 9, scope: !325)
!342 = !DILocation(line: 252, column: 13, scope: !343)
!343 = distinct !DILexicalBlock(scope: !344, file: !11, line: 252, column: 11)
!344 = distinct !DILexicalBlock(scope: !339, file: !11, line: 250, column: 24)
!345 = !DILocation(line: 252, column: 11, scope: !344)
!346 = !DILocation(line: 253, column: 16, scope: !347)
!347 = distinct !DILexicalBlock(scope: !343, file: !11, line: 252, column: 19)
!348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !23, file: !11, line: 238, type: !6)
!349 = !DILocation(line: 238, column: 10, scope: !23)
!350 = !DILocation(line: 254, column: 20, scope: !347)
!351 = !DILocation(line: 254, column: 9, scope: !347)
!352 = !DILocation(line: 254, column: 18, scope: !347)
!353 = !DILocation(line: 255, column: 9, scope: !347)
!354 = !DILocation(line: 255, column: 18, scope: !347)
!355 = !DILocation(line: 256, column: 7, scope: !347)
!356 = !DILocation(line: 259, column: 21, scope: !344)
!357 = !DILocation(line: 259, column: 19, scope: !344)
!358 = !DILocation(line: 260, column: 15, scope: !344)
!359 = !DILocation(line: 260, column: 7, scope: !344)
!360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !11, line: 239, type: !8)
!361 = !DILocation(line: 239, column: 10, scope: !23)
!362 = !DILocation(line: 263, column: 12, scope: !363)
!363 = distinct !DILexicalBlock(scope: !344, file: !11, line: 263, column: 7)
!364 = !DILocation(line: 263, column: 23, scope: !365)
!365 = distinct !DILexicalBlock(scope: !363, file: !11, line: 263, column: 7)
!366 = !DILocation(line: 263, column: 7, scope: !363)
!367 = !DILocation(line: 264, column: 25, scope: !368)
!368 = distinct !DILexicalBlock(scope: !365, file: !11, line: 263, column: 33)
!369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "col_j", scope: !368, file: !11, line: 264, type: !5)
!370 = !DILocation(line: 264, column: 17, scope: !368)
!371 = !DILocation(line: 265, column: 16, scope: !368)
!372 = !DILocation(line: 267, column: 15, scope: !373)
!373 = distinct !DILexicalBlock(scope: !368, file: !11, line: 267, column: 13)
!374 = !DILocation(line: 267, column: 13, scope: !368)
!375 = !DILocation(line: 268, column: 22, scope: !376)
!376 = distinct !DILexicalBlock(scope: !373, file: !11, line: 267, column: 21)
!377 = !DILocation(line: 268, column: 11, scope: !376)
!378 = !DILocation(line: 268, column: 20, scope: !376)
!379 = !DILocation(line: 269, column: 11, scope: !376)
!380 = !DILocation(line: 269, column: 20, scope: !376)
!381 = !DILocation(line: 270, column: 9, scope: !376)
!382 = !DILocation(line: 272, column: 17, scope: !368)
!383 = !DILocation(line: 272, column: 9, scope: !368)
!384 = !DILocation(line: 273, column: 7, scope: !368)
!385 = !DILocation(line: 263, column: 29, scope: !365)
!386 = !DILocation(line: 263, column: 7, scope: !365)
!387 = !DILocation(line: 274, column: 5, scope: !344)
!388 = !DILocation(line: 275, column: 3, scope: !325)
!389 = !DILocation(line: 241, column: 25, scope: !322)
!390 = !DILocation(line: 241, column: 3, scope: !322)
!391 = !DILocation(line: 277, column: 3, scope: !23)
!392 = !DILocation(line: 277, column: 15, scope: !23)
!393 = !DILocation(line: 278, column: 1, scope: !23)
!394 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !26, file: !11, line: 282, type: !4)
!395 = !DILocation(line: 282, column: 21, scope: !26)
!396 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ipvt", arg: 2, scope: !26, file: !11, line: 282, type: !7)
!397 = !DILocation(line: 282, column: 29, scope: !26)
!398 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !26, file: !11, line: 282, type: !5)
!399 = !DILocation(line: 282, column: 43, scope: !26)
!400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !26, file: !11, line: 284, type: !8)
!401 = !DILocation(line: 284, column: 7, scope: !26)
!402 = !DILocation(line: 287, column: 8, scope: !403)
!403 = distinct !DILexicalBlock(scope: !26, file: !11, line: 287, column: 3)
!404 = !DILocation(line: 287, column: 17, scope: !405)
!405 = distinct !DILexicalBlock(scope: !403, file: !11, line: 287, column: 3)
!406 = !DILocation(line: 287, column: 3, scope: !403)
!407 = !DILocation(line: 288, column: 13, scope: !408)
!408 = distinct !DILexicalBlock(scope: !405, file: !11, line: 287, column: 29)
!409 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !408, file: !11, line: 288, type: !8)
!410 = !DILocation(line: 288, column: 9, scope: !408)
!411 = !DILocation(line: 289, column: 9, scope: !408)
!412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !26, file: !11, line: 283, type: !6)
!413 = !DILocation(line: 283, column: 10, scope: !26)
!414 = !DILocation(line: 291, column: 11, scope: !415)
!415 = distinct !DILexicalBlock(scope: !408, file: !11, line: 291, column: 9)
!416 = !DILocation(line: 291, column: 9, scope: !408)
!417 = !DILocation(line: 292, column: 14, scope: !418)
!418 = distinct !DILexicalBlock(scope: !415, file: !11, line: 291, column: 17)
!419 = !DILocation(line: 292, column: 7, scope: !418)
!420 = !DILocation(line: 292, column: 12, scope: !418)
!421 = !DILocation(line: 293, column: 7, scope: !418)
!422 = !DILocation(line: 293, column: 12, scope: !418)
!423 = !DILocation(line: 294, column: 5, scope: !418)
!424 = !DILocation(line: 296, column: 17, scope: !408)
!425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kp1", scope: !408, file: !11, line: 296, type: !8)
!426 = !DILocation(line: 296, column: 9, scope: !408)
!427 = !DILocation(line: 297, column: 13, scope: !408)
!428 = !DILocation(line: 297, column: 23, scope: !408)
!429 = !DILocation(line: 297, column: 5, scope: !408)
!430 = !DILocation(line: 298, column: 3, scope: !408)
!431 = !DILocation(line: 287, column: 25, scope: !405)
!432 = !DILocation(line: 287, column: 3, scope: !405)
!433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kb", scope: !26, file: !11, line: 284, type: !8)
!434 = !DILocation(line: 284, column: 10, scope: !26)
!435 = !DILocation(line: 301, column: 8, scope: !436)
!436 = distinct !DILexicalBlock(scope: !26, file: !11, line: 301, column: 3)
!437 = !DILocation(line: 301, column: 19, scope: !438)
!438 = distinct !DILexicalBlock(scope: !436, file: !11, line: 301, column: 3)
!439 = !DILocation(line: 301, column: 3, scope: !436)
!440 = !DILocation(line: 302, column: 17, scope: !441)
!441 = distinct !DILexicalBlock(scope: !438, file: !11, line: 301, column: 30)
!442 = !DILocation(line: 302, column: 11, scope: !441)
!443 = !DILocation(line: 303, column: 13, scope: !441)
!444 = !DILocation(line: 303, column: 5, scope: !441)
!445 = !DILocation(line: 303, column: 10, scope: !441)
!446 = !DILocation(line: 304, column: 10, scope: !441)
!447 = !DILocation(line: 304, column: 9, scope: !441)
!448 = !DILocation(line: 305, column: 17, scope: !441)
!449 = !DILocation(line: 305, column: 5, scope: !441)
!450 = !DILocation(line: 306, column: 3, scope: !441)
!451 = !DILocation(line: 301, column: 26, scope: !438)
!452 = !DILocation(line: 301, column: 3, scope: !438)
!453 = !DILocation(line: 307, column: 1, scope: !26)
!454 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !29, file: !11, line: 309, type: !8)
!455 = !DILocation(line: 309, column: 14, scope: !29)
!456 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !29, file: !11, line: 309, type: !32)
!457 = !DILocation(line: 309, column: 27, scope: !29)
!458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ga_testing", scope: !29, file: !11, line: 313, type: !459)
!459 = !DIBasicType(name: "_Bool", size: 8, align: 8, encoding: DW_ATE_boolean)
!460 = !DILocation(line: 313, column: 8, scope: !29)
!461 = !DILocation(line: 315, column: 12, scope: !462)
!462 = distinct !DILexicalBlock(scope: !29, file: !11, line: 315, column: 7)
!463 = !DILocation(line: 315, column: 7, scope: !29)
!464 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !29, file: !11, line: 310, type: !8)
!465 = !DILocation(line: 310, column: 7, scope: !29)
!466 = !DILocation(line: 316, column: 10, scope: !467)
!467 = distinct !DILexicalBlock(scope: !468, file: !11, line: 316, column: 5)
!468 = distinct !DILexicalBlock(scope: !462, file: !11, line: 315, column: 17)
!469 = !DILocation(line: 316, column: 19, scope: !470)
!470 = distinct !DILexicalBlock(scope: !467, file: !11, line: 316, column: 5)
!471 = !DILocation(line: 316, column: 5, scope: !467)
!472 = !DILocation(line: 317, column: 19, scope: !473)
!473 = distinct !DILexicalBlock(scope: !474, file: !11, line: 317, column: 11)
!474 = distinct !DILexicalBlock(scope: !470, file: !11, line: 316, column: 32)
!475 = !DILocation(line: 317, column: 12, scope: !473)
!476 = !DILocation(line: 317, column: 11, scope: !474)
!477 = !DILocation(line: 319, column: 9, scope: !478)
!478 = distinct !DILexicalBlock(scope: !473, file: !11, line: 317, column: 36)
!479 = !DILocation(line: 321, column: 5, scope: !474)
!480 = !DILocation(line: 316, column: 27, scope: !470)
!481 = !DILocation(line: 316, column: 5, scope: !470)
!482 = !DILocation(line: 322, column: 3, scope: !468)
!483 = !DILocation(line: 324, column: 27, scope: !29)
!484 = !DILocation(line: 324, column: 16, scope: !29)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !29, file: !11, line: 324, type: !4)
!486 = !DILocation(line: 324, column: 12, scope: !29)
!487 = !DILocation(line: 326, column: 8, scope: !488)
!488 = distinct !DILexicalBlock(scope: !29, file: !11, line: 326, column: 3)
!489 = !DILocation(line: 326, column: 17, scope: !490)
!490 = distinct !DILexicalBlock(scope: !488, file: !11, line: 326, column: 3)
!491 = !DILocation(line: 326, column: 3, scope: !488)
!492 = !DILocation(line: 327, column: 22, scope: !490)
!493 = !DILocation(line: 327, column: 12, scope: !490)
!494 = !DILocation(line: 327, column: 5, scope: !490)
!495 = !DILocation(line: 327, column: 10, scope: !490)
!496 = !DILocation(line: 326, column: 22, scope: !490)
!497 = !DILocation(line: 326, column: 3, scope: !490)
!498 = !DILocation(line: 329, column: 25, scope: !29)
!499 = !DILocation(line: 329, column: 15, scope: !29)
!500 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !29, file: !11, line: 329, type: !5)
!501 = !DILocation(line: 329, column: 11, scope: !29)
!502 = !DILocation(line: 330, column: 25, scope: !29)
!503 = !DILocation(line: 330, column: 15, scope: !29)
!504 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !29, file: !11, line: 330, type: !5)
!505 = !DILocation(line: 330, column: 11, scope: !29)
!506 = !DILocation(line: 331, column: 22, scope: !29)
!507 = !DILocation(line: 331, column: 15, scope: !29)
!508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ipvt", scope: !29, file: !11, line: 331, type: !7)
!509 = !DILocation(line: 331, column: 8, scope: !29)
!510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ops", scope: !29, file: !11, line: 334, type: !6)
!511 = !DILocation(line: 334, column: 10, scope: !29)
!512 = !DILocation(line: 337, column: 3, scope: !29)
!513 = !DILocation(line: 344, column: 3, scope: !29)
!514 = !DILocation(line: 345, column: 3, scope: !29)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "run_time", scope: !29, file: !11, line: 349, type: !6)
!516 = !DILocation(line: 349, column: 10, scope: !29)
!517 = !DILocation(line: 352, column: 8, scope: !29)
!518 = !DILocation(line: 352, column: 3, scope: !29)
!519 = !DILocation(line: 353, column: 8, scope: !29)
!520 = !DILocation(line: 353, column: 3, scope: !29)
!521 = !DILocation(line: 354, column: 8, scope: !29)
!522 = !DILocation(line: 354, column: 3, scope: !29)
!523 = !DILocation(line: 356, column: 8, scope: !524)
!524 = distinct !DILexicalBlock(scope: !29, file: !11, line: 356, column: 3)
!525 = !DILocation(line: 356, column: 17, scope: !526)
!526 = distinct !DILexicalBlock(scope: !524, file: !11, line: 356, column: 3)
!527 = !DILocation(line: 356, column: 3, scope: !524)
!528 = !DILocation(line: 357, column: 10, scope: !526)
!529 = !DILocation(line: 357, column: 5, scope: !526)
!530 = !DILocation(line: 356, column: 22, scope: !526)
!531 = !DILocation(line: 356, column: 3, scope: !526)
!532 = !DILocation(line: 359, column: 8, scope: !29)
!533 = !DILocation(line: 359, column: 3, scope: !29)
!534 = !DILocation(line: 362, column: 7, scope: !535)
!535 = distinct !DILexicalBlock(scope: !29, file: !11, line: 362, column: 7)
!536 = !DILocation(line: 362, column: 7, scope: !29)
!537 = !DILocation(line: 363, column: 13, scope: !535)
!538 = !DILocation(line: 363, column: 5, scope: !535)
!539 = !DILocation(line: 365, column: 13, scope: !535)
!540 = !DILocation(line: 365, column: 5, scope: !535)
!541 = !DILocation(line: 367, column: 10, scope: !29)
!542 = !DILocation(line: 367, column: 3, scope: !29)
!543 = !DILocation(line: 370, column: 3, scope: !29)
!544 = !DILocation(line: 56, column: 8, scope: !35)
!545 = !DILocation(line: 57, column: 7, scope: !35)
!546 = !DILocation(line: 57, column: 12, scope: !35)
!547 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !35, file: !11, line: 53, type: !45)
!548 = !DILocation(line: 53, column: 8, scope: !35)
!549 = !DILocation(line: 58, column: 16, scope: !35)
!550 = !DILocation(line: 58, column: 25, scope: !35)
!551 = !DILocation(line: 58, column: 21, scope: !35)
!552 = !DILocation(line: 58, column: 13, scope: !35)
!553 = !DILocation(line: 58, column: 36, scope: !35)
!554 = !DILocation(line: 58, column: 31, scope: !35)
!555 = !DILocation(line: 58, column: 8, scope: !35)
!556 = !DILocation(line: 60, column: 7, scope: !557)
!557 = distinct !DILexicalBlock(scope: !35, file: !11, line: 60, column: 7)
!558 = !DILocation(line: 60, column: 12, scope: !557)
!559 = !DILocation(line: 60, column: 7, scope: !35)
!560 = !DILocation(line: 61, column: 10, scope: !557)
!561 = !DILocation(line: 61, column: 5, scope: !557)
!562 = !DILocation(line: 63, column: 17, scope: !35)
!563 = !DILocation(line: 63, column: 15, scope: !35)
!564 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !35, file: !11, line: 54, type: !6)
!565 = !DILocation(line: 54, column: 10, scope: !35)
!566 = !DILocation(line: 64, column: 8, scope: !35)
!567 = !DILocation(line: 66, column: 3, scope: !35)
