; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.hypre_Vector = type { double*, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%le\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [25 x i8] c"hypre_assert failed: %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"hypre_VectorNumVectors(vector) == 1\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk/tmp.c\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"%d vectors of size %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"vector %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"%.14e\0A\00", align 1

; Function Attrs: nounwind uwtable
define %struct.hypre_Vector* @hypre_SeqVectorCreate(i32 %size) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !68, metadata !69), !dbg !70
  %call = call i8* @hypre_CAlloc(i32 1, i32 32), !dbg !71
  %tmp = bitcast i8* %call to %struct.hypre_Vector*, !dbg !71
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %tmp, i64 0, metadata !72, metadata !69), !dbg !73
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %tmp, i32 0, i32 0, !dbg !74
  store double* null, double** %data, align 8, !dbg !75
  %size1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %tmp, i32 0, i32 1, !dbg !76
  store i32 %size, i32* %size1, align 4, !dbg !77
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %tmp, i32 0, i32 3, !dbg !78
  store i32 1, i32* %num_vectors, align 4, !dbg !79
  %multivec_storage_method = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %tmp, i32 0, i32 4, !dbg !80
  store i32 0, i32* %multivec_storage_method, align 4, !dbg !81
  %owns_data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %tmp, i32 0, i32 2, !dbg !82
  store i32 1, i32* %owns_data, align 4, !dbg !83
  ret %struct.hypre_Vector* %tmp, !dbg !84
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i8* @hypre_CAlloc(i32, i32) #2

; Function Attrs: nounwind uwtable
define %struct.hypre_Vector* @hypre_SeqMultiVectorCreate(i32 %size, i32 %num_vectors) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !85, metadata !69), !dbg !86
  call void @llvm.dbg.value(metadata i32 %num_vectors, i64 0, metadata !87, metadata !69), !dbg !88
  %call = call %struct.hypre_Vector* @hypre_SeqVectorCreate(i32 %size), !dbg !89
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %call, i64 0, metadata !90, metadata !69), !dbg !91
  %num_vectors1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 3, !dbg !92
  store i32 %num_vectors, i32* %num_vectors1, align 4, !dbg !93
  ret %struct.hypre_Vector* %call, !dbg !94
}

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorDestroy(%struct.hypre_Vector* %vector) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %vector, i64 0, metadata !95, metadata !69), !dbg !96
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !97, metadata !69), !dbg !98
  %tobool = icmp ne %struct.hypre_Vector* %vector, null, !dbg !99
  br i1 %tobool, label %if.then, label %if.end.4, !dbg !101

if.then:                                          ; preds = %entry
  %owns_data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 2, !dbg !102
  %tmp2 = load i32, i32* %owns_data, align 4, !dbg !102
  %tobool1 = icmp ne i32 %tmp2, 0, !dbg !102
  br i1 %tobool1, label %if.then.2, label %if.end, !dbg !105

if.then.2:                                        ; preds = %if.then
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 0, !dbg !106
  %tmp4 = load double*, double** %data, align 8, !dbg !106
  %tmp5 = bitcast double* %tmp4 to i8*, !dbg !106
  call void @hypre_Free(i8* %tmp5), !dbg !106
  %data3 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 0, !dbg !106
  store double* null, double** %data3, align 8, !dbg !106
  br label %if.end, !dbg !108

if.end:                                           ; preds = %if.then.2, %if.then
  %tmp8 = bitcast %struct.hypre_Vector* %vector to i8*, !dbg !109
  call void @hypre_Free(i8* %tmp8), !dbg !109
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* null, i64 0, metadata !95, metadata !69), !dbg !96
  br label %if.end.4, !dbg !110

if.end.4:                                         ; preds = %if.end, %entry
  ret i32 0, !dbg !111
}

declare void @hypre_Free(i8*) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorInitialize(%struct.hypre_Vector* %vector) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %vector, i64 0, metadata !112, metadata !69), !dbg !113
  %size1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 1, !dbg !114
  %tmp1 = load i32, i32* %size1, align 4, !dbg !114
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !115, metadata !69), !dbg !116
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !117, metadata !69), !dbg !118
  %num_vectors2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 3, !dbg !119
  %tmp3 = load i32, i32* %num_vectors2, align 4, !dbg !119
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !120, metadata !69), !dbg !121
  %multivec_storage_method3 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 4, !dbg !122
  %tmp5 = load i32, i32* %multivec_storage_method3, align 4, !dbg !122
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !123, metadata !69), !dbg !124
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 0, !dbg !125
  %tmp7 = load double*, double** %data, align 8, !dbg !125
  %tobool = icmp ne double* %tmp7, null, !dbg !125
  br i1 %tobool, label %if.end, label %if.then, !dbg !127

if.then:                                          ; preds = %entry
  %mul = mul nsw i32 %tmp3, %tmp1, !dbg !128
  %call = call i8* @hypre_CAlloc(i32 %mul, i32 8), !dbg !128
  %tmp10 = bitcast i8* %call to double*, !dbg !128
  %data4 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 0, !dbg !129
  store double* %tmp10, double** %data4, align 8, !dbg !130
  br label %if.end, !dbg !129

if.end:                                           ; preds = %if.then, %entry
  %cmp = icmp eq i32 %tmp5, 0, !dbg !131
  br i1 %cmp, label %if.then.5, label %if.else, !dbg !133

if.then.5:                                        ; preds = %if.end
  %vecstride = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 5, !dbg !134
  store i32 %tmp1, i32* %vecstride, align 4, !dbg !136
  %idxstride = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 6, !dbg !137
  store i32 1, i32* %idxstride, align 4, !dbg !138
  br label %if.end.12, !dbg !139

if.else:                                          ; preds = %if.end
  %cmp6 = icmp eq i32 %tmp5, 1, !dbg !140
  br i1 %cmp6, label %if.then.7, label %if.else.10, !dbg !142

if.then.7:                                        ; preds = %if.else
  %vecstride8 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 5, !dbg !143
  store i32 1, i32* %vecstride8, align 4, !dbg !145
  %idxstride9 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 6, !dbg !146
  store i32 %tmp3, i32* %idxstride9, align 4, !dbg !147
  br label %if.end.11, !dbg !148

if.else.10:                                       ; preds = %if.else
  %inc = add nsw i32 0, 1, !dbg !149
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !117, metadata !69), !dbg !118
  br label %if.end.11

if.end.11:                                        ; preds = %if.else.10, %if.then.7
  %ierr.0 = phi i32 [ 0, %if.then.7 ], [ %inc, %if.else.10 ]
  br label %if.end.12

if.end.12:                                        ; preds = %if.end.11, %if.then.5
  %ierr.1 = phi i32 [ 0, %if.then.5 ], [ %ierr.0, %if.end.11 ]
  ret i32 %ierr.1, !dbg !150
}

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorSetDataOwner(%struct.hypre_Vector* %vector, i32 %owns_data) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %vector, i64 0, metadata !151, metadata !69), !dbg !152
  call void @llvm.dbg.value(metadata i32 %owns_data, i64 0, metadata !153, metadata !69), !dbg !154
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !155, metadata !69), !dbg !156
  %owns_data1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 2, !dbg !157
  store i32 %owns_data, i32* %owns_data1, align 4, !dbg !158
  ret i32 0, !dbg !159
}

; Function Attrs: nounwind uwtable
define %struct.hypre_Vector* @hypre_SeqVectorRead(i8* %file_name) #0 {
entry:
  %size = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %file_name, i64 0, metadata !160, metadata !69), !dbg !161
  call void @llvm.dbg.declare(metadata i32* %size, metadata !162, metadata !69), !dbg !163
  %call = call %struct._IO_FILE* @fopen(i8* %file_name, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !164
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !165, metadata !69), !dbg !226
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32* %size), !dbg !227
  %tmp2 = load i32, i32* %size, align 4, !dbg !228
  %call2 = call %struct.hypre_Vector* @hypre_SeqVectorCreate(i32 %tmp2), !dbg !229
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %call2, i64 0, metadata !230, metadata !69), !dbg !231
  %call3 = call i32 @hypre_SeqVectorInitialize(%struct.hypre_Vector* %call2), !dbg !232
  %data4 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call2, i32 0, i32 0, !dbg !233
  %tmp5 = load double*, double** %data4, align 8, !dbg !233
  call void @llvm.dbg.value(metadata double* %tmp5, i64 0, metadata !234, metadata !69), !dbg !235
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !236, metadata !69), !dbg !237
  br label %for.cond, !dbg !238

for.cond:                                         ; preds = %for.inc, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %tmp7 = load i32, i32* %size, align 4, !dbg !240
  %cmp = icmp slt i32 %j.0, %tmp7, !dbg !242
  br i1 %cmp, label %for.body, label %for.end, !dbg !243

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %j.0 to i64, !dbg !244
  %arrayidx = getelementptr inbounds double, double* %tmp5, i64 %idxprom, !dbg !244
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), double* %arrayidx), !dbg !246
  br label %for.inc, !dbg !247

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %j.0, 1, !dbg !248
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !236, metadata !69), !dbg !237
  br label %for.cond, !dbg !249

for.end:                                          ; preds = %for.cond
  %call6 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !250
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call2, i32 0, i32 3, !dbg !251
  %tmp14 = load i32, i32* %num_vectors, align 4, !dbg !251
  %cmp7 = icmp eq i32 %tmp14, 1, !dbg !251
  br i1 %cmp7, label %if.end, label %if.then, !dbg !253

if.then:                                          ; preds = %for.end
  %tmp15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !254
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp15, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i32 0, i32 0)), !dbg !254
  call void @hypre_error_handler(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i32 0, i32 0), i32 158, i32 1), !dbg !254
  br label %if.end, !dbg !254

if.end:                                           ; preds = %if.then, %for.end
  ret %struct.hypre_Vector* %call2, !dbg !257
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #2

declare i32 @fclose(%struct._IO_FILE*) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare void @hypre_error_handler(i8*, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorPrint(%struct.hypre_Vector* %vector, i8* %file_name) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %vector, i64 0, metadata !258, metadata !69), !dbg !259
  call void @llvm.dbg.value(metadata i8* %file_name, i64 0, metadata !260, metadata !69), !dbg !261
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !262, metadata !69), !dbg !263
  %num_vectors1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 3, !dbg !264
  %tmp1 = load i32, i32* %num_vectors1, align 4, !dbg !264
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !265, metadata !69), !dbg !266
  %vecstride2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 5, !dbg !267
  %tmp3 = load i32, i32* %vecstride2, align 4, !dbg !267
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !268, metadata !69), !dbg !269
  %idxstride3 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 6, !dbg !270
  %tmp5 = load i32, i32* %idxstride3, align 4, !dbg !270
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !271, metadata !69), !dbg !272
  %data4 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 0, !dbg !273
  %tmp7 = load double*, double** %data4, align 8, !dbg !273
  call void @llvm.dbg.value(metadata double* %tmp7, i64 0, metadata !274, metadata !69), !dbg !275
  %size5 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 1, !dbg !276
  %tmp9 = load i32, i32* %size5, align 4, !dbg !276
  call void @llvm.dbg.value(metadata i32 %tmp9, i64 0, metadata !277, metadata !69), !dbg !278
  %call = call %struct._IO_FILE* @fopen(i8* %file_name, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !279
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !280, metadata !69), !dbg !281
  %num_vectors6 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 3, !dbg !282
  %tmp12 = load i32, i32* %num_vectors6, align 4, !dbg !282
  %cmp = icmp eq i32 %tmp12, 1, !dbg !284
  br i1 %cmp, label %if.then, label %if.else, !dbg !285

if.then:                                          ; preds = %entry
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i32 %tmp9), !dbg !286
  br label %if.end, !dbg !288

if.else:                                          ; preds = %entry
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i32 0, i32 0), i32 %tmp1, i32 %tmp9), !dbg !289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %cmp9 = icmp sgt i32 %tmp1, 1, !dbg !291
  br i1 %cmp9, label %if.then.10, label %if.else.21, !dbg !293

if.then.10:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !294, metadata !69), !dbg !295
  br label %for.cond, !dbg !296

for.cond:                                         ; preds = %for.inc.18, %if.then.10
  %j.0 = phi i32 [ 0, %if.then.10 ], [ %inc19, %for.inc.18 ]
  %cmp11 = icmp slt i32 %j.0, %tmp1, !dbg !299
  br i1 %cmp11, label %for.body, label %for.end.20, !dbg !301

for.body:                                         ; preds = %for.cond
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i32 %j.0), !dbg !302
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !304, metadata !69), !dbg !305
  br label %for.cond.13, !dbg !306

for.cond.13:                                      ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp14 = icmp slt i32 %i.0, %tmp9, !dbg !308
  br i1 %cmp14, label %for.body.15, label %for.end, !dbg !310

for.body.15:                                      ; preds = %for.cond.13
  %mul = mul nsw i32 %j.0, %tmp3, !dbg !311
  %mul16 = mul nsw i32 %i.0, %tmp5, !dbg !313
  %add = add nsw i32 %mul, %mul16, !dbg !314
  %idxprom = sext i32 %add to i64, !dbg !315
  %arrayidx = getelementptr inbounds double, double* %tmp7, i64 %idxprom, !dbg !315
  %tmp31 = load double, double* %arrayidx, align 8, !dbg !315
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), double %tmp31), !dbg !316
  br label %for.inc, !dbg !317

for.inc:                                          ; preds = %for.body.15
  %inc = add nsw i32 %i.0, 1, !dbg !318
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !304, metadata !69), !dbg !305
  br label %for.cond.13, !dbg !319

for.end:                                          ; preds = %for.cond.13
  br label %for.inc.18, !dbg !320

for.inc.18:                                       ; preds = %for.end
  %inc19 = add nsw i32 %j.0, 1, !dbg !321
  call void @llvm.dbg.value(metadata i32 %inc19, i64 0, metadata !294, metadata !69), !dbg !295
  br label %for.cond, !dbg !322

for.end.20:                                       ; preds = %for.cond
  br label %if.end.31, !dbg !323

if.else.21:                                       ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !304, metadata !69), !dbg !305
  br label %for.cond.22, !dbg !324

for.cond.22:                                      ; preds = %for.inc.28, %if.else.21
  %i.1 = phi i32 [ 0, %if.else.21 ], [ %inc29, %for.inc.28 ]
  %cmp23 = icmp slt i32 %i.1, %tmp9, !dbg !327
  br i1 %cmp23, label %for.body.24, label %for.end.30, !dbg !329

for.body.24:                                      ; preds = %for.cond.22
  %idxprom25 = sext i32 %i.1 to i64, !dbg !330
  %arrayidx26 = getelementptr inbounds double, double* %tmp7, i64 %idxprom25, !dbg !330
  %tmp39 = load double, double* %arrayidx26, align 8, !dbg !330
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), double %tmp39), !dbg !332
  br label %for.inc.28, !dbg !333

for.inc.28:                                       ; preds = %for.body.24
  %inc29 = add nsw i32 %i.1, 1, !dbg !334
  call void @llvm.dbg.value(metadata i32 %inc29, i64 0, metadata !304, metadata !69), !dbg !305
  br label %for.cond.22, !dbg !335

for.end.30:                                       ; preds = %for.cond.22
  br label %if.end.31

if.end.31:                                        ; preds = %for.end.30, %for.end.20
  %call32 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !336
  ret i32 0, !dbg !337
}

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorSetConstantValues(%struct.hypre_Vector* %v, double %value) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %v, i64 0, metadata !338, metadata !69), !dbg !339
  call void @llvm.dbg.value(metadata double %value, i64 0, metadata !340, metadata !69), !dbg !341
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %v, i32 0, i32 0, !dbg !342
  %tmp1 = load double*, double** %data, align 8, !dbg !342
  %0 = ptrtoint double* %tmp1 to i64
  %tmp114 = ptrtoint double* %tmp1 to i64
  call void @llvm.dbg.value(metadata double* %tmp1, i64 0, metadata !343, metadata !69), !dbg !344
  %size1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %v, i32 0, i32 1, !dbg !345
  %tmp3 = load i32, i32* %size1, align 4, !dbg !345
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !346, metadata !69), !dbg !347
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !348, metadata !69), !dbg !349
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %v, i32 0, i32 3, !dbg !350
  %tmp5 = load i32, i32* %num_vectors, align 4, !dbg !350
  %mul = mul nsw i32 %tmp3, %tmp5, !dbg !351
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !346, metadata !69), !dbg !347
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !352, metadata !69), !dbg !353
  %1 = add i64 %tmp114, 32, !dbg !354
  %2 = add i64 %tmp114, 32, !dbg !354
  %3 = mul i32 %tmp5, %tmp3, !dbg !354
  %4 = add i64 %0, 32, !dbg !354
  %5 = add i64 %0, 32, !dbg !354
  %6 = mul i32 %tmp5, %tmp3, !dbg !354
  br label %for.cond, !dbg !356

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %mul, !dbg !357
  %7 = icmp sgt i32 %3, 0, !dbg !354
  %smax = select i1 %7, i32 %3, i32 0, !dbg !354
  %8 = mul i32 1, %smax, !dbg !354
  %9 = add i32 0, %8, !dbg !354
  %10 = ptrtoint double* undef to i64, !dbg !354
  %11 = sub i64 %1, %0, !dbg !354
  %12 = icmp sgt i32 %6, 0, !dbg !354
  %smax15 = select i1 %12, i32 %6, i32 0, !dbg !354
  %13 = mul i32 1, %smax15, !dbg !354
  %14 = add i32 0, %13, !dbg !354
  %15 = ptrtoint double* %tmp1 to i64, !dbg !354
  %16 = sub i64 %4, %15, !dbg !354
  br i1 %cmp, label %for.body, label %for.end, !dbg !354

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !359
  %arrayidx = getelementptr inbounds double, double* %tmp1, i64 %idxprom, !dbg !359
  store double %value, double* %arrayidx, align 8, !dbg !360
  br label %for.inc, !dbg !359

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !361
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !352, metadata !69), !dbg !353
  br label %for.cond, !dbg !362

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !363
}

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorCopy(%struct.hypre_Vector* %x, %struct.hypre_Vector* %y) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %x, i64 0, metadata !364, metadata !69), !dbg !365
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %y, i64 0, metadata !366, metadata !69), !dbg !367
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 0, !dbg !368
  %tmp1 = load double*, double** %data, align 8, !dbg !368
  %0 = ptrtoint double* %tmp1 to i64
  %tmp118 = ptrtoint double* %tmp1 to i64
  call void @llvm.dbg.value(metadata double* %tmp1, i64 0, metadata !369, metadata !69), !dbg !370
  %data1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %y, i32 0, i32 0, !dbg !371
  %tmp3 = load double*, double** %data1, align 8, !dbg !371
  %1 = ptrtoint double* %tmp3 to i64
  %tmp319 = ptrtoint double* %tmp3 to i64
  call void @llvm.dbg.value(metadata double* %tmp3, i64 0, metadata !372, metadata !69), !dbg !373
  %size2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 1, !dbg !374
  %tmp5 = load i32, i32* %size2, align 4, !dbg !374
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !375, metadata !69), !dbg !376
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !377, metadata !69), !dbg !378
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 3, !dbg !379
  %tmp7 = load i32, i32* %num_vectors, align 4, !dbg !379
  %mul = mul nsw i32 %tmp5, %tmp7, !dbg !380
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !375, metadata !69), !dbg !376
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !381, metadata !69), !dbg !382
  %2 = add i64 %tmp118, 32, !dbg !383
  %3 = add i64 %tmp118, 32, !dbg !383
  %4 = mul i32 %tmp7, %tmp5, !dbg !383
  %5 = add i64 %tmp319, 32, !dbg !383
  %6 = add i64 %tmp319, 32, !dbg !383
  %7 = add i64 %0, 32, !dbg !383
  %8 = add i64 %0, 32, !dbg !383
  %9 = mul i32 %tmp7, %tmp5, !dbg !383
  %10 = add i64 %1, 32, !dbg !383
  %11 = add i64 %1, 32, !dbg !383
  br label %for.cond, !dbg !385

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %mul, !dbg !386
  %12 = icmp sgt i32 %4, 0, !dbg !383
  %smax = select i1 %12, i32 %4, i32 0, !dbg !383
  %13 = mul i32 1, %smax, !dbg !383
  %14 = add i32 0, %13, !dbg !383
  %15 = ptrtoint double* undef to i64, !dbg !383
  %16 = sub i64 %2, %0, !dbg !383
  %17 = ptrtoint double* undef to i64, !dbg !383
  %18 = sub i64 %5, %1, !dbg !383
  %19 = icmp sgt i32 %9, 0, !dbg !383
  %smax20 = select i1 %19, i32 %9, i32 0, !dbg !383
  %20 = mul i32 1, %smax20, !dbg !383
  %21 = add i32 0, %20, !dbg !383
  %22 = ptrtoint double* %tmp1 to i64, !dbg !383
  %23 = sub i64 %7, %22, !dbg !383
  %24 = ptrtoint double* %tmp3 to i64, !dbg !383
  %25 = sub i64 %10, %24, !dbg !383
  br i1 %cmp, label %for.body, label %for.end, !dbg !383

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !388
  %arrayidx = getelementptr inbounds double, double* %tmp1, i64 %idxprom, !dbg !388
  %tmp13 = load double, double* %arrayidx, align 8, !dbg !388
  %idxprom3 = sext i32 %i.0 to i64, !dbg !389
  %arrayidx4 = getelementptr inbounds double, double* %tmp3, i64 %idxprom3, !dbg !389
  store double %tmp13, double* %arrayidx4, align 8, !dbg !390
  br label %for.inc, !dbg !389

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !391
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !381, metadata !69), !dbg !382
  br label %for.cond, !dbg !392

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !393
}

; Function Attrs: nounwind uwtable
define %struct.hypre_Vector* @hypre_SeqVectorCloneDeep(%struct.hypre_Vector* %x) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %x, i64 0, metadata !394, metadata !69), !dbg !395
  %size1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 1, !dbg !396
  %tmp1 = load i32, i32* %size1, align 4, !dbg !396
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !397, metadata !69), !dbg !398
  %num_vectors2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 3, !dbg !399
  %tmp3 = load i32, i32* %num_vectors2, align 4, !dbg !399
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !400, metadata !69), !dbg !401
  %call = call %struct.hypre_Vector* @hypre_SeqMultiVectorCreate(i32 %tmp1, i32 %tmp3), !dbg !402
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %call, i64 0, metadata !403, metadata !69), !dbg !404
  %multivec_storage_method = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 4, !dbg !405
  %tmp7 = load i32, i32* %multivec_storage_method, align 4, !dbg !405
  %multivec_storage_method3 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 4, !dbg !406
  store i32 %tmp7, i32* %multivec_storage_method3, align 4, !dbg !407
  %vecstride = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 5, !dbg !408
  %tmp10 = load i32, i32* %vecstride, align 4, !dbg !408
  %vecstride4 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 5, !dbg !409
  store i32 %tmp10, i32* %vecstride4, align 4, !dbg !410
  %idxstride = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 6, !dbg !411
  %tmp13 = load i32, i32* %idxstride, align 4, !dbg !411
  %idxstride5 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 6, !dbg !412
  store i32 %tmp13, i32* %idxstride5, align 4, !dbg !413
  %call6 = call i32 @hypre_SeqVectorInitialize(%struct.hypre_Vector* %call), !dbg !414
  %call7 = call i32 @hypre_SeqVectorCopy(%struct.hypre_Vector* %x, %struct.hypre_Vector* %call), !dbg !415
  ret %struct.hypre_Vector* %call, !dbg !416
}

; Function Attrs: nounwind uwtable
define %struct.hypre_Vector* @hypre_SeqVectorCloneShallow(%struct.hypre_Vector* %x) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %x, i64 0, metadata !417, metadata !69), !dbg !418
  %size1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 1, !dbg !419
  %tmp1 = load i32, i32* %size1, align 4, !dbg !419
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !420, metadata !69), !dbg !421
  %num_vectors2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 3, !dbg !422
  %tmp3 = load i32, i32* %num_vectors2, align 4, !dbg !422
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !423, metadata !69), !dbg !424
  %call = call %struct.hypre_Vector* @hypre_SeqMultiVectorCreate(i32 %tmp1, i32 %tmp3), !dbg !425
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %call, i64 0, metadata !426, metadata !69), !dbg !427
  %multivec_storage_method = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 4, !dbg !428
  %tmp7 = load i32, i32* %multivec_storage_method, align 4, !dbg !428
  %multivec_storage_method3 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 4, !dbg !429
  store i32 %tmp7, i32* %multivec_storage_method3, align 4, !dbg !430
  %vecstride = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 5, !dbg !431
  %tmp10 = load i32, i32* %vecstride, align 4, !dbg !431
  %vecstride4 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 5, !dbg !432
  store i32 %tmp10, i32* %vecstride4, align 4, !dbg !433
  %idxstride = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 6, !dbg !434
  %tmp13 = load i32, i32* %idxstride, align 4, !dbg !434
  %idxstride5 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 6, !dbg !435
  store i32 %tmp13, i32* %idxstride5, align 4, !dbg !436
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 0, !dbg !437
  %tmp16 = load double*, double** %data, align 8, !dbg !437
  %data6 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %call, i32 0, i32 0, !dbg !438
  store double* %tmp16, double** %data6, align 8, !dbg !439
  %call7 = call i32 @hypre_SeqVectorSetDataOwner(%struct.hypre_Vector* %call, i32 0), !dbg !440
  %call8 = call i32 @hypre_SeqVectorInitialize(%struct.hypre_Vector* %call), !dbg !441
  ret %struct.hypre_Vector* %call, !dbg !442
}

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorScale(double %alpha, %struct.hypre_Vector* %y) #0 {
entry:
  call void @llvm.dbg.value(metadata double %alpha, i64 0, metadata !443, metadata !69), !dbg !444
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %y, i64 0, metadata !445, metadata !69), !dbg !446
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %y, i32 0, i32 0, !dbg !447
  %tmp1 = load double*, double** %data, align 8, !dbg !447
  %tmp119 = ptrtoint double* %tmp1 to i64
  call void @llvm.dbg.value(metadata double* %tmp1, i64 0, metadata !448, metadata !69), !dbg !449
  %size1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %y, i32 0, i32 1, !dbg !450
  %tmp3 = load i32, i32* %size1, align 4, !dbg !450
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !451, metadata !69), !dbg !452
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !453, metadata !69), !dbg !454
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %y, i32 0, i32 3, !dbg !455
  %tmp5 = load i32, i32* %num_vectors, align 4, !dbg !455
  %mul = mul nsw i32 %tmp3, %tmp5, !dbg !456
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !451, metadata !69), !dbg !452
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !457, metadata !69), !dbg !458
  %0 = mul i32 %tmp5, %tmp3, !dbg !459
  %1 = mul i32 %tmp5, %tmp3, !dbg !459
  br label %for.cond, !dbg !461

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %mul, !dbg !462
  %2 = icmp ult double* %tmp1, %tmp1, !dbg !459
  %umin = select i1 %2, double* %tmp1, double* %tmp1, !dbg !459
  %3 = icmp ugt double* %tmp1, %tmp1, !dbg !459
  %umax = select i1 %3, double* %tmp1, double* %tmp1, !dbg !459
  %umax15 = ptrtoint double* %umax to i64
  %4 = add i64 %umax15, 32, !dbg !459
  %5 = icmp ult double* %tmp1, %tmp1, !dbg !459
  %umin16 = select i1 %5, double* %tmp1, double* %tmp1, !dbg !459
  %6 = icmp ugt double* %tmp1, %tmp1, !dbg !459
  %umax17 = select i1 %6, double* %tmp1, double* %tmp1, !dbg !459
  %umax1718 = ptrtoint double* %umax17 to i64
  %7 = add i64 %umax1718, 32, !dbg !459
  %8 = icmp sgt i32 %0, 0, !dbg !459
  %smax = select i1 %8, i32 %0, i32 0, !dbg !459
  %9 = mul i32 1, %smax, !dbg !459
  %10 = add i32 0, %9, !dbg !459
  %11 = ptrtoint double* %umin to i64, !dbg !459
  %12 = sub i64 %4, %11, !dbg !459
  %13 = icmp ult double* %tmp1, %tmp1, !dbg !459
  %umin20 = select i1 %13, double* %tmp1, double* %tmp1, !dbg !459
  %14 = icmp ugt double* %tmp1, %tmp1, !dbg !459
  %umax21 = select i1 %14, double* %tmp1, double* %tmp1, !dbg !459
  %umax2122 = ptrtoint double* %umax21 to i64
  %15 = add i64 %umax2122, 32, !dbg !459
  %16 = icmp ult double* %tmp1, %tmp1, !dbg !459
  %umin23 = select i1 %16, double* %tmp1, double* %tmp1, !dbg !459
  %17 = icmp ugt double* %tmp1, %tmp1, !dbg !459
  %umax24 = select i1 %17, double* %tmp1, double* %tmp1, !dbg !459
  %umax2425 = ptrtoint double* %umax24 to i64
  %18 = add i64 %umax2425, 32, !dbg !459
  %19 = icmp sgt i32 %1, 0, !dbg !459
  %smax26 = select i1 %19, i32 %1, i32 0, !dbg !459
  %20 = mul i32 1, %smax26, !dbg !459
  %21 = add i32 0, %20, !dbg !459
  %22 = ptrtoint double* %umin20 to i64, !dbg !459
  %23 = sub i64 %15, %22, !dbg !459
  br i1 %cmp, label %for.body, label %for.end, !dbg !459

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !464
  %arrayidx = getelementptr inbounds double, double* %tmp1, i64 %idxprom, !dbg !464
  %tmp12 = load double, double* %arrayidx, align 8, !dbg !465
  %mul2 = fmul double %tmp12, %alpha, !dbg !465
  store double %mul2, double* %arrayidx, align 8, !dbg !465
  br label %for.inc, !dbg !464

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !466
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !457, metadata !69), !dbg !458
  br label %for.cond, !dbg !467

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !468
}

; Function Attrs: nounwind uwtable
define i32 @hypre_SeqVectorAxpy(double %alpha, %struct.hypre_Vector* %x, %struct.hypre_Vector* %y) #0 {
entry:
  call void @llvm.dbg.value(metadata double %alpha, i64 0, metadata !469, metadata !69), !dbg !470
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %x, i64 0, metadata !471, metadata !69), !dbg !472
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %y, i64 0, metadata !473, metadata !69), !dbg !474
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 0, !dbg !475
  %tmp1 = load double*, double** %data, align 8, !dbg !475
  %0 = ptrtoint double* %tmp1 to i64
  %tmp120 = ptrtoint double* %tmp1 to i64
  call void @llvm.dbg.value(metadata double* %tmp1, i64 0, metadata !476, metadata !69), !dbg !477
  %data1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %y, i32 0, i32 0, !dbg !478
  %tmp3 = load double*, double** %data1, align 8, !dbg !478
  %tmp325 = ptrtoint double* %tmp3 to i64
  call void @llvm.dbg.value(metadata double* %tmp3, i64 0, metadata !479, metadata !69), !dbg !480
  %size2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 1, !dbg !481
  %tmp5 = load i32, i32* %size2, align 4, !dbg !481
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !482, metadata !69), !dbg !483
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !484, metadata !69), !dbg !485
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 3, !dbg !486
  %tmp7 = load i32, i32* %num_vectors, align 4, !dbg !486
  %mul = mul nsw i32 %tmp5, %tmp7, !dbg !487
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !482, metadata !69), !dbg !483
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !488, metadata !69), !dbg !489
  %1 = add i64 %tmp120, 32, !dbg !490
  %2 = add i64 %tmp120, 32, !dbg !490
  %3 = mul i32 %tmp7, %tmp5, !dbg !490
  %4 = add i64 %0, 32, !dbg !490
  %5 = add i64 %0, 32, !dbg !490
  %6 = mul i32 %tmp7, %tmp5, !dbg !490
  br label %for.cond, !dbg !492

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %mul, !dbg !493
  %7 = icmp sgt i32 %3, 0, !dbg !490
  %smax = select i1 %7, i32 %3, i32 0, !dbg !490
  %8 = mul i32 1, %smax, !dbg !490
  %9 = add i32 0, %8, !dbg !490
  %10 = ptrtoint double* undef to i64, !dbg !490
  %11 = sub i64 %1, %0, !dbg !490
  %12 = icmp ult double* %tmp3, %tmp3, !dbg !490
  %umin = select i1 %12, double* %tmp3, double* %tmp3, !dbg !490
  %13 = icmp ugt double* %tmp3, %tmp3, !dbg !490
  %umax = select i1 %13, double* %tmp3, double* %tmp3, !dbg !490
  %umax21 = ptrtoint double* %umax to i64
  %14 = add i64 %umax21, 32, !dbg !490
  %15 = icmp ult double* %tmp3, %tmp3, !dbg !490
  %umin22 = select i1 %15, double* %tmp3, double* %tmp3, !dbg !490
  %16 = icmp ugt double* %tmp3, %tmp3, !dbg !490
  %umax23 = select i1 %16, double* %tmp3, double* %tmp3, !dbg !490
  %umax2324 = ptrtoint double* %umax23 to i64
  %17 = add i64 %umax2324, 32, !dbg !490
  %18 = ptrtoint double* %umin to i64, !dbg !490
  %19 = sub i64 %14, %18, !dbg !490
  %20 = icmp sgt i32 %6, 0, !dbg !490
  %smax26 = select i1 %20, i32 %6, i32 0, !dbg !490
  %21 = mul i32 1, %smax26, !dbg !490
  %22 = add i32 0, %21, !dbg !490
  %23 = ptrtoint double* %tmp1 to i64, !dbg !490
  %24 = sub i64 %4, %23, !dbg !490
  %25 = icmp ult double* %tmp3, %tmp3, !dbg !490
  %umin27 = select i1 %25, double* %tmp3, double* %tmp3, !dbg !490
  %26 = icmp ugt double* %tmp3, %tmp3, !dbg !490
  %umax28 = select i1 %26, double* %tmp3, double* %tmp3, !dbg !490
  %umax2829 = ptrtoint double* %umax28 to i64
  %27 = add i64 %umax2829, 32, !dbg !490
  %28 = icmp ult double* %tmp3, %tmp3, !dbg !490
  %umin30 = select i1 %28, double* %tmp3, double* %tmp3, !dbg !490
  %29 = icmp ugt double* %tmp3, %tmp3, !dbg !490
  %umax31 = select i1 %29, double* %tmp3, double* %tmp3, !dbg !490
  %umax3132 = ptrtoint double* %umax31 to i64
  %30 = add i64 %umax3132, 32, !dbg !490
  %31 = ptrtoint double* %umin27 to i64, !dbg !490
  %32 = sub i64 %27, %31, !dbg !490
  br i1 %cmp, label %for.body, label %for.end, !dbg !490

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !495
  %arrayidx = getelementptr inbounds double, double* %tmp1, i64 %idxprom, !dbg !495
  %tmp14 = load double, double* %arrayidx, align 8, !dbg !495
  %mul3 = fmul double %alpha, %tmp14, !dbg !496
  %idxprom4 = sext i32 %i.0 to i64, !dbg !497
  %arrayidx5 = getelementptr inbounds double, double* %tmp3, i64 %idxprom4, !dbg !497
  %tmp17 = load double, double* %arrayidx5, align 8, !dbg !498
  %add = fadd double %tmp17, %mul3, !dbg !498
  store double %add, double* %arrayidx5, align 8, !dbg !498
  br label %for.inc, !dbg !497

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !499
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !488, metadata !69), !dbg !489
  br label %for.cond, !dbg !500

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !501
}

; Function Attrs: nounwind uwtable
define double @hypre_SeqVectorInnerProd(%struct.hypre_Vector* %x, %struct.hypre_Vector* %y) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %x, i64 0, metadata !502, metadata !69), !dbg !503
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %y, i64 0, metadata !504, metadata !69), !dbg !505
  %data = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 0, !dbg !506
  %tmp1 = load double*, double** %data, align 8, !dbg !506
  %0 = ptrtoint double* %tmp1 to i64
  %tmp120 = ptrtoint double* %tmp1 to i64
  call void @llvm.dbg.value(metadata double* %tmp1, i64 0, metadata !507, metadata !69), !dbg !508
  %data1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %y, i32 0, i32 0, !dbg !509
  %tmp3 = load double*, double** %data1, align 8, !dbg !509
  %1 = ptrtoint double* %tmp3 to i64
  %tmp321 = ptrtoint double* %tmp3 to i64
  call void @llvm.dbg.value(metadata double* %tmp3, i64 0, metadata !510, metadata !69), !dbg !511
  %size2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 1, !dbg !512
  %tmp5 = load i32, i32* %size2, align 4, !dbg !512
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !513, metadata !69), !dbg !514
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !515, metadata !69), !dbg !516
  %num_vectors = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %x, i32 0, i32 3, !dbg !517
  %tmp7 = load i32, i32* %num_vectors, align 4, !dbg !517
  %mul = mul nsw i32 %tmp5, %tmp7, !dbg !518
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !513, metadata !69), !dbg !514
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !519, metadata !69), !dbg !520
  %2 = add i64 %tmp120, 32, !dbg !521
  %3 = add i64 %tmp120, 32, !dbg !521
  %4 = mul i32 %tmp7, %tmp5, !dbg !521
  %5 = add i64 %tmp321, 32, !dbg !521
  %6 = add i64 %tmp321, 32, !dbg !521
  %7 = add i64 %0, 32, !dbg !521
  %8 = add i64 %0, 32, !dbg !521
  %9 = mul i32 %tmp7, %tmp5, !dbg !521
  %10 = add i64 %1, 32, !dbg !521
  %11 = add i64 %1, 32, !dbg !521
  br label %for.cond, !dbg !523

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %result.0 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %cmp = icmp slt i32 %i.0, %mul, !dbg !524
  %12 = icmp sgt i32 %4, 0, !dbg !521
  %smax = select i1 %12, i32 %4, i32 0, !dbg !521
  %13 = mul i32 1, %smax, !dbg !521
  %14 = add i32 0, %13, !dbg !521
  %15 = ptrtoint double* undef to i64, !dbg !521
  %16 = sub i64 %2, %0, !dbg !521
  %17 = ptrtoint double* undef to i64, !dbg !521
  %18 = sub i64 %5, %1, !dbg !521
  %19 = icmp sgt i32 %9, 0, !dbg !521
  %smax22 = select i1 %19, i32 %9, i32 0, !dbg !521
  %20 = mul i32 1, %smax22, !dbg !521
  %21 = add i32 0, %20, !dbg !521
  %22 = ptrtoint double* %tmp1 to i64, !dbg !521
  %23 = sub i64 %7, %22, !dbg !521
  %24 = ptrtoint double* %tmp3 to i64, !dbg !521
  %25 = sub i64 %10, %24, !dbg !521
  br i1 %cmp, label %for.body, label %for.end, !dbg !521

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !526
  %arrayidx = getelementptr inbounds double, double* %tmp3, i64 %idxprom, !dbg !526
  %tmp13 = load double, double* %arrayidx, align 8, !dbg !526
  %idxprom3 = sext i32 %i.0 to i64, !dbg !527
  %arrayidx4 = getelementptr inbounds double, double* %tmp1, i64 %idxprom3, !dbg !527
  %tmp16 = load double, double* %arrayidx4, align 8, !dbg !527
  %mul5 = fmul double %tmp13, %tmp16, !dbg !528
  %add = fadd double %result.0, %mul5, !dbg !529
  call void @llvm.dbg.value(metadata double %add, i64 0, metadata !515, metadata !69), !dbg !516
  br label %for.inc, !dbg !530

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !531
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !519, metadata !69), !dbg !520
  br label %for.cond, !dbg !532

for.end:                                          ; preds = %for.cond
  %result.0.lcssa = phi double [ %result.0, %for.cond ]
  ret double %result.0.lcssa, !dbg !533
}

; Function Attrs: nounwind uwtable
define double @hypre_VectorSumElts(%struct.hypre_Vector* %vector) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.hypre_Vector* %vector, i64 0, metadata !534, metadata !69), !dbg !535
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !536, metadata !69), !dbg !537
  %data1 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 0, !dbg !538
  %tmp1 = load double*, double** %data1, align 8, !dbg !538
  %0 = ptrtoint double* %tmp1 to i64
  %tmp112 = ptrtoint double* %tmp1 to i64
  call void @llvm.dbg.value(metadata double* %tmp1, i64 0, metadata !539, metadata !69), !dbg !540
  %size2 = getelementptr inbounds %struct.hypre_Vector, %struct.hypre_Vector* %vector, i32 0, i32 1, !dbg !541
  %tmp3 = load i32, i32* %size2, align 4, !dbg !541
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !542, metadata !69), !dbg !543
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !544, metadata !69), !dbg !545
  %1 = add i64 %tmp112, 32, !dbg !546
  %2 = add i64 %tmp112, 32, !dbg !546
  %3 = add i64 %0, 32, !dbg !546
  %4 = add i64 %0, 32, !dbg !546
  br label %for.cond, !dbg !548

for.cond:                                         ; preds = %for.inc, %entry
  %sum.0 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %tmp3, !dbg !549
  %5 = icmp sgt i32 %tmp3, 0, !dbg !546
  %smax = select i1 %5, i32 %tmp3, i32 0, !dbg !546
  %6 = mul i32 1, %smax, !dbg !546
  %7 = add i32 0, %6, !dbg !546
  %8 = ptrtoint double* undef to i64, !dbg !546
  %9 = sub i64 %1, %0, !dbg !546
  %10 = icmp sgt i32 %tmp3, 0, !dbg !546
  %smax13 = select i1 %10, i32 %tmp3, i32 0, !dbg !546
  %11 = mul i32 1, %smax13, !dbg !546
  %12 = add i32 0, %11, !dbg !546
  %13 = ptrtoint double* %tmp1 to i64, !dbg !546
  %14 = sub i64 %3, %13, !dbg !546
  br i1 %cmp, label %for.body, label %for.end, !dbg !546

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !551
  %arrayidx = getelementptr inbounds double, double* %tmp1, i64 %idxprom, !dbg !551
  %tmp8 = load double, double* %arrayidx, align 8, !dbg !551
  %add = fadd double %sum.0, %tmp8, !dbg !552
  call void @llvm.dbg.value(metadata double %add, i64 0, metadata !536, metadata !69), !dbg !537
  br label %for.inc, !dbg !553

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !554
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !544, metadata !69), !dbg !545
  br label %for.cond, !dbg !555

for.end:                                          ; preds = %for.cond
  %sum.0.lcssa = phi double [ %sum.0, %for.cond ]
  ret double %sum.0.lcssa, !dbg !556
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!65, !66}
!llvm.ident = !{!67}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !22)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!2 = !{}
!3 = !{!4, !19, !20, !10}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "hypre_Vector", file: !6, line: 122, baseType: !7)
!6 = !DIFile(filename: "./seq_mv.h", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!7 = !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 104, size: 256, align: 64, elements: !8)
!8 = !{!9, !12, !14, !15, !16, !17, !18}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7, file: !6, line: 106, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7, file: !6, line: 107, baseType: !13, size: 32, align: 32, offset: 64)
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "owns_data", scope: !7, file: !6, line: 110, baseType: !13, size: 32, align: 32, offset: 96)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "num_vectors", scope: !7, file: !6, line: 113, baseType: !13, size: 32, align: 32, offset: 128)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "multivec_storage_method", scope: !7, file: !6, line: 114, baseType: !13, size: 32, align: 32, offset: 160)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "vecstride", scope: !7, file: !6, line: 119, baseType: !13, size: 32, align: 32, offset: 192)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "idxstride", scope: !7, file: !6, line: 119, baseType: !13, size: 32, align: 32, offset: 224)
!19 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!22 = !{!23, !27, !30, !33, !34, !37, !40, !43, !46, !49, !52, !53, !56, !59, !62}
!23 = !DISubprogram(name: "hypre_SeqVectorCreate", scope: !24, file: !24, line: 41, type: !25, isLocal: false, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, function: %struct.hypre_Vector* (i32)* @hypre_SeqVectorCreate, variables: !2)
!24 = !DIFile(filename: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk/tmp.c", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!25 = !DISubroutineType(types: !26)
!26 = !{!4, !13}
!27 = !DISubprogram(name: "hypre_SeqMultiVectorCreate", scope: !24, file: !24, line: 63, type: !28, isLocal: false, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: false, function: %struct.hypre_Vector* (i32, i32)* @hypre_SeqMultiVectorCreate, variables: !2)
!28 = !DISubroutineType(types: !29)
!29 = !{!4, !13, !13}
!30 = !DISubprogram(name: "hypre_SeqVectorDestroy", scope: !24, file: !24, line: 73, type: !31, isLocal: false, isDefinition: true, scopeLine: 73, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.hypre_Vector*)* @hypre_SeqVectorDestroy, variables: !2)
!31 = !DISubroutineType(types: !32)
!32 = !{!13, !4}
!33 = !DISubprogram(name: "hypre_SeqVectorInitialize", scope: !24, file: !24, line: 90, type: !31, isLocal: false, isDefinition: true, scopeLine: 90, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.hypre_Vector*)* @hypre_SeqVectorInitialize, variables: !2)
!34 = !DISubprogram(name: "hypre_SeqVectorSetDataOwner", scope: !24, file: !24, line: 115, type: !35, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.hypre_Vector*, i32)* @hypre_SeqVectorSetDataOwner, variables: !2)
!35 = !DISubroutineType(types: !36)
!36 = !{!13, !4, !13}
!37 = !DISubprogram(name: "hypre_SeqVectorRead", scope: !24, file: !24, line: 129, type: !38, isLocal: false, isDefinition: true, scopeLine: 129, flags: DIFlagPrototyped, isOptimized: false, function: %struct.hypre_Vector* (i8*)* @hypre_SeqVectorRead, variables: !2)
!38 = !DISubroutineType(types: !39)
!39 = !{!4, !20}
!40 = !DISubprogram(name: "hypre_SeqVectorPrint", scope: !24, file: !24, line: 167, type: !41, isLocal: false, isDefinition: true, scopeLine: 168, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.hypre_Vector*, i8*)* @hypre_SeqVectorPrint, variables: !2)
!41 = !DISubroutineType(types: !42)
!42 = !{!13, !4, !20}
!43 = !DISubprogram(name: "hypre_SeqVectorSetConstantValues", scope: !24, file: !24, line: 219, type: !44, isLocal: false, isDefinition: true, scopeLine: 220, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.hypre_Vector*, double)* @hypre_SeqVectorSetConstantValues, variables: !2)
!44 = !DISubroutineType(types: !45)
!45 = !{!13, !4, !11}
!46 = !DISubprogram(name: "hypre_SeqVectorCopy", scope: !24, file: !24, line: 242, type: !47, isLocal: false, isDefinition: true, scopeLine: 243, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.hypre_Vector*, %struct.hypre_Vector*)* @hypre_SeqVectorCopy, variables: !2)
!47 = !DISubroutineType(types: !48)
!48 = !{!13, !4, !4}
!49 = !DISubprogram(name: "hypre_SeqVectorCloneDeep", scope: !24, file: !24, line: 266, type: !50, isLocal: false, isDefinition: true, scopeLine: 266, flags: DIFlagPrototyped, isOptimized: false, function: %struct.hypre_Vector* (%struct.hypre_Vector*)* @hypre_SeqVectorCloneDeep, variables: !2)
!50 = !DISubroutineType(types: !51)
!51 = !{!4, !4}
!52 = !DISubprogram(name: "hypre_SeqVectorCloneShallow", scope: !24, file: !24, line: 287, type: !50, isLocal: false, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: false, function: %struct.hypre_Vector* (%struct.hypre_Vector*)* @hypre_SeqVectorCloneShallow, variables: !2)
!53 = !DISubprogram(name: "hypre_SeqVectorScale", scope: !24, file: !24, line: 307, type: !54, isLocal: false, isDefinition: true, scopeLine: 308, flags: DIFlagPrototyped, isOptimized: false, function: i32 (double, %struct.hypre_Vector*)* @hypre_SeqVectorScale, variables: !2)
!54 = !DISubroutineType(types: !55)
!55 = !{!13, !11, !4}
!56 = !DISubprogram(name: "hypre_SeqVectorAxpy", scope: !24, file: !24, line: 328, type: !57, isLocal: false, isDefinition: true, scopeLine: 330, flags: DIFlagPrototyped, isOptimized: false, function: i32 (double, %struct.hypre_Vector*, %struct.hypre_Vector*)* @hypre_SeqVectorAxpy, variables: !2)
!57 = !DISubroutineType(types: !58)
!58 = !{!13, !11, !4, !4}
!59 = !DISubprogram(name: "hypre_SeqVectorInnerProd", scope: !24, file: !24, line: 351, type: !60, isLocal: false, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, function: double (%struct.hypre_Vector*, %struct.hypre_Vector*)* @hypre_SeqVectorInnerProd, variables: !2)
!60 = !DISubroutineType(types: !61)
!61 = !{!11, !4, !4}
!62 = !DISubprogram(name: "hypre_VectorSumElts", scope: !24, file: !24, line: 374, type: !63, isLocal: false, isDefinition: true, scopeLine: 374, flags: DIFlagPrototyped, isOptimized: false, function: double (%struct.hypre_Vector*)* @hypre_VectorSumElts, variables: !2)
!63 = !DISubroutineType(types: !64)
!64 = !{!11, !4}
!65 = !{i32 2, !"Dwarf Version", i32 4}
!66 = !{i32 2, !"Debug Info Version", i32 3}
!67 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!68 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 1, scope: !23, file: !24, line: 41, type: !13)
!69 = !DIExpression()
!70 = !DILocation(line: 41, column: 27, scope: !23)
!71 = !DILocation(line: 44, column: 12, scope: !23)
!72 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vector", scope: !23, file: !24, line: 42, type: !4)
!73 = !DILocation(line: 42, column: 17, scope: !23)
!74 = !DILocation(line: 46, column: 3, scope: !23)
!75 = !DILocation(line: 46, column: 28, scope: !23)
!76 = !DILocation(line: 47, column: 3, scope: !23)
!77 = !DILocation(line: 47, column: 28, scope: !23)
!78 = !DILocation(line: 49, column: 3, scope: !23)
!79 = !DILocation(line: 49, column: 34, scope: !23)
!80 = !DILocation(line: 50, column: 3, scope: !23)
!81 = !DILocation(line: 50, column: 45, scope: !23)
!82 = !DILocation(line: 53, column: 3, scope: !23)
!83 = !DILocation(line: 53, column: 32, scope: !23)
!84 = !DILocation(line: 55, column: 3, scope: !23)
!85 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 1, scope: !27, file: !24, line: 63, type: !13)
!86 = !DILocation(line: 63, column: 32, scope: !27)
!87 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "num_vectors", arg: 2, scope: !27, file: !24, line: 63, type: !13)
!88 = !DILocation(line: 63, column: 42, scope: !27)
!89 = !DILocation(line: 64, column: 26, scope: !27)
!90 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vector", scope: !27, file: !24, line: 64, type: !4)
!91 = !DILocation(line: 64, column: 17, scope: !27)
!92 = !DILocation(line: 65, column: 3, scope: !27)
!93 = !DILocation(line: 65, column: 34, scope: !27)
!94 = !DILocation(line: 66, column: 3, scope: !27)
!95 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vector", arg: 1, scope: !30, file: !24, line: 73, type: !4)
!96 = !DILocation(line: 73, column: 42, scope: !30)
!97 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !30, file: !24, line: 74, type: !13)
!98 = !DILocation(line: 74, column: 7, scope: !30)
!99 = !DILocation(line: 76, column: 7, scope: !100)
!100 = distinct !DILexicalBlock(scope: !30, file: !24, line: 76, column: 7)
!101 = !DILocation(line: 76, column: 7, scope: !30)
!102 = !DILocation(line: 77, column: 9, scope: !103)
!103 = distinct !DILexicalBlock(scope: !104, file: !24, line: 77, column: 9)
!104 = distinct !DILexicalBlock(scope: !100, file: !24, line: 76, column: 15)
!105 = !DILocation(line: 77, column: 9, scope: !104)
!106 = !DILocation(line: 78, column: 7, scope: !107)
!107 = distinct !DILexicalBlock(scope: !103, file: !24, line: 77, column: 39)
!108 = !DILocation(line: 79, column: 5, scope: !107)
!109 = !DILocation(line: 80, column: 5, scope: !104)
!110 = !DILocation(line: 81, column: 3, scope: !104)
!111 = !DILocation(line: 83, column: 3, scope: !30)
!112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vector", arg: 1, scope: !33, file: !24, line: 90, type: !4)
!113 = !DILocation(line: 90, column: 45, scope: !33)
!114 = !DILocation(line: 91, column: 14, scope: !33)
!115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !33, file: !24, line: 91, type: !13)
!116 = !DILocation(line: 91, column: 7, scope: !33)
!117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !33, file: !24, line: 92, type: !13)
!118 = !DILocation(line: 92, column: 7, scope: !33)
!119 = !DILocation(line: 93, column: 21, scope: !33)
!120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_vectors", scope: !33, file: !24, line: 93, type: !13)
!121 = !DILocation(line: 93, column: 7, scope: !33)
!122 = !DILocation(line: 94, column: 33, scope: !33)
!123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "multivec_storage_method", scope: !33, file: !24, line: 94, type: !13)
!124 = !DILocation(line: 94, column: 7, scope: !33)
!125 = !DILocation(line: 96, column: 8, scope: !126)
!126 = distinct !DILexicalBlock(scope: !33, file: !24, line: 96, column: 7)
!127 = !DILocation(line: 96, column: 7, scope: !33)
!128 = !DILocation(line: 97, column: 32, scope: !126)
!129 = !DILocation(line: 97, column: 5, scope: !126)
!130 = !DILocation(line: 97, column: 30, scope: !126)
!131 = !DILocation(line: 99, column: 31, scope: !132)
!132 = distinct !DILexicalBlock(scope: !33, file: !24, line: 99, column: 7)
!133 = !DILocation(line: 99, column: 7, scope: !33)
!134 = !DILocation(line: 100, column: 5, scope: !135)
!135 = distinct !DILexicalBlock(scope: !132, file: !24, line: 99, column: 37)
!136 = !DILocation(line: 100, column: 38, scope: !135)
!137 = !DILocation(line: 101, column: 5, scope: !135)
!138 = !DILocation(line: 101, column: 37, scope: !135)
!139 = !DILocation(line: 102, column: 3, scope: !135)
!140 = !DILocation(line: 102, column: 38, scope: !141)
!141 = distinct !DILexicalBlock(scope: !132, file: !24, line: 102, column: 14)
!142 = !DILocation(line: 102, column: 14, scope: !132)
!143 = !DILocation(line: 103, column: 5, scope: !144)
!144 = distinct !DILexicalBlock(scope: !141, file: !24, line: 102, column: 44)
!145 = !DILocation(line: 103, column: 38, scope: !144)
!146 = !DILocation(line: 104, column: 5, scope: !144)
!147 = !DILocation(line: 104, column: 37, scope: !144)
!148 = !DILocation(line: 105, column: 3, scope: !144)
!149 = !DILocation(line: 106, column: 5, scope: !141)
!150 = !DILocation(line: 108, column: 3, scope: !33)
!151 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vector", arg: 1, scope: !34, file: !24, line: 115, type: !4)
!152 = !DILocation(line: 115, column: 47, scope: !34)
!153 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "owns_data", arg: 2, scope: !34, file: !24, line: 116, type: !13)
!154 = !DILocation(line: 116, column: 37, scope: !34)
!155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !34, file: !24, line: 117, type: !13)
!156 = !DILocation(line: 117, column: 7, scope: !34)
!157 = !DILocation(line: 119, column: 3, scope: !34)
!158 = !DILocation(line: 119, column: 32, scope: !34)
!159 = !DILocation(line: 121, column: 3, scope: !34)
!160 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "file_name", arg: 1, scope: !37, file: !24, line: 129, type: !20)
!161 = !DILocation(line: 129, column: 27, scope: !37)
!162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !37, file: !24, line: 135, type: !13)
!163 = !DILocation(line: 135, column: 7, scope: !37)
!164 = !DILocation(line: 143, column: 8, scope: !37)
!165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !37, file: !24, line: 132, type: !166)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64, align: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !168, line: 48, baseType: !169)
!168 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!169 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !170, line: 241, size: 1728, align: 64, elements: !171)
!170 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!171 = !{!172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !192, !193, !194, !195, !199, !201, !203, !207, !210, !212, !214, !215, !216, !217, !221, !222}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !169, file: !170, line: 242, baseType: !13, size: 32, align: 32)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !169, file: !170, line: 247, baseType: !20, size: 64, align: 64, offset: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !169, file: !170, line: 248, baseType: !20, size: 64, align: 64, offset: 128)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !169, file: !170, line: 249, baseType: !20, size: 64, align: 64, offset: 192)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !169, file: !170, line: 250, baseType: !20, size: 64, align: 64, offset: 256)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !169, file: !170, line: 251, baseType: !20, size: 64, align: 64, offset: 320)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !169, file: !170, line: 252, baseType: !20, size: 64, align: 64, offset: 384)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !169, file: !170, line: 253, baseType: !20, size: 64, align: 64, offset: 448)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !169, file: !170, line: 254, baseType: !20, size: 64, align: 64, offset: 512)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !169, file: !170, line: 256, baseType: !20, size: 64, align: 64, offset: 576)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !169, file: !170, line: 257, baseType: !20, size: 64, align: 64, offset: 640)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !169, file: !170, line: 258, baseType: !20, size: 64, align: 64, offset: 704)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !169, file: !170, line: 260, baseType: !185, size: 64, align: 64, offset: 768)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64, align: 64)
!186 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !170, line: 156, size: 192, align: 64, elements: !187)
!187 = !{!188, !189, !191}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !186, file: !170, line: 157, baseType: !185, size: 64, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !186, file: !170, line: 158, baseType: !190, size: 64, align: 64, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64, align: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !186, file: !170, line: 162, baseType: !13, size: 32, align: 32, offset: 128)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !169, file: !170, line: 262, baseType: !190, size: 64, align: 64, offset: 832)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !169, file: !170, line: 264, baseType: !13, size: 32, align: 32, offset: 896)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !169, file: !170, line: 268, baseType: !13, size: 32, align: 32, offset: 928)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !169, file: !170, line: 270, baseType: !196, size: 64, align: 64, offset: 960)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !197, line: 131, baseType: !198)
!197 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!198 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !169, file: !170, line: 274, baseType: !200, size: 16, align: 16, offset: 1024)
!200 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !169, file: !170, line: 275, baseType: !202, size: 8, align: 8, offset: 1040)
!202 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !169, file: !170, line: 276, baseType: !204, size: 8, align: 8, offset: 1048)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 8, align: 8, elements: !205)
!205 = !{!206}
!206 = !DISubrange(count: 1)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !169, file: !170, line: 280, baseType: !208, size: 64, align: 64, offset: 1088)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64, align: 64)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !170, line: 150, baseType: null)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !169, file: !170, line: 289, baseType: !211, size: 64, align: 64, offset: 1152)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !197, line: 132, baseType: !198)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !169, file: !170, line: 297, baseType: !213, size: 64, align: 64, offset: 1216)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !169, file: !170, line: 298, baseType: !213, size: 64, align: 64, offset: 1280)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !169, file: !170, line: 299, baseType: !213, size: 64, align: 64, offset: 1344)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !169, file: !170, line: 300, baseType: !213, size: 64, align: 64, offset: 1408)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !169, file: !170, line: 302, baseType: !218, size: 64, align: 64, offset: 1472)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !219, line: 62, baseType: !220)
!219 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/ASC_Sequoia/AMGmk")
!220 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !169, file: !170, line: 303, baseType: !13, size: 32, align: 32, offset: 1536)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !169, file: !170, line: 305, baseType: !223, size: 160, align: 8, offset: 1568)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 160, align: 8, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 20)
!226 = !DILocation(line: 132, column: 9, scope: !37)
!227 = !DILocation(line: 145, column: 3, scope: !37)
!228 = !DILocation(line: 147, column: 34, scope: !37)
!229 = !DILocation(line: 147, column: 12, scope: !37)
!230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vector", scope: !37, file: !24, line: 130, type: !4)
!231 = !DILocation(line: 130, column: 17, scope: !37)
!232 = !DILocation(line: 148, column: 3, scope: !37)
!233 = !DILocation(line: 150, column: 10, scope: !37)
!234 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !37, file: !24, line: 134, type: !10)
!235 = !DILocation(line: 134, column: 11, scope: !37)
!236 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !37, file: !24, line: 137, type: !13)
!237 = !DILocation(line: 137, column: 7, scope: !37)
!238 = !DILocation(line: 151, column: 8, scope: !239)
!239 = distinct !DILexicalBlock(scope: !37, file: !24, line: 151, column: 3)
!240 = !DILocation(line: 151, column: 19, scope: !241)
!241 = distinct !DILexicalBlock(scope: !239, file: !24, line: 151, column: 3)
!242 = !DILocation(line: 151, column: 17, scope: !241)
!243 = !DILocation(line: 151, column: 3, scope: !239)
!244 = !DILocation(line: 152, column: 24, scope: !245)
!245 = distinct !DILexicalBlock(scope: !241, file: !24, line: 151, column: 30)
!246 = !DILocation(line: 152, column: 5, scope: !245)
!247 = !DILocation(line: 153, column: 3, scope: !245)
!248 = !DILocation(line: 151, column: 26, scope: !241)
!249 = !DILocation(line: 151, column: 3, scope: !241)
!250 = !DILocation(line: 155, column: 3, scope: !37)
!251 = !DILocation(line: 158, column: 3, scope: !252)
!252 = distinct !DILexicalBlock(scope: !37, file: !24, line: 158, column: 3)
!253 = !DILocation(line: 158, column: 3, scope: !37)
!254 = !DILocation(line: 158, column: 3, scope: !255)
!255 = !DILexicalBlockFile(scope: !256, file: !24, discriminator: 1)
!256 = distinct !DILexicalBlock(scope: !252, file: !24, line: 158, column: 3)
!257 = !DILocation(line: 160, column: 3, scope: !37)
!258 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vector", arg: 1, scope: !40, file: !24, line: 167, type: !4)
!259 = !DILocation(line: 167, column: 40, scope: !40)
!260 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "file_name", arg: 2, scope: !40, file: !24, line: 168, type: !20)
!261 = !DILocation(line: 168, column: 32, scope: !40)
!262 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !40, file: !24, line: 176, type: !13)
!263 = !DILocation(line: 176, column: 7, scope: !40)
!264 = !DILocation(line: 178, column: 17, scope: !40)
!265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_vectors", scope: !40, file: !24, line: 172, type: !13)
!266 = !DILocation(line: 172, column: 13, scope: !40)
!267 = !DILocation(line: 179, column: 15, scope: !40)
!268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vecstride", scope: !40, file: !24, line: 172, type: !13)
!269 = !DILocation(line: 172, column: 26, scope: !40)
!270 = !DILocation(line: 180, column: 15, scope: !40)
!271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "idxstride", scope: !40, file: !24, line: 172, type: !13)
!272 = !DILocation(line: 172, column: 37, scope: !40)
!273 = !DILocation(line: 186, column: 10, scope: !40)
!274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !40, file: !24, line: 171, type: !10)
!275 = !DILocation(line: 171, column: 11, scope: !40)
!276 = !DILocation(line: 187, column: 10, scope: !40)
!277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !40, file: !24, line: 172, type: !13)
!278 = !DILocation(line: 172, column: 7, scope: !40)
!279 = !DILocation(line: 189, column: 8, scope: !40)
!280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !40, file: !24, line: 169, type: !166)
!281 = !DILocation(line: 169, column: 9, scope: !40)
!282 = !DILocation(line: 191, column: 7, scope: !283)
!283 = distinct !DILexicalBlock(scope: !40, file: !24, line: 191, column: 7)
!284 = !DILocation(line: 191, column: 38, scope: !283)
!285 = !DILocation(line: 191, column: 7, scope: !40)
!286 = !DILocation(line: 192, column: 5, scope: !287)
!287 = distinct !DILexicalBlock(scope: !283, file: !24, line: 191, column: 44)
!288 = !DILocation(line: 193, column: 3, scope: !287)
!289 = !DILocation(line: 194, column: 5, scope: !290)
!290 = distinct !DILexicalBlock(scope: !283, file: !24, line: 193, column: 10)
!291 = !DILocation(line: 197, column: 19, scope: !292)
!292 = distinct !DILexicalBlock(scope: !40, file: !24, line: 197, column: 7)
!293 = !DILocation(line: 197, column: 7, scope: !40)
!294 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !40, file: !24, line: 174, type: !13)
!295 = !DILocation(line: 174, column: 10, scope: !40)
!296 = !DILocation(line: 198, column: 10, scope: !297)
!297 = distinct !DILexicalBlock(scope: !298, file: !24, line: 198, column: 5)
!298 = distinct !DILexicalBlock(scope: !292, file: !24, line: 197, column: 24)
!299 = !DILocation(line: 198, column: 19, scope: !300)
!300 = distinct !DILexicalBlock(scope: !297, file: !24, line: 198, column: 5)
!301 = !DILocation(line: 198, column: 5, scope: !297)
!302 = !DILocation(line: 199, column: 7, scope: !303)
!303 = distinct !DILexicalBlock(scope: !300, file: !24, line: 198, column: 39)
!304 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !40, file: !24, line: 174, type: !13)
!305 = !DILocation(line: 174, column: 7, scope: !40)
!306 = !DILocation(line: 200, column: 12, scope: !307)
!307 = distinct !DILexicalBlock(scope: !303, file: !24, line: 200, column: 7)
!308 = !DILocation(line: 200, column: 21, scope: !309)
!309 = distinct !DILexicalBlock(scope: !307, file: !24, line: 200, column: 7)
!310 = !DILocation(line: 200, column: 7, scope: !307)
!311 = !DILocation(line: 201, column: 39, scope: !312)
!312 = distinct !DILexicalBlock(scope: !309, file: !24, line: 200, column: 34)
!313 = !DILocation(line: 201, column: 55, scope: !312)
!314 = !DILocation(line: 201, column: 51, scope: !312)
!315 = !DILocation(line: 201, column: 32, scope: !312)
!316 = !DILocation(line: 201, column: 9, scope: !312)
!317 = !DILocation(line: 202, column: 7, scope: !312)
!318 = !DILocation(line: 200, column: 30, scope: !309)
!319 = !DILocation(line: 200, column: 7, scope: !309)
!320 = !DILocation(line: 203, column: 5, scope: !303)
!321 = !DILocation(line: 198, column: 34, scope: !300)
!322 = !DILocation(line: 198, column: 5, scope: !300)
!323 = !DILocation(line: 204, column: 3, scope: !298)
!324 = !DILocation(line: 205, column: 10, scope: !325)
!325 = distinct !DILexicalBlock(scope: !326, file: !24, line: 205, column: 5)
!326 = distinct !DILexicalBlock(scope: !292, file: !24, line: 204, column: 10)
!327 = !DILocation(line: 205, column: 19, scope: !328)
!328 = distinct !DILexicalBlock(scope: !325, file: !24, line: 205, column: 5)
!329 = !DILocation(line: 205, column: 5, scope: !325)
!330 = !DILocation(line: 206, column: 30, scope: !331)
!331 = distinct !DILexicalBlock(scope: !328, file: !24, line: 205, column: 32)
!332 = !DILocation(line: 206, column: 7, scope: !331)
!333 = !DILocation(line: 207, column: 5, scope: !331)
!334 = !DILocation(line: 205, column: 28, scope: !328)
!335 = !DILocation(line: 205, column: 5, scope: !328)
!336 = !DILocation(line: 210, column: 3, scope: !40)
!337 = !DILocation(line: 212, column: 3, scope: !40)
!338 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v", arg: 1, scope: !43, file: !24, line: 219, type: !4)
!339 = !DILocation(line: 219, column: 52, scope: !43)
!340 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "value", arg: 2, scope: !43, file: !24, line: 220, type: !11)
!341 = !DILocation(line: 220, column: 45, scope: !43)
!342 = !DILocation(line: 221, column: 25, scope: !43)
!343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vector_data", scope: !43, file: !24, line: 221, type: !10)
!344 = !DILocation(line: 221, column: 11, scope: !43)
!345 = !DILocation(line: 222, column: 14, scope: !43)
!346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !43, file: !24, line: 222, type: !13)
!347 = !DILocation(line: 222, column: 7, scope: !43)
!348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !43, file: !24, line: 226, type: !13)
!349 = !DILocation(line: 226, column: 7, scope: !43)
!350 = !DILocation(line: 228, column: 11, scope: !43)
!351 = !DILocation(line: 228, column: 8, scope: !43)
!352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !43, file: !24, line: 224, type: !13)
!353 = !DILocation(line: 224, column: 7, scope: !43)
!354 = !DILocation(line: 230, column: 3, scope: !355)
!355 = distinct !DILexicalBlock(scope: !43, file: !24, line: 230, column: 3)
!356 = !DILocation(line: 230, column: 8, scope: !355)
!357 = !DILocation(line: 230, column: 17, scope: !358)
!358 = distinct !DILexicalBlock(scope: !355, file: !24, line: 230, column: 3)
!359 = !DILocation(line: 231, column: 5, scope: !358)
!360 = !DILocation(line: 231, column: 20, scope: !358)
!361 = !DILocation(line: 230, column: 26, scope: !358)
!362 = !DILocation(line: 230, column: 3, scope: !358)
!363 = !DILocation(line: 233, column: 3, scope: !43)
!364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !46, file: !24, line: 242, type: !4)
!365 = !DILocation(line: 242, column: 39, scope: !46)
!366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !46, file: !24, line: 243, type: !4)
!367 = !DILocation(line: 243, column: 39, scope: !46)
!368 = !DILocation(line: 244, column: 20, scope: !46)
!369 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x_data", scope: !46, file: !24, line: 244, type: !10)
!370 = !DILocation(line: 244, column: 11, scope: !46)
!371 = !DILocation(line: 245, column: 20, scope: !46)
!372 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y_data", scope: !46, file: !24, line: 245, type: !10)
!373 = !DILocation(line: 245, column: 11, scope: !46)
!374 = !DILocation(line: 246, column: 14, scope: !46)
!375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !46, file: !24, line: 246, type: !13)
!376 = !DILocation(line: 246, column: 7, scope: !46)
!377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !46, file: !24, line: 250, type: !13)
!378 = !DILocation(line: 250, column: 7, scope: !46)
!379 = !DILocation(line: 252, column: 11, scope: !46)
!380 = !DILocation(line: 252, column: 8, scope: !46)
!381 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !46, file: !24, line: 248, type: !13)
!382 = !DILocation(line: 248, column: 7, scope: !46)
!383 = !DILocation(line: 254, column: 3, scope: !384)
!384 = distinct !DILexicalBlock(scope: !46, file: !24, line: 254, column: 3)
!385 = !DILocation(line: 254, column: 8, scope: !384)
!386 = !DILocation(line: 254, column: 17, scope: !387)
!387 = distinct !DILexicalBlock(scope: !384, file: !24, line: 254, column: 3)
!388 = !DILocation(line: 255, column: 17, scope: !387)
!389 = !DILocation(line: 255, column: 5, scope: !387)
!390 = !DILocation(line: 255, column: 15, scope: !387)
!391 = !DILocation(line: 254, column: 26, scope: !387)
!392 = !DILocation(line: 254, column: 3, scope: !387)
!393 = !DILocation(line: 257, column: 3, scope: !46)
!394 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !49, file: !24, line: 266, type: !4)
!395 = !DILocation(line: 266, column: 40, scope: !49)
!396 = !DILocation(line: 267, column: 14, scope: !49)
!397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !49, file: !24, line: 267, type: !13)
!398 = !DILocation(line: 267, column: 7, scope: !49)
!399 = !DILocation(line: 268, column: 21, scope: !49)
!400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_vectors", scope: !49, file: !24, line: 268, type: !13)
!401 = !DILocation(line: 268, column: 7, scope: !49)
!402 = !DILocation(line: 269, column: 21, scope: !49)
!403 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !49, file: !24, line: 269, type: !4)
!404 = !DILocation(line: 269, column: 17, scope: !49)
!405 = !DILocation(line: 271, column: 42, scope: !49)
!406 = !DILocation(line: 271, column: 3, scope: !49)
!407 = !DILocation(line: 271, column: 40, scope: !49)
!408 = !DILocation(line: 272, column: 33, scope: !49)
!409 = !DILocation(line: 272, column: 3, scope: !49)
!410 = !DILocation(line: 272, column: 31, scope: !49)
!411 = !DILocation(line: 273, column: 32, scope: !49)
!412 = !DILocation(line: 273, column: 3, scope: !49)
!413 = !DILocation(line: 273, column: 30, scope: !49)
!414 = !DILocation(line: 275, column: 3, scope: !49)
!415 = !DILocation(line: 276, column: 3, scope: !49)
!416 = !DILocation(line: 278, column: 3, scope: !49)
!417 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !52, file: !24, line: 287, type: !4)
!418 = !DILocation(line: 287, column: 43, scope: !52)
!419 = !DILocation(line: 288, column: 14, scope: !52)
!420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !52, file: !24, line: 288, type: !13)
!421 = !DILocation(line: 288, column: 7, scope: !52)
!422 = !DILocation(line: 289, column: 21, scope: !52)
!423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_vectors", scope: !52, file: !24, line: 289, type: !13)
!424 = !DILocation(line: 289, column: 7, scope: !52)
!425 = !DILocation(line: 290, column: 21, scope: !52)
!426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !52, file: !24, line: 290, type: !4)
!427 = !DILocation(line: 290, column: 17, scope: !52)
!428 = !DILocation(line: 292, column: 42, scope: !52)
!429 = !DILocation(line: 292, column: 3, scope: !52)
!430 = !DILocation(line: 292, column: 40, scope: !52)
!431 = !DILocation(line: 293, column: 33, scope: !52)
!432 = !DILocation(line: 293, column: 3, scope: !52)
!433 = !DILocation(line: 293, column: 31, scope: !52)
!434 = !DILocation(line: 294, column: 32, scope: !52)
!435 = !DILocation(line: 294, column: 3, scope: !52)
!436 = !DILocation(line: 294, column: 30, scope: !52)
!437 = !DILocation(line: 296, column: 25, scope: !52)
!438 = !DILocation(line: 296, column: 3, scope: !52)
!439 = !DILocation(line: 296, column: 23, scope: !52)
!440 = !DILocation(line: 297, column: 3, scope: !52)
!441 = !DILocation(line: 298, column: 3, scope: !52)
!442 = !DILocation(line: 300, column: 3, scope: !52)
!443 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "alpha", arg: 1, scope: !53, file: !24, line: 307, type: !11)
!444 = !DILocation(line: 307, column: 33, scope: !53)
!445 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !53, file: !24, line: 308, type: !4)
!446 = !DILocation(line: 308, column: 40, scope: !53)
!447 = !DILocation(line: 309, column: 20, scope: !53)
!448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y_data", scope: !53, file: !24, line: 309, type: !10)
!449 = !DILocation(line: 309, column: 11, scope: !53)
!450 = !DILocation(line: 310, column: 14, scope: !53)
!451 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !53, file: !24, line: 310, type: !13)
!452 = !DILocation(line: 310, column: 7, scope: !53)
!453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !53, file: !24, line: 314, type: !13)
!454 = !DILocation(line: 314, column: 7, scope: !53)
!455 = !DILocation(line: 316, column: 11, scope: !53)
!456 = !DILocation(line: 316, column: 8, scope: !53)
!457 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !53, file: !24, line: 312, type: !13)
!458 = !DILocation(line: 312, column: 7, scope: !53)
!459 = !DILocation(line: 318, column: 3, scope: !460)
!460 = distinct !DILexicalBlock(scope: !53, file: !24, line: 318, column: 3)
!461 = !DILocation(line: 318, column: 8, scope: !460)
!462 = !DILocation(line: 318, column: 17, scope: !463)
!463 = distinct !DILexicalBlock(scope: !460, file: !24, line: 318, column: 3)
!464 = !DILocation(line: 319, column: 5, scope: !463)
!465 = !DILocation(line: 319, column: 15, scope: !463)
!466 = !DILocation(line: 318, column: 26, scope: !463)
!467 = !DILocation(line: 318, column: 3, scope: !463)
!468 = !DILocation(line: 321, column: 3, scope: !53)
!469 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "alpha", arg: 1, scope: !56, file: !24, line: 328, type: !11)
!470 = !DILocation(line: 328, column: 32, scope: !56)
!471 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !56, file: !24, line: 329, type: !4)
!472 = !DILocation(line: 329, column: 39, scope: !56)
!473 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !56, file: !24, line: 330, type: !4)
!474 = !DILocation(line: 330, column: 39, scope: !56)
!475 = !DILocation(line: 331, column: 20, scope: !56)
!476 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x_data", scope: !56, file: !24, line: 331, type: !10)
!477 = !DILocation(line: 331, column: 11, scope: !56)
!478 = !DILocation(line: 332, column: 20, scope: !56)
!479 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y_data", scope: !56, file: !24, line: 332, type: !10)
!480 = !DILocation(line: 332, column: 11, scope: !56)
!481 = !DILocation(line: 333, column: 14, scope: !56)
!482 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !56, file: !24, line: 333, type: !13)
!483 = !DILocation(line: 333, column: 7, scope: !56)
!484 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ierr", scope: !56, file: !24, line: 337, type: !13)
!485 = !DILocation(line: 337, column: 7, scope: !56)
!486 = !DILocation(line: 339, column: 11, scope: !56)
!487 = !DILocation(line: 339, column: 8, scope: !56)
!488 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !56, file: !24, line: 335, type: !13)
!489 = !DILocation(line: 335, column: 7, scope: !56)
!490 = !DILocation(line: 341, column: 3, scope: !491)
!491 = distinct !DILexicalBlock(scope: !56, file: !24, line: 341, column: 3)
!492 = !DILocation(line: 341, column: 8, scope: !491)
!493 = !DILocation(line: 341, column: 17, scope: !494)
!494 = distinct !DILexicalBlock(scope: !491, file: !24, line: 341, column: 3)
!495 = !DILocation(line: 342, column: 26, scope: !494)
!496 = !DILocation(line: 342, column: 24, scope: !494)
!497 = !DILocation(line: 342, column: 5, scope: !494)
!498 = !DILocation(line: 342, column: 15, scope: !494)
!499 = !DILocation(line: 341, column: 26, scope: !494)
!500 = !DILocation(line: 341, column: 3, scope: !494)
!501 = !DILocation(line: 344, column: 3, scope: !56)
!502 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !59, file: !24, line: 351, type: !4)
!503 = !DILocation(line: 351, column: 47, scope: !59)
!504 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !59, file: !24, line: 352, type: !4)
!505 = !DILocation(line: 352, column: 47, scope: !59)
!506 = !DILocation(line: 353, column: 20, scope: !59)
!507 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x_data", scope: !59, file: !24, line: 353, type: !10)
!508 = !DILocation(line: 353, column: 11, scope: !59)
!509 = !DILocation(line: 354, column: 20, scope: !59)
!510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y_data", scope: !59, file: !24, line: 354, type: !10)
!511 = !DILocation(line: 354, column: 11, scope: !59)
!512 = !DILocation(line: 355, column: 14, scope: !59)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !59, file: !24, line: 355, type: !13)
!514 = !DILocation(line: 355, column: 7, scope: !59)
!515 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !59, file: !24, line: 359, type: !11)
!516 = !DILocation(line: 359, column: 10, scope: !59)
!517 = !DILocation(line: 361, column: 11, scope: !59)
!518 = !DILocation(line: 361, column: 8, scope: !59)
!519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !59, file: !24, line: 357, type: !13)
!520 = !DILocation(line: 357, column: 7, scope: !59)
!521 = !DILocation(line: 363, column: 3, scope: !522)
!522 = distinct !DILexicalBlock(scope: !59, file: !24, line: 363, column: 3)
!523 = !DILocation(line: 363, column: 8, scope: !522)
!524 = !DILocation(line: 363, column: 17, scope: !525)
!525 = distinct !DILexicalBlock(scope: !522, file: !24, line: 363, column: 3)
!526 = !DILocation(line: 364, column: 15, scope: !525)
!527 = !DILocation(line: 364, column: 27, scope: !525)
!528 = !DILocation(line: 364, column: 25, scope: !525)
!529 = !DILocation(line: 364, column: 12, scope: !525)
!530 = !DILocation(line: 364, column: 5, scope: !525)
!531 = !DILocation(line: 363, column: 26, scope: !525)
!532 = !DILocation(line: 363, column: 3, scope: !525)
!533 = !DILocation(line: 366, column: 3, scope: !59)
!534 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "vector", arg: 1, scope: !62, file: !24, line: 374, type: !4)
!535 = !DILocation(line: 374, column: 42, scope: !62)
!536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !62, file: !24, line: 375, type: !11)
!537 = !DILocation(line: 375, column: 10, scope: !62)
!538 = !DILocation(line: 376, column: 18, scope: !62)
!539 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "data", scope: !62, file: !24, line: 376, type: !10)
!540 = !DILocation(line: 376, column: 11, scope: !62)
!541 = !DILocation(line: 377, column: 14, scope: !62)
!542 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !62, file: !24, line: 377, type: !13)
!543 = !DILocation(line: 377, column: 7, scope: !62)
!544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !62, file: !24, line: 378, type: !13)
!545 = !DILocation(line: 378, column: 7, scope: !62)
!546 = !DILocation(line: 380, column: 3, scope: !547)
!547 = distinct !DILexicalBlock(scope: !62, file: !24, line: 380, column: 3)
!548 = !DILocation(line: 380, column: 8, scope: !547)
!549 = !DILocation(line: 380, column: 17, scope: !550)
!550 = distinct !DILexicalBlock(scope: !547, file: !24, line: 380, column: 3)
!551 = !DILocation(line: 381, column: 12, scope: !550)
!552 = !DILocation(line: 381, column: 9, scope: !550)
!553 = !DILocation(line: 381, column: 5, scope: !550)
!554 = !DILocation(line: 380, column: 25, scope: !550)
!555 = !DILocation(line: 380, column: 3, scope: !550)
!556 = !DILocation(line: 383, column: 3, scope: !62)
