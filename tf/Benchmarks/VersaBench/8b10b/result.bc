; ModuleID = '/home/gleison/tf/Benchmarks/VersaBench/8b10b/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"%8.8X\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @runTestbench(i32 %numberOfWords, i8* %inputFileName, i8* %outputFileName0) #0 {
entry:
  %numberOfWords.addr = alloca i32, align 4
  %inputFileName.addr = alloca i8*, align 8
  %outputFileName0.addr = alloca i8*, align 8
  %theBigAllocatedThing = alloca i32*, align 8
  %theInputArray = alloca i32*, align 8
  %theOutputArray0 = alloca i32*, align 8
  %inputFile = alloca %struct._IO_FILE*, align 8
  %outputFile0 = alloca %struct._IO_FILE*, align 8
  %readData = alloca i32, align 4
  %bits0 = alloca i32, align 4
  %counter = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %numberOfWords, i32* %numberOfWords.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numberOfWords.addr, metadata !17, metadata !18), !dbg !19
  store i8* %inputFileName, i8** %inputFileName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %inputFileName.addr, metadata !20, metadata !18), !dbg !21
  store i8* %outputFileName0, i8** %outputFileName0.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %outputFileName0.addr, metadata !22, metadata !18), !dbg !23
  call void @llvm.dbg.declare(metadata i32** %theBigAllocatedThing, metadata !24, metadata !18), !dbg !25
  call void @llvm.dbg.declare(metadata i32** %theInputArray, metadata !26, metadata !18), !dbg !27
  call void @llvm.dbg.declare(metadata i32** %theOutputArray0, metadata !28, metadata !18), !dbg !29
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %inputFile, metadata !30, metadata !18), !dbg !91
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %outputFile0, metadata !92, metadata !18), !dbg !93
  call void @llvm.dbg.declare(metadata i32* %readData, metadata !94, metadata !18), !dbg !95
  call void @llvm.dbg.declare(metadata i32* %bits0, metadata !96, metadata !18), !dbg !97
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !98, metadata !18), !dbg !99
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !100, metadata !18), !dbg !101
  %0 = load i32, i32* %numberOfWords.addr, align 4, !dbg !102
  %conv = sext i32 %0 to i64, !dbg !102
  %mul = mul i64 %conv, 4, !dbg !103
  %mul1 = mul i64 %mul, 2, !dbg !104
  %call = call noalias i8* @malloc(i64 %mul1) #4, !dbg !105
  %1 = bitcast i8* %call to i32*, !dbg !106
  store i32* %1, i32** %theBigAllocatedThing, align 8, !dbg !107
  %2 = load i32*, i32** %theBigAllocatedThing, align 8, !dbg !108
  store i32* %2, i32** %theInputArray, align 8, !dbg !109
  %3 = load i32*, i32** %theBigAllocatedThing, align 8, !dbg !110
  %4 = load i32, i32* %numberOfWords.addr, align 4, !dbg !111
  %idx.ext = sext i32 %4 to i64, !dbg !112
  %add.ptr = getelementptr inbounds i32, i32* %3, i64 %idx.ext, !dbg !112
  store i32* %add.ptr, i32** %theOutputArray0, align 8, !dbg !113
  %5 = load i8*, i8** %inputFileName.addr, align 8, !dbg !114
  %call2 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !115
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %inputFile, align 8, !dbg !116
  %6 = load i32*, i32** %theInputArray, align 8, !dbg !117
  %7 = bitcast i32* %6 to i8*, !dbg !117
  %8 = load i32, i32* %numberOfWords.addr, align 4, !dbg !118
  %conv3 = sext i32 %8 to i64, !dbg !118
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %inputFile, align 8, !dbg !119
  %call4 = call i64 @fread(i8* %7, i64 %conv3, i64 4, %struct._IO_FILE* %9), !dbg !120
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %inputFile, align 8, !dbg !121
  %call5 = call i32 @fclose(%struct._IO_FILE* %10), !dbg !122
  store i32 0, i32* %tmp, align 4, !dbg !123
  br label %for.cond, !dbg !125

for.cond:                                         ; preds = %for.inc.14, %entry
  %11 = load i32, i32* %tmp, align 4, !dbg !126
  %12 = load i32, i32* %numberOfWords.addr, align 4, !dbg !130
  %cmp = icmp slt i32 %11, %12, !dbg !131
  br i1 %cmp, label %for.body, label %for.end.16, !dbg !132

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %counter, align 4, !dbg !133
  br label %for.cond.7, !dbg !135

for.cond.7:                                       ; preds = %for.inc, %for.body
  %13 = load i32, i32* %counter, align 4, !dbg !136
  %14 = load i32, i32* %numberOfWords.addr, align 4, !dbg !140
  %cmp8 = icmp slt i32 %13, %14, !dbg !141
  br i1 %cmp8, label %for.body.10, label %for.end, !dbg !142

for.body.10:                                      ; preds = %for.cond.7
  %15 = load i32, i32* %counter, align 4, !dbg !143
  %idxprom = sext i32 %15 to i64, !dbg !145
  %16 = load i32*, i32** %theInputArray, align 8, !dbg !145
  %arrayidx = getelementptr inbounds i32, i32* %16, i64 %idxprom, !dbg !145
  %17 = load i32, i32* %arrayidx, align 4, !dbg !145
  store i32 %17, i32* %bits0, align 4, !dbg !146
  %18 = load i32, i32* %bits0, align 4, !dbg !147
  %and = and i32 %18, 255, !dbg !148
  %19 = load i32, i32* %bits0, align 4, !dbg !149
  %shr = lshr i32 %19, 8, !dbg !150
  %call11 = call i32 @calc(i32 %and, i32 %shr), !dbg !151
  %20 = load i32, i32* %counter, align 4, !dbg !152
  %idxprom12 = sext i32 %20 to i64, !dbg !153
  %21 = load i32*, i32** %theOutputArray0, align 8, !dbg !153
  %arrayidx13 = getelementptr inbounds i32, i32* %21, i64 %idxprom12, !dbg !153
  store i32 %call11, i32* %arrayidx13, align 4, !dbg !154
  br label %for.inc, !dbg !155

for.inc:                                          ; preds = %for.body.10
  %22 = load i32, i32* %counter, align 4, !dbg !156
  %inc = add nsw i32 %22, 1, !dbg !156
  store i32 %inc, i32* %counter, align 4, !dbg !156
  br label %for.cond.7, !dbg !157

for.end:                                          ; preds = %for.cond.7
  br label %for.inc.14, !dbg !158

for.inc.14:                                       ; preds = %for.end
  %23 = load i32, i32* %tmp, align 4, !dbg !159
  %inc15 = add nsw i32 %23, 1, !dbg !159
  store i32 %inc15, i32* %tmp, align 4, !dbg !159
  br label %for.cond, !dbg !160

for.end.16:                                       ; preds = %for.cond
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !161
  store %struct._IO_FILE* %24, %struct._IO_FILE** %outputFile0, align 8, !dbg !162
  store i32 0, i32* %counter, align 4, !dbg !163
  br label %for.cond.17, !dbg !165

for.cond.17:                                      ; preds = %for.inc.24, %for.end.16
  %25 = load i32, i32* %counter, align 4, !dbg !166
  %26 = load i32, i32* %numberOfWords.addr, align 4, !dbg !170
  %cmp18 = icmp slt i32 %25, %26, !dbg !171
  br i1 %cmp18, label %for.body.20, label %for.end.25, !dbg !172

for.body.20:                                      ; preds = %for.cond.17
  %27 = load i32, i32* %counter, align 4, !dbg !173
  %idxprom21 = sext i32 %27 to i64, !dbg !175
  %28 = load i32*, i32** %theOutputArray0, align 8, !dbg !175
  %arrayidx22 = getelementptr inbounds i32, i32* %28, i64 %idxprom21, !dbg !175
  %29 = load i32, i32* %arrayidx22, align 4, !dbg !175
  store i32 %29, i32* %bits0, align 4, !dbg !176
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %outputFile0, align 8, !dbg !177
  %31 = load i32, i32* %bits0, align 4, !dbg !178
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 %31), !dbg !179
  br label %for.inc.24, !dbg !180

for.inc.24:                                       ; preds = %for.body.20
  %32 = load i32, i32* %counter, align 4, !dbg !181
  %add = add nsw i32 %32, 128, !dbg !181
  store i32 %add, i32* %counter, align 4, !dbg !181
  br label %for.cond.17, !dbg !182

for.end.25:                                       ; preds = %for.cond.17
  %33 = load i32*, i32** %theBigAllocatedThing, align 8, !dbg !183
  %34 = bitcast i32* %33 to i8*, !dbg !183
  call void @free(i8* %34) #4, !dbg !184
  ret void, !dbg !185
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

declare i32 @fclose(%struct._IO_FILE*) #3

declare i32 @calc(i32, i32) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!14, !15}
!llvm.ident = !{!16}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/VersaBench/8b10b")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!6 = !{!7}
!7 = !DISubprogram(name: "runTestbench", scope: !8, file: !8, line: 38, type: !9, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8*, i8*)* @runTestbench, variables: !2)
!8 = !DIFile(filename: "/home/gleison/tf/Benchmarks/VersaBench/8b10b/tmp.c", directory: "/home/gleison/tf/Benchmarks/VersaBench/8b10b")
!9 = !DISubroutineType(types: !10)
!10 = !{null, !11, !12, !12}
!11 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!14 = !{i32 2, !"Dwarf Version", i32 4}
!15 = !{i32 2, !"Debug Info Version", i32 3}
!16 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!17 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numberOfWords", arg: 1, scope: !7, file: !8, line: 38, type: !11)
!18 = !DIExpression()
!19 = !DILocation(line: 38, column: 23, scope: !7)
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "inputFileName", arg: 2, scope: !7, file: !8, line: 38, type: !12)
!21 = !DILocation(line: 38, column: 44, scope: !7)
!22 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "outputFileName0", arg: 3, scope: !7, file: !8, line: 38, type: !12)
!23 = !DILocation(line: 38, column: 65, scope: !7)
!24 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "theBigAllocatedThing", scope: !7, file: !8, line: 39, type: !4)
!25 = !DILocation(line: 39, column: 17, scope: !7)
!26 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "theInputArray", scope: !7, file: !8, line: 40, type: !4)
!27 = !DILocation(line: 40, column: 17, scope: !7)
!28 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "theOutputArray0", scope: !7, file: !8, line: 41, type: !4)
!29 = !DILocation(line: 41, column: 17, scope: !7)
!30 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "inputFile", scope: !7, file: !8, line: 42, type: !31)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64, align: 64)
!32 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !33, line: 48, baseType: !34)
!33 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/VersaBench/8b10b")
!34 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !35, line: 241, size: 1728, align: 64, elements: !36)
!35 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/VersaBench/8b10b")
!36 = !{!37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !57, !58, !59, !60, !64, !66, !68, !72, !75, !77, !79, !80, !81, !82, !86, !87}
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !34, file: !35, line: 242, baseType: !11, size: 32, align: 32)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !34, file: !35, line: 247, baseType: !12, size: 64, align: 64, offset: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !34, file: !35, line: 248, baseType: !12, size: 64, align: 64, offset: 128)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !34, file: !35, line: 249, baseType: !12, size: 64, align: 64, offset: 192)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !34, file: !35, line: 250, baseType: !12, size: 64, align: 64, offset: 256)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !34, file: !35, line: 251, baseType: !12, size: 64, align: 64, offset: 320)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !34, file: !35, line: 252, baseType: !12, size: 64, align: 64, offset: 384)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !34, file: !35, line: 253, baseType: !12, size: 64, align: 64, offset: 448)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !34, file: !35, line: 254, baseType: !12, size: 64, align: 64, offset: 512)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !34, file: !35, line: 256, baseType: !12, size: 64, align: 64, offset: 576)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !34, file: !35, line: 257, baseType: !12, size: 64, align: 64, offset: 640)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !34, file: !35, line: 258, baseType: !12, size: 64, align: 64, offset: 704)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !34, file: !35, line: 260, baseType: !50, size: 64, align: 64, offset: 768)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64, align: 64)
!51 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !35, line: 156, size: 192, align: 64, elements: !52)
!52 = !{!53, !54, !56}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !51, file: !35, line: 157, baseType: !50, size: 64, align: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !51, file: !35, line: 158, baseType: !55, size: 64, align: 64, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !51, file: !35, line: 162, baseType: !11, size: 32, align: 32, offset: 128)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !34, file: !35, line: 262, baseType: !55, size: 64, align: 64, offset: 832)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !34, file: !35, line: 264, baseType: !11, size: 32, align: 32, offset: 896)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !34, file: !35, line: 268, baseType: !11, size: 32, align: 32, offset: 928)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !34, file: !35, line: 270, baseType: !61, size: 64, align: 64, offset: 960)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !62, line: 131, baseType: !63)
!62 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/VersaBench/8b10b")
!63 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !34, file: !35, line: 274, baseType: !65, size: 16, align: 16, offset: 1024)
!65 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !34, file: !35, line: 275, baseType: !67, size: 8, align: 8, offset: 1040)
!67 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !34, file: !35, line: 276, baseType: !69, size: 8, align: 8, offset: 1048)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 8, align: 8, elements: !70)
!70 = !{!71}
!71 = !DISubrange(count: 1)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !34, file: !35, line: 280, baseType: !73, size: 64, align: 64, offset: 1088)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !35, line: 150, baseType: null)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !34, file: !35, line: 289, baseType: !76, size: 64, align: 64, offset: 1152)
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !62, line: 132, baseType: !63)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !34, file: !35, line: 297, baseType: !78, size: 64, align: 64, offset: 1216)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !34, file: !35, line: 298, baseType: !78, size: 64, align: 64, offset: 1280)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !34, file: !35, line: 299, baseType: !78, size: 64, align: 64, offset: 1344)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !34, file: !35, line: 300, baseType: !78, size: 64, align: 64, offset: 1408)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !34, file: !35, line: 302, baseType: !83, size: 64, align: 64, offset: 1472)
!83 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !84, line: 62, baseType: !85)
!84 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/VersaBench/8b10b")
!85 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !34, file: !35, line: 303, baseType: !11, size: 32, align: 32, offset: 1536)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !34, file: !35, line: 305, baseType: !88, size: 160, align: 8, offset: 1568)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 160, align: 8, elements: !89)
!89 = !{!90}
!90 = !DISubrange(count: 20)
!91 = !DILocation(line: 42, column: 9, scope: !7)
!92 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "outputFile0", scope: !7, file: !8, line: 43, type: !31)
!93 = !DILocation(line: 43, column: 9, scope: !7)
!94 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "readData", scope: !7, file: !8, line: 44, type: !5)
!95 = !DILocation(line: 44, column: 16, scope: !7)
!96 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bits0", scope: !7, file: !8, line: 45, type: !5)
!97 = !DILocation(line: 45, column: 16, scope: !7)
!98 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "counter", scope: !7, file: !8, line: 46, type: !11)
!99 = !DILocation(line: 46, column: 7, scope: !7)
!100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !7, file: !8, line: 47, type: !11)
!101 = !DILocation(line: 47, column: 7, scope: !7)
!102 = !DILocation(line: 51, column: 50, scope: !7)
!103 = !DILocation(line: 51, column: 64, scope: !7)
!104 = !DILocation(line: 51, column: 87, scope: !7)
!105 = !DILocation(line: 51, column: 42, scope: !7)
!106 = !DILocation(line: 51, column: 26, scope: !7)
!107 = !DILocation(line: 51, column: 24, scope: !7)
!108 = !DILocation(line: 52, column: 19, scope: !7)
!109 = !DILocation(line: 52, column: 17, scope: !7)
!110 = !DILocation(line: 53, column: 21, scope: !7)
!111 = !DILocation(line: 53, column: 44, scope: !7)
!112 = !DILocation(line: 53, column: 42, scope: !7)
!113 = !DILocation(line: 53, column: 19, scope: !7)
!114 = !DILocation(line: 56, column: 21, scope: !7)
!115 = !DILocation(line: 56, column: 15, scope: !7)
!116 = !DILocation(line: 56, column: 13, scope: !7)
!117 = !DILocation(line: 57, column: 9, scope: !7)
!118 = !DILocation(line: 57, column: 24, scope: !7)
!119 = !DILocation(line: 57, column: 61, scope: !7)
!120 = !DILocation(line: 57, column: 3, scope: !7)
!121 = !DILocation(line: 58, column: 10, scope: !7)
!122 = !DILocation(line: 58, column: 3, scope: !7)
!123 = !DILocation(line: 62, column: 12, scope: !124)
!124 = distinct !DILexicalBlock(scope: !7, file: !8, line: 62, column: 3)
!125 = !DILocation(line: 62, column: 8, scope: !124)
!126 = !DILocation(line: 62, column: 17, scope: !127)
!127 = !DILexicalBlockFile(scope: !128, file: !8, discriminator: 2)
!128 = !DILexicalBlockFile(scope: !129, file: !8, discriminator: 1)
!129 = distinct !DILexicalBlock(scope: !124, file: !8, line: 62, column: 3)
!130 = !DILocation(line: 62, column: 23, scope: !129)
!131 = !DILocation(line: 62, column: 21, scope: !129)
!132 = !DILocation(line: 62, column: 3, scope: !124)
!133 = !DILocation(line: 63, column: 18, scope: !134)
!134 = distinct !DILexicalBlock(scope: !129, file: !8, line: 63, column: 5)
!135 = !DILocation(line: 63, column: 10, scope: !134)
!136 = !DILocation(line: 63, column: 23, scope: !137)
!137 = !DILexicalBlockFile(scope: !138, file: !8, discriminator: 2)
!138 = !DILexicalBlockFile(scope: !139, file: !8, discriminator: 1)
!139 = distinct !DILexicalBlock(scope: !134, file: !8, line: 63, column: 5)
!140 = !DILocation(line: 63, column: 33, scope: !139)
!141 = !DILocation(line: 63, column: 31, scope: !139)
!142 = !DILocation(line: 63, column: 5, scope: !134)
!143 = !DILocation(line: 68, column: 29, scope: !144)
!144 = distinct !DILexicalBlock(scope: !139, file: !8, line: 63, column: 59)
!145 = !DILocation(line: 68, column: 15, scope: !144)
!146 = !DILocation(line: 68, column: 13, scope: !144)
!147 = !DILocation(line: 69, column: 39, scope: !144)
!148 = !DILocation(line: 69, column: 45, scope: !144)
!149 = !DILocation(line: 69, column: 53, scope: !144)
!150 = !DILocation(line: 69, column: 59, scope: !144)
!151 = !DILocation(line: 69, column: 34, scope: !144)
!152 = !DILocation(line: 69, column: 23, scope: !144)
!153 = !DILocation(line: 69, column: 7, scope: !144)
!154 = !DILocation(line: 69, column: 32, scope: !144)
!155 = !DILocation(line: 71, column: 5, scope: !144)
!156 = !DILocation(line: 63, column: 55, scope: !139)
!157 = !DILocation(line: 63, column: 5, scope: !139)
!158 = !DILocation(line: 71, column: 5, scope: !134)
!159 = !DILocation(line: 62, column: 38, scope: !129)
!160 = !DILocation(line: 62, column: 3, scope: !129)
!161 = !DILocation(line: 75, column: 17, scope: !7)
!162 = !DILocation(line: 75, column: 15, scope: !7)
!163 = !DILocation(line: 76, column: 16, scope: !164)
!164 = distinct !DILexicalBlock(scope: !7, file: !8, line: 76, column: 3)
!165 = !DILocation(line: 76, column: 8, scope: !164)
!166 = !DILocation(line: 76, column: 21, scope: !167)
!167 = !DILexicalBlockFile(scope: !168, file: !8, discriminator: 2)
!168 = !DILexicalBlockFile(scope: !169, file: !8, discriminator: 1)
!169 = distinct !DILexicalBlock(scope: !164, file: !8, line: 76, column: 3)
!170 = !DILocation(line: 76, column: 32, scope: !169)
!171 = !DILocation(line: 76, column: 29, scope: !169)
!172 = !DILocation(line: 76, column: 3, scope: !164)
!173 = !DILocation(line: 77, column: 29, scope: !174)
!174 = distinct !DILexicalBlock(scope: !169, file: !8, line: 76, column: 64)
!175 = !DILocation(line: 77, column: 13, scope: !174)
!176 = !DILocation(line: 77, column: 11, scope: !174)
!177 = !DILocation(line: 78, column: 13, scope: !174)
!178 = !DILocation(line: 78, column: 37, scope: !174)
!179 = !DILocation(line: 78, column: 5, scope: !174)
!180 = !DILocation(line: 79, column: 3, scope: !174)
!181 = !DILocation(line: 76, column: 56, scope: !169)
!182 = !DILocation(line: 76, column: 3, scope: !169)
!183 = !DILocation(line: 81, column: 8, scope: !7)
!184 = !DILocation(line: 81, column: 3, scope: !7)
!185 = !DILocation(line: 82, column: 1, scope: !7)
