; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.id_rec = type { i8*, i32, i32, i32, i16, %struct.id_rec*, %struct.id_rec* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.program_counter = type { i32, i32 }
%struct.arg_list = type { i32, %struct.arg_list* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@arglist2 = internal global i8* null, align 8
@arglist1 = internal global i8* null, align 8
@.str = private unnamed_addr constant [26 x i8] c"duplicate parameter names\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"Array parameter\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"duplicate auto variable names\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"variable in both parameter and auto lists\00", align 1
@break_label = external global i32, align 4
@continue_label = external global i32, align 4
@next_label = external global i32, align 4
@out_count = external global i32, align 4
@compile_only = external global i8, align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"@i\00", align 1
@had_error = external global i32, align 4
@did_gen = external global i8, align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"@r\0A\00", align 1
@out_col = external global i32, align 4
@name_tree = external global %struct.id_rec*, align 8
@next_array = external global i32, align 4
@next_func = external global i32, align 4
@next_var = external global i32, align 4
@.str.8 = private unnamed_addr constant [26 x i8] c"multiple letter name - %s\00", align 1
@a_names = external global i8**, align 8
@a_count = external global i32, align 4
@.str.9 = private unnamed_addr constant [25 x i8] c"Too many array variables\00", align 1
@f_names = external global i8**, align 8
@f_count = external global i32, align 4
@.str.10 = private unnamed_addr constant [19 x i8] c"Too many functions\00", align 1
@v_names = external global i8**, align 8
@v_count = external global i32, align 4
@.str.11 = private unnamed_addr constant [19 x i8] c"Too many variables\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"This is free software with ABSOLUTELY NO WARRANTY.\0A\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"For details type . \0A\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"\0A%s%s\0A\0A\00", align 1
@.str.15 = private unnamed_addr constant [76 x i8] c"bc 1.02 (Mar 3, 92) Copyright (C) 1991, 1992 Free Software Foundation, Inc.\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"%s%s%s%s%s%s%s%s%s%s%s\00", align 1
@.str.17 = private unnamed_addr constant [74 x i8] c"    This program is free software; you can redistribute it and/or modify\0A\00", align 1
@.str.18 = private unnamed_addr constant [74 x i8] c"    it under the terms of the GNU General Public License as published by\0A\00", align 1
@.str.19 = private unnamed_addr constant [72 x i8] c"    the Free Software Foundation; either version 2 of the License , or\0A\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"    (at your option) any later version.\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [69 x i8] c"    This program is distributed in the hope that it will be useful,\0A\00", align 1
@.str.22 = private unnamed_addr constant [68 x i8] c"    but WITHOUT ANY WARRANTY; without even the implied warranty of\0A\00", align 1
@.str.23 = private unnamed_addr constant [67 x i8] c"    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A\00", align 1
@.str.24 = private unnamed_addr constant [51 x i8] c"    GNU General Public License for more details.\0A\0A\00", align 1
@.str.25 = private unnamed_addr constant [71 x i8] c"    You should have received a copy of the GNU General Public License\0A\00", align 1
@.str.26 = private unnamed_addr constant [65 x i8] c"    along with this program. If not, write to the Free Software\0A\00", align 1
@.str.27 = private unnamed_addr constant [58 x i8] c"    Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\0A\0A\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"BC_BASE_MAX     = %d\0A\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"BC_DIM_MAX      = %ld\0A\00", align 1
@.str.30 = private unnamed_addr constant [22 x i8] c"BC_SCALE_MAX    = %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [22 x i8] c"BC_STRING_MAX   = %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"MAX Exponent    = %ld\0A\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"MAX code        = %ld\0A\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"multiply digits = %ld\0A\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"Number of vars  = %ld\0A\00", align 1
@is_std_in = external global i8, align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"(standard_in)\00", align 1
@optind = external global i32, align 4
@g_argv = external global i8**, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str.37 = private unnamed_addr constant [8 x i8] c"%s %d: \00", align 1
@line_no = external global i32, align 4
@std_only = external global i8, align 1
@warn_not_std = external global i8, align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"%s %d: (Warning) \00", align 1
@.str.39 = private unnamed_addr constant [37 x i8] c"Runtime error (func=%s, adr=%d): %s\0A\00", align 1
@pc = external global %struct.program_counter, align 4
@runtime_error = external global i8, align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"Runtime warning (func=%s, adr=%d): %s\0A\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"%d,\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"%d\00", align 1

; Function Attrs: nounwind uwtable
define i8* @strcopyof(i8* %str) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !86, metadata !87), !dbg !88
  %call = call i64 @strlen(i8* %str) #7, !dbg !89
  %add = add i64 %call, 1, !dbg !90
  %call1 = call noalias i8* @malloc(i64 %add) #6, !dbg !91
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !92, metadata !87), !dbg !93
  %call2 = call i8* @strcpy(i8* %call1, i8* %str) #6, !dbg !94
  ret i8* %call1, !dbg !95
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #3

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define %struct.arg_list* @nextarg(%struct.arg_list* %args, i8 signext %val) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_list* %args, i64 0, metadata !96, metadata !87), !dbg !97
  call void @llvm.dbg.value(metadata i8 %val, i64 0, metadata !98, metadata !87), !dbg !99
  %call = call noalias i8* @malloc(i64 16) #6, !dbg !100
  %tmp = bitcast i8* %call to %struct.arg_list*, !dbg !101
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp, i64 0, metadata !102, metadata !87), !dbg !103
  %conv = sext i8 %val to i32, !dbg !104
  %av_name = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp, i32 0, i32 0, !dbg !105
  store i32 %conv, i32* %av_name, align 4, !dbg !106
  %next = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp, i32 0, i32 1, !dbg !107
  store %struct.arg_list* %args, %struct.arg_list** %next, align 8, !dbg !108
  ret %struct.arg_list* %tmp, !dbg !109
}

; Function Attrs: nounwind uwtable
define i8* @arg_str(%struct.arg_list* %args, i32 %commas) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_list* %args, i64 0, metadata !110, metadata !87), !dbg !111
  call void @llvm.dbg.value(metadata i32 %commas, i64 0, metadata !112, metadata !87), !dbg !113
  %tmp = load i8*, i8** @arglist2, align 8, !dbg !114
  %cmp = icmp ne i8* %tmp, null, !dbg !116
  br i1 %cmp, label %if.then, label %if.end, !dbg !117

if.then:                                          ; preds = %entry
  %tmp1 = load i8*, i8** @arglist2, align 8, !dbg !118
  call void @free(i8* %tmp1) #6, !dbg !119
  br label %if.end, !dbg !119

if.end:                                           ; preds = %if.then, %entry
  %tmp2 = load i8*, i8** @arglist1, align 8, !dbg !120
  store i8* %tmp2, i8** @arglist2, align 8, !dbg !121
  %call = call i8* @make_arg_str(%struct.arg_list* %args, i32 1, i32 %commas), !dbg !122
  store i8* %call, i8** @arglist1, align 8, !dbg !123
  %tmp5 = load i8*, i8** @arglist1, align 8, !dbg !124
  ret i8* %tmp5, !dbg !125
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define internal i8* @make_arg_str(%struct.arg_list* %args, i32 %len, i32 %commas) #0 {
entry:
  %sval = alloca [20 x i8], align 16
  call void @llvm.dbg.value(metadata %struct.arg_list* %args, i64 0, metadata !126, metadata !87), !dbg !127
  call void @llvm.dbg.value(metadata i32 %len, i64 0, metadata !128, metadata !87), !dbg !129
  call void @llvm.dbg.value(metadata i32 %commas, i64 0, metadata !130, metadata !87), !dbg !131
  call void @llvm.dbg.declare(metadata [20 x i8]* %sval, metadata !132, metadata !87), !dbg !136
  %cmp = icmp ne %struct.arg_list* %args, null, !dbg !137
  br i1 %cmp, label %if.then, label %if.else, !dbg !139

if.then:                                          ; preds = %entry
  %next = getelementptr inbounds %struct.arg_list, %struct.arg_list* %args, i32 0, i32 1, !dbg !140
  %tmp2 = load %struct.arg_list*, %struct.arg_list** %next, align 8, !dbg !140
  %add = add nsw i32 %len, 11, !dbg !141
  %call = call i8* @make_arg_str(%struct.arg_list* %tmp2, i32 %add, i32 %commas), !dbg !142
  call void @llvm.dbg.value(metadata i8* %call, i64 0, metadata !143, metadata !87), !dbg !144
  br label %if.end, !dbg !145

if.else:                                          ; preds = %entry
  %conv = sext i32 %len to i64, !dbg !146
  %call1 = call noalias i8* @malloc(i64 %conv) #6, !dbg !148
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !143, metadata !87), !dbg !144
  store i8 0, i8* %call1, align 1, !dbg !149
  br label %return, !dbg !150

if.end:                                           ; preds = %if.then
  %cmp2 = icmp ne i32 %len, 1, !dbg !151
  br i1 %cmp2, label %land.lhs.true, label %if.else.6, !dbg !153

land.lhs.true:                                    ; preds = %if.end
  %tobool = icmp ne i32 %commas, 0, !dbg !154
  br i1 %tobool, label %if.then.4, label %if.else.6, !dbg !156

if.then.4:                                        ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %sval, i32 0, i32 0, !dbg !157
  %av_name = getelementptr inbounds %struct.arg_list, %struct.arg_list* %args, i32 0, i32 0, !dbg !158
  %tmp11 = load i32, i32* %av_name, align 4, !dbg !158
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i32 %tmp11) #6, !dbg !159
  br label %if.end.10, !dbg !159

if.else.6:                                        ; preds = %land.lhs.true, %if.end
  %arraydecay7 = getelementptr inbounds [20 x i8], [20 x i8]* %sval, i32 0, i32 0, !dbg !160
  %av_name8 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %args, i32 0, i32 0, !dbg !161
  %tmp13 = load i32, i32* %av_name8, align 4, !dbg !161
  %call9 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i32 %tmp13) #6, !dbg !162
  br label %if.end.10

if.end.10:                                        ; preds = %if.else.6, %if.then.4
  %arraydecay11 = getelementptr inbounds [20 x i8], [20 x i8]* %sval, i32 0, i32 0, !dbg !163
  %call12 = call i8* @strcat(i8* %call, i8* %arraydecay11) #6, !dbg !164
  br label %return, !dbg !165

return:                                           ; preds = %if.end.10, %if.else
  %retval.0 = phi i8* [ %call, %if.end.10 ], [ %call1, %if.else ]
  ret i8* %retval.0, !dbg !166
}

; Function Attrs: nounwind uwtable
define void @free_args(%struct.arg_list* %args) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_list* %args, i64 0, metadata !167, metadata !87), !dbg !168
  call void @llvm.dbg.value(metadata %struct.arg_list* %args, i64 0, metadata !169, metadata !87), !dbg !170
  br label %while.cond, !dbg !171

while.cond:                                       ; preds = %while.body, %entry
  %temp.0 = phi %struct.arg_list* [ %args, %entry ], [ %tmp3, %while.body ]
  %args.addr.0 = phi %struct.arg_list* [ %args, %entry ], [ %tmp3, %while.body ]
  %cmp = icmp ne %struct.arg_list* %temp.0, null, !dbg !172
  br i1 %cmp, label %while.body, label %while.end, !dbg !171

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.arg_list, %struct.arg_list* %args.addr.0, i32 0, i32 1, !dbg !173
  %tmp3 = load %struct.arg_list*, %struct.arg_list** %next, align 8, !dbg !173
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp3, i64 0, metadata !167, metadata !87), !dbg !168
  %tmp5 = bitcast %struct.arg_list* %temp.0 to i8*, !dbg !175
  call void @free(i8* %tmp5) #6, !dbg !176
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp3, i64 0, metadata !169, metadata !87), !dbg !170
  br label %while.cond, !dbg !171

while.end:                                        ; preds = %while.cond
  ret void, !dbg !177
}

; Function Attrs: nounwind uwtable
define void @check_params(%struct.arg_list* %params, %struct.arg_list* %autos) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.arg_list* %params, i64 0, metadata !178, metadata !87), !dbg !179
  call void @llvm.dbg.value(metadata %struct.arg_list* %autos, i64 0, metadata !180, metadata !87), !dbg !181
  %cmp = icmp ne %struct.arg_list* %params, null, !dbg !182
  br i1 %cmp, label %if.then, label %if.end.15, !dbg !184

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.arg_list* %params, i64 0, metadata !185, metadata !87), !dbg !186
  br label %while.cond, !dbg !187

while.cond:                                       ; preds = %if.end.12, %if.then
  %tmp1.0 = phi %struct.arg_list* [ %params, %if.then ], [ %tmp17, %if.end.12 ]
  %cmp1 = icmp ne %struct.arg_list* %tmp1.0, null, !dbg !189
  br i1 %cmp1, label %while.body, label %while.end.14, !dbg !187

while.body:                                       ; preds = %while.cond
  %next = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.0, i32 0, i32 1, !dbg !190
  %tmp6 = load %struct.arg_list*, %struct.arg_list** %next, align 8, !dbg !190
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp6, i64 0, metadata !192, metadata !87), !dbg !193
  br label %while.cond.2, !dbg !194

while.cond.2:                                     ; preds = %if.end, %while.body
  %tmp2.0 = phi %struct.arg_list* [ %tmp6, %while.body ], [ %tmp13, %if.end ]
  %cmp3 = icmp ne %struct.arg_list* %tmp2.0, null, !dbg !195
  br i1 %cmp3, label %while.body.4, label %while.end, !dbg !194

while.body.4:                                     ; preds = %while.cond.2
  %av_name = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp2.0, i32 0, i32 0, !dbg !196
  %tmp9 = load i32, i32* %av_name, align 4, !dbg !196
  %av_name5 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.0, i32 0, i32 0, !dbg !199
  %tmp11 = load i32, i32* %av_name5, align 4, !dbg !199
  %cmp6 = icmp eq i32 %tmp9, %tmp11, !dbg !200
  br i1 %cmp6, label %if.then.7, label %if.end, !dbg !201

if.then.7:                                        ; preds = %while.body.4
  call void (i8*, ...) @yyerror(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0)), !dbg !202
  br label %if.end, !dbg !202

if.end:                                           ; preds = %if.then.7, %while.body.4
  %next8 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp2.0, i32 0, i32 1, !dbg !203
  %tmp13 = load %struct.arg_list*, %struct.arg_list** %next8, align 8, !dbg !203
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp13, i64 0, metadata !192, metadata !87), !dbg !193
  br label %while.cond.2, !dbg !194

while.end:                                        ; preds = %while.cond.2
  %av_name9 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.0, i32 0, i32 0, !dbg !204
  %tmp15 = load i32, i32* %av_name9, align 4, !dbg !204
  %cmp10 = icmp slt i32 %tmp15, 0, !dbg !206
  br i1 %cmp10, label %if.then.11, label %if.end.12, !dbg !207

if.then.11:                                       ; preds = %while.end
  call void (i8*, ...) @warn(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0)), !dbg !208
  br label %if.end.12, !dbg !208

if.end.12:                                        ; preds = %if.then.11, %while.end
  %next13 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.0, i32 0, i32 1, !dbg !209
  %tmp17 = load %struct.arg_list*, %struct.arg_list** %next13, align 8, !dbg !209
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp17, i64 0, metadata !185, metadata !87), !dbg !186
  br label %while.cond, !dbg !187

while.end.14:                                     ; preds = %while.cond
  br label %if.end.15, !dbg !210

if.end.15:                                        ; preds = %while.end.14, %entry
  %cmp16 = icmp ne %struct.arg_list* %autos, null, !dbg !211
  br i1 %cmp16, label %if.then.17, label %if.end.34, !dbg !213

if.then.17:                                       ; preds = %if.end.15
  call void @llvm.dbg.value(metadata %struct.arg_list* %autos, i64 0, metadata !185, metadata !87), !dbg !186
  br label %while.cond.18, !dbg !214

while.cond.18:                                    ; preds = %while.end.31, %if.then.17
  %tmp1.1 = phi %struct.arg_list* [ %autos, %if.then.17 ], [ %tmp31, %while.end.31 ]
  %cmp19 = icmp ne %struct.arg_list* %tmp1.1, null, !dbg !216
  br i1 %cmp19, label %while.body.20, label %while.end.33, !dbg !214

while.body.20:                                    ; preds = %while.cond.18
  %next21 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.1, i32 0, i32 1, !dbg !217
  %tmp22 = load %struct.arg_list*, %struct.arg_list** %next21, align 8, !dbg !217
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp22, i64 0, metadata !192, metadata !87), !dbg !193
  br label %while.cond.22, !dbg !219

while.cond.22:                                    ; preds = %if.end.29, %while.body.20
  %tmp2.1 = phi %struct.arg_list* [ %tmp22, %while.body.20 ], [ %tmp29, %if.end.29 ]
  %cmp23 = icmp ne %struct.arg_list* %tmp2.1, null, !dbg !220
  br i1 %cmp23, label %while.body.24, label %while.end.31, !dbg !219

while.body.24:                                    ; preds = %while.cond.22
  %av_name25 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp2.1, i32 0, i32 0, !dbg !221
  %tmp25 = load i32, i32* %av_name25, align 4, !dbg !221
  %av_name26 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.1, i32 0, i32 0, !dbg !224
  %tmp27 = load i32, i32* %av_name26, align 4, !dbg !224
  %cmp27 = icmp eq i32 %tmp25, %tmp27, !dbg !225
  br i1 %cmp27, label %if.then.28, label %if.end.29, !dbg !226

if.then.28:                                       ; preds = %while.body.24
  call void (i8*, ...) @yyerror(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i32 0, i32 0)), !dbg !227
  br label %if.end.29, !dbg !227

if.end.29:                                        ; preds = %if.then.28, %while.body.24
  %next30 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp2.1, i32 0, i32 1, !dbg !228
  %tmp29 = load %struct.arg_list*, %struct.arg_list** %next30, align 8, !dbg !228
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp29, i64 0, metadata !192, metadata !87), !dbg !193
  br label %while.cond.22, !dbg !219

while.end.31:                                     ; preds = %while.cond.22
  %next32 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.1, i32 0, i32 1, !dbg !229
  %tmp31 = load %struct.arg_list*, %struct.arg_list** %next32, align 8, !dbg !229
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp31, i64 0, metadata !185, metadata !87), !dbg !186
  br label %while.cond.18, !dbg !214

while.end.33:                                     ; preds = %while.cond.18
  br label %if.end.34, !dbg !230

if.end.34:                                        ; preds = %while.end.33, %if.end.15
  %cmp35 = icmp ne %struct.arg_list* %params, null, !dbg !231
  br i1 %cmp35, label %land.lhs.true, label %if.end.53, !dbg !233

land.lhs.true:                                    ; preds = %if.end.34
  %cmp36 = icmp ne %struct.arg_list* %autos, null, !dbg !234
  br i1 %cmp36, label %if.then.37, label %if.end.53, !dbg !235

if.then.37:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.arg_list* %params, i64 0, metadata !185, metadata !87), !dbg !186
  br label %while.cond.38, !dbg !236

while.cond.38:                                    ; preds = %while.end.50, %if.then.37
  %tmp1.2 = phi %struct.arg_list* [ %params, %if.then.37 ], [ %tmp45, %while.end.50 ]
  %cmp39 = icmp ne %struct.arg_list* %tmp1.2, null, !dbg !238
  br i1 %cmp39, label %while.body.40, label %while.end.52, !dbg !236

while.body.40:                                    ; preds = %while.cond.38
  call void @llvm.dbg.value(metadata %struct.arg_list* %autos, i64 0, metadata !192, metadata !87), !dbg !193
  br label %while.cond.41, !dbg !239

while.cond.41:                                    ; preds = %if.end.48, %while.body.40
  %tmp2.2 = phi %struct.arg_list* [ %autos, %while.body.40 ], [ %tmp43, %if.end.48 ]
  %cmp42 = icmp ne %struct.arg_list* %tmp2.2, null, !dbg !241
  br i1 %cmp42, label %while.body.43, label %while.end.50, !dbg !239

while.body.43:                                    ; preds = %while.cond.41
  %av_name44 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp2.2, i32 0, i32 0, !dbg !242
  %tmp39 = load i32, i32* %av_name44, align 4, !dbg !242
  %av_name45 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.2, i32 0, i32 0, !dbg !245
  %tmp41 = load i32, i32* %av_name45, align 4, !dbg !245
  %cmp46 = icmp eq i32 %tmp39, %tmp41, !dbg !246
  br i1 %cmp46, label %if.then.47, label %if.end.48, !dbg !247

if.then.47:                                       ; preds = %while.body.43
  call void (i8*, ...) @yyerror(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i32 0, i32 0)), !dbg !248
  br label %if.end.48, !dbg !248

if.end.48:                                        ; preds = %if.then.47, %while.body.43
  %next49 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp2.2, i32 0, i32 1, !dbg !249
  %tmp43 = load %struct.arg_list*, %struct.arg_list** %next49, align 8, !dbg !249
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp43, i64 0, metadata !192, metadata !87), !dbg !193
  br label %while.cond.41, !dbg !239

while.end.50:                                     ; preds = %while.cond.41
  %next51 = getelementptr inbounds %struct.arg_list, %struct.arg_list* %tmp1.2, i32 0, i32 1, !dbg !250
  %tmp45 = load %struct.arg_list*, %struct.arg_list** %next51, align 8, !dbg !250
  call void @llvm.dbg.value(metadata %struct.arg_list* %tmp45, i64 0, metadata !185, metadata !87), !dbg !186
  br label %while.cond.38, !dbg !236

while.end.52:                                     ; preds = %while.cond.38
  br label %if.end.53, !dbg !251

if.end.53:                                        ; preds = %while.end.52, %land.lhs.true, %if.end.34
  ret void, !dbg !252
}

; Function Attrs: nounwind uwtable
define void @yyerror(i8* %str, ...) #0 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !253, metadata !87), !dbg !254
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !255, metadata !87), !dbg !272
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !273
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !273
  call void @llvm.va_start(i8* %arraydecay1), !dbg !273
  %tmp = load i8, i8* @is_std_in, align 1, !dbg !274
  %tobool = icmp ne i8 %tmp, 0, !dbg !274
  br i1 %tobool, label %if.then, label %if.else, !dbg !276

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i64 0, metadata !277, metadata !87), !dbg !278
  br label %if.end, !dbg !279

if.else:                                          ; preds = %entry
  %tmp1 = load i32, i32* @optind, align 4, !dbg !280
  %sub = sub nsw i32 %tmp1, 1, !dbg !281
  %idxprom = sext i32 %sub to i64, !dbg !282
  %tmp2 = load i8**, i8*** @g_argv, align 8, !dbg !282
  %arrayidx = getelementptr inbounds i8*, i8** %tmp2, i64 %idxprom, !dbg !282
  %tmp3 = load i8*, i8** %arrayidx, align 8, !dbg !282
  call void @llvm.dbg.value(metadata i8* %tmp3, i64 0, metadata !277, metadata !87), !dbg !278
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %name.0 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), %if.then ], [ %tmp3, %if.else ]
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !283
  %tmp6 = load i32, i32* @line_no, align 4, !dbg !284
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i8* %name.0, i32 %tmp6), !dbg !285
  %tmp7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !286
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !287
  %call3 = call i32 @vfprintf(%struct._IO_FILE* %tmp7, i8* %str, %struct.__va_list_tag* %arraydecay2), !dbg !288
  %tmp9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !289
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !290
  store i32 1, i32* @had_error, align 4, !dbg !291
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !292
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !292
  call void @llvm.va_end(i8* %arraydecay56), !dbg !292
  ret void, !dbg !293
}

; Function Attrs: nounwind uwtable
define void @warn(i8* %mesg, ...) #0 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i8* %mesg, i64 0, metadata !294, metadata !87), !dbg !295
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !296, metadata !87), !dbg !297
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !298
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !298
  call void @llvm.va_start(i8* %arraydecay1), !dbg !298
  %tmp = load i8, i8* @std_only, align 1, !dbg !299
  %tobool = icmp ne i8 %tmp, 0, !dbg !299
  br i1 %tobool, label %if.then, label %if.else.7, !dbg !301

if.then:                                          ; preds = %entry
  %tmp1 = load i8, i8* @is_std_in, align 1, !dbg !302
  %tobool2 = icmp ne i8 %tmp1, 0, !dbg !302
  br i1 %tobool2, label %if.then.3, label %if.else, !dbg !305

if.then.3:                                        ; preds = %if.then
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i64 0, metadata !306, metadata !87), !dbg !307
  br label %if.end, !dbg !308

if.else:                                          ; preds = %if.then
  %tmp2 = load i32, i32* @optind, align 4, !dbg !309
  %sub = sub nsw i32 %tmp2, 1, !dbg !310
  %idxprom = sext i32 %sub to i64, !dbg !311
  %tmp3 = load i8**, i8*** @g_argv, align 8, !dbg !311
  %arrayidx = getelementptr inbounds i8*, i8** %tmp3, i64 %idxprom, !dbg !311
  %tmp4 = load i8*, i8** %arrayidx, align 8, !dbg !311
  call void @llvm.dbg.value(metadata i8* %tmp4, i64 0, metadata !306, metadata !87), !dbg !307
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %name.0 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), %if.then.3 ], [ %tmp4, %if.else ]
  %tmp5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !312
  %tmp7 = load i32, i32* @line_no, align 4, !dbg !313
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), i8* %name.0, i32 %tmp7), !dbg !314
  %tmp8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !315
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !316
  %call5 = call i32 @vfprintf(%struct._IO_FILE* %tmp8, i8* %mesg, %struct.__va_list_tag* %arraydecay4), !dbg !317
  %tmp10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !318
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !319
  store i32 1, i32* @had_error, align 4, !dbg !320
  br label %if.end.22, !dbg !321

if.else.7:                                        ; preds = %entry
  %tmp11 = load i8, i8* @warn_not_std, align 1, !dbg !322
  %tobool8 = icmp ne i8 %tmp11, 0, !dbg !322
  br i1 %tobool8, label %if.then.9, label %if.end.21, !dbg !324

if.then.9:                                        ; preds = %if.else.7
  %tmp12 = load i8, i8* @is_std_in, align 1, !dbg !325
  %tobool10 = icmp ne i8 %tmp12, 0, !dbg !325
  br i1 %tobool10, label %if.then.11, label %if.else.12, !dbg !328

if.then.11:                                       ; preds = %if.then.9
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i64 0, metadata !306, metadata !87), !dbg !307
  br label %if.end.16, !dbg !329

if.else.12:                                       ; preds = %if.then.9
  %tmp13 = load i32, i32* @optind, align 4, !dbg !330
  %sub13 = sub nsw i32 %tmp13, 1, !dbg !331
  %idxprom14 = sext i32 %sub13 to i64, !dbg !332
  %tmp14 = load i8**, i8*** @g_argv, align 8, !dbg !332
  %arrayidx15 = getelementptr inbounds i8*, i8** %tmp14, i64 %idxprom14, !dbg !332
  %tmp15 = load i8*, i8** %arrayidx15, align 8, !dbg !332
  call void @llvm.dbg.value(metadata i8* %tmp15, i64 0, metadata !306, metadata !87), !dbg !307
  br label %if.end.16

if.end.16:                                        ; preds = %if.else.12, %if.then.11
  %name.1 = phi i8* [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), %if.then.11 ], [ %tmp15, %if.else.12 ]
  %tmp16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !333
  %tmp18 = load i32, i32* @line_no, align 4, !dbg !334
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i32 0, i32 0), i8* %name.1, i32 %tmp18), !dbg !335
  %tmp19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !336
  %arraydecay18 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !337
  %call19 = call i32 @vfprintf(%struct._IO_FILE* %tmp19, i8* %mesg, %struct.__va_list_tag* %arraydecay18), !dbg !338
  %tmp21 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !339
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !340
  br label %if.end.21, !dbg !341

if.end.21:                                        ; preds = %if.end.16, %if.else.7
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.end
  %arraydecay23 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !342
  %arraydecay2324 = bitcast %struct.__va_list_tag* %arraydecay23 to i8*, !dbg !342
  call void @llvm.va_end(i8* %arraydecay2324), !dbg !342
  ret void, !dbg !343
}

; Function Attrs: nounwind uwtable
define void @init_gen() #0 {
entry:
  store i32 0, i32* @break_label, align 4, !dbg !344
  store i32 0, i32* @continue_label, align 4, !dbg !345
  store i32 1, i32* @next_label, align 4, !dbg !346
  store i32 2, i32* @out_count, align 4, !dbg !347
  %tmp = load i8, i8* @compile_only, align 1, !dbg !348
  %tobool = icmp ne i8 %tmp, 0, !dbg !348
  br i1 %tobool, label %if.then, label %if.else, !dbg !350

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)), !dbg !351
  br label %if.end, !dbg !351

if.else:                                          ; preds = %entry
  call void @init_load(), !dbg !352
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* @had_error, align 4, !dbg !353
  store i8 0, i8* @did_gen, align 1, !dbg !354
  ret void, !dbg !355
}

declare i32 @printf(i8*, ...) #4

declare void @init_load() #4

; Function Attrs: nounwind uwtable
define void @generate(i8* %str) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %str, i64 0, metadata !356, metadata !87), !dbg !357
  store i8 1, i8* @did_gen, align 1, !dbg !358
  %tmp = load i8, i8* @compile_only, align 1, !dbg !359
  %tobool = icmp ne i8 %tmp, 0, !dbg !359
  br i1 %tobool, label %if.then, label %if.else, !dbg !361

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8* %str), !dbg !362
  %call1 = call i64 @strlen(i8* %str) #7, !dbg !364
  %tmp3 = load i32, i32* @out_count, align 4, !dbg !365
  %conv = sext i32 %tmp3 to i64, !dbg !365
  %add = add i64 %conv, %call1, !dbg !365
  %conv2 = trunc i64 %add to i32, !dbg !365
  store i32 %conv2, i32* @out_count, align 4, !dbg !365
  %tmp4 = load i32, i32* @out_count, align 4, !dbg !366
  %cmp = icmp sgt i32 %tmp4, 60, !dbg !368
  br i1 %cmp, label %if.then.4, label %if.end, !dbg !369

if.then.4:                                        ; preds = %if.then
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !370
  store i32 0, i32* @out_count, align 4, !dbg !372
  br label %if.end, !dbg !373

if.end:                                           ; preds = %if.then.4, %if.then
  br label %if.end.6, !dbg !374

if.else:                                          ; preds = %entry
  call void @load_code(i8* %str), !dbg !375
  br label %if.end.6

if.end.6:                                         ; preds = %if.else, %if.end
  ret void, !dbg !376
}

declare void @load_code(i8*) #4

; Function Attrs: nounwind uwtable
define void @run_code() #0 {
entry:
  %tmp = load i32, i32* @had_error, align 4, !dbg !377
  %tobool = icmp ne i32 %tmp, 0, !dbg !377
  br i1 %tobool, label %if.end.4, label %land.lhs.true, !dbg !379

land.lhs.true:                                    ; preds = %entry
  %tmp1 = load i8, i8* @did_gen, align 1, !dbg !380
  %conv = sext i8 %tmp1 to i32, !dbg !380
  %tobool1 = icmp ne i32 %conv, 0, !dbg !380
  br i1 %tobool1, label %if.then, label %if.end.4, !dbg !382

if.then:                                          ; preds = %land.lhs.true
  %tmp2 = load i8, i8* @compile_only, align 1, !dbg !383
  %tobool2 = icmp ne i8 %tmp2, 0, !dbg !383
  br i1 %tobool2, label %if.then.3, label %if.else, !dbg !386

if.then.3:                                        ; preds = %if.then
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0)), !dbg !387
  store i32 0, i32* @out_count, align 4, !dbg !389
  br label %if.end, !dbg !390

if.else:                                          ; preds = %if.then
  call void @execute(), !dbg !391
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  br label %if.end.4, !dbg !392

if.end.4:                                         ; preds = %if.end, %land.lhs.true, %entry
  %tmp3 = load i8, i8* @did_gen, align 1, !dbg !393
  %tobool5 = icmp ne i8 %tmp3, 0, !dbg !393
  br i1 %tobool5, label %if.then.6, label %if.else.7, !dbg !395

if.then.6:                                        ; preds = %if.end.4
  call void @init_gen(), !dbg !396
  br label %if.end.8, !dbg !396

if.else.7:                                        ; preds = %if.end.4
  store i32 0, i32* @had_error, align 4, !dbg !397
  br label %if.end.8

if.end.8:                                         ; preds = %if.else.7, %if.then.6
  ret void, !dbg !398
}

declare void @execute() #4

; Function Attrs: nounwind uwtable
define void @out_char(i8 signext %ch) #0 {
entry:
  call void @llvm.dbg.value(metadata i8 %ch, i64 0, metadata !399, metadata !87), !dbg !400
  %conv = sext i8 %ch to i32, !dbg !401
  %cmp = icmp eq i32 %conv, 10, !dbg !403
  br i1 %cmp, label %if.then, label %if.else, !dbg !404

if.then:                                          ; preds = %entry
  store i32 0, i32* @out_col, align 4, !dbg !405
  %call = call i32 @putchar(i32 10), !dbg !407
  br label %if.end.9, !dbg !408

if.else:                                          ; preds = %entry
  %tmp1 = load i32, i32* @out_col, align 4, !dbg !409
  %inc = add nsw i32 %tmp1, 1, !dbg !409
  store i32 %inc, i32* @out_col, align 4, !dbg !409
  %tmp2 = load i32, i32* @out_col, align 4, !dbg !411
  %cmp2 = icmp eq i32 %tmp2, 70, !dbg !413
  br i1 %cmp2, label %if.then.4, label %if.end, !dbg !414

if.then.4:                                        ; preds = %if.else
  %call5 = call i32 @putchar(i32 92), !dbg !415
  %call6 = call i32 @putchar(i32 10), !dbg !417
  store i32 1, i32* @out_col, align 4, !dbg !418
  br label %if.end, !dbg !419

if.end:                                           ; preds = %if.then.4, %if.else
  %conv7 = sext i8 %ch to i32, !dbg !420
  %call8 = call i32 @putchar(i32 %conv7), !dbg !421
  br label %if.end.9

if.end.9:                                         ; preds = %if.end, %if.then
  ret void, !dbg !422
}

declare i32 @putchar(i32) #4

; Function Attrs: nounwind uwtable
define %struct.id_rec* @find_id(%struct.id_rec* %tree, i8* %id) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.id_rec* %tree, i64 0, metadata !423, metadata !87), !dbg !424
  call void @llvm.dbg.value(metadata i8* %id, i64 0, metadata !425, metadata !87), !dbg !426
  %cmp = icmp eq %struct.id_rec* %tree, null, !dbg !427
  br i1 %cmp, label %if.then, label %if.end, !dbg !429

if.then:                                          ; preds = %entry
  br label %return, !dbg !430

if.end:                                           ; preds = %entry
  %id1 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tree, i32 0, i32 0, !dbg !431
  %tmp3 = load i8*, i8** %id1, align 8, !dbg !431
  %call = call i32 @strcmp(i8* %id, i8* %tmp3) #7, !dbg !432
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !433, metadata !87), !dbg !434
  %cmp2 = icmp eq i32 %call, 0, !dbg !435
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !437

if.then.3:                                        ; preds = %if.end
  br label %return, !dbg !438

if.else:                                          ; preds = %if.end
  %cmp4 = icmp slt i32 %call, 0, !dbg !439
  br i1 %cmp4, label %if.then.5, label %if.else.7, !dbg !441

if.then.5:                                        ; preds = %if.else
  %left = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tree, i32 0, i32 5, !dbg !442
  %tmp8 = load %struct.id_rec*, %struct.id_rec** %left, align 8, !dbg !442
  %call6 = call %struct.id_rec* @find_id(%struct.id_rec* %tmp8, i8* %id), !dbg !443
  br label %return, !dbg !444

if.else.7:                                        ; preds = %if.else
  %right = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tree, i32 0, i32 6, !dbg !445
  %tmp11 = load %struct.id_rec*, %struct.id_rec** %right, align 8, !dbg !445
  %call8 = call %struct.id_rec* @find_id(%struct.id_rec* %tmp11, i8* %id), !dbg !446
  br label %return, !dbg !447

return:                                           ; preds = %if.else.7, %if.then.5, %if.then.3, %if.then
  %retval.0 = phi %struct.id_rec* [ null, %if.then ], [ %tree, %if.then.3 ], [ %call6, %if.then.5 ], [ %call8, %if.else.7 ]
  ret %struct.id_rec* %retval.0, !dbg !448
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define i32 @insert_id_rec(%struct.id_rec** %root, %struct.id_rec* %new_id) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.id_rec** %root, i64 0, metadata !449, metadata !87), !dbg !450
  call void @llvm.dbg.value(metadata %struct.id_rec* %new_id, i64 0, metadata !451, metadata !87), !dbg !452
  %tmp1 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !453
  %cmp = icmp eq %struct.id_rec* %tmp1, null, !dbg !455
  br i1 %cmp, label %if.then, label %if.end, !dbg !456

if.then:                                          ; preds = %entry
  store %struct.id_rec* %new_id, %struct.id_rec** %root, align 8, !dbg !457
  %left = getelementptr inbounds %struct.id_rec, %struct.id_rec* %new_id, i32 0, i32 5, !dbg !459
  store %struct.id_rec* null, %struct.id_rec** %left, align 8, !dbg !460
  %right = getelementptr inbounds %struct.id_rec, %struct.id_rec* %new_id, i32 0, i32 6, !dbg !461
  store %struct.id_rec* null, %struct.id_rec** %right, align 8, !dbg !462
  %balance = getelementptr inbounds %struct.id_rec, %struct.id_rec* %new_id, i32 0, i32 4, !dbg !463
  store i16 0, i16* %balance, align 2, !dbg !464
  br label %return, !dbg !465

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.id_rec, %struct.id_rec* %new_id, i32 0, i32 0, !dbg !466
  %tmp8 = load i8*, i8** %id, align 8, !dbg !466
  %tmp10 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !468
  %id1 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp10, i32 0, i32 0, !dbg !469
  %tmp11 = load i8*, i8** %id1, align 8, !dbg !469
  %call = call i32 @strcmp(i8* %tmp8, i8* %tmp11) #7, !dbg !470
  %cmp2 = icmp slt i32 %call, 0, !dbg !471
  br i1 %cmp2, label %if.then.3, label %if.else.44, !dbg !472

if.then.3:                                        ; preds = %if.end
  %tmp13 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !473
  %left4 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp13, i32 0, i32 5, !dbg !476
  %call5 = call i32 @insert_id_rec(%struct.id_rec** %left4, %struct.id_rec* %new_id), !dbg !477
  %tobool = icmp ne i32 %call5, 0, !dbg !477
  br i1 %tobool, label %if.then.6, label %if.end.43, !dbg !478

if.then.6:                                        ; preds = %if.then.3
  %tmp16 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !479
  %balance7 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp16, i32 0, i32 4, !dbg !481
  %tmp17 = load i16, i16* %balance7, align 2, !dbg !482
  %dec = add i16 %tmp17, -1, !dbg !482
  store i16 %dec, i16* %balance7, align 2, !dbg !482
  %tmp19 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !483
  %balance8 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp19, i32 0, i32 4, !dbg !484
  %tmp20 = load i16, i16* %balance8, align 2, !dbg !484
  %conv = sext i16 %tmp20 to i32, !dbg !485
  switch i32 %conv, label %sw.epilog.42 [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb.9
    i32 -2, label %sw.bb.10
  ], !dbg !486

sw.bb:                                            ; preds = %if.then.6
  br label %return, !dbg !487

sw.bb.9:                                          ; preds = %if.then.6
  br label %return, !dbg !489

sw.bb.10:                                         ; preds = %if.then.6
  %tmp22 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !490
  call void @llvm.dbg.value(metadata %struct.id_rec* %tmp22, i64 0, metadata !491, metadata !87), !dbg !492
  %tmp24 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !493
  %left11 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp24, i32 0, i32 5, !dbg !494
  %tmp25 = load %struct.id_rec*, %struct.id_rec** %left11, align 8, !dbg !494
  call void @llvm.dbg.value(metadata %struct.id_rec* %tmp25, i64 0, metadata !495, metadata !87), !dbg !496
  %balance12 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 4, !dbg !497
  %tmp27 = load i16, i16* %balance12, align 2, !dbg !497
  %conv13 = sext i16 %tmp27 to i32, !dbg !499
  %cmp14 = icmp sle i32 %conv13, 0, !dbg !500
  br i1 %cmp14, label %if.then.16, label %if.else, !dbg !501

if.then.16:                                       ; preds = %sw.bb.10
  %right17 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 6, !dbg !502
  %tmp29 = load %struct.id_rec*, %struct.id_rec** %right17, align 8, !dbg !502
  %left18 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp22, i32 0, i32 5, !dbg !504
  store %struct.id_rec* %tmp29, %struct.id_rec** %left18, align 8, !dbg !505
  %right19 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 6, !dbg !506
  store %struct.id_rec* %tmp22, %struct.id_rec** %right19, align 8, !dbg !507
  store %struct.id_rec* %tmp25, %struct.id_rec** %root, align 8, !dbg !508
  %balance20 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp22, i32 0, i32 4, !dbg !509
  store i16 0, i16* %balance20, align 2, !dbg !510
  %balance21 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 4, !dbg !511
  store i16 0, i16* %balance21, align 2, !dbg !512
  br label %if.end.41, !dbg !513

if.else:                                          ; preds = %sw.bb.10
  %right22 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 6, !dbg !514
  %tmp38 = load %struct.id_rec*, %struct.id_rec** %right22, align 8, !dbg !514
  store %struct.id_rec* %tmp38, %struct.id_rec** %root, align 8, !dbg !516
  %tmp41 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !517
  %left23 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp41, i32 0, i32 5, !dbg !518
  %tmp42 = load %struct.id_rec*, %struct.id_rec** %left23, align 8, !dbg !518
  %right24 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 6, !dbg !519
  store %struct.id_rec* %tmp42, %struct.id_rec** %right24, align 8, !dbg !520
  %tmp45 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !521
  %right25 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp45, i32 0, i32 6, !dbg !522
  %tmp46 = load %struct.id_rec*, %struct.id_rec** %right25, align 8, !dbg !522
  %left26 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp22, i32 0, i32 5, !dbg !523
  store %struct.id_rec* %tmp46, %struct.id_rec** %left26, align 8, !dbg !524
  %tmp50 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !525
  %left27 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp50, i32 0, i32 5, !dbg !526
  store %struct.id_rec* %tmp25, %struct.id_rec** %left27, align 8, !dbg !527
  %tmp53 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !528
  %right28 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp53, i32 0, i32 6, !dbg !529
  store %struct.id_rec* %tmp22, %struct.id_rec** %right28, align 8, !dbg !530
  %tmp55 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !531
  %balance29 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp55, i32 0, i32 4, !dbg !532
  %tmp56 = load i16, i16* %balance29, align 2, !dbg !532
  %conv30 = sext i16 %tmp56 to i32, !dbg !533
  switch i32 %conv30, label %sw.epilog [
    i32 -1, label %sw.bb.31
    i32 0, label %sw.bb.34
    i32 1, label %sw.bb.37
  ], !dbg !534

sw.bb.31:                                         ; preds = %if.else
  %balance32 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp22, i32 0, i32 4, !dbg !535
  store i16 1, i16* %balance32, align 2, !dbg !537
  %balance33 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 4, !dbg !538
  store i16 0, i16* %balance33, align 2, !dbg !539
  br label %sw.epilog, !dbg !540

sw.bb.34:                                         ; preds = %if.else
  %balance35 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp22, i32 0, i32 4, !dbg !541
  store i16 0, i16* %balance35, align 2, !dbg !542
  %balance36 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 4, !dbg !543
  store i16 0, i16* %balance36, align 2, !dbg !544
  br label %sw.epilog, !dbg !545

sw.bb.37:                                         ; preds = %if.else
  %balance38 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp22, i32 0, i32 4, !dbg !546
  store i16 0, i16* %balance38, align 2, !dbg !547
  %balance39 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp25, i32 0, i32 4, !dbg !548
  store i16 -1, i16* %balance39, align 2, !dbg !549
  br label %sw.epilog, !dbg !550

sw.epilog:                                        ; preds = %sw.bb.37, %sw.bb.34, %sw.bb.31, %if.else
  %tmp64 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !551
  %balance40 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp64, i32 0, i32 4, !dbg !552
  store i16 0, i16* %balance40, align 2, !dbg !553
  br label %if.end.41

if.end.41:                                        ; preds = %sw.epilog, %if.then.16
  br label %sw.epilog.42, !dbg !554

sw.epilog.42:                                     ; preds = %if.end.41, %if.then.6
  br label %if.end.43, !dbg !555

if.end.43:                                        ; preds = %sw.epilog.42, %if.then.3
  br label %if.end.90, !dbg !556

if.else.44:                                       ; preds = %if.end
  %tmp66 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !557
  %right45 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp66, i32 0, i32 6, !dbg !560
  %call46 = call i32 @insert_id_rec(%struct.id_rec** %right45, %struct.id_rec* %new_id), !dbg !561
  %tobool47 = icmp ne i32 %call46, 0, !dbg !561
  br i1 %tobool47, label %if.then.48, label %if.end.89, !dbg !562

if.then.48:                                       ; preds = %if.else.44
  %tmp69 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !563
  %balance49 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp69, i32 0, i32 4, !dbg !565
  %tmp70 = load i16, i16* %balance49, align 2, !dbg !566
  %inc = add i16 %tmp70, 1, !dbg !566
  store i16 %inc, i16* %balance49, align 2, !dbg !566
  %tmp72 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !567
  %balance50 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp72, i32 0, i32 4, !dbg !568
  %tmp73 = load i16, i16* %balance50, align 2, !dbg !568
  %conv51 = sext i16 %tmp73 to i32, !dbg !569
  switch i32 %conv51, label %sw.epilog.88 [
    i32 0, label %sw.bb.52
    i32 1, label %sw.bb.53
    i32 2, label %sw.bb.54
  ], !dbg !570

sw.bb.52:                                         ; preds = %if.then.48
  br label %return, !dbg !571

sw.bb.53:                                         ; preds = %if.then.48
  br label %return, !dbg !573

sw.bb.54:                                         ; preds = %if.then.48
  %tmp75 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !574
  call void @llvm.dbg.value(metadata %struct.id_rec* %tmp75, i64 0, metadata !491, metadata !87), !dbg !492
  %tmp77 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !575
  %right55 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp77, i32 0, i32 6, !dbg !576
  %tmp78 = load %struct.id_rec*, %struct.id_rec** %right55, align 8, !dbg !576
  call void @llvm.dbg.value(metadata %struct.id_rec* %tmp78, i64 0, metadata !495, metadata !87), !dbg !496
  %balance56 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 4, !dbg !577
  %tmp80 = load i16, i16* %balance56, align 2, !dbg !577
  %conv57 = sext i16 %tmp80 to i32, !dbg !579
  %cmp58 = icmp sge i32 %conv57, 0, !dbg !580
  br i1 %cmp58, label %if.then.60, label %if.else.66, !dbg !581

if.then.60:                                       ; preds = %sw.bb.54
  %left61 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 5, !dbg !582
  %tmp82 = load %struct.id_rec*, %struct.id_rec** %left61, align 8, !dbg !582
  %right62 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp75, i32 0, i32 6, !dbg !584
  store %struct.id_rec* %tmp82, %struct.id_rec** %right62, align 8, !dbg !585
  %left63 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 5, !dbg !586
  store %struct.id_rec* %tmp75, %struct.id_rec** %left63, align 8, !dbg !587
  store %struct.id_rec* %tmp78, %struct.id_rec** %root, align 8, !dbg !588
  %balance64 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp75, i32 0, i32 4, !dbg !589
  store i16 0, i16* %balance64, align 2, !dbg !590
  %balance65 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 4, !dbg !591
  store i16 0, i16* %balance65, align 2, !dbg !592
  br label %if.end.87, !dbg !593

if.else.66:                                       ; preds = %sw.bb.54
  %left67 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 5, !dbg !594
  %tmp91 = load %struct.id_rec*, %struct.id_rec** %left67, align 8, !dbg !594
  store %struct.id_rec* %tmp91, %struct.id_rec** %root, align 8, !dbg !596
  %tmp94 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !597
  %right68 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp94, i32 0, i32 6, !dbg !598
  %tmp95 = load %struct.id_rec*, %struct.id_rec** %right68, align 8, !dbg !598
  %left69 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 5, !dbg !599
  store %struct.id_rec* %tmp95, %struct.id_rec** %left69, align 8, !dbg !600
  %tmp98 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !601
  %left70 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp98, i32 0, i32 5, !dbg !602
  %tmp99 = load %struct.id_rec*, %struct.id_rec** %left70, align 8, !dbg !602
  %right71 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp75, i32 0, i32 6, !dbg !603
  store %struct.id_rec* %tmp99, %struct.id_rec** %right71, align 8, !dbg !604
  %tmp103 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !605
  %left72 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp103, i32 0, i32 5, !dbg !606
  store %struct.id_rec* %tmp75, %struct.id_rec** %left72, align 8, !dbg !607
  %tmp106 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !608
  %right73 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp106, i32 0, i32 6, !dbg !609
  store %struct.id_rec* %tmp78, %struct.id_rec** %right73, align 8, !dbg !610
  %tmp108 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !611
  %balance74 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp108, i32 0, i32 4, !dbg !612
  %tmp109 = load i16, i16* %balance74, align 2, !dbg !612
  %conv75 = sext i16 %tmp109 to i32, !dbg !613
  switch i32 %conv75, label %sw.epilog.85 [
    i32 -1, label %sw.bb.76
    i32 0, label %sw.bb.79
    i32 1, label %sw.bb.82
  ], !dbg !614

sw.bb.76:                                         ; preds = %if.else.66
  %balance77 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp75, i32 0, i32 4, !dbg !615
  store i16 0, i16* %balance77, align 2, !dbg !617
  %balance78 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 4, !dbg !618
  store i16 1, i16* %balance78, align 2, !dbg !619
  br label %sw.epilog.85, !dbg !620

sw.bb.79:                                         ; preds = %if.else.66
  %balance80 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp75, i32 0, i32 4, !dbg !621
  store i16 0, i16* %balance80, align 2, !dbg !622
  %balance81 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 4, !dbg !623
  store i16 0, i16* %balance81, align 2, !dbg !624
  br label %sw.epilog.85, !dbg !625

sw.bb.82:                                         ; preds = %if.else.66
  %balance83 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp75, i32 0, i32 4, !dbg !626
  store i16 -1, i16* %balance83, align 2, !dbg !627
  %balance84 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp78, i32 0, i32 4, !dbg !628
  store i16 0, i16* %balance84, align 2, !dbg !629
  br label %sw.epilog.85, !dbg !630

sw.epilog.85:                                     ; preds = %sw.bb.82, %sw.bb.79, %sw.bb.76, %if.else.66
  %tmp117 = load %struct.id_rec*, %struct.id_rec** %root, align 8, !dbg !631
  %balance86 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp117, i32 0, i32 4, !dbg !632
  store i16 0, i16* %balance86, align 2, !dbg !633
  br label %if.end.87

if.end.87:                                        ; preds = %sw.epilog.85, %if.then.60
  br label %sw.epilog.88, !dbg !634

sw.epilog.88:                                     ; preds = %if.end.87, %if.then.48
  br label %if.end.89, !dbg !635

if.end.89:                                        ; preds = %sw.epilog.88, %if.else.44
  br label %if.end.90

if.end.90:                                        ; preds = %if.end.89, %if.end.43
  br label %return, !dbg !636

return:                                           ; preds = %if.end.90, %sw.bb.53, %sw.bb.52, %sw.bb.9, %sw.bb, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %if.end.90 ], [ 0, %sw.bb.9 ], [ 0, %sw.bb ], [ 0, %sw.bb.53 ], [ 0, %sw.bb.52 ]
  ret i32 %retval.0, !dbg !637
}

; Function Attrs: nounwind uwtable
define void @init_tree() #0 {
entry:
  store %struct.id_rec* null, %struct.id_rec** @name_tree, align 8, !dbg !638
  store i32 1, i32* @next_array, align 4, !dbg !639
  store i32 1, i32* @next_func, align 4, !dbg !640
  store i32 4, i32* @next_var, align 4, !dbg !641
  ret void, !dbg !642
}

; Function Attrs: nounwind uwtable
define i32 @lookup(i8* %name, i32 %namekind) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, i64 0, metadata !643, metadata !87), !dbg !644
  call void @llvm.dbg.value(metadata i32 %namekind, i64 0, metadata !645, metadata !87), !dbg !646
  %call = call i64 @strlen(i8* %name) #7, !dbg !647
  %cmp = icmp ne i64 %call, 1, !dbg !649
  br i1 %cmp, label %if.then, label %if.end, !dbg !650

if.then:                                          ; preds = %entry
  call void (i8*, ...) @warn(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i32 0, i32 0), i8* %name), !dbg !651
  br label %if.end, !dbg !651

if.end:                                           ; preds = %if.then, %entry
  %tmp2 = load %struct.id_rec*, %struct.id_rec** @name_tree, align 8, !dbg !652
  %call1 = call %struct.id_rec* @find_id(%struct.id_rec* %tmp2, i8* %name), !dbg !653
  call void @llvm.dbg.value(metadata %struct.id_rec* %call1, i64 0, metadata !654, metadata !87), !dbg !655
  %cmp2 = icmp eq %struct.id_rec* %call1, null, !dbg !656
  br i1 %cmp2, label %if.then.3, label %if.end.8, !dbg !658

if.then.3:                                        ; preds = %if.end
  %call4 = call noalias i8* @malloc(i64 40) #6, !dbg !659
  %tmp5 = bitcast i8* %call4 to %struct.id_rec*, !dbg !661
  call void @llvm.dbg.value(metadata %struct.id_rec* %tmp5, i64 0, metadata !654, metadata !87), !dbg !655
  %call5 = call i8* @strcopyof(i8* %name), !dbg !662
  %id6 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp5, i32 0, i32 0, !dbg !663
  store i8* %call5, i8** %id6, align 8, !dbg !664
  %a_name = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp5, i32 0, i32 1, !dbg !665
  store i32 0, i32* %a_name, align 4, !dbg !666
  %f_name = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp5, i32 0, i32 2, !dbg !667
  store i32 0, i32* %f_name, align 4, !dbg !668
  %v_name = getelementptr inbounds %struct.id_rec, %struct.id_rec* %tmp5, i32 0, i32 3, !dbg !669
  store i32 0, i32* %v_name, align 4, !dbg !670
  %call7 = call i32 @insert_id_rec(%struct.id_rec** @name_tree, %struct.id_rec* %tmp5), !dbg !671
  br label %if.end.8, !dbg !672

if.end.8:                                         ; preds = %if.then.3, %if.end
  %id.0 = phi %struct.id_rec* [ %tmp5, %if.then.3 ], [ %call1, %if.end ]
  switch i32 %namekind, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb.26
    i32 0, label %sw.bb.46
  ], !dbg !673

sw.bb:                                            ; preds = %if.end.8
  %a_name9 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !674
  %tmp14 = load i32, i32* %a_name9, align 4, !dbg !674
  %cmp10 = icmp ne i32 %tmp14, 0, !dbg !677
  br i1 %cmp10, label %if.then.11, label %if.end.13, !dbg !678

if.then.11:                                       ; preds = %sw.bb
  call void @free(i8* %name) #6, !dbg !679
  %a_name12 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !681
  %tmp17 = load i32, i32* %a_name12, align 4, !dbg !681
  %sub = sub nsw i32 0, %tmp17, !dbg !682
  br label %sw.epilog, !dbg !683

if.end.13:                                        ; preds = %sw.bb
  %tmp18 = load i32, i32* @next_array, align 4, !dbg !684
  %inc = add nsw i32 %tmp18, 1, !dbg !684
  store i32 %inc, i32* @next_array, align 4, !dbg !684
  %a_name14 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !685
  store i32 %tmp18, i32* %a_name14, align 4, !dbg !686
  %a_name15 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !687
  %tmp22 = load i32, i32* %a_name15, align 4, !dbg !687
  %idxprom = sext i32 %tmp22 to i64, !dbg !688
  %tmp23 = load i8**, i8*** @a_names, align 8, !dbg !688
  %arrayidx = getelementptr inbounds i8*, i8** %tmp23, i64 %idxprom, !dbg !688
  store i8* %name, i8** %arrayidx, align 8, !dbg !689
  %a_name16 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !690
  %tmp25 = load i32, i32* %a_name16, align 4, !dbg !690
  %cmp17 = icmp slt i32 %tmp25, 32767, !dbg !692
  br i1 %cmp17, label %if.then.18, label %if.end.25, !dbg !693

if.then.18:                                       ; preds = %if.end.13
  %a_name19 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !694
  %tmp27 = load i32, i32* %a_name19, align 4, !dbg !694
  %tmp28 = load i32, i32* @a_count, align 4, !dbg !697
  %cmp20 = icmp sge i32 %tmp27, %tmp28, !dbg !698
  br i1 %cmp20, label %if.then.21, label %if.end.22, !dbg !699

if.then.21:                                       ; preds = %if.then.18
  call void @more_arrays(), !dbg !700
  br label %if.end.22, !dbg !700

if.end.22:                                        ; preds = %if.then.21, %if.then.18
  %a_name23 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 1, !dbg !701
  %tmp30 = load i32, i32* %a_name23, align 4, !dbg !701
  %sub24 = sub nsw i32 0, %tmp30, !dbg !702
  br label %sw.epilog, !dbg !703

if.end.25:                                        ; preds = %if.end.13
  call void (i8*, ...) @yyerror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i32 0, i32 0)), !dbg !704
  call void @exit(i32 1) #8, !dbg !705
  unreachable, !dbg !705

sw.bb.26:                                         ; preds = %if.end.8
  %f_name27 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !706
  %tmp32 = load i32, i32* %f_name27, align 4, !dbg !706
  %cmp28 = icmp ne i32 %tmp32, 0, !dbg !708
  br i1 %cmp28, label %if.then.29, label %if.end.31, !dbg !709

if.then.29:                                       ; preds = %sw.bb.26
  call void @free(i8* %name) #6, !dbg !710
  %f_name30 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !712
  %tmp35 = load i32, i32* %f_name30, align 4, !dbg !712
  br label %sw.epilog, !dbg !713

if.end.31:                                        ; preds = %sw.bb.26
  %tmp36 = load i32, i32* @next_func, align 4, !dbg !714
  %inc32 = add nsw i32 %tmp36, 1, !dbg !714
  store i32 %inc32, i32* @next_func, align 4, !dbg !714
  %f_name33 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !715
  store i32 %tmp36, i32* %f_name33, align 4, !dbg !716
  %f_name34 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !717
  %tmp40 = load i32, i32* %f_name34, align 4, !dbg !717
  %idxprom35 = sext i32 %tmp40 to i64, !dbg !718
  %tmp41 = load i8**, i8*** @f_names, align 8, !dbg !718
  %arrayidx36 = getelementptr inbounds i8*, i8** %tmp41, i64 %idxprom35, !dbg !718
  store i8* %name, i8** %arrayidx36, align 8, !dbg !719
  %f_name37 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !720
  %tmp43 = load i32, i32* %f_name37, align 4, !dbg !720
  %cmp38 = icmp slt i32 %tmp43, 32767, !dbg !722
  br i1 %cmp38, label %if.then.39, label %if.end.45, !dbg !723

if.then.39:                                       ; preds = %if.end.31
  %f_name40 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !724
  %tmp45 = load i32, i32* %f_name40, align 4, !dbg !724
  %tmp46 = load i32, i32* @f_count, align 4, !dbg !727
  %cmp41 = icmp sge i32 %tmp45, %tmp46, !dbg !728
  br i1 %cmp41, label %if.then.42, label %if.end.43, !dbg !729

if.then.42:                                       ; preds = %if.then.39
  call void @more_functions(), !dbg !730
  br label %if.end.43, !dbg !730

if.end.43:                                        ; preds = %if.then.42, %if.then.39
  %f_name44 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 2, !dbg !731
  %tmp48 = load i32, i32* %f_name44, align 4, !dbg !731
  br label %sw.epilog, !dbg !732

if.end.45:                                        ; preds = %if.end.31
  call void (i8*, ...) @yyerror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i32 0, i32 0)), !dbg !733
  call void @exit(i32 1) #8, !dbg !734
  unreachable, !dbg !734

sw.bb.46:                                         ; preds = %if.end.8
  %v_name47 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !735
  %tmp50 = load i32, i32* %v_name47, align 4, !dbg !735
  %cmp48 = icmp ne i32 %tmp50, 0, !dbg !737
  br i1 %cmp48, label %if.then.49, label %if.end.51, !dbg !738

if.then.49:                                       ; preds = %sw.bb.46
  call void @free(i8* %name) #6, !dbg !739
  %v_name50 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !741
  %tmp53 = load i32, i32* %v_name50, align 4, !dbg !741
  br label %sw.epilog, !dbg !742

if.end.51:                                        ; preds = %sw.bb.46
  %tmp54 = load i32, i32* @next_var, align 4, !dbg !743
  %inc52 = add nsw i32 %tmp54, 1, !dbg !743
  store i32 %inc52, i32* @next_var, align 4, !dbg !743
  %v_name53 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !744
  store i32 %tmp54, i32* %v_name53, align 4, !dbg !745
  %v_name54 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !746
  %tmp58 = load i32, i32* %v_name54, align 4, !dbg !746
  %sub55 = sub nsw i32 %tmp58, 1, !dbg !747
  %idxprom56 = sext i32 %sub55 to i64, !dbg !748
  %tmp59 = load i8**, i8*** @v_names, align 8, !dbg !748
  %arrayidx57 = getelementptr inbounds i8*, i8** %tmp59, i64 %idxprom56, !dbg !748
  store i8* %name, i8** %arrayidx57, align 8, !dbg !749
  %v_name58 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !750
  %tmp61 = load i32, i32* %v_name58, align 4, !dbg !750
  %cmp59 = icmp sle i32 %tmp61, 32767, !dbg !752
  br i1 %cmp59, label %if.then.60, label %if.end.66, !dbg !753

if.then.60:                                       ; preds = %if.end.51
  %v_name61 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !754
  %tmp63 = load i32, i32* %v_name61, align 4, !dbg !754
  %tmp64 = load i32, i32* @v_count, align 4, !dbg !757
  %cmp62 = icmp sge i32 %tmp63, %tmp64, !dbg !758
  br i1 %cmp62, label %if.then.63, label %if.end.64, !dbg !759

if.then.63:                                       ; preds = %if.then.60
  call void @more_variables(), !dbg !760
  br label %if.end.64, !dbg !760

if.end.64:                                        ; preds = %if.then.63, %if.then.60
  %v_name65 = getelementptr inbounds %struct.id_rec, %struct.id_rec* %id.0, i32 0, i32 3, !dbg !761
  %tmp66 = load i32, i32* %v_name65, align 4, !dbg !761
  br label %sw.epilog, !dbg !762

if.end.66:                                        ; preds = %if.end.51
  call void (i8*, ...) @yyerror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i32 0, i32 0)), !dbg !763
  call void @exit(i32 1) #8, !dbg !764
  unreachable, !dbg !764

sw.epilog:                                        ; preds = %if.end.64, %if.then.49, %if.end.43, %if.then.29, %if.end.22, %if.then.11, %if.end.8
  %retval.0 = phi i32 [ undef, %if.end.8 ], [ %tmp53, %if.then.49 ], [ %tmp66, %if.end.64 ], [ %tmp35, %if.then.29 ], [ %tmp48, %if.end.43 ], [ %sub, %if.then.11 ], [ %sub24, %if.end.22 ]
  ret i32 %retval.0, !dbg !765
}

declare void @more_arrays() #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #5

declare void @more_functions() #4

declare void @more_variables() #4

; Function Attrs: nounwind uwtable
define void @welcome() #0 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i32 0, i32 0)), !dbg !766
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i32 0, i32 0)), !dbg !767
  ret void, !dbg !768
}

; Function Attrs: nounwind uwtable
define void @warranty(i8* %prefix) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %prefix, i64 0, metadata !769, metadata !87), !dbg !770
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8* %prefix, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.15, i32 0, i32 0)), !dbg !771
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i32 0, i32 0)), !dbg !772
  ret void, !dbg !773
}

; Function Attrs: nounwind uwtable
define void @limits() #0 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0), i32 99), !dbg !774
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i32 0, i32 0), i64 2048), !dbg !775
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i32 0, i32 0), i32 99), !dbg !776
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.31, i32 0, i32 0), i32 1000), !dbg !777
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i32 0, i32 0), i64 9223372036854775807), !dbg !778
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0), i64 16384), !dbg !779
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i32 0, i32 0), i64 102481911520608620), !dbg !780
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i32 0, i32 0), i64 32767), !dbg !781
  ret void, !dbg !782
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #4

declare i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #4

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: nounwind uwtable
define void @rt_error(i8* %mesg, ...) #0 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %error_mesg = alloca [255 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %mesg, i64 0, metadata !783, metadata !87), !dbg !784
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !785, metadata !87), !dbg !786
  call void @llvm.dbg.declare(metadata [255 x i8]* %error_mesg, metadata !787, metadata !87), !dbg !791
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !792
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !792
  call void @llvm.va_start(i8* %arraydecay1), !dbg !792
  %arraydecay2 = getelementptr inbounds [255 x i8], [255 x i8]* %error_mesg, i32 0, i32 0, !dbg !793
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !794
  %call = call i32 @vsprintf(i8* %arraydecay2, i8* %mesg, %struct.__va_list_tag* %arraydecay3) #6, !dbg !795
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !796
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !796
  call void @llvm.va_end(i8* %arraydecay45), !dbg !796
  %tmp1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !797
  %tmp2 = load i32, i32* getelementptr inbounds (%struct.program_counter, %struct.program_counter* @pc, i32 0, i32 0), align 4, !dbg !798
  %idxprom = sext i32 %tmp2 to i64, !dbg !799
  %tmp3 = load i8**, i8*** @f_names, align 8, !dbg !799
  %arrayidx = getelementptr inbounds i8*, i8** %tmp3, i64 %idxprom, !dbg !799
  %tmp4 = load i8*, i8** %arrayidx, align 8, !dbg !799
  %tmp5 = load i32, i32* getelementptr inbounds (%struct.program_counter, %struct.program_counter* @pc, i32 0, i32 1), align 4, !dbg !800
  %arraydecay6 = getelementptr inbounds [255 x i8], [255 x i8]* %error_mesg, i32 0, i32 0, !dbg !801
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp1, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.39, i32 0, i32 0), i8* %tmp4, i32 %tmp5, i8* %arraydecay6), !dbg !802
  store i8 1, i8* @runtime_error, align 1, !dbg !803
  ret void, !dbg !804
}

; Function Attrs: nounwind
declare i32 @vsprintf(i8*, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind uwtable
define void @rt_warn(i8* %mesg, ...) #0 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %error_mesg = alloca [255 x i8], align 16
  call void @llvm.dbg.value(metadata i8* %mesg, i64 0, metadata !805, metadata !87), !dbg !806
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !807, metadata !87), !dbg !808
  call void @llvm.dbg.declare(metadata [255 x i8]* %error_mesg, metadata !809, metadata !87), !dbg !810
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !811
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !811
  call void @llvm.va_start(i8* %arraydecay1), !dbg !811
  %arraydecay2 = getelementptr inbounds [255 x i8], [255 x i8]* %error_mesg, i32 0, i32 0, !dbg !812
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !813
  %call = call i32 @vsprintf(i8* %arraydecay2, i8* %mesg, %struct.__va_list_tag* %arraydecay3) #6, !dbg !814
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i32 0, i32 0, !dbg !815
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !815
  call void @llvm.va_end(i8* %arraydecay45), !dbg !815
  %tmp1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !816
  %tmp2 = load i32, i32* getelementptr inbounds (%struct.program_counter, %struct.program_counter* @pc, i32 0, i32 0), align 4, !dbg !817
  %idxprom = sext i32 %tmp2 to i64, !dbg !818
  %tmp3 = load i8**, i8*** @f_names, align 8, !dbg !818
  %arrayidx = getelementptr inbounds i8*, i8** %tmp3, i64 %idxprom, !dbg !818
  %tmp4 = load i8*, i8** %arrayidx, align 8, !dbg !818
  %tmp5 = load i32, i32* getelementptr inbounds (%struct.program_counter, %struct.program_counter* @pc, i32 0, i32 1), align 4, !dbg !819
  %arraydecay6 = getelementptr inbounds [255 x i8], [255 x i8]* %error_mesg, i32 0, i32 0, !dbg !820
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp1, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i32 0, i32 0), i8* %tmp4, i32 %tmp5, i8* %arraydecay6), !dbg !821
  ret void, !dbg !822
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!83, !84}
!llvm.ident = !{!85}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !30, globals: !80)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Ptrdist/bc")
!2 = !{}
!3 = !{!4, !6, !15, !16, !29}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "arg_list", file: !8, line: 75, baseType: !9)
!8 = !DIFile(filename: "./bcdefs.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/bc")
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "arg_list", file: !8, line: 71, size: 128, align: 64, elements: !10)
!10 = !{!11, !13}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "av_name", scope: !9, file: !8, line: 73, baseType: !12, size: 32, align: 32)
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9, file: !8, line: 74, baseType: !14, size: 64, align: 64, offset: 64)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "id_rec", file: !8, line: 152, baseType: !18)
!18 = !DICompositeType(tag: DW_TAG_structure_type, name: "id_rec", file: !8, line: 143, size: 320, align: 64, elements: !19)
!19 = !{!20, !21, !22, !23, !24, !26, !28}
!20 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !18, file: !8, line: 144, baseType: !4, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "a_name", scope: !18, file: !8, line: 146, baseType: !12, size: 32, align: 32, offset: 64)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "f_name", scope: !18, file: !8, line: 147, baseType: !12, size: 32, align: 32, offset: 96)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "v_name", scope: !18, file: !8, line: 148, baseType: !12, size: 32, align: 32, offset: 128)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "balance", scope: !18, file: !8, line: 149, baseType: !25, size: 16, align: 16, offset: 160)
!25 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !18, file: !8, line: 150, baseType: !27, size: 64, align: 64, offset: 192)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !18, file: !8, line: 151, baseType: !27, size: 64, align: 64, offset: 256)
!29 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!30 = !{!31, !35, !38, !41, !44, !47, !50, !53, !54, !57, !60, !64, !65, !68, !69, !70, !71, !74, !75, !76, !77}
!31 = !DISubprogram(name: "strcopyof", scope: !32, file: !32, line: 38, type: !33, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, function: i8* (i8*)* @strcopyof, variables: !2)
!32 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Ptrdist/bc/tmp.c", directory: "/home/gleison/tf/Benchmarks/Ptrdist/bc")
!33 = !DISubroutineType(types: !34)
!34 = !{!4, !4}
!35 = !DISubprogram(name: "nextarg", scope: !32, file: !32, line: 49, type: !36, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, function: %struct.arg_list* (%struct.arg_list*, i8)* @nextarg, variables: !2)
!36 = !DISubroutineType(types: !37)
!37 = !{!6, !6, !5}
!38 = !DISubprogram(name: "arg_str", scope: !32, file: !32, line: 98, type: !39, isLocal: false, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, function: i8* (%struct.arg_list*, i32)* @arg_str, variables: !2)
!39 = !DISubroutineType(types: !40)
!40 = !{!4, !6, !12}
!41 = !DISubprogram(name: "free_args", scope: !32, file: !32, line: 108, type: !42, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.arg_list*)* @free_args, variables: !2)
!42 = !DISubroutineType(types: !43)
!43 = !{null, !6}
!44 = !DISubprogram(name: "check_params", scope: !32, file: !32, line: 123, type: !45, isLocal: false, isDefinition: true, scopeLine: 123, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.arg_list*, %struct.arg_list*)* @check_params, variables: !2)
!45 = !DISubroutineType(types: !46)
!46 = !{null, !6, !6}
!47 = !DISubprogram(name: "init_gen", scope: !32, file: !32, line: 174, type: !48, isLocal: false, isDefinition: true, scopeLine: 174, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @init_gen, variables: !2)
!48 = !DISubroutineType(types: !49)
!49 = !{null}
!50 = !DISubprogram(name: "generate", scope: !32, file: !32, line: 190, type: !51, isLocal: false, isDefinition: true, scopeLine: 190, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @generate, variables: !2)
!51 = !DISubroutineType(types: !52)
!52 = !{null, !4}
!53 = !DISubprogram(name: "run_code", scope: !32, file: !32, line: 205, type: !48, isLocal: false, isDefinition: true, scopeLine: 205, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @run_code, variables: !2)
!54 = !DISubprogram(name: "out_char", scope: !32, file: !32, line: 226, type: !55, isLocal: false, isDefinition: true, scopeLine: 226, flags: DIFlagPrototyped, isOptimized: false, function: void (i8)* @out_char, variables: !2)
!55 = !DISubroutineType(types: !56)
!56 = !{null, !5}
!57 = !DISubprogram(name: "find_id", scope: !32, file: !32, line: 247, type: !58, isLocal: false, isDefinition: true, scopeLine: 247, flags: DIFlagPrototyped, isOptimized: false, function: %struct.id_rec* (%struct.id_rec*, i8*)* @find_id, variables: !2)
!58 = !DISubroutineType(types: !59)
!59 = !{!16, !16, !4}
!60 = !DISubprogram(name: "insert_id_rec", scope: !32, file: !32, line: 269, type: !61, isLocal: false, isDefinition: true, scopeLine: 269, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.id_rec**, %struct.id_rec*)* @insert_id_rec, variables: !2)
!61 = !DISubroutineType(types: !62)
!62 = !{!12, !63, !16}
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!64 = !DISubprogram(name: "init_tree", scope: !32, file: !32, line: 382, type: !48, isLocal: false, isDefinition: true, scopeLine: 382, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @init_tree, variables: !2)
!65 = !DISubprogram(name: "lookup", scope: !32, file: !32, line: 391, type: !66, isLocal: false, isDefinition: true, scopeLine: 391, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i8*, i32)* @lookup, variables: !2)
!66 = !DISubroutineType(types: !67)
!67 = !{!12, !4, !12}
!68 = !DISubprogram(name: "welcome", scope: !32, file: !32, line: 463, type: !48, isLocal: false, isDefinition: true, scopeLine: 463, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @welcome, variables: !2)
!69 = !DISubprogram(name: "warranty", scope: !32, file: !32, line: 470, type: !51, isLocal: false, isDefinition: true, scopeLine: 470, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @warranty, variables: !2)
!70 = !DISubprogram(name: "limits", scope: !32, file: !32, line: 488, type: !48, isLocal: false, isDefinition: true, scopeLine: 488, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @limits, variables: !2)
!71 = !DISubprogram(name: "yyerror", scope: !32, file: !32, line: 532, type: !72, isLocal: false, isDefinition: true, scopeLine: 532, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, ...)* @yyerror, variables: !2)
!72 = !DISubroutineType(types: !73)
!73 = !{null, !4, null}
!74 = !DISubprogram(name: "warn", scope: !32, file: !32, line: 552, type: !72, isLocal: false, isDefinition: true, scopeLine: 552, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, ...)* @warn, variables: !2)
!75 = !DISubprogram(name: "rt_error", scope: !32, file: !32, line: 581, type: !72, isLocal: false, isDefinition: true, scopeLine: 581, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, ...)* @rt_error, variables: !2)
!76 = !DISubprogram(name: "rt_warn", scope: !32, file: !32, line: 599, type: !72, isLocal: false, isDefinition: true, scopeLine: 599, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, ...)* @rt_warn, variables: !2)
!77 = !DISubprogram(name: "make_arg_str", scope: !32, file: !32, line: 75, type: !78, isLocal: true, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, function: i8* (%struct.arg_list*, i32, i32)* @make_arg_str, variables: !2)
!78 = !DISubroutineType(types: !79)
!79 = !{!4, !6, !12, !12}
!80 = !{!81, !82}
!81 = !DIGlobalVariable(name: "arglist1", scope: !0, file: !32, line: 64, type: !4, isLocal: true, isDefinition: true, variable: i8** @arglist1)
!82 = !DIGlobalVariable(name: "arglist2", scope: !0, file: !32, line: 65, type: !4, isLocal: true, isDefinition: true, variable: i8** @arglist2)
!83 = !{i32 2, !"Dwarf Version", i32 4}
!84 = !{i32 2, !"Debug Info Version", i32 3}
!85 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!86 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 1, scope: !31, file: !32, line: 38, type: !4)
!87 = !DIExpression()
!88 = !DILocation(line: 38, column: 17, scope: !31)
!89 = !DILocation(line: 41, column: 25, scope: !31)
!90 = !DILocation(line: 41, column: 37, scope: !31)
!91 = !DILocation(line: 41, column: 18, scope: !31)
!92 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !31, file: !32, line: 39, type: !4)
!93 = !DILocation(line: 39, column: 9, scope: !31)
!94 = !DILocation(line: 42, column: 3, scope: !31)
!95 = !DILocation(line: 43, column: 3, scope: !31)
!96 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 1, scope: !35, file: !32, line: 49, type: !6)
!97 = !DILocation(line: 49, column: 19, scope: !35)
!98 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 2, scope: !35, file: !32, line: 49, type: !5)
!99 = !DILocation(line: 49, column: 30, scope: !35)
!100 = !DILocation(line: 52, column: 22, scope: !35)
!101 = !DILocation(line: 52, column: 10, scope: !35)
!102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !35, file: !32, line: 50, type: !6)
!103 = !DILocation(line: 50, column: 13, scope: !35)
!104 = !DILocation(line: 53, column: 19, scope: !35)
!105 = !DILocation(line: 53, column: 9, scope: !35)
!106 = !DILocation(line: 53, column: 17, scope: !35)
!107 = !DILocation(line: 54, column: 9, scope: !35)
!108 = !DILocation(line: 54, column: 14, scope: !35)
!109 = !DILocation(line: 56, column: 3, scope: !35)
!110 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 1, scope: !38, file: !32, line: 98, type: !6)
!111 = !DILocation(line: 98, column: 19, scope: !38)
!112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "commas", arg: 2, scope: !38, file: !32, line: 98, type: !12)
!113 = !DILocation(line: 98, column: 29, scope: !38)
!114 = !DILocation(line: 99, column: 7, scope: !115)
!115 = distinct !DILexicalBlock(scope: !38, file: !32, line: 99, column: 7)
!116 = !DILocation(line: 99, column: 16, scope: !115)
!117 = !DILocation(line: 99, column: 7, scope: !38)
!118 = !DILocation(line: 100, column: 10, scope: !115)
!119 = !DILocation(line: 100, column: 5, scope: !115)
!120 = !DILocation(line: 101, column: 14, scope: !38)
!121 = !DILocation(line: 101, column: 12, scope: !38)
!122 = !DILocation(line: 102, column: 14, scope: !38)
!123 = !DILocation(line: 102, column: 12, scope: !38)
!124 = !DILocation(line: 103, column: 11, scope: !38)
!125 = !DILocation(line: 103, column: 3, scope: !38)
!126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 1, scope: !77, file: !32, line: 75, type: !6)
!127 = !DILocation(line: 75, column: 24, scope: !77)
!128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !77, file: !32, line: 75, type: !12)
!129 = !DILocation(line: 75, column: 34, scope: !77)
!130 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "commas", arg: 3, scope: !77, file: !32, line: 75, type: !12)
!131 = !DILocation(line: 75, column: 43, scope: !77)
!132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sval", scope: !77, file: !32, line: 77, type: !133)
!133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 160, align: 8, elements: !134)
!134 = !{!135}
!135 = !DISubrange(count: 20)
!136 = !DILocation(line: 77, column: 8, scope: !77)
!137 = !DILocation(line: 80, column: 12, scope: !138)
!138 = distinct !DILexicalBlock(scope: !77, file: !32, line: 80, column: 7)
!139 = !DILocation(line: 80, column: 7, scope: !77)
!140 = !DILocation(line: 81, column: 31, scope: !138)
!141 = !DILocation(line: 81, column: 41, scope: !138)
!142 = !DILocation(line: 81, column: 12, scope: !138)
!143 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !77, file: !32, line: 76, type: !4)
!144 = !DILocation(line: 76, column: 9, scope: !77)
!145 = !DILocation(line: 81, column: 5, scope: !138)
!146 = !DILocation(line: 83, column: 27, scope: !147)
!147 = distinct !DILexicalBlock(scope: !138, file: !32, line: 82, column: 8)
!148 = !DILocation(line: 83, column: 20, scope: !147)
!149 = !DILocation(line: 84, column: 11, scope: !147)
!150 = !DILocation(line: 85, column: 5, scope: !147)
!151 = !DILocation(line: 89, column: 11, scope: !152)
!152 = distinct !DILexicalBlock(scope: !77, file: !32, line: 89, column: 7)
!153 = !DILocation(line: 89, column: 16, scope: !152)
!154 = !DILocation(line: 89, column: 19, scope: !155)
!155 = !DILexicalBlockFile(scope: !152, file: !32, discriminator: 1)
!156 = !DILocation(line: 89, column: 7, scope: !77)
!157 = !DILocation(line: 90, column: 13, scope: !152)
!158 = !DILocation(line: 90, column: 32, scope: !152)
!159 = !DILocation(line: 90, column: 5, scope: !152)
!160 = !DILocation(line: 92, column: 13, scope: !152)
!161 = !DILocation(line: 92, column: 31, scope: !152)
!162 = !DILocation(line: 92, column: 5, scope: !152)
!163 = !DILocation(line: 93, column: 33, scope: !77)
!164 = !DILocation(line: 93, column: 20, scope: !77)
!165 = !DILocation(line: 94, column: 3, scope: !77)
!166 = !DILocation(line: 95, column: 1, scope: !77)
!167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "args", arg: 1, scope: !41, file: !32, line: 108, type: !6)
!168 = !DILocation(line: 108, column: 26, scope: !41)
!169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !41, file: !32, line: 109, type: !6)
!170 = !DILocation(line: 109, column: 13, scope: !41)
!171 = !DILocation(line: 112, column: 3, scope: !41)
!172 = !DILocation(line: 112, column: 15, scope: !41)
!173 = !DILocation(line: 113, column: 18, scope: !174)
!174 = distinct !DILexicalBlock(scope: !41, file: !32, line: 112, column: 24)
!175 = !DILocation(line: 114, column: 10, scope: !174)
!176 = !DILocation(line: 114, column: 5, scope: !174)
!177 = !DILocation(line: 117, column: 1, scope: !41)
!178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "params", arg: 1, scope: !44, file: !32, line: 123, type: !6)
!179 = !DILocation(line: 123, column: 29, scope: !44)
!180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "autos", arg: 2, scope: !44, file: !32, line: 123, type: !6)
!181 = !DILocation(line: 123, column: 47, scope: !44)
!182 = !DILocation(line: 128, column: 14, scope: !183)
!183 = distinct !DILexicalBlock(scope: !44, file: !32, line: 128, column: 7)
!184 = !DILocation(line: 128, column: 7, scope: !44)
!185 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp1", scope: !44, file: !32, line: 124, type: !6)
!186 = !DILocation(line: 124, column: 13, scope: !44)
!187 = !DILocation(line: 130, column: 5, scope: !188)
!188 = distinct !DILexicalBlock(scope: !183, file: !32, line: 128, column: 23)
!189 = !DILocation(line: 130, column: 17, scope: !188)
!190 = !DILocation(line: 131, column: 20, scope: !191)
!191 = distinct !DILexicalBlock(scope: !188, file: !32, line: 130, column: 26)
!192 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp2", scope: !44, file: !32, line: 125, type: !6)
!193 = !DILocation(line: 125, column: 13, scope: !44)
!194 = !DILocation(line: 132, column: 7, scope: !191)
!195 = !DILocation(line: 132, column: 19, scope: !191)
!196 = !DILocation(line: 133, column: 19, scope: !197)
!197 = distinct !DILexicalBlock(scope: !198, file: !32, line: 133, column: 13)
!198 = distinct !DILexicalBlock(scope: !191, file: !32, line: 132, column: 28)
!199 = !DILocation(line: 133, column: 36, scope: !197)
!200 = !DILocation(line: 133, column: 27, scope: !197)
!201 = !DILocation(line: 133, column: 13, scope: !198)
!202 = !DILocation(line: 134, column: 11, scope: !197)
!203 = !DILocation(line: 135, column: 22, scope: !198)
!204 = !DILocation(line: 137, column: 17, scope: !205)
!205 = distinct !DILexicalBlock(scope: !191, file: !32, line: 137, column: 11)
!206 = !DILocation(line: 137, column: 25, scope: !205)
!207 = !DILocation(line: 137, column: 11, scope: !191)
!208 = !DILocation(line: 138, column: 9, scope: !205)
!209 = !DILocation(line: 139, column: 20, scope: !191)
!210 = !DILocation(line: 141, column: 3, scope: !188)
!211 = !DILocation(line: 144, column: 13, scope: !212)
!212 = distinct !DILexicalBlock(scope: !44, file: !32, line: 144, column: 7)
!213 = !DILocation(line: 144, column: 7, scope: !44)
!214 = !DILocation(line: 146, column: 5, scope: !215)
!215 = distinct !DILexicalBlock(scope: !212, file: !32, line: 144, column: 22)
!216 = !DILocation(line: 146, column: 17, scope: !215)
!217 = !DILocation(line: 147, column: 20, scope: !218)
!218 = distinct !DILexicalBlock(scope: !215, file: !32, line: 146, column: 26)
!219 = !DILocation(line: 148, column: 7, scope: !218)
!220 = !DILocation(line: 148, column: 19, scope: !218)
!221 = !DILocation(line: 149, column: 19, scope: !222)
!222 = distinct !DILexicalBlock(scope: !223, file: !32, line: 149, column: 13)
!223 = distinct !DILexicalBlock(scope: !218, file: !32, line: 148, column: 28)
!224 = !DILocation(line: 149, column: 36, scope: !222)
!225 = !DILocation(line: 149, column: 27, scope: !222)
!226 = !DILocation(line: 149, column: 13, scope: !223)
!227 = !DILocation(line: 150, column: 11, scope: !222)
!228 = !DILocation(line: 151, column: 22, scope: !223)
!229 = !DILocation(line: 153, column: 20, scope: !218)
!230 = !DILocation(line: 155, column: 3, scope: !215)
!231 = !DILocation(line: 158, column: 15, scope: !232)
!232 = distinct !DILexicalBlock(scope: !44, file: !32, line: 158, column: 7)
!233 = !DILocation(line: 158, column: 24, scope: !232)
!234 = !DILocation(line: 158, column: 34, scope: !232)
!235 = !DILocation(line: 158, column: 7, scope: !44)
!236 = !DILocation(line: 160, column: 5, scope: !237)
!237 = distinct !DILexicalBlock(scope: !232, file: !32, line: 158, column: 44)
!238 = !DILocation(line: 160, column: 17, scope: !237)
!239 = !DILocation(line: 162, column: 7, scope: !240)
!240 = distinct !DILexicalBlock(scope: !237, file: !32, line: 160, column: 26)
!241 = !DILocation(line: 162, column: 19, scope: !240)
!242 = !DILocation(line: 163, column: 19, scope: !243)
!243 = distinct !DILexicalBlock(scope: !244, file: !32, line: 163, column: 13)
!244 = distinct !DILexicalBlock(scope: !240, file: !32, line: 162, column: 28)
!245 = !DILocation(line: 163, column: 36, scope: !243)
!246 = !DILocation(line: 163, column: 27, scope: !243)
!247 = !DILocation(line: 163, column: 13, scope: !244)
!248 = !DILocation(line: 164, column: 11, scope: !243)
!249 = !DILocation(line: 165, column: 22, scope: !244)
!250 = !DILocation(line: 167, column: 20, scope: !240)
!251 = !DILocation(line: 169, column: 3, scope: !237)
!252 = !DILocation(line: 170, column: 1, scope: !44)
!253 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 1, scope: !71, file: !32, line: 532, type: !4)
!254 = !DILocation(line: 532, column: 20, scope: !71)
!255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !71, file: !32, line: 534, type: !256)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !257, line: 79, baseType: !258)
!257 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/bc")
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !259, line: 50, baseType: !260)
!259 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stdarg.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/bc")
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1, line: 534, baseType: !261)
!261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !262, size: 192, align: 64, elements: !270)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "__va_list_tag", file: !1, line: 534, baseType: !263)
!263 = !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1, line: 534, size: 192, align: 64, elements: !264)
!264 = !{!265, !267, !268, !269}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !263, file: !1, line: 534, baseType: !266, size: 32, align: 32)
!266 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !263, file: !1, line: 534, baseType: !266, size: 32, align: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !263, file: !1, line: 534, baseType: !15, size: 64, align: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !263, file: !1, line: 534, baseType: !15, size: 64, align: 64, offset: 128)
!270 = !{!271}
!271 = !DISubrange(count: 1)
!272 = !DILocation(line: 534, column: 11, scope: !71)
!273 = !DILocation(line: 536, column: 3, scope: !71)
!274 = !DILocation(line: 538, column: 7, scope: !275)
!275 = distinct !DILexicalBlock(scope: !71, file: !32, line: 538, column: 7)
!276 = !DILocation(line: 538, column: 7, scope: !71)
!277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !71, file: !32, line: 533, type: !4)
!278 = !DILocation(line: 533, column: 9, scope: !71)
!279 = !DILocation(line: 539, column: 5, scope: !275)
!280 = !DILocation(line: 541, column: 19, scope: !275)
!281 = !DILocation(line: 541, column: 26, scope: !275)
!282 = !DILocation(line: 541, column: 12, scope: !275)
!283 = !DILocation(line: 542, column: 11, scope: !71)
!284 = !DILocation(line: 542, column: 36, scope: !71)
!285 = !DILocation(line: 542, column: 3, scope: !71)
!286 = !DILocation(line: 543, column: 12, scope: !71)
!287 = !DILocation(line: 543, column: 25, scope: !71)
!288 = !DILocation(line: 543, column: 3, scope: !71)
!289 = !DILocation(line: 544, column: 11, scope: !71)
!290 = !DILocation(line: 544, column: 3, scope: !71)
!291 = !DILocation(line: 545, column: 13, scope: !71)
!292 = !DILocation(line: 546, column: 3, scope: !71)
!293 = !DILocation(line: 547, column: 1, scope: !71)
!294 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mesg", arg: 1, scope: !74, file: !32, line: 552, type: !4)
!295 = !DILocation(line: 552, column: 17, scope: !74)
!296 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !74, file: !32, line: 554, type: !256)
!297 = !DILocation(line: 554, column: 11, scope: !74)
!298 = !DILocation(line: 556, column: 3, scope: !74)
!299 = !DILocation(line: 558, column: 7, scope: !300)
!300 = distinct !DILexicalBlock(scope: !74, file: !32, line: 558, column: 7)
!301 = !DILocation(line: 558, column: 7, scope: !74)
!302 = !DILocation(line: 559, column: 9, scope: !303)
!303 = distinct !DILexicalBlock(scope: !304, file: !32, line: 559, column: 9)
!304 = distinct !DILexicalBlock(scope: !300, file: !32, line: 558, column: 17)
!305 = !DILocation(line: 559, column: 9, scope: !304)
!306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "name", scope: !74, file: !32, line: 553, type: !4)
!307 = !DILocation(line: 553, column: 9, scope: !74)
!308 = !DILocation(line: 560, column: 7, scope: !303)
!309 = !DILocation(line: 562, column: 21, scope: !303)
!310 = !DILocation(line: 562, column: 28, scope: !303)
!311 = !DILocation(line: 562, column: 14, scope: !303)
!312 = !DILocation(line: 563, column: 13, scope: !304)
!313 = !DILocation(line: 563, column: 38, scope: !304)
!314 = !DILocation(line: 563, column: 5, scope: !304)
!315 = !DILocation(line: 564, column: 14, scope: !304)
!316 = !DILocation(line: 564, column: 28, scope: !304)
!317 = !DILocation(line: 564, column: 5, scope: !304)
!318 = !DILocation(line: 565, column: 13, scope: !304)
!319 = !DILocation(line: 565, column: 5, scope: !304)
!320 = !DILocation(line: 566, column: 15, scope: !304)
!321 = !DILocation(line: 567, column: 3, scope: !304)
!322 = !DILocation(line: 567, column: 14, scope: !323)
!323 = distinct !DILexicalBlock(scope: !300, file: !32, line: 567, column: 14)
!324 = !DILocation(line: 567, column: 14, scope: !300)
!325 = !DILocation(line: 568, column: 9, scope: !326)
!326 = distinct !DILexicalBlock(scope: !327, file: !32, line: 568, column: 9)
!327 = distinct !DILexicalBlock(scope: !323, file: !32, line: 567, column: 28)
!328 = !DILocation(line: 568, column: 9, scope: !327)
!329 = !DILocation(line: 569, column: 7, scope: !326)
!330 = !DILocation(line: 571, column: 21, scope: !326)
!331 = !DILocation(line: 571, column: 28, scope: !326)
!332 = !DILocation(line: 571, column: 14, scope: !326)
!333 = !DILocation(line: 572, column: 13, scope: !327)
!334 = !DILocation(line: 572, column: 48, scope: !327)
!335 = !DILocation(line: 572, column: 5, scope: !327)
!336 = !DILocation(line: 573, column: 14, scope: !327)
!337 = !DILocation(line: 573, column: 28, scope: !327)
!338 = !DILocation(line: 573, column: 5, scope: !327)
!339 = !DILocation(line: 574, column: 13, scope: !327)
!340 = !DILocation(line: 574, column: 5, scope: !327)
!341 = !DILocation(line: 575, column: 3, scope: !327)
!342 = !DILocation(line: 576, column: 3, scope: !74)
!343 = !DILocation(line: 577, column: 1, scope: !74)
!344 = !DILocation(line: 176, column: 15, scope: !47)
!345 = !DILocation(line: 177, column: 18, scope: !47)
!346 = !DILocation(line: 178, column: 14, scope: !47)
!347 = !DILocation(line: 179, column: 13, scope: !47)
!348 = !DILocation(line: 180, column: 7, scope: !349)
!349 = distinct !DILexicalBlock(scope: !47, file: !32, line: 180, column: 7)
!350 = !DILocation(line: 180, column: 7, scope: !47)
!351 = !DILocation(line: 181, column: 5, scope: !349)
!352 = !DILocation(line: 183, column: 5, scope: !349)
!353 = !DILocation(line: 184, column: 13, scope: !47)
!354 = !DILocation(line: 185, column: 11, scope: !47)
!355 = !DILocation(line: 186, column: 1, scope: !47)
!356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "str", arg: 1, scope: !50, file: !32, line: 190, type: !4)
!357 = !DILocation(line: 190, column: 21, scope: !50)
!358 = !DILocation(line: 191, column: 11, scope: !50)
!359 = !DILocation(line: 192, column: 7, scope: !360)
!360 = distinct !DILexicalBlock(scope: !50, file: !32, line: 192, column: 7)
!361 = !DILocation(line: 192, column: 7, scope: !50)
!362 = !DILocation(line: 193, column: 5, scope: !363)
!363 = distinct !DILexicalBlock(scope: !360, file: !32, line: 192, column: 21)
!364 = !DILocation(line: 194, column: 18, scope: !363)
!365 = !DILocation(line: 194, column: 15, scope: !363)
!366 = !DILocation(line: 195, column: 9, scope: !367)
!367 = distinct !DILexicalBlock(scope: !363, file: !32, line: 195, column: 9)
!368 = !DILocation(line: 195, column: 19, scope: !367)
!369 = !DILocation(line: 195, column: 9, scope: !363)
!370 = !DILocation(line: 196, column: 7, scope: !371)
!371 = distinct !DILexicalBlock(scope: !367, file: !32, line: 195, column: 25)
!372 = !DILocation(line: 197, column: 17, scope: !371)
!373 = !DILocation(line: 198, column: 5, scope: !371)
!374 = !DILocation(line: 199, column: 3, scope: !363)
!375 = !DILocation(line: 200, column: 5, scope: !360)
!376 = !DILocation(line: 201, column: 1, scope: !50)
!377 = !DILocation(line: 207, column: 8, scope: !378)
!378 = distinct !DILexicalBlock(scope: !53, file: !32, line: 207, column: 7)
!379 = !DILocation(line: 207, column: 18, scope: !378)
!380 = !DILocation(line: 207, column: 21, scope: !381)
!381 = !DILexicalBlockFile(scope: !378, file: !32, discriminator: 1)
!382 = !DILocation(line: 207, column: 7, scope: !53)
!383 = !DILocation(line: 208, column: 9, scope: !384)
!384 = distinct !DILexicalBlock(scope: !385, file: !32, line: 208, column: 9)
!385 = distinct !DILexicalBlock(scope: !378, file: !32, line: 207, column: 30)
!386 = !DILocation(line: 208, column: 9, scope: !385)
!387 = !DILocation(line: 209, column: 7, scope: !388)
!388 = distinct !DILexicalBlock(scope: !384, file: !32, line: 208, column: 23)
!389 = !DILocation(line: 210, column: 17, scope: !388)
!390 = !DILocation(line: 211, column: 5, scope: !388)
!391 = !DILocation(line: 212, column: 7, scope: !384)
!392 = !DILocation(line: 213, column: 3, scope: !385)
!393 = !DILocation(line: 216, column: 7, scope: !394)
!394 = distinct !DILexicalBlock(scope: !53, file: !32, line: 216, column: 7)
!395 = !DILocation(line: 216, column: 7, scope: !53)
!396 = !DILocation(line: 217, column: 5, scope: !394)
!397 = !DILocation(line: 219, column: 15, scope: !394)
!398 = !DILocation(line: 220, column: 1, scope: !53)
!399 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ch", arg: 1, scope: !54, file: !32, line: 226, type: !5)
!400 = !DILocation(line: 226, column: 20, scope: !54)
!401 = !DILocation(line: 227, column: 7, scope: !402)
!402 = distinct !DILexicalBlock(scope: !54, file: !32, line: 227, column: 7)
!403 = !DILocation(line: 227, column: 10, scope: !402)
!404 = !DILocation(line: 227, column: 7, scope: !54)
!405 = !DILocation(line: 228, column: 13, scope: !406)
!406 = distinct !DILexicalBlock(scope: !402, file: !32, line: 227, column: 19)
!407 = !DILocation(line: 229, column: 5, scope: !406)
!408 = !DILocation(line: 230, column: 3, scope: !406)
!409 = !DILocation(line: 231, column: 12, scope: !410)
!410 = distinct !DILexicalBlock(scope: !402, file: !32, line: 230, column: 10)
!411 = !DILocation(line: 232, column: 9, scope: !412)
!412 = distinct !DILexicalBlock(scope: !410, file: !32, line: 232, column: 9)
!413 = !DILocation(line: 232, column: 17, scope: !412)
!414 = !DILocation(line: 232, column: 9, scope: !410)
!415 = !DILocation(line: 233, column: 7, scope: !416)
!416 = distinct !DILexicalBlock(scope: !412, file: !32, line: 232, column: 24)
!417 = !DILocation(line: 234, column: 7, scope: !416)
!418 = !DILocation(line: 235, column: 15, scope: !416)
!419 = !DILocation(line: 236, column: 5, scope: !416)
!420 = !DILocation(line: 237, column: 13, scope: !410)
!421 = !DILocation(line: 237, column: 5, scope: !410)
!422 = !DILocation(line: 239, column: 1, scope: !54)
!423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tree", arg: 1, scope: !57, file: !32, line: 247, type: !16)
!424 = !DILocation(line: 247, column: 17, scope: !57)
!425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "id", arg: 2, scope: !57, file: !32, line: 247, type: !4)
!426 = !DILocation(line: 247, column: 29, scope: !57)
!427 = !DILocation(line: 251, column: 12, scope: !428)
!428 = distinct !DILexicalBlock(scope: !57, file: !32, line: 251, column: 7)
!429 = !DILocation(line: 251, column: 7, scope: !57)
!430 = !DILocation(line: 252, column: 5, scope: !428)
!431 = !DILocation(line: 255, column: 33, scope: !57)
!432 = !DILocation(line: 255, column: 16, scope: !57)
!433 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cmp_result", scope: !57, file: !32, line: 248, type: !12)
!434 = !DILocation(line: 248, column: 7, scope: !57)
!435 = !DILocation(line: 256, column: 18, scope: !436)
!436 = distinct !DILexicalBlock(scope: !57, file: !32, line: 256, column: 7)
!437 = !DILocation(line: 256, column: 7, scope: !57)
!438 = !DILocation(line: 257, column: 5, scope: !436)
!439 = !DILocation(line: 258, column: 23, scope: !440)
!440 = distinct !DILexicalBlock(scope: !436, file: !32, line: 258, column: 12)
!441 = !DILocation(line: 258, column: 12, scope: !436)
!442 = !DILocation(line: 259, column: 26, scope: !440)
!443 = !DILocation(line: 259, column: 12, scope: !440)
!444 = !DILocation(line: 259, column: 5, scope: !440)
!445 = !DILocation(line: 261, column: 26, scope: !440)
!446 = !DILocation(line: 261, column: 12, scope: !440)
!447 = !DILocation(line: 261, column: 5, scope: !440)
!448 = !DILocation(line: 262, column: 1, scope: !57)
!449 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "root", arg: 1, scope: !60, file: !32, line: 269, type: !63)
!450 = !DILocation(line: 269, column: 28, scope: !60)
!451 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "new_id", arg: 2, scope: !60, file: !32, line: 269, type: !16)
!452 = !DILocation(line: 269, column: 42, scope: !60)
!453 = !DILocation(line: 274, column: 7, scope: !454)
!454 = distinct !DILexicalBlock(scope: !60, file: !32, line: 274, column: 7)
!455 = !DILocation(line: 274, column: 13, scope: !454)
!456 = !DILocation(line: 274, column: 7, scope: !60)
!457 = !DILocation(line: 275, column: 11, scope: !458)
!458 = distinct !DILexicalBlock(scope: !454, file: !32, line: 274, column: 22)
!459 = !DILocation(line: 276, column: 13, scope: !458)
!460 = !DILocation(line: 276, column: 18, scope: !458)
!461 = !DILocation(line: 277, column: 13, scope: !458)
!462 = !DILocation(line: 277, column: 19, scope: !458)
!463 = !DILocation(line: 278, column: 13, scope: !458)
!464 = !DILocation(line: 278, column: 21, scope: !458)
!465 = !DILocation(line: 279, column: 5, scope: !458)
!466 = !DILocation(line: 283, column: 22, scope: !467)
!467 = distinct !DILexicalBlock(scope: !60, file: !32, line: 283, column: 7)
!468 = !DILocation(line: 283, column: 27, scope: !467)
!469 = !DILocation(line: 283, column: 35, scope: !467)
!470 = !DILocation(line: 283, column: 7, scope: !467)
!471 = !DILocation(line: 283, column: 39, scope: !467)
!472 = !DILocation(line: 283, column: 7, scope: !60)
!473 = !DILocation(line: 285, column: 25, scope: !474)
!474 = distinct !DILexicalBlock(scope: !475, file: !32, line: 285, column: 9)
!475 = distinct !DILexicalBlock(scope: !467, file: !32, line: 283, column: 44)
!476 = !DILocation(line: 285, column: 33, scope: !474)
!477 = !DILocation(line: 285, column: 9, scope: !474)
!478 = !DILocation(line: 285, column: 9, scope: !475)
!479 = !DILocation(line: 287, column: 8, scope: !480)
!480 = distinct !DILexicalBlock(scope: !474, file: !32, line: 285, column: 48)
!481 = !DILocation(line: 287, column: 16, scope: !480)
!482 = !DILocation(line: 287, column: 23, scope: !480)
!483 = !DILocation(line: 289, column: 16, scope: !480)
!484 = !DILocation(line: 289, column: 24, scope: !480)
!485 = !DILocation(line: 289, column: 15, scope: !480)
!486 = !DILocation(line: 289, column: 7, scope: !480)
!487 = !DILocation(line: 291, column: 9, scope: !488)
!488 = distinct !DILexicalBlock(scope: !480, file: !32, line: 289, column: 33)
!489 = !DILocation(line: 293, column: 9, scope: !488)
!490 = !DILocation(line: 295, column: 13, scope: !488)
!491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "A", scope: !60, file: !32, line: 270, type: !16)
!492 = !DILocation(line: 270, column: 11, scope: !60)
!493 = !DILocation(line: 296, column: 14, scope: !488)
!494 = !DILocation(line: 296, column: 22, scope: !488)
!495 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "B", scope: !60, file: !32, line: 271, type: !16)
!496 = !DILocation(line: 271, column: 11, scope: !60)
!497 = !DILocation(line: 297, column: 16, scope: !498)
!498 = distinct !DILexicalBlock(scope: !488, file: !32, line: 297, column: 13)
!499 = !DILocation(line: 297, column: 13, scope: !498)
!500 = !DILocation(line: 297, column: 24, scope: !498)
!501 = !DILocation(line: 297, column: 13, scope: !488)
!502 = !DILocation(line: 299, column: 24, scope: !503)
!503 = distinct !DILexicalBlock(scope: !498, file: !32, line: 297, column: 30)
!504 = !DILocation(line: 299, column: 14, scope: !503)
!505 = !DILocation(line: 299, column: 19, scope: !503)
!506 = !DILocation(line: 300, column: 14, scope: !503)
!507 = !DILocation(line: 300, column: 20, scope: !503)
!508 = !DILocation(line: 301, column: 17, scope: !503)
!509 = !DILocation(line: 302, column: 14, scope: !503)
!510 = !DILocation(line: 302, column: 22, scope: !503)
!511 = !DILocation(line: 303, column: 14, scope: !503)
!512 = !DILocation(line: 303, column: 22, scope: !503)
!513 = !DILocation(line: 304, column: 9, scope: !503)
!514 = !DILocation(line: 306, column: 22, scope: !515)
!515 = distinct !DILexicalBlock(scope: !498, file: !32, line: 304, column: 16)
!516 = !DILocation(line: 306, column: 17, scope: !515)
!517 = !DILocation(line: 307, column: 23, scope: !515)
!518 = !DILocation(line: 307, column: 31, scope: !515)
!519 = !DILocation(line: 307, column: 14, scope: !515)
!520 = !DILocation(line: 307, column: 20, scope: !515)
!521 = !DILocation(line: 308, column: 22, scope: !515)
!522 = !DILocation(line: 308, column: 30, scope: !515)
!523 = !DILocation(line: 308, column: 14, scope: !515)
!524 = !DILocation(line: 308, column: 19, scope: !515)
!525 = !DILocation(line: 309, column: 12, scope: !515)
!526 = !DILocation(line: 309, column: 20, scope: !515)
!527 = !DILocation(line: 309, column: 25, scope: !515)
!528 = !DILocation(line: 310, column: 12, scope: !515)
!529 = !DILocation(line: 310, column: 20, scope: !515)
!530 = !DILocation(line: 310, column: 26, scope: !515)
!531 = !DILocation(line: 311, column: 20, scope: !515)
!532 = !DILocation(line: 311, column: 28, scope: !515)
!533 = !DILocation(line: 311, column: 19, scope: !515)
!534 = !DILocation(line: 311, column: 11, scope: !515)
!535 = !DILocation(line: 313, column: 16, scope: !536)
!536 = distinct !DILexicalBlock(scope: !515, file: !32, line: 311, column: 37)
!537 = !DILocation(line: 313, column: 24, scope: !536)
!538 = !DILocation(line: 314, column: 16, scope: !536)
!539 = !DILocation(line: 314, column: 24, scope: !536)
!540 = !DILocation(line: 315, column: 13, scope: !536)
!541 = !DILocation(line: 317, column: 16, scope: !536)
!542 = !DILocation(line: 317, column: 24, scope: !536)
!543 = !DILocation(line: 318, column: 16, scope: !536)
!544 = !DILocation(line: 318, column: 24, scope: !536)
!545 = !DILocation(line: 319, column: 13, scope: !536)
!546 = !DILocation(line: 321, column: 16, scope: !536)
!547 = !DILocation(line: 321, column: 24, scope: !536)
!548 = !DILocation(line: 322, column: 16, scope: !536)
!549 = !DILocation(line: 322, column: 24, scope: !536)
!550 = !DILocation(line: 323, column: 13, scope: !536)
!551 = !DILocation(line: 325, column: 12, scope: !515)
!552 = !DILocation(line: 325, column: 20, scope: !515)
!553 = !DILocation(line: 325, column: 28, scope: !515)
!554 = !DILocation(line: 327, column: 7, scope: !488)
!555 = !DILocation(line: 328, column: 5, scope: !480)
!556 = !DILocation(line: 329, column: 3, scope: !475)
!557 = !DILocation(line: 331, column: 25, scope: !558)
!558 = distinct !DILexicalBlock(scope: !559, file: !32, line: 331, column: 9)
!559 = distinct !DILexicalBlock(scope: !467, file: !32, line: 329, column: 10)
!560 = !DILocation(line: 331, column: 33, scope: !558)
!561 = !DILocation(line: 331, column: 9, scope: !558)
!562 = !DILocation(line: 331, column: 9, scope: !559)
!563 = !DILocation(line: 333, column: 8, scope: !564)
!564 = distinct !DILexicalBlock(scope: !558, file: !32, line: 331, column: 49)
!565 = !DILocation(line: 333, column: 16, scope: !564)
!566 = !DILocation(line: 333, column: 23, scope: !564)
!567 = !DILocation(line: 334, column: 16, scope: !564)
!568 = !DILocation(line: 334, column: 24, scope: !564)
!569 = !DILocation(line: 334, column: 15, scope: !564)
!570 = !DILocation(line: 334, column: 7, scope: !564)
!571 = !DILocation(line: 336, column: 9, scope: !572)
!572 = distinct !DILexicalBlock(scope: !564, file: !32, line: 334, column: 33)
!573 = !DILocation(line: 338, column: 9, scope: !572)
!574 = !DILocation(line: 340, column: 13, scope: !572)
!575 = !DILocation(line: 341, column: 14, scope: !572)
!576 = !DILocation(line: 341, column: 22, scope: !572)
!577 = !DILocation(line: 342, column: 16, scope: !578)
!578 = distinct !DILexicalBlock(scope: !572, file: !32, line: 342, column: 13)
!579 = !DILocation(line: 342, column: 13, scope: !578)
!580 = !DILocation(line: 342, column: 24, scope: !578)
!581 = !DILocation(line: 342, column: 13, scope: !572)
!582 = !DILocation(line: 344, column: 25, scope: !583)
!583 = distinct !DILexicalBlock(scope: !578, file: !32, line: 342, column: 30)
!584 = !DILocation(line: 344, column: 14, scope: !583)
!585 = !DILocation(line: 344, column: 20, scope: !583)
!586 = !DILocation(line: 345, column: 14, scope: !583)
!587 = !DILocation(line: 345, column: 19, scope: !583)
!588 = !DILocation(line: 346, column: 17, scope: !583)
!589 = !DILocation(line: 347, column: 14, scope: !583)
!590 = !DILocation(line: 347, column: 22, scope: !583)
!591 = !DILocation(line: 348, column: 14, scope: !583)
!592 = !DILocation(line: 348, column: 22, scope: !583)
!593 = !DILocation(line: 349, column: 9, scope: !583)
!594 = !DILocation(line: 351, column: 22, scope: !595)
!595 = distinct !DILexicalBlock(scope: !578, file: !32, line: 349, column: 16)
!596 = !DILocation(line: 351, column: 17, scope: !595)
!597 = !DILocation(line: 352, column: 22, scope: !595)
!598 = !DILocation(line: 352, column: 30, scope: !595)
!599 = !DILocation(line: 352, column: 14, scope: !595)
!600 = !DILocation(line: 352, column: 19, scope: !595)
!601 = !DILocation(line: 353, column: 23, scope: !595)
!602 = !DILocation(line: 353, column: 31, scope: !595)
!603 = !DILocation(line: 353, column: 14, scope: !595)
!604 = !DILocation(line: 353, column: 20, scope: !595)
!605 = !DILocation(line: 354, column: 12, scope: !595)
!606 = !DILocation(line: 354, column: 20, scope: !595)
!607 = !DILocation(line: 354, column: 25, scope: !595)
!608 = !DILocation(line: 355, column: 12, scope: !595)
!609 = !DILocation(line: 355, column: 20, scope: !595)
!610 = !DILocation(line: 355, column: 26, scope: !595)
!611 = !DILocation(line: 356, column: 20, scope: !595)
!612 = !DILocation(line: 356, column: 28, scope: !595)
!613 = !DILocation(line: 356, column: 19, scope: !595)
!614 = !DILocation(line: 356, column: 11, scope: !595)
!615 = !DILocation(line: 358, column: 16, scope: !616)
!616 = distinct !DILexicalBlock(scope: !595, file: !32, line: 356, column: 37)
!617 = !DILocation(line: 358, column: 24, scope: !616)
!618 = !DILocation(line: 359, column: 16, scope: !616)
!619 = !DILocation(line: 359, column: 24, scope: !616)
!620 = !DILocation(line: 360, column: 13, scope: !616)
!621 = !DILocation(line: 362, column: 16, scope: !616)
!622 = !DILocation(line: 362, column: 24, scope: !616)
!623 = !DILocation(line: 363, column: 16, scope: !616)
!624 = !DILocation(line: 363, column: 24, scope: !616)
!625 = !DILocation(line: 364, column: 13, scope: !616)
!626 = !DILocation(line: 366, column: 16, scope: !616)
!627 = !DILocation(line: 366, column: 24, scope: !616)
!628 = !DILocation(line: 367, column: 16, scope: !616)
!629 = !DILocation(line: 367, column: 24, scope: !616)
!630 = !DILocation(line: 368, column: 13, scope: !616)
!631 = !DILocation(line: 370, column: 12, scope: !595)
!632 = !DILocation(line: 370, column: 20, scope: !595)
!633 = !DILocation(line: 370, column: 28, scope: !595)
!634 = !DILocation(line: 372, column: 7, scope: !572)
!635 = !DILocation(line: 373, column: 5, scope: !564)
!636 = !DILocation(line: 377, column: 3, scope: !60)
!637 = !DILocation(line: 378, column: 1, scope: !60)
!638 = !DILocation(line: 383, column: 13, scope: !64)
!639 = !DILocation(line: 384, column: 14, scope: !64)
!640 = !DILocation(line: 385, column: 13, scope: !64)
!641 = !DILocation(line: 386, column: 12, scope: !64)
!642 = !DILocation(line: 387, column: 1, scope: !64)
!643 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "name", arg: 1, scope: !65, file: !32, line: 391, type: !4)
!644 = !DILocation(line: 391, column: 18, scope: !65)
!645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "namekind", arg: 2, scope: !65, file: !32, line: 391, type: !12)
!646 = !DILocation(line: 391, column: 28, scope: !65)
!647 = !DILocation(line: 395, column: 7, scope: !648)
!648 = distinct !DILexicalBlock(scope: !65, file: !32, line: 395, column: 7)
!649 = !DILocation(line: 395, column: 20, scope: !648)
!650 = !DILocation(line: 395, column: 7, scope: !65)
!651 = !DILocation(line: 396, column: 5, scope: !648)
!652 = !DILocation(line: 399, column: 16, scope: !65)
!653 = !DILocation(line: 399, column: 8, scope: !65)
!654 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !65, file: !32, line: 392, type: !16)
!655 = !DILocation(line: 392, column: 11, scope: !65)
!656 = !DILocation(line: 400, column: 10, scope: !657)
!657 = distinct !DILexicalBlock(scope: !65, file: !32, line: 400, column: 7)
!658 = !DILocation(line: 400, column: 7, scope: !65)
!659 = !DILocation(line: 402, column: 20, scope: !660)
!660 = distinct !DILexicalBlock(scope: !657, file: !32, line: 400, column: 19)
!661 = !DILocation(line: 402, column: 10, scope: !660)
!662 = !DILocation(line: 403, column: 14, scope: !660)
!663 = !DILocation(line: 403, column: 9, scope: !660)
!664 = !DILocation(line: 403, column: 12, scope: !660)
!665 = !DILocation(line: 404, column: 9, scope: !660)
!666 = !DILocation(line: 404, column: 16, scope: !660)
!667 = !DILocation(line: 405, column: 9, scope: !660)
!668 = !DILocation(line: 405, column: 16, scope: !660)
!669 = !DILocation(line: 406, column: 9, scope: !660)
!670 = !DILocation(line: 406, column: 16, scope: !660)
!671 = !DILocation(line: 407, column: 5, scope: !660)
!672 = !DILocation(line: 408, column: 3, scope: !660)
!673 = !DILocation(line: 411, column: 3, scope: !65)
!674 = !DILocation(line: 415, column: 13, scope: !675)
!675 = distinct !DILexicalBlock(scope: !676, file: !32, line: 415, column: 9)
!676 = distinct !DILexicalBlock(scope: !65, file: !32, line: 411, column: 21)
!677 = !DILocation(line: 415, column: 20, scope: !675)
!678 = !DILocation(line: 415, column: 9, scope: !676)
!679 = !DILocation(line: 416, column: 7, scope: !680)
!680 = distinct !DILexicalBlock(scope: !675, file: !32, line: 415, column: 26)
!681 = !DILocation(line: 417, column: 20, scope: !680)
!682 = !DILocation(line: 417, column: 15, scope: !680)
!683 = !DILocation(line: 417, column: 7, scope: !680)
!684 = !DILocation(line: 419, column: 28, scope: !676)
!685 = !DILocation(line: 419, column: 9, scope: !676)
!686 = !DILocation(line: 419, column: 16, scope: !676)
!687 = !DILocation(line: 420, column: 17, scope: !676)
!688 = !DILocation(line: 420, column: 5, scope: !676)
!689 = !DILocation(line: 420, column: 25, scope: !676)
!690 = !DILocation(line: 421, column: 13, scope: !691)
!691 = distinct !DILexicalBlock(scope: !676, file: !32, line: 421, column: 9)
!692 = !DILocation(line: 421, column: 20, scope: !691)
!693 = !DILocation(line: 421, column: 9, scope: !676)
!694 = !DILocation(line: 422, column: 15, scope: !695)
!695 = distinct !DILexicalBlock(scope: !696, file: !32, line: 422, column: 11)
!696 = distinct !DILexicalBlock(scope: !691, file: !32, line: 421, column: 33)
!697 = !DILocation(line: 422, column: 25, scope: !695)
!698 = !DILocation(line: 422, column: 22, scope: !695)
!699 = !DILocation(line: 422, column: 11, scope: !696)
!700 = !DILocation(line: 423, column: 9, scope: !695)
!701 = !DILocation(line: 424, column: 20, scope: !696)
!702 = !DILocation(line: 424, column: 15, scope: !696)
!703 = !DILocation(line: 424, column: 7, scope: !696)
!704 = !DILocation(line: 426, column: 5, scope: !676)
!705 = !DILocation(line: 427, column: 5, scope: !676)
!706 = !DILocation(line: 430, column: 13, scope: !707)
!707 = distinct !DILexicalBlock(scope: !676, file: !32, line: 430, column: 9)
!708 = !DILocation(line: 430, column: 20, scope: !707)
!709 = !DILocation(line: 430, column: 9, scope: !676)
!710 = !DILocation(line: 431, column: 7, scope: !711)
!711 = distinct !DILexicalBlock(scope: !707, file: !32, line: 430, column: 26)
!712 = !DILocation(line: 432, column: 19, scope: !711)
!713 = !DILocation(line: 432, column: 7, scope: !711)
!714 = !DILocation(line: 434, column: 27, scope: !676)
!715 = !DILocation(line: 434, column: 9, scope: !676)
!716 = !DILocation(line: 434, column: 16, scope: !676)
!717 = !DILocation(line: 435, column: 17, scope: !676)
!718 = !DILocation(line: 435, column: 5, scope: !676)
!719 = !DILocation(line: 435, column: 25, scope: !676)
!720 = !DILocation(line: 436, column: 13, scope: !721)
!721 = distinct !DILexicalBlock(scope: !676, file: !32, line: 436, column: 9)
!722 = !DILocation(line: 436, column: 20, scope: !721)
!723 = !DILocation(line: 436, column: 9, scope: !676)
!724 = !DILocation(line: 437, column: 15, scope: !725)
!725 = distinct !DILexicalBlock(scope: !726, file: !32, line: 437, column: 11)
!726 = distinct !DILexicalBlock(scope: !721, file: !32, line: 436, column: 33)
!727 = !DILocation(line: 437, column: 25, scope: !725)
!728 = !DILocation(line: 437, column: 22, scope: !725)
!729 = !DILocation(line: 437, column: 11, scope: !726)
!730 = !DILocation(line: 438, column: 9, scope: !725)
!731 = !DILocation(line: 439, column: 19, scope: !726)
!732 = !DILocation(line: 439, column: 7, scope: !726)
!733 = !DILocation(line: 441, column: 5, scope: !676)
!734 = !DILocation(line: 442, column: 5, scope: !676)
!735 = !DILocation(line: 445, column: 13, scope: !736)
!736 = distinct !DILexicalBlock(scope: !676, file: !32, line: 445, column: 9)
!737 = !DILocation(line: 445, column: 20, scope: !736)
!738 = !DILocation(line: 445, column: 9, scope: !676)
!739 = !DILocation(line: 446, column: 7, scope: !740)
!740 = distinct !DILexicalBlock(scope: !736, file: !32, line: 445, column: 26)
!741 = !DILocation(line: 447, column: 19, scope: !740)
!742 = !DILocation(line: 447, column: 7, scope: !740)
!743 = !DILocation(line: 449, column: 26, scope: !676)
!744 = !DILocation(line: 449, column: 9, scope: !676)
!745 = !DILocation(line: 449, column: 16, scope: !676)
!746 = !DILocation(line: 450, column: 17, scope: !676)
!747 = !DILocation(line: 450, column: 24, scope: !676)
!748 = !DILocation(line: 450, column: 5, scope: !676)
!749 = !DILocation(line: 450, column: 29, scope: !676)
!750 = !DILocation(line: 451, column: 13, scope: !751)
!751 = distinct !DILexicalBlock(scope: !676, file: !32, line: 451, column: 9)
!752 = !DILocation(line: 451, column: 20, scope: !751)
!753 = !DILocation(line: 451, column: 9, scope: !676)
!754 = !DILocation(line: 452, column: 15, scope: !755)
!755 = distinct !DILexicalBlock(scope: !756, file: !32, line: 452, column: 11)
!756 = distinct !DILexicalBlock(scope: !751, file: !32, line: 451, column: 34)
!757 = !DILocation(line: 452, column: 25, scope: !755)
!758 = !DILocation(line: 452, column: 22, scope: !755)
!759 = !DILocation(line: 452, column: 11, scope: !756)
!760 = !DILocation(line: 453, column: 9, scope: !755)
!761 = !DILocation(line: 454, column: 19, scope: !756)
!762 = !DILocation(line: 454, column: 7, scope: !756)
!763 = !DILocation(line: 456, column: 5, scope: !676)
!764 = !DILocation(line: 457, column: 5, scope: !676)
!765 = !DILocation(line: 459, column: 1, scope: !65)
!766 = !DILocation(line: 464, column: 3, scope: !68)
!767 = !DILocation(line: 465, column: 3, scope: !68)
!768 = !DILocation(line: 466, column: 1, scope: !68)
!769 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "prefix", arg: 1, scope: !69, file: !32, line: 470, type: !4)
!770 = !DILocation(line: 470, column: 21, scope: !69)
!771 = !DILocation(line: 471, column: 3, scope: !69)
!772 = !DILocation(line: 472, column: 3, scope: !69)
!773 = !DILocation(line: 484, column: 1, scope: !69)
!774 = !DILocation(line: 489, column: 3, scope: !70)
!775 = !DILocation(line: 490, column: 3, scope: !70)
!776 = !DILocation(line: 491, column: 3, scope: !70)
!777 = !DILocation(line: 492, column: 3, scope: !70)
!778 = !DILocation(line: 493, column: 3, scope: !70)
!779 = !DILocation(line: 494, column: 3, scope: !70)
!780 = !DILocation(line: 495, column: 3, scope: !70)
!781 = !DILocation(line: 496, column: 3, scope: !70)
!782 = !DILocation(line: 500, column: 1, scope: !70)
!783 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mesg", arg: 1, scope: !75, file: !32, line: 581, type: !4)
!784 = !DILocation(line: 581, column: 21, scope: !75)
!785 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !75, file: !32, line: 582, type: !256)
!786 = !DILocation(line: 582, column: 11, scope: !75)
!787 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error_mesg", scope: !75, file: !32, line: 583, type: !788)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 2040, align: 8, elements: !789)
!789 = !{!790}
!790 = !DISubrange(count: 255)
!791 = !DILocation(line: 583, column: 8, scope: !75)
!792 = !DILocation(line: 585, column: 3, scope: !75)
!793 = !DILocation(line: 587, column: 12, scope: !75)
!794 = !DILocation(line: 587, column: 30, scope: !75)
!795 = !DILocation(line: 587, column: 3, scope: !75)
!796 = !DILocation(line: 588, column: 3, scope: !75)
!797 = !DILocation(line: 590, column: 11, scope: !75)
!798 = !DILocation(line: 591, column: 22, scope: !75)
!799 = !DILocation(line: 591, column: 11, scope: !75)
!800 = !DILocation(line: 591, column: 35, scope: !75)
!801 = !DILocation(line: 591, column: 44, scope: !75)
!802 = !DILocation(line: 590, column: 3, scope: !75)
!803 = !DILocation(line: 592, column: 17, scope: !75)
!804 = !DILocation(line: 593, column: 1, scope: !75)
!805 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mesg", arg: 1, scope: !76, file: !32, line: 599, type: !4)
!806 = !DILocation(line: 599, column: 20, scope: !76)
!807 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "args", scope: !76, file: !32, line: 600, type: !256)
!808 = !DILocation(line: 600, column: 11, scope: !76)
!809 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "error_mesg", scope: !76, file: !32, line: 601, type: !788)
!810 = !DILocation(line: 601, column: 8, scope: !76)
!811 = !DILocation(line: 603, column: 3, scope: !76)
!812 = !DILocation(line: 605, column: 12, scope: !76)
!813 = !DILocation(line: 605, column: 30, scope: !76)
!814 = !DILocation(line: 605, column: 3, scope: !76)
!815 = !DILocation(line: 606, column: 3, scope: !76)
!816 = !DILocation(line: 608, column: 11, scope: !76)
!817 = !DILocation(line: 609, column: 22, scope: !76)
!818 = !DILocation(line: 609, column: 11, scope: !76)
!819 = !DILocation(line: 609, column: 35, scope: !76)
!820 = !DILocation(line: 609, column: 44, scope: !76)
!821 = !DILocation(line: 608, column: 3, scope: !76)
!822 = !DILocation(line: 610, column: 1, scope: !76)
