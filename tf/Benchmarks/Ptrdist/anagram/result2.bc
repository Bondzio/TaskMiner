; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.Letter = type { i32, i32, i32, i32 }
%struct.Word = type { [2 x i64], i8*, i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }

@cchMinLength = global i32 3, align 4
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [24 x i8] c"Cannot stat dictionary\0A\00", align 1
@pchDictionary = common global i8* null, align 8
@.str.1 = private unnamed_addr constant [42 x i8] c"Unable to allocate memory for dictionary\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Cannot open dictionary\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"main dictionary has %u entries\0A\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"Dictionary too large; increase MAXWORDS\0A\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"%lu bytes wasted\0A\00", align 1
@alPhrase = common global [26 x %struct.Letter] zeroinitializer, align 16
@aqMainMask = common global [2 x i64] zeroinitializer, align 16
@aqMainSign = common global [2 x i64] zeroinitializer, align 16
@cchPhraseLength = common global i32 0, align 4
@auGlobalFrequency = common global [26 x i32] zeroinitializer, align 16
@.str.7 = private unnamed_addr constant [28 x i8] c"MAX_QUADS not large enough\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"Out of memory after %d candidates\0A\00", align 1
@cpwCand = common global i32 0, align 4
@.str.9 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"Too many candidates\0A\00", align 1
@apwCand = common global [5000 x %struct.Word*] zeroinitializer, align 16
@.str.11 = private unnamed_addr constant [15 x i8] c"%d candidates\0A\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"%15s%c\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@DumpWords.X = internal global i32 0, align 4
@cpwLast = common global i32 0, align 4
@apwSol = common global [51 x %struct.Word*] zeroinitializer, align 16
@achByFrequency = common global [26 x i8] zeroinitializer, align 16
@.str.14 = private unnamed_addr constant [25 x i8] c"Order of search will be \00", align 1
@fInteractive = common global i32 0, align 4
@.str.15 = private unnamed_addr constant [2 x i8] c">\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@stdin = external global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [36 x i8] c"Usage: anagram dictionary [length]\0A\00", align 1
@achPhrase = common global [255 x i8] zeroinitializer, align 16
@.str.17 = private unnamed_addr constant [16 x i8] c"New length: %d\0A\00", align 1
@jbAnagram = common global [1 x %struct.__jmp_buf_tag] zeroinitializer, align 16

; Function Attrs: nounwind uwtable
define void @Fatal(i8* %pchMsg, i32 %u) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %pchMsg, i64 0, metadata !146, metadata !147), !dbg !148
  call void @llvm.dbg.value(metadata i32 %u, i64 0, metadata !149, metadata !147), !dbg !150
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !151
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* %pchMsg, i32 %u), !dbg !152
  call void @exit(i32 1) #9, !dbg !153
  unreachable, !dbg !153

return:                                           ; No predecessors!
  ret void, !dbg !154
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind uwtable
define void @ReadDict(i8* %pchFile) #0 {
entry:
  %statBuf = alloca %struct.stat, align 8
  call void @llvm.dbg.value(metadata i8* %pchFile, i64 0, metadata !155, metadata !147), !dbg !156
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !157, metadata !147), !dbg !158
  call void @llvm.dbg.declare(metadata %struct.stat* %statBuf, metadata !159, metadata !147), !dbg !198
  %call = call i32 @stat(i8* %pchFile, %struct.stat* %statBuf) #6, !dbg !199
  %tobool = icmp ne i32 %call, 0, !dbg !199
  br i1 %tobool, label %if.then, label %if.end, !dbg !201

if.then:                                          ; preds = %entry
  call void @Fatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i32 0, i32 0), i32 0), !dbg !202
  br label %if.end, !dbg !202

if.end:                                           ; preds = %if.then, %entry
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %statBuf, i32 0, i32 8, !dbg !203
  %tmp1 = load i64, i64* %st_size, align 8, !dbg !203
  %add = add i64 %tmp1, 52000, !dbg !204
  call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !205, metadata !147), !dbg !206
  %call1 = call noalias i8* @malloc(i64 %add) #6, !dbg !207
  store i8* %call1, i8** @pchDictionary, align 8, !dbg !208
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !209, metadata !147), !dbg !210
  %tmp3 = load i8*, i8** @pchDictionary, align 8, !dbg !211
  %cmp = icmp eq i8* %tmp3, null, !dbg !213
  br i1 %cmp, label %if.then.2, label %if.end.3, !dbg !214

if.then.2:                                        ; preds = %if.end
  call void @Fatal(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i32 0, i32 0), i32 0), !dbg !215
  br label %if.end.3, !dbg !215

if.end.3:                                         ; preds = %if.then.2, %if.end
  %call4 = call %struct._IO_FILE* @fopen(i8* %pchFile, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)), !dbg !216
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call4, i64 0, metadata !218, metadata !147), !dbg !271
  %cmp5 = icmp eq %struct._IO_FILE* %call4, null, !dbg !272
  br i1 %cmp5, label %if.then.6, label %if.end.7, !dbg !273

if.then.6:                                        ; preds = %if.end.3
  call void @Fatal(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0), !dbg !274
  br label %if.end.7, !dbg !274

if.end.7:                                         ; preds = %if.then.6, %if.end.3
  br label %while.cond, !dbg !275

while.cond:                                       ; preds = %while.end, %if.end.7
  %pchBase.0 = phi i8* [ %call1, %if.end.7 ], [ %incdec.ptr20, %while.end ]
  %cWords.0 = phi i32 [ 0, %if.end.7 ], [ %inc24, %while.end ]
  %call8 = call i32 @feof(%struct._IO_FILE* %call4) #6, !dbg !276
  %tobool9 = icmp ne i32 %call8, 0, !dbg !277
  %lnot = xor i1 %tobool9, true, !dbg !277
  br i1 %lnot, label %while.body, label %while.end.25, !dbg !275

while.body:                                       ; preds = %while.cond
  %add.ptr = getelementptr inbounds i8, i8* %pchBase.0, i64 2, !dbg !278
  call void @llvm.dbg.value(metadata i8* %add.ptr, i64 0, metadata !280, metadata !147), !dbg !281
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !282, metadata !147), !dbg !283
  br label %while.cond.10, !dbg !284

while.cond.10:                                    ; preds = %if.end.18, %while.body
  %pch.0 = phi i8* [ %add.ptr, %while.body ], [ %incdec.ptr, %if.end.18 ]
  %cLetters.0 = phi i32 [ 0, %while.body ], [ %cLetters.1, %if.end.18 ]
  %call11 = call i32 @fgetc(%struct._IO_FILE* %call4), !dbg !285
  call void @llvm.dbg.value(metadata i32 %call11, i64 0, metadata !286, metadata !147), !dbg !287
  %cmp12 = icmp ne i32 %call11, 10, !dbg !288
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !289

land.rhs:                                         ; preds = %while.cond.10
  %cmp13 = icmp ne i32 %call11, -1, !dbg !290
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond.10
  %tmp9 = phi i1 [ false, %while.cond.10 ], [ %cmp13, %land.rhs ]
  br i1 %tmp9, label %while.body.14, label %while.end, !dbg !291

while.body.14:                                    ; preds = %land.end
  %idxprom = sext i32 %call11 to i64, !dbg !293
  %call15 = call i16** @__ctype_b_loc() #1, !dbg !293
  %tmp11 = load i16*, i16** %call15, align 8, !dbg !293
  %arrayidx = getelementptr inbounds i16, i16* %tmp11, i64 %idxprom, !dbg !293
  %tmp12 = load i16, i16* %arrayidx, align 2, !dbg !293
  %conv = zext i16 %tmp12 to i32, !dbg !293
  %and = and i32 %conv, 1024, !dbg !293
  %tobool16 = icmp ne i32 %and, 0, !dbg !293
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !296

if.then.17:                                       ; preds = %while.body.14
  %inc = add i32 %cLetters.0, 1, !dbg !297
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !282, metadata !147), !dbg !283
  br label %if.end.18, !dbg !298

if.end.18:                                        ; preds = %if.then.17, %while.body.14
  %cLetters.1 = phi i32 [ %inc, %if.then.17 ], [ %cLetters.0, %while.body.14 ]
  %conv19 = trunc i32 %call11 to i8, !dbg !299
  %incdec.ptr = getelementptr inbounds i8, i8* %pch.0, i32 1, !dbg !300
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !280, metadata !147), !dbg !281
  store i8 %conv19, i8* %pch.0, align 1, !dbg !301
  br label %while.cond.10, !dbg !284

while.end:                                        ; preds = %land.end
  %cLetters.0.lcssa = phi i32 [ %cLetters.0, %land.end ]
  %pch.0.lcssa = phi i8* [ %pch.0, %land.end ]
  %incdec.ptr20 = getelementptr inbounds i8, i8* %pch.0.lcssa, i32 1, !dbg !302
  call void @llvm.dbg.value(metadata i8* %incdec.ptr20, i64 0, metadata !280, metadata !147), !dbg !281
  store i8 0, i8* %pch.0.lcssa, align 1, !dbg !303
  %sub.ptr.lhs.cast = ptrtoint i8* %incdec.ptr20 to i64, !dbg !304
  %sub.ptr.rhs.cast = ptrtoint i8* %pchBase.0 to i64, !dbg !304
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !304
  %conv21 = trunc i64 %sub.ptr.sub to i8, !dbg !305
  store i8 %conv21, i8* %pchBase.0, align 1, !dbg !306
  %conv22 = trunc i32 %cLetters.0.lcssa to i8, !dbg !307
  %arrayidx23 = getelementptr inbounds i8, i8* %pchBase.0, i64 1, !dbg !308
  store i8 %conv22, i8* %arrayidx23, align 1, !dbg !309
  call void @llvm.dbg.value(metadata i8* %incdec.ptr20, i64 0, metadata !209, metadata !147), !dbg !210
  %inc24 = add i32 %cWords.0, 1, !dbg !310
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !157, metadata !147), !dbg !158
  br label %while.cond, !dbg !275

while.end.25:                                     ; preds = %while.cond
  %cWords.0.lcssa = phi i32 [ %cWords.0, %while.cond ]
  %pchBase.0.lcssa = phi i8* [ %pchBase.0, %while.cond ]
  %call26 = call i32 @fclose(%struct._IO_FILE* %call4), !dbg !311
  %incdec.ptr27 = getelementptr inbounds i8, i8* %pchBase.0.lcssa, i32 1, !dbg !312
  call void @llvm.dbg.value(metadata i8* %incdec.ptr27, i64 0, metadata !209, metadata !147), !dbg !210
  store i8 0, i8* %pchBase.0.lcssa, align 1, !dbg !313
  %tmp26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !314
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp26, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i32 0, i32 0), i32 %cWords.0.lcssa), !dbg !315
  %cmp29 = icmp uge i32 %cWords.0.lcssa, 26000, !dbg !316
  br i1 %cmp29, label %if.then.31, label %if.end.32, !dbg !318

if.then.31:                                       ; preds = %while.end.25
  call void @Fatal(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i32 0, i32 0), i32 0), !dbg !319
  br label %if.end.32, !dbg !319

if.end.32:                                        ; preds = %if.then.31, %while.end.25
  %tmp29 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !320
  %tmp32 = load i8*, i8** @pchDictionary, align 8, !dbg !321
  %sub.ptr.lhs.cast33 = ptrtoint i8* %incdec.ptr27 to i64, !dbg !322
  %sub.ptr.rhs.cast34 = ptrtoint i8* %tmp32 to i64, !dbg !322
  %sub.ptr.sub35 = sub i64 %sub.ptr.lhs.cast33, %sub.ptr.rhs.cast34, !dbg !322
  %sub = sub i64 %add, %sub.ptr.sub35, !dbg !323
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0), i64 %sub), !dbg !324
  ret void, !dbg !325
}

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #4

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind
declare i32 @feof(%struct._IO_FILE*) #4

declare i32 @fgetc(%struct._IO_FILE*) #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define void @BuildMask(i8* %pchPhrase) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %pchPhrase, i64 0, metadata !326, metadata !147), !dbg !327
  call void @llvm.memset.p0i8.i64(i8* bitcast ([26 x %struct.Letter]* @alPhrase to i8*), i8 0, i64 416, i32 16, i1 false), !dbg !328
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x i64]* @aqMainMask to i8*), i8 0, i64 16, i32 16, i1 false), !dbg !329
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x i64]* @aqMainSign to i8*), i8 0, i64 16, i32 16, i1 false), !dbg !330
  store i32 0, i32* @cchPhraseLength, align 4, !dbg !331
  br label %while.cond, !dbg !332

while.cond:                                       ; preds = %if.end, %entry
  %pchPhrase.addr.0 = phi i8* [ %pchPhrase, %entry ], [ %incdec.ptr, %if.end ]
  %incdec.ptr = getelementptr inbounds i8, i8* %pchPhrase.addr.0, i32 1, !dbg !333
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !326, metadata !147), !dbg !327
  %tmp1 = load i8, i8* %pchPhrase.addr.0, align 1, !dbg !336
  %conv = sext i8 %tmp1 to i32, !dbg !336
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !337, metadata !147), !dbg !338
  %cmp = icmp ne i32 %conv, 0, !dbg !339
  br i1 %cmp, label %while.body, label %while.end, !dbg !332

while.body:                                       ; preds = %while.cond
  %idxprom = sext i32 %conv to i64, !dbg !340
  %call = call i16** @__ctype_b_loc() #1, !dbg !340
  %tmp3 = load i16*, i16** %call, align 8, !dbg !340
  %arrayidx = getelementptr inbounds i16, i16* %tmp3, i64 %idxprom, !dbg !340
  %tmp4 = load i16, i16* %arrayidx, align 2, !dbg !340
  %conv2 = zext i16 %tmp4 to i32, !dbg !340
  %and = and i32 %conv2, 1024, !dbg !340
  %tobool = icmp ne i32 %and, 0, !dbg !340
  br i1 %tobool, label %if.then, label %if.end, !dbg !343

if.then:                                          ; preds = %while.body
  %call3 = call i32 @tolower(i32 %conv) #6, !dbg !344
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !337, metadata !147), !dbg !338
  %sub = sub nsw i32 %call3, 97, !dbg !346
  %idxprom4 = sext i32 %sub to i64, !dbg !346
  %arrayidx5 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom4, !dbg !346
  %uFrequency = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx5, i32 0, i32 0, !dbg !347
  %tmp7 = load i32, i32* %uFrequency, align 4, !dbg !348
  %inc = add i32 %tmp7, 1, !dbg !348
  store i32 %inc, i32* %uFrequency, align 4, !dbg !348
  %tmp8 = load i32, i32* @cchPhraseLength, align 4, !dbg !349
  %inc6 = add nsw i32 %tmp8, 1, !dbg !349
  store i32 %inc6, i32* @cchPhraseLength, align 4, !dbg !349
  br label %if.end, !dbg !350

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !332

while.end:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !351, metadata !147), !dbg !352
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !353, metadata !147), !dbg !354
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !355, metadata !147), !dbg !356
  br label %for.cond, !dbg !357

for.cond:                                         ; preds = %for.inc.64, %while.end
  %cbtUsed.0 = phi i32 [ 0, %while.end ], [ %cbtUsed.2, %for.inc.64 ]
  %iq.0 = phi i32 [ 0, %while.end ], [ %iq.2, %for.inc.64 ]
  %i.0 = phi i32 [ 0, %while.end ], [ %inc65, %for.inc.64 ]
  %cmp7 = icmp slt i32 %i.0, 26, !dbg !359
  br i1 %cmp7, label %for.body, label %for.end.66, !dbg !361

for.body:                                         ; preds = %for.cond
  %idxprom9 = sext i32 %i.0 to i64, !dbg !362
  %arrayidx10 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom9, !dbg !362
  %uFrequency11 = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx10, i32 0, i32 0, !dbg !365
  %tmp11 = load i32, i32* %uFrequency11, align 4, !dbg !365
  %cmp12 = icmp eq i32 %tmp11, 0, !dbg !366
  br i1 %cmp12, label %if.then.14, label %if.else, !dbg !367

if.then.14:                                       ; preds = %for.body
  %idxprom15 = sext i32 %i.0 to i64, !dbg !368
  %arrayidx16 = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom15, !dbg !368
  store i32 -1, i32* %arrayidx16, align 4, !dbg !370
  br label %if.end.63, !dbg !371

if.else:                                          ; preds = %for.body
  %idxprom17 = sext i32 %i.0 to i64, !dbg !372
  %arrayidx18 = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom17, !dbg !372
  store i32 0, i32* %arrayidx18, align 4, !dbg !374
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !375, metadata !147), !dbg !376
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !377, metadata !147), !dbg !378
  br label %for.cond.19, !dbg !379

for.cond.19:                                      ; preds = %for.inc, %if.else
  %qNeed.0 = phi i64 [ 1, %if.else ], [ %shl, %for.inc ]
  %cbtNeed.0 = phi i32 [ 1, %if.else ], [ %inc27, %for.inc ]
  %idxprom20 = sext i32 %i.0 to i64, !dbg !381
  %arrayidx21 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom20, !dbg !381
  %uFrequency22 = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx21, i32 0, i32 0, !dbg !383
  %tmp15 = load i32, i32* %uFrequency22, align 4, !dbg !383
  %conv23 = zext i32 %tmp15 to i64, !dbg !381
  %cmp24 = icmp uge i64 %conv23, %qNeed.0, !dbg !384
  br i1 %cmp24, label %for.body.26, label %for.end, !dbg !385

for.body.26:                                      ; preds = %for.cond.19
  br label %for.inc, !dbg !386

for.inc:                                          ; preds = %for.body.26
  %inc27 = add nsw i32 %cbtNeed.0, 1, !dbg !388
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !375, metadata !147), !dbg !376
  %shl = shl i64 %qNeed.0, 1, !dbg !389
  call void @llvm.dbg.value(metadata i64 %shl, i64 0, metadata !377, metadata !147), !dbg !378
  br label %for.cond.19, !dbg !390

for.end:                                          ; preds = %for.cond.19
  %cbtNeed.0.lcssa = phi i32 [ %cbtNeed.0, %for.cond.19 ]
  %qNeed.0.lcssa = phi i64 [ %qNeed.0, %for.cond.19 ]
  %add = add nsw i32 %cbtUsed.0, %cbtNeed.0.lcssa, !dbg !391
  %conv28 = sext i32 %add to i64, !dbg !393
  %cmp29 = icmp ugt i64 %conv28, 64, !dbg !394
  br i1 %cmp29, label %if.then.31, label %if.end.37, !dbg !395

if.then.31:                                       ; preds = %for.end
  %inc32 = add i32 %iq.0, 1, !dbg !396
  call void @llvm.dbg.value(metadata i32 %inc32, i64 0, metadata !351, metadata !147), !dbg !352
  %cmp33 = icmp uge i32 %inc32, 2, !dbg !399
  br i1 %cmp33, label %if.then.35, label %if.end.36, !dbg !400

if.then.35:                                       ; preds = %if.then.31
  call void @Fatal(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i32 0, i32 0), i32 0), !dbg !401
  br label %if.end.36, !dbg !401

if.end.36:                                        ; preds = %if.then.35, %if.then.31
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !353, metadata !147), !dbg !354
  br label %if.end.37, !dbg !402

if.end.37:                                        ; preds = %if.end.36, %for.end
  %cbtUsed.1 = phi i32 [ 0, %if.end.36 ], [ %cbtUsed.0, %for.end ]
  %iq.1 = phi i32 [ %inc32, %if.end.36 ], [ %iq.0, %for.end ]
  %sub38 = sub i64 %qNeed.0.lcssa, 1, !dbg !403
  %conv39 = trunc i64 %sub38 to i32, !dbg !404
  %idxprom40 = sext i32 %i.0 to i64, !dbg !405
  %arrayidx41 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom40, !dbg !405
  %uBits = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx41, i32 0, i32 2, !dbg !406
  store i32 %conv39, i32* %uBits, align 4, !dbg !407
  %tobool42 = icmp ne i32 %cbtUsed.1, 0, !dbg !408
  br i1 %tobool42, label %if.then.43, label %if.end.45, !dbg !410

if.then.43:                                       ; preds = %if.end.37
  %sh_prom = zext i32 %cbtUsed.1 to i64, !dbg !411
  %shl44 = shl i64 %qNeed.0.lcssa, %sh_prom, !dbg !411
  call void @llvm.dbg.value(metadata i64 %shl44, i64 0, metadata !377, metadata !147), !dbg !378
  br label %if.end.45, !dbg !412

if.end.45:                                        ; preds = %if.then.43, %if.end.37
  %qNeed.1 = phi i64 [ %shl44, %if.then.43 ], [ %qNeed.0.lcssa, %if.end.37 ]
  %idxprom46 = zext i32 %iq.1 to i64, !dbg !413
  %arrayidx47 = getelementptr inbounds [2 x i64], [2 x i64]* @aqMainSign, i32 0, i64 %idxprom46, !dbg !413
  %tmp29 = load i64, i64* %arrayidx47, align 8, !dbg !414
  %or = or i64 %tmp29, %qNeed.1, !dbg !414
  store i64 %or, i64* %arrayidx47, align 8, !dbg !414
  %idxprom48 = sext i32 %i.0 to i64, !dbg !415
  %arrayidx49 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom48, !dbg !415
  %uFrequency50 = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx49, i32 0, i32 0, !dbg !416
  %tmp31 = load i32, i32* %uFrequency50, align 4, !dbg !416
  %conv51 = zext i32 %tmp31 to i64, !dbg !417
  %sh_prom52 = zext i32 %cbtUsed.1 to i64, !dbg !418
  %shl53 = shl i64 %conv51, %sh_prom52, !dbg !418
  %idxprom54 = zext i32 %iq.1 to i64, !dbg !419
  %arrayidx55 = getelementptr inbounds [2 x i64], [2 x i64]* @aqMainMask, i32 0, i64 %idxprom54, !dbg !419
  %tmp34 = load i64, i64* %arrayidx55, align 8, !dbg !420
  %or56 = or i64 %tmp34, %shl53, !dbg !420
  store i64 %or56, i64* %arrayidx55, align 8, !dbg !420
  %idxprom57 = sext i32 %i.0 to i64, !dbg !421
  %arrayidx58 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom57, !dbg !421
  %uShift = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx58, i32 0, i32 1, !dbg !422
  store i32 %cbtUsed.1, i32* %uShift, align 4, !dbg !423
  %idxprom59 = sext i32 %i.0 to i64, !dbg !424
  %arrayidx60 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom59, !dbg !424
  %iq61 = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx60, i32 0, i32 3, !dbg !425
  store i32 %iq.1, i32* %iq61, align 4, !dbg !426
  %add62 = add nsw i32 %cbtUsed.1, %cbtNeed.0.lcssa, !dbg !427
  call void @llvm.dbg.value(metadata i32 %add62, i64 0, metadata !353, metadata !147), !dbg !354
  br label %if.end.63

if.end.63:                                        ; preds = %if.end.45, %if.then.14
  %cbtUsed.2 = phi i32 [ %cbtUsed.0, %if.then.14 ], [ %add62, %if.end.45 ]
  %iq.2 = phi i32 [ %iq.0, %if.then.14 ], [ %iq.1, %if.end.45 ]
  br label %for.inc.64, !dbg !428

for.inc.64:                                       ; preds = %if.end.63
  %inc65 = add nsw i32 %i.0, 1, !dbg !429
  call void @llvm.dbg.value(metadata i32 %inc65, i64 0, metadata !355, metadata !147), !dbg !356
  br label %for.cond, !dbg !430

for.end.66:                                       ; preds = %for.cond
  ret void, !dbg !431
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #6

; Function Attrs: nounwind
declare i32 @tolower(i32) #4

; Function Attrs: nounwind uwtable
define %struct.Word* @NewWord() #0 {
entry:
  %call = call noalias i8* @malloc(i64 32) #6, !dbg !432
  %tmp = bitcast i8* %call to %struct.Word*, !dbg !433
  call void @llvm.dbg.value(metadata %struct.Word* %tmp, i64 0, metadata !434, metadata !147), !dbg !435
  %cmp = icmp eq %struct.Word* %tmp, null, !dbg !436
  br i1 %cmp, label %if.then, label %if.end, !dbg !438

if.then:                                          ; preds = %entry
  %tmp2 = load i32, i32* @cpwCand, align 4, !dbg !439
  call void @Fatal(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i32 0, i32 0), i32 %tmp2), !dbg !440
  br label %if.end, !dbg !440

if.end:                                           ; preds = %if.then, %entry
  ret %struct.Word* %tmp, !dbg !441
}

; Function Attrs: nounwind uwtable
define void @wprint(i8* %pch) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %pch, i64 0, metadata !442, metadata !147), !dbg !443
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* %pch), !dbg !444
  ret void, !dbg !445
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define %struct.Word* @NextWord() #0 {
entry:
  %tmp = load i32, i32* @cpwCand, align 4, !dbg !446
  %cmp = icmp uge i32 %tmp, 5000, !dbg !448
  br i1 %cmp, label %if.then, label %if.end, !dbg !449

if.then:                                          ; preds = %entry
  call void @Fatal(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i32 0, i32 0), i32 0), !dbg !450
  br label %if.end, !dbg !450

if.end:                                           ; preds = %if.then, %entry
  %tmp1 = load i32, i32* @cpwCand, align 4, !dbg !451
  %inc = add i32 %tmp1, 1, !dbg !451
  store i32 %inc, i32* @cpwCand, align 4, !dbg !451
  %idxprom = zext i32 %tmp1 to i64, !dbg !452
  %arrayidx = getelementptr inbounds [5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 %idxprom, !dbg !452
  %tmp2 = load %struct.Word*, %struct.Word** %arrayidx, align 8, !dbg !452
  call void @llvm.dbg.value(metadata %struct.Word* %tmp2, i64 0, metadata !453, metadata !147), !dbg !454
  %cmp1 = icmp ne %struct.Word* %tmp2, null, !dbg !455
  br i1 %cmp1, label %if.then.2, label %if.end.3, !dbg !457

if.then.2:                                        ; preds = %if.end
  br label %return, !dbg !458

if.end.3:                                         ; preds = %if.end
  %call = call %struct.Word* @NewWord(), !dbg !459
  %tmp5 = load i32, i32* @cpwCand, align 4, !dbg !460
  %sub = sub i32 %tmp5, 1, !dbg !461
  %idxprom4 = zext i32 %sub to i64, !dbg !462
  %arrayidx5 = getelementptr inbounds [5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 %idxprom4, !dbg !462
  store %struct.Word* %call, %struct.Word** %arrayidx5, align 8, !dbg !463
  %tmp6 = load i32, i32* @cpwCand, align 4, !dbg !464
  %sub6 = sub i32 %tmp6, 1, !dbg !465
  %idxprom7 = zext i32 %sub6 to i64, !dbg !466
  %arrayidx8 = getelementptr inbounds [5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 %idxprom7, !dbg !466
  %tmp7 = load %struct.Word*, %struct.Word** %arrayidx8, align 8, !dbg !466
  br label %return, !dbg !467

return:                                           ; preds = %if.end.3, %if.then.2
  %retval.0 = phi %struct.Word* [ %tmp2, %if.then.2 ], [ %tmp7, %if.end.3 ]
  ret %struct.Word* %retval.0, !dbg !468
}

; Function Attrs: nounwind uwtable
define void @BuildWord(i8* %pchWord) #0 {
entry:
  %cchFrequency = alloca [26 x i8], align 16
  %0 = ptrtoint [26 x i8]* %cchFrequency to i64
  %cchFrequency38 = ptrtoint [26 x i8]* %cchFrequency to i64
  call void @llvm.dbg.value(metadata i8* %pchWord, i64 0, metadata !469, metadata !147), !dbg !470
  call void @llvm.dbg.declare(metadata [26 x i8]* %cchFrequency, metadata !471, metadata !147), !dbg !474
  call void @llvm.dbg.value(metadata i8* %pchWord, i64 0, metadata !475, metadata !147), !dbg !476
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !477, metadata !147), !dbg !478
  %tmp1 = bitcast [26 x i8]* %cchFrequency to i8*, !dbg !479
  call void @llvm.memset.p0i8.i64(i8* %tmp1, i8 0, i64 26, i32 16, i1 false), !dbg !479
  br label %while.cond.outer, !dbg !480

while.cond.outer:                                 ; preds = %if.end.12, %entry
  %pch.0.ph = phi i8* [ %incdec.ptr.lcssa35, %if.end.12 ], [ %pchWord, %entry ]
  %cchLength.0.ph = phi i32 [ %inc13, %if.end.12 ], [ 0, %entry ]
  br label %while.cond, !dbg !481

while.cond:                                       ; preds = %while.cond.outer, %if.then
  %pch.0 = phi i8* [ %incdec.ptr, %if.then ], [ %pch.0.ph, %while.cond.outer ]
  %incdec.ptr = getelementptr inbounds i8, i8* %pch.0, i32 1, !dbg !481
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !475, metadata !147), !dbg !476
  %tmp3 = load i8, i8* %pch.0, align 1, !dbg !484
  %conv = sext i8 %tmp3 to i32, !dbg !484
  call void @llvm.dbg.value(metadata i32 %conv, i64 0, metadata !485, metadata !147), !dbg !486
  %cmp = icmp ne i32 %conv, 0, !dbg !487
  br i1 %cmp, label %while.body, label %while.end, !dbg !480

while.body:                                       ; preds = %while.cond
  %idxprom = sext i32 %conv to i64, !dbg !488
  %call = call i16** @__ctype_b_loc() #1, !dbg !488
  %tmp5 = load i16*, i16** %call, align 8, !dbg !488
  %arrayidx = getelementptr inbounds i16, i16* %tmp5, i64 %idxprom, !dbg !488
  %tmp6 = load i16, i16* %arrayidx, align 2, !dbg !488
  %conv2 = zext i16 %tmp6 to i32, !dbg !488
  %and = and i32 %conv2, 1024, !dbg !488
  %tobool = icmp ne i32 %and, 0, !dbg !488
  br i1 %tobool, label %if.end, label %if.then, !dbg !491

if.then:                                          ; preds = %while.body
  br label %while.cond, !dbg !492

if.end:                                           ; preds = %while.body
  %conv.lcssa36 = phi i32 [ %conv, %while.body ]
  %incdec.ptr.lcssa35 = phi i8* [ %incdec.ptr, %while.body ]
  %call3 = call i32 @tolower(i32 %conv.lcssa36) #6, !dbg !493
  %sub = sub nsw i32 %call3, 97, !dbg !493
  call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !485, metadata !147), !dbg !486
  %idxprom4 = sext i32 %sub to i64, !dbg !494
  %arrayidx5 = getelementptr inbounds [26 x i8], [26 x i8]* %cchFrequency, i32 0, i64 %idxprom4, !dbg !494
  %tmp9 = load i8, i8* %arrayidx5, align 1, !dbg !496
  %inc = add i8 %tmp9, 1, !dbg !496
  store i8 %inc, i8* %arrayidx5, align 1, !dbg !496
  %conv6 = zext i8 %inc to i32, !dbg !496
  %idxprom7 = sext i32 %sub to i64, !dbg !497
  %arrayidx8 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom7, !dbg !497
  %uFrequency = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx8, i32 0, i32 0, !dbg !498
  %tmp11 = load i32, i32* %uFrequency, align 4, !dbg !498
  %cmp9 = icmp ugt i32 %conv6, %tmp11, !dbg !499
  br i1 %cmp9, label %if.then.11, label %if.end.12, !dbg !500

if.then.11:                                       ; preds = %if.end
  br label %for.end.41, !dbg !501

if.end.12:                                        ; preds = %if.end
  %inc13 = add nsw i32 %cchLength.0.ph, 1, !dbg !502
  call void @llvm.dbg.value(metadata i32 %inc13, i64 0, metadata !477, metadata !147), !dbg !478
  br label %while.cond.outer, !dbg !480

while.end:                                        ; preds = %while.cond
  %cchLength.0.ph.lcssa37 = phi i32 [ %cchLength.0.ph, %while.cond ]
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !485, metadata !147), !dbg !486
  %1 = add i64 %cchFrequency38, 1, !dbg !503
  %2 = add i64 %cchFrequency38, 1, !dbg !503
  %3 = add i64 %0, 1, !dbg !503
  %4 = add i64 %0, 1, !dbg !503
  br label %for.cond, !dbg !505

for.cond:                                         ; preds = %for.inc, %while.end
  %i.0 = phi i32 [ 0, %while.end ], [ %inc21, %for.inc ]
  %cmp14 = icmp slt i32 %i.0, 26, !dbg !506
  %auGlobalFrequencyLD = load [26 x i32], [26 x i32]* @auGlobalFrequency
  %5 = ptrtoint [26 x i8]* undef to i64, !dbg !503
  %6 = sub i64 %1, %0, !dbg !503
  %auGlobalFrequencyLD39 = load [26 x i32], [26 x i32]* @auGlobalFrequency
  %7 = ptrtoint [26 x i8]* %cchFrequency to i64, !dbg !503
  %8 = sub i64 %3, %7, !dbg !503
  br i1 %cmp14, label %for.body, label %for.end, !dbg !503

for.body:                                         ; preds = %for.cond
  %idxprom16 = sext i32 %i.0 to i64, !dbg !508
  %arrayidx17 = getelementptr inbounds [26 x i8], [26 x i8]* %cchFrequency, i32 0, i64 %idxprom16, !dbg !508
  %tmp15 = load i8, i8* %arrayidx17, align 1, !dbg !508
  %conv18 = zext i8 %tmp15 to i32, !dbg !508
  %idxprom19 = sext i32 %i.0 to i64, !dbg !509
  %arrayidx20 = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom19, !dbg !509
  %tmp17 = load i32, i32* %arrayidx20, align 4, !dbg !510
  %add = add i32 %tmp17, %conv18, !dbg !510
  store i32 %add, i32* %arrayidx20, align 4, !dbg !510
  br label %for.inc, !dbg !509

for.inc:                                          ; preds = %for.body
  %inc21 = add nsw i32 %i.0, 1, !dbg !511
  call void @llvm.dbg.value(metadata i32 %inc21, i64 0, metadata !485, metadata !147), !dbg !486
  br label %for.cond, !dbg !512

for.end:                                          ; preds = %for.cond
  %call22 = call %struct.Word* @NextWord(), !dbg !513
  call void @llvm.dbg.value(metadata %struct.Word* %call22, i64 0, metadata !514, metadata !147), !dbg !515
  %aqMask = getelementptr inbounds %struct.Word, %struct.Word* %call22, i32 0, i32 0, !dbg !516
  %tmp20 = bitcast [2 x i64]* %aqMask to i8*, !dbg !517
  call void @llvm.memset.p0i8.i64(i8* %tmp20, i8 0, i64 16, i32 8, i1 false), !dbg !517
  %pchWord23 = getelementptr inbounds %struct.Word, %struct.Word* %call22, i32 0, i32 1, !dbg !518
  store i8* %pchWord, i8** %pchWord23, align 8, !dbg !519
  %cchLength24 = getelementptr inbounds %struct.Word, %struct.Word* %call22, i32 0, i32 2, !dbg !520
  store i32 %cchLength.0.ph.lcssa37, i32* %cchLength24, align 4, !dbg !521
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !485, metadata !147), !dbg !486
  br label %for.cond.25, !dbg !522

for.cond.25:                                      ; preds = %for.inc.39, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc40, %for.inc.39 ]
  %cmp26 = icmp slt i32 %i.1, 26, !dbg !524
  br i1 %cmp26, label %for.body.28, label %for.end.41.loopexit, !dbg !526

for.body.28:                                      ; preds = %for.cond.25
  %idxprom29 = sext i32 %i.1 to i64, !dbg !527
  %arrayidx30 = getelementptr inbounds [26 x i8], [26 x i8]* %cchFrequency, i32 0, i64 %idxprom29, !dbg !527
  %tmp27 = load i8, i8* %arrayidx30, align 1, !dbg !527
  %conv31 = zext i8 %tmp27 to i64, !dbg !529
  %idxprom32 = sext i32 %i.1 to i64, !dbg !530
  %arrayidx33 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom32, !dbg !530
  %uShift = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx33, i32 0, i32 1, !dbg !531
  %tmp29 = load i32, i32* %uShift, align 4, !dbg !531
  %sh_prom = zext i32 %tmp29 to i64, !dbg !532
  %shl = shl i64 %conv31, %sh_prom, !dbg !532
  %idxprom34 = sext i32 %i.1 to i64, !dbg !533
  %arrayidx35 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom34, !dbg !533
  %iq = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx35, i32 0, i32 3, !dbg !534
  %tmp31 = load i32, i32* %iq, align 4, !dbg !534
  %idxprom36 = zext i32 %tmp31 to i64, !dbg !535
  %aqMask37 = getelementptr inbounds %struct.Word, %struct.Word* %call22, i32 0, i32 0, !dbg !536
  %arrayidx38 = getelementptr inbounds [2 x i64], [2 x i64]* %aqMask37, i32 0, i64 %idxprom36, !dbg !535
  %tmp33 = load i64, i64* %arrayidx38, align 8, !dbg !537
  %or = or i64 %tmp33, %shl, !dbg !537
  store i64 %or, i64* %arrayidx38, align 8, !dbg !537
  br label %for.inc.39, !dbg !538

for.inc.39:                                       ; preds = %for.body.28
  %inc40 = add nsw i32 %i.1, 1, !dbg !539
  call void @llvm.dbg.value(metadata i32 %inc40, i64 0, metadata !485, metadata !147), !dbg !486
  br label %for.cond.25, !dbg !540

for.end.41.loopexit:                              ; preds = %for.cond.25
  br label %for.end.41, !dbg !541

for.end.41:                                       ; preds = %for.end.41.loopexit, %if.then.11
  ret void, !dbg !541
}

; Function Attrs: nounwind uwtable
define void @AddWords() #0 {
entry:
  %tmp = load i8*, i8** @pchDictionary, align 8, !dbg !542
  call void @llvm.dbg.value(metadata i8* %tmp, i64 0, metadata !543, metadata !147), !dbg !544
  store i32 0, i32* @cpwCand, align 4, !dbg !545
  br label %while.cond, !dbg !546

while.cond:                                       ; preds = %if.end, %entry
  %pch.0 = phi i8* [ %tmp, %entry ], [ %add.ptr11, %if.end ]
  %tmp2 = load i8, i8* %pch.0, align 1, !dbg !547
  %tobool = icmp ne i8 %tmp2, 0, !dbg !546
  br i1 %tobool, label %while.body, label %while.end, !dbg !546

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds i8, i8* %pch.0, i64 1, !dbg !548
  %tmp4 = load i8, i8* %arrayidx, align 1, !dbg !548
  %conv = sext i8 %tmp4 to i32, !dbg !548
  %tmp5 = load i32, i32* @cchMinLength, align 4, !dbg !551
  %cmp = icmp sge i32 %conv, %tmp5, !dbg !552
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !553

land.lhs.true:                                    ; preds = %while.body
  %arrayidx2 = getelementptr inbounds i8, i8* %pch.0, i64 1, !dbg !554
  %tmp7 = load i8, i8* %arrayidx2, align 1, !dbg !554
  %conv3 = sext i8 %tmp7 to i32, !dbg !554
  %tmp8 = load i32, i32* @cchMinLength, align 4, !dbg !556
  %add = add nsw i32 %conv3, %tmp8, !dbg !557
  %tmp9 = load i32, i32* @cchPhraseLength, align 4, !dbg !558
  %cmp4 = icmp sle i32 %add, %tmp9, !dbg !559
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !560

lor.lhs.false:                                    ; preds = %land.lhs.true, %while.body
  %arrayidx6 = getelementptr inbounds i8, i8* %pch.0, i64 1, !dbg !561
  %tmp11 = load i8, i8* %arrayidx6, align 1, !dbg !561
  %conv7 = sext i8 %tmp11 to i32, !dbg !561
  %tmp12 = load i32, i32* @cchPhraseLength, align 4, !dbg !564
  %cmp8 = icmp eq i32 %conv7, %tmp12, !dbg !565
  br i1 %cmp8, label %if.then, label %if.end, !dbg !566

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %add.ptr = getelementptr inbounds i8, i8* %pch.0, i64 2, !dbg !567
  call void @BuildWord(i8* %add.ptr), !dbg !568
  br label %if.end, !dbg !568

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %tmp15 = load i8, i8* %pch.0, align 1, !dbg !569
  %conv10 = sext i8 %tmp15 to i32, !dbg !569
  %idx.ext = sext i32 %conv10 to i64, !dbg !570
  %add.ptr11 = getelementptr inbounds i8, i8* %pch.0, i64 %idx.ext, !dbg !570
  call void @llvm.dbg.value(metadata i8* %add.ptr11, i64 0, metadata !543, metadata !147), !dbg !544
  br label %while.cond, !dbg !546

while.end:                                        ; preds = %while.cond
  %tmp17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !571
  %tmp18 = load i32, i32* @cpwCand, align 4, !dbg !572
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i32 %tmp18), !dbg !573
  ret void, !dbg !574
}

; Function Attrs: nounwind uwtable
define void @DumpCandidates() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !575, metadata !147), !dbg !576
  br label %for.cond, !dbg !577

for.cond:                                         ; preds = %for.inc, %entry
  %u.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %tmp1 = load i32, i32* @cpwCand, align 4, !dbg !579
  %cmp = icmp ult i32 %u.0, %tmp1, !dbg !581
  br i1 %cmp, label %for.body, label %for.end, !dbg !582

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %u.0 to i64, !dbg !583
  %arrayidx = getelementptr inbounds [5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 %idxprom, !dbg !583
  %tmp3 = load %struct.Word*, %struct.Word** %arrayidx, align 8, !dbg !583
  %pchWord = getelementptr inbounds %struct.Word, %struct.Word* %tmp3, i32 0, i32 1, !dbg !584
  %tmp4 = load i8*, i8** %pchWord, align 8, !dbg !584
  %rem = urem i32 %u.0, 4, !dbg !585
  %cmp1 = icmp eq i32 %rem, 3, !dbg !586
  %cond = select i1 %cmp1, i32 10, i32 32, !dbg !587
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* %tmp4, i32 %cond), !dbg !588
  br label %for.inc, !dbg !588

for.inc:                                          ; preds = %for.body
  %inc = add i32 %u.0, 1, !dbg !589
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !575, metadata !147), !dbg !576
  br label %for.cond, !dbg !590

for.end:                                          ; preds = %for.cond
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0)), !dbg !591
  ret void, !dbg !592
}

; Function Attrs: nounwind uwtable
define void @DumpWords() #0 {
entry:
  %tmp = load i32, i32* @DumpWords.X, align 4, !dbg !593
  %add = add nsw i32 %tmp, 1, !dbg !594
  %and = and i32 %add, 1023, !dbg !595
  store i32 %and, i32* @DumpWords.X, align 4, !dbg !596
  %tmp1 = load i32, i32* @DumpWords.X, align 4, !dbg !597
  %cmp = icmp ne i32 %tmp1, 0, !dbg !599
  br i1 %cmp, label %if.then, label %if.end, !dbg !600

if.then:                                          ; preds = %entry
  br label %return, !dbg !601

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !602, metadata !147), !dbg !603
  br label %for.cond, !dbg !604

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %tmp3 = load i32, i32* @cpwLast, align 4, !dbg !606
  %cmp1 = icmp slt i32 %i.0, %tmp3, !dbg !608
  br i1 %cmp1, label %for.body, label %for.end, !dbg !609

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !610
  %arrayidx = getelementptr inbounds [51 x %struct.Word*], [51 x %struct.Word*]* @apwSol, i32 0, i64 %idxprom, !dbg !610
  %tmp5 = load %struct.Word*, %struct.Word** %arrayidx, align 8, !dbg !610
  %pchWord = getelementptr inbounds %struct.Word, %struct.Word* %tmp5, i32 0, i32 1, !dbg !611
  %tmp6 = load i8*, i8** %pchWord, align 8, !dbg !611
  call void @wprint(i8* %tmp6), !dbg !612
  br label %for.inc, !dbg !612

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !613
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !602, metadata !147), !dbg !603
  br label %for.cond, !dbg !614

for.end:                                          ; preds = %for.cond
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0)), !dbg !615
  br label %return, !dbg !616

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !617
}

; Function Attrs: nounwind uwtable
define void @FindAnagram(i64* %pqMask, %struct.Word** %ppwStart, i32 %iLetter) #0 {
entry:
  %aqNext = alloca [2 x i64], align 16
  call void @llvm.dbg.value(metadata i64* %pqMask, i64 0, metadata !619, metadata !147), !dbg !620
  call void @llvm.dbg.value(metadata %struct.Word** %ppwStart, i64 0, metadata !621, metadata !147), !dbg !622
  call void @llvm.dbg.value(metadata i32 %iLetter, i64 0, metadata !623, metadata !147), !dbg !624
  call void @llvm.dbg.declare(metadata [2 x i64]* %aqNext, metadata !625, metadata !147), !dbg !626
  call void @llvm.dbg.value(metadata %struct.Word** getelementptr inbounds ([5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 0), i64 0, metadata !627, metadata !147), !dbg !628
  %tmp = load i32, i32* @cpwCand, align 4, !dbg !629
  %idx.ext = zext i32 %tmp to i64, !dbg !630
  %add.ptr = getelementptr inbounds %struct.Word*, %struct.Word** getelementptr inbounds ([5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 0), i64 %idx.ext, !dbg !630
  call void @llvm.dbg.value(metadata %struct.Word** %add.ptr, i64 0, metadata !627, metadata !147), !dbg !628
  br label %for.cond, !dbg !631

for.cond:                                         ; preds = %if.end, %entry
  %iLetter.addr.0 = phi i32 [ %iLetter, %entry ], [ %inc, %if.end ]
  %idxprom = sext i32 %iLetter.addr.0 to i64, !dbg !632
  %arrayidx = getelementptr inbounds [26 x i8], [26 x i8]* @achByFrequency, i32 0, i64 %idxprom, !dbg !632
  %tmp3 = load i8, i8* %arrayidx, align 1, !dbg !632
  %idxprom1 = sext i8 %tmp3 to i64, !dbg !636
  %arrayidx2 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom1, !dbg !636
  %iq3 = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx2, i32 0, i32 3, !dbg !637
  %tmp4 = load i32, i32* %iq3, align 4, !dbg !637
  call void @llvm.dbg.value(metadata i32 %tmp4, i64 0, metadata !638, metadata !147), !dbg !639
  %idxprom4 = sext i32 %iLetter.addr.0 to i64, !dbg !640
  %arrayidx5 = getelementptr inbounds [26 x i8], [26 x i8]* @achByFrequency, i32 0, i64 %idxprom4, !dbg !640
  %tmp6 = load i8, i8* %arrayidx5, align 1, !dbg !640
  %idxprom6 = sext i8 %tmp6 to i64, !dbg !641
  %arrayidx7 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom6, !dbg !641
  %uBits = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx7, i32 0, i32 2, !dbg !642
  %tmp7 = load i32, i32* %uBits, align 4, !dbg !642
  %idxprom8 = sext i32 %iLetter.addr.0 to i64, !dbg !643
  %arrayidx9 = getelementptr inbounds [26 x i8], [26 x i8]* @achByFrequency, i32 0, i64 %idxprom8, !dbg !643
  %tmp9 = load i8, i8* %arrayidx9, align 1, !dbg !643
  %idxprom10 = sext i8 %tmp9 to i64, !dbg !644
  %arrayidx11 = getelementptr inbounds [26 x %struct.Letter], [26 x %struct.Letter]* @alPhrase, i32 0, i64 %idxprom10, !dbg !644
  %uShift = getelementptr inbounds %struct.Letter, %struct.Letter* %arrayidx11, i32 0, i32 1, !dbg !645
  %tmp10 = load i32, i32* %uShift, align 4, !dbg !645
  %shl = shl i32 %tmp7, %tmp10, !dbg !646
  %conv = zext i32 %shl to i64, !dbg !641
  call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !647, metadata !147), !dbg !648
  %idxprom12 = zext i32 %tmp4 to i64, !dbg !649
  %arrayidx13 = getelementptr inbounds i64, i64* %pqMask, i64 %idxprom12, !dbg !649
  %tmp13 = load i64, i64* %arrayidx13, align 8, !dbg !649
  %and = and i64 %tmp13, %conv, !dbg !651
  %tobool = icmp ne i64 %and, 0, !dbg !651
  br i1 %tobool, label %if.then, label %if.end, !dbg !652

if.then:                                          ; preds = %for.cond
  %conv.lcssa = phi i64 [ %conv, %for.cond ]
  %tmp4.lcssa = phi i32 [ %tmp4, %for.cond ]
  %iLetter.addr.0.lcssa = phi i32 [ %iLetter.addr.0, %for.cond ]
  br label %for.end, !dbg !653

if.end:                                           ; preds = %for.cond
  %inc = add nsw i32 %iLetter.addr.0, 1, !dbg !654
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !623, metadata !147), !dbg !624
  br label %for.cond, !dbg !655

for.end:                                          ; preds = %if.then
  br label %while.cond.outer, !dbg !656

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %for.end
  %ppwStart.addr.0.ph = phi %struct.Word** [ %ppwStart, %for.end ], [ %ppwStart.addr.0.ph.be, %while.cond.outer.backedge ]
  %ppwEnd.0.ph = phi %struct.Word** [ %add.ptr, %for.end ], [ %ppwEnd.0.ph.be, %while.cond.outer.backedge ]
  br label %while.cond, !dbg !657

while.cond:                                       ; preds = %while.cond.outer, %if.then.38
  %ppwEnd.0 = phi %struct.Word** [ %incdec.ptr39, %if.then.38 ], [ %ppwEnd.0.ph, %while.cond.outer ]
  %cmp = icmp ult %struct.Word** %ppwStart.addr.0.ph, %ppwEnd.0, !dbg !657
  br i1 %cmp, label %while.body, label %while.end, !dbg !656

while.body:                                       ; preds = %while.cond
  %tmp19 = load %struct.Word*, %struct.Word** %ppwStart.addr.0.ph, align 8, !dbg !658
  call void @llvm.dbg.value(metadata %struct.Word* %tmp19, i64 0, metadata !660, metadata !147), !dbg !661
  %arrayidx15 = getelementptr inbounds i64, i64* %pqMask, i64 0, !dbg !662
  %tmp21 = load i64, i64* %arrayidx15, align 8, !dbg !662
  %aqMask = getelementptr inbounds %struct.Word, %struct.Word* %tmp19, i32 0, i32 0, !dbg !662
  %arrayidx16 = getelementptr inbounds [2 x i64], [2 x i64]* %aqMask, i32 0, i64 0, !dbg !662
  %tmp23 = load i64, i64* %arrayidx16, align 8, !dbg !662
  %sub = sub i64 %tmp21, %tmp23, !dbg !662
  %arrayidx17 = getelementptr inbounds [2 x i64], [2 x i64]* %aqNext, i32 0, i64 0, !dbg !662
  store i64 %sub, i64* %arrayidx17, align 8, !dbg !662
  %tmp24 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @aqMainSign, i32 0, i64 0), align 8, !dbg !662
  %and18 = and i64 %sub, %tmp24, !dbg !662
  %tobool19 = icmp ne i64 %and18, 0, !dbg !662
  br i1 %tobool19, label %if.then.20, label %if.end.21, !dbg !664

if.then.20:                                       ; preds = %while.body
  %ppwEnd.0.lcssa55 = phi %struct.Word** [ %ppwEnd.0, %while.body ]
  %incdec.ptr = getelementptr inbounds %struct.Word*, %struct.Word** %ppwStart.addr.0.ph, i32 1, !dbg !665
  call void @llvm.dbg.value(metadata %struct.Word** %incdec.ptr, i64 0, metadata !621, metadata !147), !dbg !622
  br label %while.cond.outer.backedge, !dbg !665

while.cond.outer.backedge:                        ; preds = %if.then.20, %if.then.29, %if.end.50
  %ppwStart.addr.0.ph.be = phi %struct.Word** [ %incdec.ptr52, %if.end.50 ], [ %incdec.ptr30, %if.then.29 ], [ %incdec.ptr, %if.then.20 ]
  %ppwEnd.0.ph.be = phi %struct.Word** [ %ppwEnd.1, %if.end.50 ], [ %ppwEnd.0.lcssa56, %if.then.29 ], [ %ppwEnd.0.lcssa55, %if.then.20 ]
  br label %while.cond.outer, !dbg !657

if.end.21:                                        ; preds = %while.body
  %arrayidx22 = getelementptr inbounds i64, i64* %pqMask, i64 1, !dbg !668
  %tmp27 = load i64, i64* %arrayidx22, align 8, !dbg !668
  %aqMask23 = getelementptr inbounds %struct.Word, %struct.Word* %tmp19, i32 0, i32 0, !dbg !668
  %arrayidx24 = getelementptr inbounds [2 x i64], [2 x i64]* %aqMask23, i32 0, i64 1, !dbg !668
  %tmp29 = load i64, i64* %arrayidx24, align 8, !dbg !668
  %sub25 = sub i64 %tmp27, %tmp29, !dbg !668
  %arrayidx26 = getelementptr inbounds [2 x i64], [2 x i64]* %aqNext, i32 0, i64 1, !dbg !668
  store i64 %sub25, i64* %arrayidx26, align 8, !dbg !668
  %tmp30 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @aqMainSign, i32 0, i64 1), align 8, !dbg !668
  %and27 = and i64 %sub25, %tmp30, !dbg !668
  %tobool28 = icmp ne i64 %and27, 0, !dbg !668
  br i1 %tobool28, label %if.then.29, label %if.end.31, !dbg !670

if.then.29:                                       ; preds = %if.end.21
  %ppwEnd.0.lcssa56 = phi %struct.Word** [ %ppwEnd.0, %if.end.21 ]
  %incdec.ptr30 = getelementptr inbounds %struct.Word*, %struct.Word** %ppwStart.addr.0.ph, i32 1, !dbg !671
  call void @llvm.dbg.value(metadata %struct.Word** %incdec.ptr30, i64 0, metadata !621, metadata !147), !dbg !622
  br label %while.cond.outer.backedge, !dbg !671

if.end.31:                                        ; preds = %if.end.21
  %idxprom32 = zext i32 %tmp4.lcssa to i64, !dbg !674
  %aqMask33 = getelementptr inbounds %struct.Word, %struct.Word* %tmp19, i32 0, i32 0, !dbg !676
  %arrayidx34 = getelementptr inbounds [2 x i64], [2 x i64]* %aqMask33, i32 0, i64 %idxprom32, !dbg !674
  %tmp34 = load i64, i64* %arrayidx34, align 8, !dbg !674
  %and35 = and i64 %tmp34, %conv.lcssa, !dbg !677
  %cmp36 = icmp eq i64 %and35, 0, !dbg !678
  br i1 %cmp36, label %if.then.38, label %if.end.40, !dbg !679

if.then.38:                                       ; preds = %if.end.31
  %incdec.ptr39 = getelementptr inbounds %struct.Word*, %struct.Word** %ppwEnd.0, i32 -1, !dbg !680
  call void @llvm.dbg.value(metadata %struct.Word** %incdec.ptr39, i64 0, metadata !627, metadata !147), !dbg !628
  %tmp37 = load %struct.Word*, %struct.Word** %incdec.ptr39, align 8, !dbg !682
  store %struct.Word* %tmp37, %struct.Word** %ppwStart.addr.0.ph, align 8, !dbg !683
  store %struct.Word* %tmp19, %struct.Word** %incdec.ptr39, align 8, !dbg !684
  br label %while.cond, !dbg !685

if.end.40:                                        ; preds = %if.end.31
  %tmp19.lcssa59 = phi %struct.Word* [ %tmp19, %if.end.31 ]
  %ppwEnd.0.lcssa57 = phi %struct.Word** [ %ppwEnd.0, %if.end.31 ]
  %tmp42 = load i32, i32* @cpwLast, align 4, !dbg !686
  %inc41 = add nsw i32 %tmp42, 1, !dbg !686
  store i32 %inc41, i32* @cpwLast, align 4, !dbg !686
  %idxprom42 = sext i32 %tmp42 to i64, !dbg !687
  %arrayidx43 = getelementptr inbounds [51 x %struct.Word*], [51 x %struct.Word*]* @apwSol, i32 0, i64 %idxprom42, !dbg !687
  store %struct.Word* %tmp19.lcssa59, %struct.Word** %arrayidx43, align 8, !dbg !688
  %cchLength = getelementptr inbounds %struct.Word, %struct.Word* %tmp19.lcssa59, i32 0, i32 2, !dbg !689
  %tmp44 = load i32, i32* %cchLength, align 4, !dbg !689
  %tmp45 = load i32, i32* @cchPhraseLength, align 4, !dbg !691
  %sub44 = sub i32 %tmp45, %tmp44, !dbg !691
  store i32 %sub44, i32* @cchPhraseLength, align 4, !dbg !691
  %tobool45 = icmp ne i32 %sub44, 0, !dbg !691
  br i1 %tobool45, label %if.then.46, label %if.else, !dbg !692

if.then.46:                                       ; preds = %if.end.40
  call void @llvm.dbg.value(metadata %struct.Word** getelementptr inbounds ([5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 0), i64 0, metadata !627, metadata !147), !dbg !628
  %tmp46 = load i32, i32* @cpwCand, align 4, !dbg !693
  %idx.ext47 = zext i32 %tmp46 to i64, !dbg !695
  %add.ptr48 = getelementptr inbounds %struct.Word*, %struct.Word** getelementptr inbounds ([5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 0), i64 %idx.ext47, !dbg !695
  call void @llvm.dbg.value(metadata %struct.Word** %add.ptr48, i64 0, metadata !627, metadata !147), !dbg !628
  %arrayidx49 = getelementptr inbounds [2 x i64], [2 x i64]* %aqNext, i32 0, i64 0, !dbg !696
  call void @FindAnagram(i64* %arrayidx49, %struct.Word** %ppwStart.addr.0.ph, i32 %iLetter.addr.0.lcssa), !dbg !697
  br label %if.end.50, !dbg !698

if.else:                                          ; preds = %if.end.40
  call void @DumpWords(), !dbg !699
  br label %if.end.50

if.end.50:                                        ; preds = %if.else, %if.then.46
  %ppwEnd.1 = phi %struct.Word** [ %add.ptr48, %if.then.46 ], [ %ppwEnd.0.lcssa57, %if.else ]
  %cchLength51 = getelementptr inbounds %struct.Word, %struct.Word* %tmp19.lcssa59, i32 0, i32 2, !dbg !700
  %tmp51 = load i32, i32* %cchLength51, align 4, !dbg !700
  %tmp52 = load i32, i32* @cchPhraseLength, align 4, !dbg !701
  %add = add i32 %tmp52, %tmp51, !dbg !701
  store i32 %add, i32* @cchPhraseLength, align 4, !dbg !701
  %tmp53 = load i32, i32* @cpwLast, align 4, !dbg !702
  %dec = add nsw i32 %tmp53, -1, !dbg !702
  store i32 %dec, i32* @cpwLast, align 4, !dbg !702
  %incdec.ptr52 = getelementptr inbounds %struct.Word*, %struct.Word** %ppwStart.addr.0.ph, i32 1, !dbg !703
  call void @llvm.dbg.value(metadata %struct.Word** %incdec.ptr52, i64 0, metadata !621, metadata !147), !dbg !622
  br label %while.cond.outer.backedge, !dbg !704

while.end:                                        ; preds = %while.cond
  ret void, !dbg !705
}

; Function Attrs: nounwind uwtable
define i32 @CompareFrequency(i8* %pch1, i8* %pch2) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %pch1, i64 0, metadata !706, metadata !147), !dbg !707
  call void @llvm.dbg.value(metadata i8* %pch2, i64 0, metadata !708, metadata !147), !dbg !709
  %tmp1 = load i8, i8* %pch1, align 1, !dbg !710
  %idxprom = sext i8 %tmp1 to i64, !dbg !712
  %arrayidx = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom, !dbg !712
  %tmp2 = load i32, i32* %arrayidx, align 4, !dbg !712
  %tmp4 = load i8, i8* %pch2, align 1, !dbg !713
  %idxprom1 = sext i8 %tmp4 to i64, !dbg !714
  %arrayidx2 = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom1, !dbg !714
  %tmp5 = load i32, i32* %arrayidx2, align 4, !dbg !714
  %cmp = icmp ult i32 %tmp2, %tmp5, !dbg !715
  br i1 %cmp, label %if.then, label %if.end, !dbg !716

if.then:                                          ; preds = %entry
  br label %return, !dbg !717

if.end:                                           ; preds = %entry
  %tmp7 = load i8, i8* %pch1, align 1, !dbg !718
  %idxprom3 = sext i8 %tmp7 to i64, !dbg !720
  %arrayidx4 = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom3, !dbg !720
  %tmp8 = load i32, i32* %arrayidx4, align 4, !dbg !720
  %tmp10 = load i8, i8* %pch2, align 1, !dbg !721
  %idxprom5 = sext i8 %tmp10 to i64, !dbg !722
  %arrayidx6 = getelementptr inbounds [26 x i32], [26 x i32]* @auGlobalFrequency, i32 0, i64 %idxprom5, !dbg !722
  %tmp11 = load i32, i32* %arrayidx6, align 4, !dbg !722
  %cmp7 = icmp ugt i32 %tmp8, %tmp11, !dbg !723
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !724

if.then.8:                                        ; preds = %if.end
  br label %return, !dbg !725

if.end.9:                                         ; preds = %if.end
  %tmp13 = load i8, i8* %pch1, align 1, !dbg !726
  %conv = sext i8 %tmp13 to i32, !dbg !726
  %tmp15 = load i8, i8* %pch2, align 1, !dbg !728
  %conv10 = sext i8 %tmp15 to i32, !dbg !728
  %cmp11 = icmp slt i32 %conv, %conv10, !dbg !729
  br i1 %cmp11, label %if.then.13, label %if.end.14, !dbg !730

if.then.13:                                       ; preds = %if.end.9
  br label %return, !dbg !731

if.end.14:                                        ; preds = %if.end.9
  %tmp17 = load i8, i8* %pch1, align 1, !dbg !732
  %conv15 = sext i8 %tmp17 to i32, !dbg !732
  %tmp19 = load i8, i8* %pch2, align 1, !dbg !734
  %conv16 = sext i8 %tmp19 to i32, !dbg !734
  %cmp17 = icmp sgt i32 %conv15, %conv16, !dbg !735
  br i1 %cmp17, label %if.then.19, label %if.end.20, !dbg !736

if.then.19:                                       ; preds = %if.end.14
  br label %return, !dbg !737

if.end.20:                                        ; preds = %if.end.14
  br label %return, !dbg !738

return:                                           ; preds = %if.end.20, %if.then.19, %if.then.13, %if.then.8, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ 1, %if.then.8 ], [ -1, %if.then.13 ], [ 1, %if.then.19 ], [ 0, %if.end.20 ]
  ret i32 %retval.0, !dbg !739
}

; Function Attrs: nounwind uwtable
define void @SortCandidates() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !740, metadata !147), !dbg !741
  br label %for.cond, !dbg !742

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 26, !dbg !744
  %achByFrequencyLD = load [26 x i8], [26 x i8]* @achByFrequency
  %achByFrequencyLD11 = load [26 x i8], [26 x i8]* @achByFrequency
  br i1 %cmp, label %for.body, label %for.end, !dbg !746

for.body:                                         ; preds = %for.cond
  %conv = trunc i32 %i.0 to i8, !dbg !747
  %idxprom = sext i32 %i.0 to i64, !dbg !748
  %arrayidx = getelementptr inbounds [26 x i8], [26 x i8]* @achByFrequency, i32 0, i64 %idxprom, !dbg !748
  store i8 %conv, i8* %arrayidx, align 1, !dbg !749
  br label %for.inc, !dbg !748

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !750
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !740, metadata !147), !dbg !741
  br label %for.cond, !dbg !751

for.end:                                          ; preds = %for.cond
  call void @qsort(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @achByFrequency, i32 0, i32 0), i64 26, i64 1, i32 (i8*, i8*)* @CompareFrequency), !dbg !752
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !753
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0)), !dbg !754
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !740, metadata !147), !dbg !741
  br label %for.cond.1, !dbg !755

for.cond.1:                                       ; preds = %for.inc.9, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc10, %for.inc.9 ]
  %cmp2 = icmp slt i32 %i.1, 26, !dbg !757
  br i1 %cmp2, label %for.body.4, label %for.end.11, !dbg !759

for.body.4:                                       ; preds = %for.cond.1
  %idxprom5 = sext i32 %i.1 to i64, !dbg !760
  %arrayidx6 = getelementptr inbounds [26 x i8], [26 x i8]* @achByFrequency, i32 0, i64 %idxprom5, !dbg !760
  %tmp7 = load i8, i8* %arrayidx6, align 1, !dbg !760
  %conv7 = sext i8 %tmp7 to i32, !dbg !760
  %add = add nsw i32 %conv7, 97, !dbg !760
  %tmp8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !761
  %call8 = call i32 @fputc(i32 %add, %struct._IO_FILE* %tmp8), !dbg !762
  br label %for.inc.9, !dbg !762

for.inc.9:                                        ; preds = %for.body.4
  %inc10 = add nsw i32 %i.1, 1, !dbg !763
  call void @llvm.dbg.value(metadata i32 %inc10, i64 0, metadata !740, metadata !147), !dbg !741
  br label %for.cond.1, !dbg !764

for.end.11:                                       ; preds = %for.cond.1
  %tmp10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !765
  %call12 = call i32 @fputc(i32 10, %struct._IO_FILE* %tmp10), !dbg !766
  ret void, !dbg !767
}

declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

declare i32 @fputc(i32, %struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define i8* @GetPhrase(i8* %pch, i32 %size) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %pch, i64 0, metadata !768, metadata !147), !dbg !769
  call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !770, metadata !147), !dbg !771
  %tmp = load i32, i32* @fInteractive, align 4, !dbg !772
  %tobool = icmp ne i32 %tmp, 0, !dbg !772
  br i1 %tobool, label %if.then, label %if.end, !dbg !774

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0)), !dbg !775
  br label %if.end, !dbg !775

if.end:                                           ; preds = %if.then, %entry
  %tmp1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !776
  %call1 = call i32 @fflush(%struct._IO_FILE* %tmp1), !dbg !777
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !778
  %call2 = call i8* @fgets(i8* %pch, i32 %size, %struct._IO_FILE* %tmp4), !dbg !780
  %cmp = icmp eq i8* %call2, null, !dbg !781
  br i1 %cmp, label %if.then.3, label %if.end.4, !dbg !782

if.then.3:                                        ; preds = %if.end
  call void @exit(i32 0) #9, !dbg !783
  unreachable, !dbg !783

if.end.4:                                         ; preds = %if.end
  ret i8* %pch, !dbg !785
}

declare i32 @fflush(%struct._IO_FILE*) #2

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define i32 @main(i32 %cpchArgc, i8** %ppchArgv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %cpchArgc, i64 0, metadata !786, metadata !147), !dbg !787
  call void @llvm.dbg.value(metadata i8** %ppchArgv, i64 0, metadata !788, metadata !147), !dbg !789
  %cmp = icmp ne i32 %cpchArgc, 2, !dbg !790
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !792

land.lhs.true:                                    ; preds = %entry
  %cmp1 = icmp ne i32 %cpchArgc, 3, !dbg !793
  br i1 %cmp1, label %if.then, label %if.end, !dbg !794

if.then:                                          ; preds = %land.lhs.true
  call void @Fatal(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i32 0, i32 0), i32 0), !dbg !795
  br label %if.end, !dbg !795

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %cmp2 = icmp eq i32 %cpchArgc, 3, !dbg !796
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !798

if.then.3:                                        ; preds = %if.end
  %arrayidx = getelementptr inbounds i8*, i8** %ppchArgv, i64 2, !dbg !799
  %tmp4 = load i8*, i8** %arrayidx, align 8, !dbg !799
  %call = call i32 @atoi(i8* %tmp4) #10, !dbg !800
  store i32 %call, i32* @cchMinLength, align 4, !dbg !801
  br label %if.end.4, !dbg !802

if.end.4:                                         ; preds = %if.then.3, %if.end
  %call5 = call i32 @isatty(i32 1) #6, !dbg !803
  store i32 %call5, i32* @fInteractive, align 4, !dbg !804
  %arrayidx6 = getelementptr inbounds i8*, i8** %ppchArgv, i64 1, !dbg !805
  %tmp6 = load i8*, i8** %arrayidx6, align 8, !dbg !805
  call void @ReadDict(i8* %tmp6), !dbg !806
  br label %while.cond, !dbg !807

while.cond:                                       ; preds = %while.cond.backedge, %if.end.4
  %call7 = call i8* @GetPhrase(i8* getelementptr inbounds ([255 x i8], [255 x i8]* @achPhrase, i32 0, i64 0), i32 255), !dbg !808
  %cmp8 = icmp ne i8* %call7, null, !dbg !811
  br i1 %cmp8, label %while.body, label %while.end, !dbg !807

while.body:                                       ; preds = %while.cond
  %tmp7 = load i8, i8* getelementptr inbounds ([255 x i8], [255 x i8]* @achPhrase, i32 0, i64 0), align 1, !dbg !812
  %conv = sext i8 %tmp7 to i32, !dbg !812
  %idxprom = sext i32 %conv to i64, !dbg !812
  %call9 = call i16** @__ctype_b_loc() #1, !dbg !812
  %tmp8 = load i16*, i16** %call9, align 8, !dbg !812
  %arrayidx10 = getelementptr inbounds i16, i16* %tmp8, i64 %idxprom, !dbg !812
  %tmp9 = load i16, i16* %arrayidx10, align 2, !dbg !812
  %conv11 = zext i16 %tmp9 to i32, !dbg !812
  %and = and i32 %conv11, 2048, !dbg !812
  %tobool = icmp ne i32 %and, 0, !dbg !812
  br i1 %tobool, label %if.then.12, label %if.else, !dbg !815

if.then.12:                                       ; preds = %while.body
  %call13 = call i32 @atoi(i8* getelementptr inbounds ([255 x i8], [255 x i8]* @achPhrase, i32 0, i32 0)) #10, !dbg !816
  store i32 %call13, i32* @cchMinLength, align 4, !dbg !818
  %tmp10 = load i32, i32* @cchMinLength, align 4, !dbg !819
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i32 0, i32 0), i32 %tmp10), !dbg !820
  br label %if.end.32, !dbg !821

if.else:                                          ; preds = %while.body
  %tmp11 = load i8, i8* getelementptr inbounds ([255 x i8], [255 x i8]* @achPhrase, i32 0, i64 0), align 1, !dbg !822
  %conv15 = sext i8 %tmp11 to i32, !dbg !822
  %cmp16 = icmp eq i32 %conv15, 63, !dbg !824
  br i1 %cmp16, label %if.then.18, label %if.else.19, !dbg !825

if.then.18:                                       ; preds = %if.else
  call void @DumpCandidates(), !dbg !826
  br label %if.end.31, !dbg !828

if.else.19:                                       ; preds = %if.else
  call void @BuildMask(i8* getelementptr inbounds ([255 x i8], [255 x i8]* @achPhrase, i32 0, i64 0)), !dbg !829
  call void @AddWords(), !dbg !831
  %tmp12 = load i32, i32* @cpwCand, align 4, !dbg !832
  %cmp20 = icmp eq i32 %tmp12, 0, !dbg !834
  br i1 %cmp20, label %if.then.24, label %lor.lhs.false, !dbg !835

lor.lhs.false:                                    ; preds = %if.else.19
  %tmp13 = load i32, i32* @cchPhraseLength, align 4, !dbg !836
  %cmp22 = icmp eq i32 %tmp13, 0, !dbg !838
  br i1 %cmp22, label %if.then.24, label %if.end.25, !dbg !839

if.then.24:                                       ; preds = %lor.lhs.false, %if.else.19
  br label %while.cond.backedge, !dbg !840

while.cond.backedge:                              ; preds = %if.then.24, %if.end.32
  br label %while.cond, !dbg !808

if.end.25:                                        ; preds = %lor.lhs.false
  store i32 0, i32* @cpwLast, align 4, !dbg !841
  call void @SortCandidates(), !dbg !842
  %call26 = call i32 @_setjmp(%struct.__jmp_buf_tag* getelementptr inbounds ([1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* @jbAnagram, i32 0, i32 0)) #11, !dbg !843
  %cmp27 = icmp eq i32 %call26, 0, !dbg !845
  br i1 %cmp27, label %if.then.29, label %if.end.30, !dbg !846

if.then.29:                                       ; preds = %if.end.25
  call void @FindAnagram(i64* getelementptr inbounds ([2 x i64], [2 x i64]* @aqMainMask, i32 0, i64 0), %struct.Word** getelementptr inbounds ([5000 x %struct.Word*], [5000 x %struct.Word*]* @apwCand, i32 0, i64 0), i32 0), !dbg !847
  br label %if.end.30, !dbg !847

if.end.30:                                        ; preds = %if.then.29, %if.end.25
  br label %if.end.31

if.end.31:                                        ; preds = %if.end.30, %if.then.18
  br label %if.end.32

if.end.32:                                        ; preds = %if.end.31, %if.then.12
  br label %while.cond.backedge, !dbg !807

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !848
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #7

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) #8

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind returns_twice "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind returns_twice }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!143, !144}
!llvm.ident = !{!145}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !18, subprograms: !43, globals: !81)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 46, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17}
!6 = !DIEnumerator(name: "_ISupper", value: 256)
!7 = !DIEnumerator(name: "_ISlower", value: 512)
!8 = !DIEnumerator(name: "_ISalpha", value: 1024)
!9 = !DIEnumerator(name: "_ISdigit", value: 2048)
!10 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!11 = !DIEnumerator(name: "_ISspace", value: 8192)
!12 = !DIEnumerator(name: "_ISprint", value: 16384)
!13 = !DIEnumerator(name: "_ISgraph", value: 32768)
!14 = !DIEnumerator(name: "_ISblank", value: 1)
!15 = !DIEnumerator(name: "_IScntrl", value: 2)
!16 = !DIEnumerator(name: "_ISpunct", value: 4)
!17 = !DIEnumerator(name: "_ISalnum", value: 8)
!18 = !{!19, !20, !22, !23, !24, !25, !27, !38}
!19 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64, align: 64)
!21 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!23 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!24 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quad", file: !26, line: 151, baseType: !19)
!26 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Ptrdist/anagram/tmp.c", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "Word", file: !26, line: 206, baseType: !29)
!29 = !DICompositeType(tag: DW_TAG_structure_type, file: !26, line: 202, size: 256, align: 64, elements: !30)
!30 = !{!31, !35, !36}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "aqMask", scope: !29, file: !26, line: 203, baseType: !32, size: 128, align: 64)
!32 = !DICompositeType(tag: DW_TAG_array_type, baseType: !25, size: 128, align: 64, elements: !33)
!33 = !{!34}
!34 = !DISubrange(count: 2)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "pchWord", scope: !29, file: !26, line: 204, baseType: !20, size: 64, align: 64, offset: 128)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "cchLength", scope: !29, file: !26, line: 205, baseType: !37, size: 32, align: 32, offset: 192)
!37 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64, align: 64)
!39 = !DISubroutineType(types: !40)
!40 = !{!23, !41, !41}
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!43 = !{!44, !48, !51, !52, !56, !57, !58, !59, !62, !63, !64, !70, !73, !74, !77}
!44 = !DISubprogram(name: "Fatal", scope: !26, file: !26, line: 247, type: !45, isLocal: false, isDefinition: true, scopeLine: 247, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, i32)* @Fatal, variables: !47)
!45 = !DISubroutineType(types: !46)
!46 = !{null, !20, !37}
!47 = !{}
!48 = !DISubprogram(name: "ReadDict", scope: !26, file: !26, line: 264, type: !49, isLocal: false, isDefinition: true, scopeLine: 264, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @ReadDict, variables: !47)
!49 = !DISubroutineType(types: !50)
!50 = !{null, !20}
!51 = !DISubprogram(name: "BuildMask", scope: !26, file: !26, line: 310, type: !49, isLocal: false, isDefinition: true, scopeLine: 310, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @BuildMask, variables: !47)
!52 = !DISubprogram(name: "NewWord", scope: !26, file: !26, line: 367, type: !53, isLocal: false, isDefinition: true, scopeLine: 367, flags: DIFlagPrototyped, isOptimized: false, function: %struct.Word* ()* @NewWord, variables: !47)
!53 = !DISubroutineType(types: !54)
!54 = !{!55}
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWord", file: !26, line: 207, baseType: !27)
!56 = !DISubprogram(name: "wprint", scope: !26, file: !26, line: 381, type: !49, isLocal: false, isDefinition: true, scopeLine: 381, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @wprint, variables: !47)
!57 = !DISubprogram(name: "NextWord", scope: !26, file: !26, line: 388, type: !53, isLocal: false, isDefinition: true, scopeLine: 388, flags: DIFlagPrototyped, isOptimized: false, function: %struct.Word* ()* @NextWord, variables: !47)
!58 = !DISubprogram(name: "BuildWord", scope: !26, file: !26, line: 402, type: !49, isLocal: false, isDefinition: true, scopeLine: 402, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*)* @BuildWord, variables: !47)
!59 = !DISubprogram(name: "AddWords", scope: !26, file: !26, line: 443, type: !60, isLocal: false, isDefinition: true, scopeLine: 443, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @AddWords, variables: !47)
!60 = !DISubroutineType(types: !61)
!61 = !{null}
!62 = !DISubprogram(name: "DumpCandidates", scope: !26, file: !26, line: 457, type: !60, isLocal: false, isDefinition: true, scopeLine: 457, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @DumpCandidates, variables: !47)
!63 = !DISubprogram(name: "DumpWords", scope: !26, file: !26, line: 485, type: !60, isLocal: false, isDefinition: true, scopeLine: 485, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @DumpWords, variables: !47)
!64 = !DISubprogram(name: "FindAnagram", scope: !26, file: !26, line: 506, type: !65, isLocal: false, isDefinition: true, scopeLine: 506, flags: DIFlagPrototyped, isOptimized: false, function: void (i64*, %struct.Word**, i32)* @FindAnagram, variables: !47)
!65 = !DISubroutineType(types: !66)
!66 = !{null, !67, !68, !23}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!68 = !DIDerivedType(tag: DW_TAG_typedef, name: "PPWord", file: !26, line: 208, baseType: !69)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64, align: 64)
!70 = !DISubprogram(name: "CompareFrequency", scope: !26, file: !26, line: 585, type: !71, isLocal: false, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i8*, i8*)* @CompareFrequency, variables: !47)
!71 = !DISubroutineType(types: !72)
!72 = !{!23, !20, !20}
!73 = !DISubprogram(name: "SortCandidates", scope: !26, file: !26, line: 597, type: !60, isLocal: false, isDefinition: true, scopeLine: 597, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @SortCandidates, variables: !47)
!74 = !DISubprogram(name: "GetPhrase", scope: !26, file: !26, line: 614, type: !75, isLocal: false, isDefinition: true, scopeLine: 614, flags: DIFlagPrototyped, isOptimized: false, function: i8* (i8*, i32)* @GetPhrase, variables: !47)
!75 = !DISubroutineType(types: !76)
!76 = !{!20, !20, !23}
!77 = !DISubprogram(name: "main", scope: !26, file: !26, line: 630, type: !78, isLocal: false, isDefinition: true, scopeLine: 630, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !47)
!78 = !DISubroutineType(types: !79)
!79 = !{!23, !23, !80}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64, align: 64)
!81 = !{!82, !83, !84, !88, !89, !100, !101, !102, !103, !105, !107, !108, !112, !113, !138, !139}
!82 = !DIGlobalVariable(name: "cchMinLength", scope: !0, file: !26, line: 233, type: !23, isLocal: false, isDefinition: true, variable: i32* @cchMinLength)
!83 = !DIGlobalVariable(name: "X", scope: !63, file: !26, line: 486, type: !23, isLocal: true, isDefinition: true, variable: i32* @DumpWords.X)
!84 = !DIGlobalVariable(name: "apwCand", scope: !0, file: !26, line: 210, type: !85, isLocal: false, isDefinition: true, variable: [5000 x %struct.Word*]* @apwCand)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 320000, align: 64, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 5000)
!88 = !DIGlobalVariable(name: "cpwCand", scope: !0, file: !26, line: 211, type: !37, isLocal: false, isDefinition: true, variable: i32* @cpwCand)
!89 = !DIGlobalVariable(name: "alPhrase", scope: !0, file: !26, line: 225, type: !90, isLocal: false, isDefinition: true, variable: [26 x %struct.Letter]* @alPhrase)
!90 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 3328, align: 32, elements: !98)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "Letter", file: !26, line: 222, baseType: !92)
!92 = !DICompositeType(tag: DW_TAG_structure_type, file: !26, line: 217, size: 128, align: 32, elements: !93)
!93 = !{!94, !95, !96, !97}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "uFrequency", scope: !92, file: !26, line: 218, baseType: !37, size: 32, align: 32)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "uShift", scope: !92, file: !26, line: 219, baseType: !37, size: 32, align: 32, offset: 32)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "uBits", scope: !92, file: !26, line: 220, baseType: !37, size: 32, align: 32, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "iq", scope: !92, file: !26, line: 221, baseType: !37, size: 32, align: 32, offset: 96)
!98 = !{!99}
!99 = !DISubrange(count: 26)
!100 = !DIGlobalVariable(name: "cchPhraseLength", scope: !0, file: !26, line: 228, type: !23, isLocal: false, isDefinition: true, variable: i32* @cchPhraseLength)
!101 = !DIGlobalVariable(name: "aqMainMask", scope: !0, file: !26, line: 230, type: !32, isLocal: false, isDefinition: true, variable: [2 x i64]* @aqMainMask)
!102 = !DIGlobalVariable(name: "aqMainSign", scope: !0, file: !26, line: 231, type: !32, isLocal: false, isDefinition: true, variable: [2 x i64]* @aqMainSign)
!103 = !DIGlobalVariable(name: "auGlobalFrequency", scope: !0, file: !26, line: 239, type: !104, isLocal: false, isDefinition: true, variable: [26 x i32]* @auGlobalFrequency)
!104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 832, align: 32, elements: !98)
!105 = !DIGlobalVariable(name: "achByFrequency", scope: !0, file: !26, line: 240, type: !106, isLocal: false, isDefinition: true, variable: [26 x i8]* @achByFrequency)
!106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 208, align: 8, elements: !98)
!107 = !DIGlobalVariable(name: "pchDictionary", scope: !0, file: !26, line: 242, type: !20, isLocal: false, isDefinition: true, variable: i8** @pchDictionary)
!108 = !DIGlobalVariable(name: "apwSol", scope: !0, file: !26, line: 465, type: !109, isLocal: false, isDefinition: true, variable: [51 x %struct.Word*]* @apwSol)
!109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !55, size: 3264, align: 64, elements: !110)
!110 = !{!111}
!111 = !DISubrange(count: 51)
!112 = !DIGlobalVariable(name: "cpwLast", scope: !0, file: !26, line: 466, type: !23, isLocal: false, isDefinition: true, variable: i32* @cpwLast)
!113 = !DIGlobalVariable(name: "jbAnagram", scope: !0, file: !26, line: 498, type: !114, isLocal: false, isDefinition: true, variable: [1 x %struct.__jmp_buf_tag]* @jbAnagram)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "jmp_buf", file: !115, line: 48, baseType: !116)
!115 = !DIFile(filename: "/usr/include/setjmp.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !117, size: 1600, align: 64, elements: !136)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !115, line: 34, size: 1600, align: 64, elements: !118)
!118 = !{!119, !126, !127}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !117, file: !115, line: 40, baseType: !120, size: 512, align: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !121, line: 31, baseType: !122)
!121 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/setjmp.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 512, align: 64, elements: !124)
!123 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!124 = !{!125}
!125 = !DISubrange(count: 8)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !117, file: !115, line: 41, baseType: !23, size: 32, align: 32, offset: 512)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !117, file: !115, line: 42, baseType: !128, size: 1024, align: 64, offset: 576)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !129, line: 30, baseType: !130)
!129 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/sigset.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!130 = !DICompositeType(tag: DW_TAG_structure_type, file: !129, line: 27, size: 1024, align: 64, elements: !131)
!131 = !{!132}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !130, file: !129, line: 29, baseType: !133, size: 1024, align: 64)
!133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19, size: 1024, align: 64, elements: !134)
!134 = !{!135}
!135 = !DISubrange(count: 16)
!136 = !{!137}
!137 = !DISubrange(count: 1)
!138 = !DIGlobalVariable(name: "fInteractive", scope: !0, file: !26, line: 612, type: !23, isLocal: false, isDefinition: true, variable: i32* @fInteractive)
!139 = !DIGlobalVariable(name: "achPhrase", scope: !0, file: !26, line: 628, type: !140, isLocal: false, isDefinition: true, variable: [255 x i8]* @achPhrase)
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 2040, align: 8, elements: !141)
!141 = !{!142}
!142 = !DISubrange(count: 255)
!143 = !{i32 2, !"Dwarf Version", i32 4}
!144 = !{i32 2, !"Debug Info Version", i32 3}
!145 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!146 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pchMsg", arg: 1, scope: !44, file: !26, line: 247, type: !20)
!147 = !DIExpression()
!148 = !DILocation(line: 247, column: 18, scope: !44)
!149 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "u", arg: 2, scope: !44, file: !26, line: 247, type: !37)
!150 = !DILocation(line: 247, column: 35, scope: !44)
!151 = !DILocation(line: 248, column: 11, scope: !44)
!152 = !DILocation(line: 248, column: 3, scope: !44)
!153 = !DILocation(line: 249, column: 3, scope: !44)
!154 = !DILocation(line: 250, column: 1, scope: !44)
!155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pchFile", arg: 1, scope: !48, file: !26, line: 264, type: !20)
!156 = !DILocation(line: 264, column: 21, scope: !48)
!157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cWords", scope: !48, file: !26, line: 269, type: !37)
!158 = !DILocation(line: 269, column: 12, scope: !48)
!159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "statBuf", scope: !48, file: !26, line: 272, type: !160)
!160 = !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !161, line: 46, size: 1152, align: 64, elements: !162)
!161 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!162 = !{!163, !166, !168, !170, !172, !174, !176, !177, !178, !180, !182, !184, !192, !193, !194}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !160, file: !161, line: 48, baseType: !164, size: 64, align: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !165, line: 124, baseType: !19)
!165 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!166 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !160, file: !161, line: 53, baseType: !167, size: 64, align: 64, offset: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !165, line: 127, baseType: !19)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !160, file: !161, line: 61, baseType: !169, size: 64, align: 64, offset: 128)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !165, line: 130, baseType: !19)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !160, file: !161, line: 62, baseType: !171, size: 32, align: 32, offset: 192)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !165, line: 129, baseType: !37)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !160, file: !161, line: 64, baseType: !173, size: 32, align: 32, offset: 224)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !165, line: 125, baseType: !37)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !160, file: !161, line: 65, baseType: !175, size: 32, align: 32, offset: 256)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !165, line: 126, baseType: !37)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !160, file: !161, line: 67, baseType: !23, size: 32, align: 32, offset: 288)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !160, file: !161, line: 69, baseType: !164, size: 64, align: 64, offset: 320)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !160, file: !161, line: 74, baseType: !179, size: 64, align: 64, offset: 384)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !165, line: 131, baseType: !123)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !160, file: !161, line: 78, baseType: !181, size: 64, align: 64, offset: 448)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !165, line: 153, baseType: !123)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !160, file: !161, line: 80, baseType: !183, size: 64, align: 64, offset: 512)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !165, line: 158, baseType: !123)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !160, file: !161, line: 91, baseType: !185, size: 128, align: 64, offset: 576)
!185 = !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !186, line: 120, size: 128, align: 64, elements: !187)
!186 = !DIFile(filename: "/usr/include/time.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!187 = !{!188, !190}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !185, file: !186, line: 122, baseType: !189, size: 64, align: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !165, line: 139, baseType: !123)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !185, file: !186, line: 123, baseType: !191, size: 64, align: 64, offset: 64)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !165, line: 175, baseType: !123)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !160, file: !161, line: 92, baseType: !185, size: 128, align: 64, offset: 704)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !160, file: !161, line: 93, baseType: !185, size: 128, align: 64, offset: 832)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !160, file: !161, line: 106, baseType: !195, size: 192, align: 64, offset: 960)
!195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 192, align: 64, elements: !196)
!196 = !{!197}
!197 = !DISubrange(count: 3)
!198 = !DILocation(line: 272, column: 15, scope: !48)
!199 = !DILocation(line: 274, column: 7, scope: !200)
!200 = distinct !DILexicalBlock(scope: !48, file: !26, line: 274, column: 7)
!201 = !DILocation(line: 274, column: 7, scope: !48)
!202 = !DILocation(line: 275, column: 5, scope: !200)
!203 = !DILocation(line: 277, column: 19, scope: !48)
!204 = !DILocation(line: 277, column: 27, scope: !48)
!205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ulLen", scope: !48, file: !26, line: 268, type: !19)
!206 = !DILocation(line: 268, column: 17, scope: !48)
!207 = !DILocation(line: 278, column: 37, scope: !48)
!208 = !DILocation(line: 278, column: 27, scope: !48)
!209 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pchBase", scope: !48, file: !26, line: 267, type: !20)
!210 = !DILocation(line: 267, column: 9, scope: !48)
!211 = !DILocation(line: 280, column: 7, scope: !212)
!212 = distinct !DILexicalBlock(scope: !48, file: !26, line: 280, column: 7)
!213 = !DILocation(line: 280, column: 21, scope: !212)
!214 = !DILocation(line: 280, column: 7, scope: !48)
!215 = !DILocation(line: 281, column: 5, scope: !212)
!216 = !DILocation(line: 283, column: 13, scope: !217)
!217 = distinct !DILexicalBlock(scope: !48, file: !26, line: 283, column: 7)
!218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !48, file: !26, line: 265, type: !219)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !221, line: 48, baseType: !222)
!221 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!222 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !223, line: 241, size: 1728, align: 64, elements: !224)
!223 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!224 = !{!225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !245, !246, !247, !248, !249, !250, !252, !254, !257, !259, !260, !261, !262, !263, !266, !267}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !222, file: !223, line: 242, baseType: !23, size: 32, align: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !222, file: !223, line: 247, baseType: !20, size: 64, align: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !222, file: !223, line: 248, baseType: !20, size: 64, align: 64, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !222, file: !223, line: 249, baseType: !20, size: 64, align: 64, offset: 192)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !222, file: !223, line: 250, baseType: !20, size: 64, align: 64, offset: 256)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !222, file: !223, line: 251, baseType: !20, size: 64, align: 64, offset: 320)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !222, file: !223, line: 252, baseType: !20, size: 64, align: 64, offset: 384)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !222, file: !223, line: 253, baseType: !20, size: 64, align: 64, offset: 448)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !222, file: !223, line: 254, baseType: !20, size: 64, align: 64, offset: 512)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !222, file: !223, line: 256, baseType: !20, size: 64, align: 64, offset: 576)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !222, file: !223, line: 257, baseType: !20, size: 64, align: 64, offset: 640)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !222, file: !223, line: 258, baseType: !20, size: 64, align: 64, offset: 704)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !222, file: !223, line: 260, baseType: !238, size: 64, align: 64, offset: 768)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64, align: 64)
!239 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !223, line: 156, size: 192, align: 64, elements: !240)
!240 = !{!241, !242, !244}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !239, file: !223, line: 157, baseType: !238, size: 64, align: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !239, file: !223, line: 158, baseType: !243, size: 64, align: 64, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64, align: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !239, file: !223, line: 162, baseType: !23, size: 32, align: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !222, file: !223, line: 262, baseType: !243, size: 64, align: 64, offset: 832)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !222, file: !223, line: 264, baseType: !23, size: 32, align: 32, offset: 896)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !222, file: !223, line: 268, baseType: !23, size: 32, align: 32, offset: 928)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !222, file: !223, line: 270, baseType: !179, size: 64, align: 64, offset: 960)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !222, file: !223, line: 274, baseType: !24, size: 16, align: 16, offset: 1024)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !222, file: !223, line: 275, baseType: !251, size: 8, align: 8, offset: 1040)
!251 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !222, file: !223, line: 276, baseType: !253, size: 8, align: 8, offset: 1048)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 8, align: 8, elements: !136)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !222, file: !223, line: 280, baseType: !255, size: 64, align: 64, offset: 1088)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64, align: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !223, line: 150, baseType: null)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !222, file: !223, line: 289, baseType: !258, size: 64, align: 64, offset: 1152)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !165, line: 132, baseType: !123)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !222, file: !223, line: 297, baseType: !22, size: 64, align: 64, offset: 1216)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !222, file: !223, line: 298, baseType: !22, size: 64, align: 64, offset: 1280)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !222, file: !223, line: 299, baseType: !22, size: 64, align: 64, offset: 1344)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !222, file: !223, line: 300, baseType: !22, size: 64, align: 64, offset: 1408)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !222, file: !223, line: 302, baseType: !264, size: 64, align: 64, offset: 1472)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !265, line: 62, baseType: !19)
!265 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/anagram")
!266 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !222, file: !223, line: 303, baseType: !23, size: 32, align: 32, offset: 1536)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !222, file: !223, line: 305, baseType: !268, size: 160, align: 8, offset: 1568)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 160, align: 8, elements: !269)
!269 = !{!270}
!270 = !DISubrange(count: 20)
!271 = !DILocation(line: 265, column: 9, scope: !48)
!272 = !DILocation(line: 283, column: 34, scope: !217)
!273 = !DILocation(line: 283, column: 7, scope: !48)
!274 = !DILocation(line: 284, column: 5, scope: !217)
!275 = !DILocation(line: 286, column: 3, scope: !48)
!276 = !DILocation(line: 286, column: 11, scope: !48)
!277 = !DILocation(line: 286, column: 10, scope: !48)
!278 = !DILocation(line: 287, column: 19, scope: !279)
!279 = distinct !DILexicalBlock(scope: !48, file: !26, line: 286, column: 21)
!280 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pch", scope: !48, file: !26, line: 266, type: !20)
!281 = !DILocation(line: 266, column: 9, scope: !48)
!282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cLetters", scope: !48, file: !26, line: 270, type: !37)
!283 = !DILocation(line: 270, column: 12, scope: !48)
!284 = !DILocation(line: 289, column: 5, scope: !279)
!285 = !DILocation(line: 289, column: 18, scope: !279)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !48, file: !26, line: 271, type: !23)
!287 = !DILocation(line: 271, column: 7, scope: !48)
!288 = !DILocation(line: 289, column: 29, scope: !279)
!289 = !DILocation(line: 289, column: 37, scope: !279)
!290 = !DILocation(line: 289, column: 43, scope: !279)
!291 = !DILocation(line: 289, column: 5, scope: !292)
!292 = !DILexicalBlockFile(scope: !279, file: !26, discriminator: 3)
!293 = !DILocation(line: 290, column: 11, scope: !294)
!294 = distinct !DILexicalBlock(scope: !295, file: !26, line: 290, column: 11)
!295 = distinct !DILexicalBlock(scope: !279, file: !26, line: 289, column: 51)
!296 = !DILocation(line: 290, column: 11, scope: !295)
!297 = !DILocation(line: 291, column: 17, scope: !294)
!298 = !DILocation(line: 291, column: 9, scope: !294)
!299 = !DILocation(line: 292, column: 16, scope: !295)
!300 = !DILocation(line: 292, column: 11, scope: !295)
!301 = !DILocation(line: 292, column: 14, scope: !295)
!302 = !DILocation(line: 294, column: 9, scope: !279)
!303 = !DILocation(line: 294, column: 12, scope: !279)
!304 = !DILocation(line: 295, column: 20, scope: !279)
!305 = !DILocation(line: 295, column: 16, scope: !279)
!306 = !DILocation(line: 295, column: 14, scope: !279)
!307 = !DILocation(line: 296, column: 18, scope: !279)
!308 = !DILocation(line: 296, column: 5, scope: !279)
!309 = !DILocation(line: 296, column: 16, scope: !279)
!310 = !DILocation(line: 298, column: 11, scope: !279)
!311 = !DILocation(line: 300, column: 3, scope: !48)
!312 = !DILocation(line: 302, column: 11, scope: !48)
!313 = !DILocation(line: 302, column: 14, scope: !48)
!314 = !DILocation(line: 304, column: 11, scope: !48)
!315 = !DILocation(line: 304, column: 3, scope: !48)
!316 = !DILocation(line: 305, column: 14, scope: !317)
!317 = distinct !DILexicalBlock(scope: !48, file: !26, line: 305, column: 7)
!318 = !DILocation(line: 305, column: 7, scope: !48)
!319 = !DILocation(line: 306, column: 5, scope: !317)
!320 = !DILocation(line: 307, column: 11, scope: !48)
!321 = !DILocation(line: 307, column: 60, scope: !48)
!322 = !DILocation(line: 307, column: 58, scope: !48)
!323 = !DILocation(line: 307, column: 47, scope: !48)
!324 = !DILocation(line: 307, column: 3, scope: !48)
!325 = !DILocation(line: 308, column: 1, scope: !48)
!326 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pchPhrase", arg: 1, scope: !51, file: !26, line: 310, type: !20)
!327 = !DILocation(line: 310, column: 22, scope: !51)
!328 = !DILocation(line: 318, column: 3, scope: !51)
!329 = !DILocation(line: 319, column: 3, scope: !51)
!330 = !DILocation(line: 320, column: 3, scope: !51)
!331 = !DILocation(line: 328, column: 19, scope: !51)
!332 = !DILocation(line: 329, column: 3, scope: !51)
!333 = !DILocation(line: 329, column: 26, scope: !334)
!334 = !DILexicalBlockFile(scope: !335, file: !26, discriminator: 2)
!335 = !DILexicalBlockFile(scope: !51, file: !26, discriminator: 1)
!336 = !DILocation(line: 329, column: 16, scope: !51)
!337 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ch", scope: !51, file: !26, line: 312, type: !23)
!338 = !DILocation(line: 312, column: 7, scope: !51)
!339 = !DILocation(line: 329, column: 30, scope: !51)
!340 = !DILocation(line: 330, column: 9, scope: !341)
!341 = distinct !DILexicalBlock(scope: !342, file: !26, line: 330, column: 9)
!342 = distinct !DILexicalBlock(scope: !51, file: !26, line: 329, column: 39)
!343 = !DILocation(line: 330, column: 9, scope: !342)
!344 = !DILocation(line: 331, column: 12, scope: !345)
!345 = distinct !DILexicalBlock(scope: !341, file: !26, line: 330, column: 22)
!346 = !DILocation(line: 332, column: 7, scope: !345)
!347 = !DILocation(line: 332, column: 19, scope: !345)
!348 = !DILocation(line: 332, column: 29, scope: !345)
!349 = !DILocation(line: 333, column: 22, scope: !345)
!350 = !DILocation(line: 334, column: 5, scope: !345)
!351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iq", scope: !51, file: !26, line: 313, type: !37)
!352 = !DILocation(line: 313, column: 12, scope: !51)
!353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cbtUsed", scope: !51, file: !26, line: 314, type: !23)
!354 = !DILocation(line: 314, column: 7, scope: !51)
!355 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !51, file: !26, line: 311, type: !23)
!356 = !DILocation(line: 311, column: 7, scope: !51)
!357 = !DILocation(line: 341, column: 8, scope: !358)
!358 = distinct !DILexicalBlock(scope: !51, file: !26, line: 341, column: 3)
!359 = !DILocation(line: 341, column: 17, scope: !360)
!360 = distinct !DILexicalBlock(scope: !358, file: !26, line: 341, column: 3)
!361 = !DILocation(line: 341, column: 3, scope: !358)
!362 = !DILocation(line: 342, column: 9, scope: !363)
!363 = distinct !DILexicalBlock(scope: !364, file: !26, line: 342, column: 9)
!364 = distinct !DILexicalBlock(scope: !360, file: !26, line: 341, column: 34)
!365 = !DILocation(line: 342, column: 21, scope: !363)
!366 = !DILocation(line: 342, column: 32, scope: !363)
!367 = !DILocation(line: 342, column: 9, scope: !364)
!368 = !DILocation(line: 343, column: 7, scope: !369)
!369 = distinct !DILexicalBlock(scope: !363, file: !26, line: 342, column: 38)
!370 = !DILocation(line: 343, column: 28, scope: !369)
!371 = !DILocation(line: 344, column: 5, scope: !369)
!372 = !DILocation(line: 345, column: 7, scope: !373)
!373 = distinct !DILexicalBlock(scope: !363, file: !26, line: 344, column: 12)
!374 = !DILocation(line: 345, column: 28, scope: !373)
!375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cbtNeed", scope: !51, file: !26, line: 315, type: !23)
!376 = !DILocation(line: 315, column: 7, scope: !51)
!377 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "qNeed", scope: !51, file: !26, line: 316, type: !25)
!378 = !DILocation(line: 316, column: 8, scope: !51)
!379 = !DILocation(line: 346, column: 12, scope: !380)
!380 = distinct !DILexicalBlock(scope: !373, file: !26, line: 346, column: 7)
!381 = !DILocation(line: 347, column: 12, scope: !382)
!382 = distinct !DILexicalBlock(scope: !380, file: !26, line: 346, column: 7)
!383 = !DILocation(line: 347, column: 24, scope: !382)
!384 = !DILocation(line: 347, column: 35, scope: !382)
!385 = !DILocation(line: 346, column: 7, scope: !380)
!386 = !DILocation(line: 346, column: 7, scope: !387)
!387 = !DILexicalBlockFile(scope: !380, file: !26, discriminator: 1)
!388 = !DILocation(line: 348, column: 19, scope: !382)
!389 = !DILocation(line: 348, column: 29, scope: !382)
!390 = !DILocation(line: 346, column: 7, scope: !382)
!391 = !DILocation(line: 350, column: 19, scope: !392)
!392 = distinct !DILexicalBlock(scope: !373, file: !26, line: 350, column: 11)
!393 = !DILocation(line: 350, column: 11, scope: !392)
!394 = !DILocation(line: 350, column: 29, scope: !392)
!395 = !DILocation(line: 350, column: 11, scope: !373)
!396 = !DILocation(line: 351, column: 13, scope: !397)
!397 = distinct !DILexicalBlock(scope: !398, file: !26, line: 351, column: 13)
!398 = distinct !DILexicalBlock(scope: !392, file: !26, line: 350, column: 42)
!399 = !DILocation(line: 351, column: 18, scope: !397)
!400 = !DILocation(line: 351, column: 13, scope: !398)
!401 = !DILocation(line: 352, column: 11, scope: !397)
!402 = !DILocation(line: 354, column: 7, scope: !398)
!403 = !DILocation(line: 355, column: 33, scope: !373)
!404 = !DILocation(line: 355, column: 27, scope: !373)
!405 = !DILocation(line: 355, column: 7, scope: !373)
!406 = !DILocation(line: 355, column: 19, scope: !373)
!407 = !DILocation(line: 355, column: 25, scope: !373)
!408 = !DILocation(line: 356, column: 11, scope: !409)
!409 = distinct !DILexicalBlock(scope: !373, file: !26, line: 356, column: 11)
!410 = !DILocation(line: 356, column: 11, scope: !373)
!411 = !DILocation(line: 357, column: 15, scope: !409)
!412 = !DILocation(line: 357, column: 9, scope: !409)
!413 = !DILocation(line: 358, column: 7, scope: !373)
!414 = !DILocation(line: 358, column: 22, scope: !373)
!415 = !DILocation(line: 359, column: 31, scope: !373)
!416 = !DILocation(line: 359, column: 43, scope: !373)
!417 = !DILocation(line: 359, column: 25, scope: !373)
!418 = !DILocation(line: 359, column: 54, scope: !373)
!419 = !DILocation(line: 359, column: 7, scope: !373)
!420 = !DILocation(line: 359, column: 22, scope: !373)
!421 = !DILocation(line: 360, column: 7, scope: !373)
!422 = !DILocation(line: 360, column: 19, scope: !373)
!423 = !DILocation(line: 360, column: 26, scope: !373)
!424 = !DILocation(line: 361, column: 7, scope: !373)
!425 = !DILocation(line: 361, column: 19, scope: !373)
!426 = !DILocation(line: 361, column: 22, scope: !373)
!427 = !DILocation(line: 362, column: 15, scope: !373)
!428 = !DILocation(line: 364, column: 3, scope: !364)
!429 = !DILocation(line: 341, column: 30, scope: !360)
!430 = !DILocation(line: 341, column: 3, scope: !360)
!431 = !DILocation(line: 365, column: 1, scope: !51)
!432 = !DILocation(line: 370, column: 16, scope: !52)
!433 = !DILocation(line: 370, column: 8, scope: !52)
!434 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pw", scope: !52, file: !26, line: 368, type: !55)
!435 = !DILocation(line: 368, column: 9, scope: !52)
!436 = !DILocation(line: 371, column: 10, scope: !437)
!437 = distinct !DILexicalBlock(scope: !52, file: !26, line: 371, column: 7)
!438 = !DILocation(line: 371, column: 7, scope: !52)
!439 = !DILocation(line: 372, column: 50, scope: !437)
!440 = !DILocation(line: 372, column: 5, scope: !437)
!441 = !DILocation(line: 373, column: 3, scope: !52)
!442 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pch", arg: 1, scope: !56, file: !26, line: 381, type: !20)
!443 = !DILocation(line: 381, column: 19, scope: !56)
!444 = !DILocation(line: 382, column: 3, scope: !56)
!445 = !DILocation(line: 383, column: 1, scope: !56)
!446 = !DILocation(line: 390, column: 7, scope: !447)
!447 = distinct !DILexicalBlock(scope: !57, file: !26, line: 390, column: 7)
!448 = !DILocation(line: 390, column: 15, scope: !447)
!449 = !DILocation(line: 390, column: 7, scope: !57)
!450 = !DILocation(line: 391, column: 5, scope: !447)
!451 = !DILocation(line: 392, column: 23, scope: !57)
!452 = !DILocation(line: 392, column: 8, scope: !57)
!453 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pw", scope: !57, file: !26, line: 389, type: !55)
!454 = !DILocation(line: 389, column: 9, scope: !57)
!455 = !DILocation(line: 393, column: 10, scope: !456)
!456 = distinct !DILexicalBlock(scope: !57, file: !26, line: 393, column: 7)
!457 = !DILocation(line: 393, column: 7, scope: !57)
!458 = !DILocation(line: 394, column: 5, scope: !456)
!459 = !DILocation(line: 395, column: 26, scope: !57)
!460 = !DILocation(line: 395, column: 11, scope: !57)
!461 = !DILocation(line: 395, column: 19, scope: !57)
!462 = !DILocation(line: 395, column: 3, scope: !57)
!463 = !DILocation(line: 395, column: 24, scope: !57)
!464 = !DILocation(line: 396, column: 18, scope: !57)
!465 = !DILocation(line: 396, column: 26, scope: !57)
!466 = !DILocation(line: 396, column: 10, scope: !57)
!467 = !DILocation(line: 396, column: 3, scope: !57)
!468 = !DILocation(line: 397, column: 1, scope: !57)
!469 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pchWord", arg: 1, scope: !58, file: !26, line: 402, type: !20)
!470 = !DILocation(line: 402, column: 22, scope: !58)
!471 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cchFrequency", scope: !58, file: !26, line: 403, type: !472)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 208, align: 8, elements: !98)
!473 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!474 = !DILocation(line: 403, column: 17, scope: !58)
!475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pch", scope: !58, file: !26, line: 405, type: !20)
!476 = !DILocation(line: 405, column: 9, scope: !58)
!477 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cchLength", scope: !58, file: !26, line: 407, type: !23)
!478 = !DILocation(line: 407, column: 7, scope: !58)
!479 = !DILocation(line: 409, column: 3, scope: !58)
!480 = !DILocation(line: 413, column: 3, scope: !58)
!481 = !DILocation(line: 413, column: 19, scope: !482)
!482 = !DILexicalBlockFile(scope: !483, file: !26, discriminator: 2)
!483 = !DILexicalBlockFile(scope: !58, file: !26, discriminator: 1)
!484 = !DILocation(line: 413, column: 15, scope: !58)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !58, file: !26, line: 404, type: !23)
!486 = !DILocation(line: 404, column: 7, scope: !58)
!487 = !DILocation(line: 413, column: 23, scope: !58)
!488 = !DILocation(line: 414, column: 10, scope: !489)
!489 = distinct !DILexicalBlock(scope: !490, file: !26, line: 414, column: 9)
!490 = distinct !DILexicalBlock(scope: !58, file: !26, line: 413, column: 32)
!491 = !DILocation(line: 414, column: 9, scope: !490)
!492 = !DILocation(line: 415, column: 7, scope: !489)
!493 = !DILocation(line: 416, column: 9, scope: !490)
!494 = !DILocation(line: 417, column: 11, scope: !495)
!495 = distinct !DILexicalBlock(scope: !490, file: !26, line: 417, column: 9)
!496 = !DILocation(line: 417, column: 9, scope: !495)
!497 = !DILocation(line: 417, column: 29, scope: !495)
!498 = !DILocation(line: 417, column: 41, scope: !495)
!499 = !DILocation(line: 417, column: 27, scope: !495)
!500 = !DILocation(line: 417, column: 9, scope: !490)
!501 = !DILocation(line: 418, column: 7, scope: !495)
!502 = !DILocation(line: 419, column: 5, scope: !490)
!503 = !DILocation(line: 425, column: 7, scope: !504)
!504 = distinct !DILexicalBlock(scope: !58, file: !26, line: 425, column: 7)
!505 = !DILocation(line: 425, column: 12, scope: !504)
!506 = !DILocation(line: 425, column: 21, scope: !507)
!507 = distinct !DILexicalBlock(scope: !504, file: !26, line: 425, column: 7)
!508 = !DILocation(line: 426, column: 35, scope: !507)
!509 = !DILocation(line: 426, column: 11, scope: !507)
!510 = !DILocation(line: 426, column: 32, scope: !507)
!511 = !DILocation(line: 425, column: 34, scope: !507)
!512 = !DILocation(line: 425, column: 7, scope: !507)
!513 = !DILocation(line: 431, column: 8, scope: !58)
!514 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pw", scope: !58, file: !26, line: 406, type: !55)
!515 = !DILocation(line: 406, column: 9, scope: !58)
!516 = !DILocation(line: 432, column: 13, scope: !58)
!517 = !DILocation(line: 432, column: 3, scope: !58)
!518 = !DILocation(line: 434, column: 7, scope: !58)
!519 = !DILocation(line: 434, column: 15, scope: !58)
!520 = !DILocation(line: 435, column: 7, scope: !58)
!521 = !DILocation(line: 435, column: 17, scope: !58)
!522 = !DILocation(line: 436, column: 8, scope: !523)
!523 = distinct !DILexicalBlock(scope: !58, file: !26, line: 436, column: 3)
!524 = !DILocation(line: 436, column: 17, scope: !525)
!525 = distinct !DILexicalBlock(scope: !523, file: !26, line: 436, column: 3)
!526 = !DILocation(line: 436, column: 3, scope: !523)
!527 = !DILocation(line: 438, column: 15, scope: !528)
!528 = distinct !DILexicalBlock(scope: !525, file: !26, line: 436, column: 34)
!529 = !DILocation(line: 438, column: 9, scope: !528)
!530 = !DILocation(line: 438, column: 34, scope: !528)
!531 = !DILocation(line: 438, column: 46, scope: !528)
!532 = !DILocation(line: 438, column: 31, scope: !528)
!533 = !DILocation(line: 437, column: 16, scope: !528)
!534 = !DILocation(line: 437, column: 28, scope: !528)
!535 = !DILocation(line: 437, column: 5, scope: !528)
!536 = !DILocation(line: 437, column: 9, scope: !528)
!537 = !DILocation(line: 437, column: 32, scope: !528)
!538 = !DILocation(line: 439, column: 3, scope: !528)
!539 = !DILocation(line: 436, column: 30, scope: !525)
!540 = !DILocation(line: 436, column: 3, scope: !525)
!541 = !DILocation(line: 440, column: 1, scope: !58)
!542 = !DILocation(line: 444, column: 15, scope: !59)
!543 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pch", scope: !59, file: !26, line: 444, type: !20)
!544 = !DILocation(line: 444, column: 9, scope: !59)
!545 = !DILocation(line: 446, column: 11, scope: !59)
!546 = !DILocation(line: 448, column: 3, scope: !59)
!547 = !DILocation(line: 448, column: 10, scope: !59)
!548 = !DILocation(line: 449, column: 10, scope: !549)
!549 = distinct !DILexicalBlock(scope: !550, file: !26, line: 449, column: 9)
!550 = distinct !DILexicalBlock(scope: !59, file: !26, line: 448, column: 16)
!551 = !DILocation(line: 449, column: 20, scope: !549)
!552 = !DILocation(line: 449, column: 17, scope: !549)
!553 = !DILocation(line: 449, column: 33, scope: !549)
!554 = !DILocation(line: 449, column: 36, scope: !555)
!555 = !DILexicalBlockFile(scope: !549, file: !26, discriminator: 1)
!556 = !DILocation(line: 449, column: 45, scope: !549)
!557 = !DILocation(line: 449, column: 43, scope: !549)
!558 = !DILocation(line: 449, column: 61, scope: !549)
!559 = !DILocation(line: 449, column: 58, scope: !549)
!560 = !DILocation(line: 449, column: 78, scope: !549)
!561 = !DILocation(line: 449, column: 81, scope: !562)
!562 = !DILexicalBlockFile(scope: !563, file: !26, discriminator: 3)
!563 = !DILexicalBlockFile(scope: !549, file: !26, discriminator: 2)
!564 = !DILocation(line: 449, column: 91, scope: !549)
!565 = !DILocation(line: 449, column: 88, scope: !549)
!566 = !DILocation(line: 449, column: 9, scope: !550)
!567 = !DILocation(line: 450, column: 21, scope: !549)
!568 = !DILocation(line: 450, column: 7, scope: !549)
!569 = !DILocation(line: 451, column: 12, scope: !550)
!570 = !DILocation(line: 451, column: 9, scope: !550)
!571 = !DILocation(line: 454, column: 11, scope: !59)
!572 = !DILocation(line: 454, column: 38, scope: !59)
!573 = !DILocation(line: 454, column: 3, scope: !59)
!574 = !DILocation(line: 455, column: 1, scope: !59)
!575 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !62, file: !26, line: 458, type: !37)
!576 = !DILocation(line: 458, column: 12, scope: !62)
!577 = !DILocation(line: 460, column: 8, scope: !578)
!578 = distinct !DILexicalBlock(scope: !62, file: !26, line: 460, column: 3)
!579 = !DILocation(line: 460, column: 19, scope: !580)
!580 = distinct !DILexicalBlock(scope: !578, file: !26, line: 460, column: 3)
!581 = !DILocation(line: 460, column: 17, scope: !580)
!582 = !DILocation(line: 460, column: 3, scope: !578)
!583 = !DILocation(line: 461, column: 26, scope: !580)
!584 = !DILocation(line: 461, column: 38, scope: !580)
!585 = !DILocation(line: 461, column: 50, scope: !580)
!586 = !DILocation(line: 461, column: 54, scope: !580)
!587 = !DILocation(line: 461, column: 47, scope: !580)
!588 = !DILocation(line: 461, column: 5, scope: !580)
!589 = !DILocation(line: 460, column: 29, scope: !580)
!590 = !DILocation(line: 460, column: 3, scope: !580)
!591 = !DILocation(line: 462, column: 3, scope: !62)
!592 = !DILocation(line: 463, column: 1, scope: !62)
!593 = !DILocation(line: 488, column: 8, scope: !63)
!594 = !DILocation(line: 488, column: 10, scope: !63)
!595 = !DILocation(line: 488, column: 15, scope: !63)
!596 = !DILocation(line: 488, column: 5, scope: !63)
!597 = !DILocation(line: 489, column: 7, scope: !598)
!598 = distinct !DILexicalBlock(scope: !63, file: !26, line: 489, column: 7)
!599 = !DILocation(line: 489, column: 9, scope: !598)
!600 = !DILocation(line: 489, column: 7, scope: !63)
!601 = !DILocation(line: 490, column: 5, scope: !598)
!602 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !63, file: !26, line: 487, type: !23)
!603 = !DILocation(line: 487, column: 7, scope: !63)
!604 = !DILocation(line: 491, column: 8, scope: !605)
!605 = distinct !DILexicalBlock(scope: !63, file: !26, line: 491, column: 3)
!606 = !DILocation(line: 491, column: 19, scope: !607)
!607 = distinct !DILexicalBlock(scope: !605, file: !26, line: 491, column: 3)
!608 = !DILocation(line: 491, column: 17, scope: !607)
!609 = !DILocation(line: 491, column: 3, scope: !605)
!610 = !DILocation(line: 492, column: 12, scope: !607)
!611 = !DILocation(line: 492, column: 23, scope: !607)
!612 = !DILocation(line: 492, column: 5, scope: !607)
!613 = !DILocation(line: 491, column: 29, scope: !607)
!614 = !DILocation(line: 491, column: 3, scope: !607)
!615 = !DILocation(line: 493, column: 3, scope: !63)
!616 = !DILocation(line: 494, column: 1, scope: !63)
!617 = !DILocation(line: 494, column: 1, scope: !618)
!618 = !DILexicalBlockFile(scope: !63, file: !26, discriminator: 1)
!619 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pqMask", arg: 1, scope: !64, file: !26, line: 506, type: !67)
!620 = !DILocation(line: 506, column: 24, scope: !64)
!621 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ppwStart", arg: 2, scope: !64, file: !26, line: 506, type: !68)
!622 = !DILocation(line: 506, column: 39, scope: !64)
!623 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "iLetter", arg: 3, scope: !64, file: !26, line: 506, type: !23)
!624 = !DILocation(line: 506, column: 53, scope: !64)
!625 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "aqNext", scope: !64, file: !26, line: 507, type: !32)
!626 = !DILocation(line: 507, column: 8, scope: !64)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ppwEnd", scope: !64, file: !26, line: 511, type: !68)
!628 = !DILocation(line: 511, column: 10, scope: !64)
!629 = !DILocation(line: 512, column: 13, scope: !64)
!630 = !DILocation(line: 512, column: 10, scope: !64)
!631 = !DILocation(line: 521, column: 7, scope: !64)
!632 = !DILocation(line: 522, column: 19, scope: !633)
!633 = distinct !DILexicalBlock(scope: !634, file: !26, line: 521, column: 16)
!634 = distinct !DILexicalBlock(scope: !635, file: !26, line: 521, column: 7)
!635 = distinct !DILexicalBlock(scope: !64, file: !26, line: 521, column: 7)
!636 = !DILocation(line: 522, column: 10, scope: !633)
!637 = !DILocation(line: 522, column: 44, scope: !633)
!638 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iq", scope: !64, file: !26, line: 510, type: !37)
!639 = !DILocation(line: 510, column: 12, scope: !64)
!640 = !DILocation(line: 523, column: 22, scope: !633)
!641 = !DILocation(line: 523, column: 13, scope: !633)
!642 = !DILocation(line: 523, column: 47, scope: !633)
!643 = !DILocation(line: 523, column: 65, scope: !633)
!644 = !DILocation(line: 523, column: 56, scope: !633)
!645 = !DILocation(line: 523, column: 90, scope: !633)
!646 = !DILocation(line: 523, column: 53, scope: !633)
!647 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "qMask", scope: !64, file: !26, line: 509, type: !25)
!648 = !DILocation(line: 509, column: 8, scope: !64)
!649 = !DILocation(line: 524, column: 9, scope: !650)
!650 = distinct !DILexicalBlock(scope: !633, file: !26, line: 524, column: 9)
!651 = !DILocation(line: 524, column: 20, scope: !650)
!652 = !DILocation(line: 524, column: 9, scope: !633)
!653 = !DILocation(line: 525, column: 7, scope: !650)
!654 = !DILocation(line: 526, column: 12, scope: !633)
!655 = !DILocation(line: 521, column: 7, scope: !634)
!656 = !DILocation(line: 531, column: 7, scope: !64)
!657 = !DILocation(line: 531, column: 23, scope: !64)
!658 = !DILocation(line: 532, column: 10, scope: !659)
!659 = distinct !DILexicalBlock(scope: !64, file: !26, line: 531, column: 33)
!660 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pw", scope: !64, file: !26, line: 508, type: !55)
!661 = !DILocation(line: 508, column: 18, scope: !64)
!662 = !DILocation(line: 537, column: 9, scope: !663)
!663 = distinct !DILexicalBlock(scope: !659, file: !26, line: 537, column: 9)
!664 = !DILocation(line: 537, column: 9, scope: !659)
!665 = !DILocation(line: 537, column: 9, scope: !666)
!666 = !DILexicalBlockFile(scope: !667, file: !26, discriminator: 1)
!667 = distinct !DILexicalBlock(scope: !663, file: !26, line: 537, column: 9)
!668 = !DILocation(line: 541, column: 5, scope: !669)
!669 = distinct !DILexicalBlock(scope: !659, file: !26, line: 541, column: 5)
!670 = !DILocation(line: 541, column: 5, scope: !659)
!671 = !DILocation(line: 541, column: 5, scope: !672)
!672 = !DILexicalBlockFile(scope: !673, file: !26, discriminator: 1)
!673 = distinct !DILexicalBlock(scope: !669, file: !26, line: 541, column: 5)
!674 = !DILocation(line: 557, column: 14, scope: !675)
!675 = distinct !DILexicalBlock(scope: !659, file: !26, line: 557, column: 13)
!676 = !DILocation(line: 557, column: 18, scope: !675)
!677 = !DILocation(line: 557, column: 29, scope: !675)
!678 = !DILocation(line: 557, column: 38, scope: !675)
!679 = !DILocation(line: 557, column: 13, scope: !659)
!680 = !DILocation(line: 558, column: 20, scope: !681)
!681 = distinct !DILexicalBlock(scope: !675, file: !26, line: 557, column: 44)
!682 = !DILocation(line: 558, column: 19, scope: !681)
!683 = !DILocation(line: 558, column: 17, scope: !681)
!684 = !DILocation(line: 559, column: 15, scope: !681)
!685 = !DILocation(line: 560, column: 7, scope: !681)
!686 = !DILocation(line: 564, column: 19, scope: !659)
!687 = !DILocation(line: 564, column: 5, scope: !659)
!688 = !DILocation(line: 564, column: 23, scope: !659)
!689 = !DILocation(line: 565, column: 32, scope: !690)
!690 = distinct !DILexicalBlock(scope: !659, file: !26, line: 565, column: 9)
!691 = !DILocation(line: 565, column: 25, scope: !690)
!692 = !DILocation(line: 565, column: 9, scope: !659)
!693 = !DILocation(line: 571, column: 17, scope: !694)
!694 = distinct !DILexicalBlock(scope: !690, file: !26, line: 565, column: 43)
!695 = !DILocation(line: 571, column: 14, scope: !694)
!696 = !DILocation(line: 572, column: 20, scope: !694)
!697 = !DILocation(line: 572, column: 7, scope: !694)
!698 = !DILocation(line: 574, column: 5, scope: !694)
!699 = !DILocation(line: 575, column: 7, scope: !690)
!700 = !DILocation(line: 576, column: 28, scope: !659)
!701 = !DILocation(line: 576, column: 21, scope: !659)
!702 = !DILocation(line: 577, column: 5, scope: !659)
!703 = !DILocation(line: 578, column: 13, scope: !659)
!704 = !DILocation(line: 579, column: 5, scope: !659)
!705 = !DILocation(line: 583, column: 1, scope: !64)
!706 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pch1", arg: 1, scope: !70, file: !26, line: 585, type: !20)
!707 = !DILocation(line: 585, column: 34, scope: !70)
!708 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pch2", arg: 2, scope: !70, file: !26, line: 585, type: !20)
!709 = !DILocation(line: 585, column: 46, scope: !70)
!710 = !DILocation(line: 586, column: 25, scope: !711)
!711 = distinct !DILexicalBlock(scope: !70, file: !26, line: 586, column: 7)
!712 = !DILocation(line: 586, column: 7, scope: !711)
!713 = !DILocation(line: 586, column: 52, scope: !711)
!714 = !DILocation(line: 586, column: 34, scope: !711)
!715 = !DILocation(line: 586, column: 32, scope: !711)
!716 = !DILocation(line: 586, column: 7, scope: !70)
!717 = !DILocation(line: 587, column: 5, scope: !711)
!718 = !DILocation(line: 588, column: 25, scope: !719)
!719 = distinct !DILexicalBlock(scope: !70, file: !26, line: 588, column: 7)
!720 = !DILocation(line: 588, column: 7, scope: !719)
!721 = !DILocation(line: 588, column: 52, scope: !719)
!722 = !DILocation(line: 588, column: 34, scope: !719)
!723 = !DILocation(line: 588, column: 32, scope: !719)
!724 = !DILocation(line: 588, column: 7, scope: !70)
!725 = !DILocation(line: 589, column: 5, scope: !719)
!726 = !DILocation(line: 590, column: 7, scope: !727)
!727 = distinct !DILexicalBlock(scope: !70, file: !26, line: 590, column: 7)
!728 = !DILocation(line: 590, column: 15, scope: !727)
!729 = !DILocation(line: 590, column: 13, scope: !727)
!730 = !DILocation(line: 590, column: 7, scope: !70)
!731 = !DILocation(line: 591, column: 5, scope: !727)
!732 = !DILocation(line: 592, column: 7, scope: !733)
!733 = distinct !DILexicalBlock(scope: !70, file: !26, line: 592, column: 7)
!734 = !DILocation(line: 592, column: 15, scope: !733)
!735 = !DILocation(line: 592, column: 13, scope: !733)
!736 = !DILocation(line: 592, column: 7, scope: !70)
!737 = !DILocation(line: 593, column: 5, scope: !733)
!738 = !DILocation(line: 594, column: 3, scope: !70)
!739 = !DILocation(line: 595, column: 1, scope: !70)
!740 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !73, file: !26, line: 598, type: !23)
!741 = !DILocation(line: 598, column: 7, scope: !73)
!742 = !DILocation(line: 601, column: 8, scope: !743)
!743 = distinct !DILexicalBlock(scope: !73, file: !26, line: 601, column: 3)
!744 = !DILocation(line: 601, column: 17, scope: !745)
!745 = distinct !DILexicalBlock(scope: !743, file: !26, line: 601, column: 3)
!746 = !DILocation(line: 601, column: 3, scope: !743)
!747 = !DILocation(line: 602, column: 25, scope: !745)
!748 = !DILocation(line: 602, column: 5, scope: !745)
!749 = !DILocation(line: 602, column: 23, scope: !745)
!750 = !DILocation(line: 601, column: 30, scope: !745)
!751 = !DILocation(line: 601, column: 3, scope: !745)
!752 = !DILocation(line: 603, column: 3, scope: !73)
!753 = !DILocation(line: 606, column: 11, scope: !73)
!754 = !DILocation(line: 606, column: 3, scope: !73)
!755 = !DILocation(line: 607, column: 8, scope: !756)
!756 = distinct !DILexicalBlock(scope: !73, file: !26, line: 607, column: 3)
!757 = !DILocation(line: 607, column: 17, scope: !758)
!758 = distinct !DILexicalBlock(scope: !756, file: !26, line: 607, column: 3)
!759 = !DILocation(line: 607, column: 3, scope: !756)
!760 = !DILocation(line: 608, column: 11, scope: !758)
!761 = !DILocation(line: 608, column: 36, scope: !758)
!762 = !DILocation(line: 608, column: 5, scope: !758)
!763 = !DILocation(line: 607, column: 30, scope: !758)
!764 = !DILocation(line: 607, column: 3, scope: !758)
!765 = !DILocation(line: 609, column: 15, scope: !73)
!766 = !DILocation(line: 609, column: 3, scope: !73)
!767 = !DILocation(line: 610, column: 1, scope: !73)
!768 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pch", arg: 1, scope: !74, file: !26, line: 614, type: !20)
!769 = !DILocation(line: 614, column: 23, scope: !74)
!770 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !74, file: !26, line: 614, type: !23)
!771 = !DILocation(line: 614, column: 32, scope: !74)
!772 = !DILocation(line: 615, column: 7, scope: !773)
!773 = distinct !DILexicalBlock(scope: !74, file: !26, line: 615, column: 7)
!774 = !DILocation(line: 615, column: 7, scope: !74)
!775 = !DILocation(line: 616, column: 5, scope: !773)
!776 = !DILocation(line: 617, column: 10, scope: !74)
!777 = !DILocation(line: 617, column: 3, scope: !74)
!778 = !DILocation(line: 618, column: 24, scope: !779)
!779 = distinct !DILexicalBlock(scope: !74, file: !26, line: 618, column: 7)
!780 = !DILocation(line: 618, column: 7, scope: !779)
!781 = !DILocation(line: 618, column: 31, scope: !779)
!782 = !DILocation(line: 618, column: 7, scope: !74)
!783 = !DILocation(line: 623, column: 5, scope: !784)
!784 = distinct !DILexicalBlock(scope: !779, file: !26, line: 618, column: 40)
!785 = !DILocation(line: 625, column: 3, scope: !74)
!786 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cpchArgc", arg: 1, scope: !77, file: !26, line: 630, type: !23)
!787 = !DILocation(line: 630, column: 20, scope: !77)
!788 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ppchArgv", arg: 2, scope: !77, file: !26, line: 630, type: !80)
!789 = !DILocation(line: 630, column: 37, scope: !77)
!790 = !DILocation(line: 632, column: 16, scope: !791)
!791 = distinct !DILexicalBlock(scope: !77, file: !26, line: 632, column: 7)
!792 = !DILocation(line: 632, column: 21, scope: !791)
!793 = !DILocation(line: 632, column: 33, scope: !791)
!794 = !DILocation(line: 632, column: 7, scope: !77)
!795 = !DILocation(line: 633, column: 5, scope: !791)
!796 = !DILocation(line: 635, column: 16, scope: !797)
!797 = distinct !DILexicalBlock(scope: !77, file: !26, line: 635, column: 7)
!798 = !DILocation(line: 635, column: 7, scope: !77)
!799 = !DILocation(line: 636, column: 25, scope: !797)
!800 = !DILocation(line: 636, column: 20, scope: !797)
!801 = !DILocation(line: 636, column: 18, scope: !797)
!802 = !DILocation(line: 636, column: 5, scope: !797)
!803 = !DILocation(line: 638, column: 18, scope: !77)
!804 = !DILocation(line: 638, column: 16, scope: !77)
!805 = !DILocation(line: 640, column: 12, scope: !77)
!806 = !DILocation(line: 640, column: 3, scope: !77)
!807 = !DILocation(line: 642, column: 3, scope: !77)
!808 = !DILocation(line: 642, column: 10, scope: !809)
!809 = !DILexicalBlockFile(scope: !810, file: !26, discriminator: 2)
!810 = !DILexicalBlockFile(scope: !77, file: !26, discriminator: 1)
!811 = !DILocation(line: 642, column: 54, scope: !77)
!812 = !DILocation(line: 643, column: 9, scope: !813)
!813 = distinct !DILexicalBlock(scope: !814, file: !26, line: 643, column: 9)
!814 = distinct !DILexicalBlock(scope: !77, file: !26, line: 642, column: 63)
!815 = !DILocation(line: 643, column: 9, scope: !814)
!816 = !DILocation(line: 644, column: 22, scope: !817)
!817 = distinct !DILexicalBlock(scope: !813, file: !26, line: 643, column: 32)
!818 = !DILocation(line: 644, column: 20, scope: !817)
!819 = !DILocation(line: 645, column: 34, scope: !817)
!820 = !DILocation(line: 645, column: 7, scope: !817)
!821 = !DILocation(line: 646, column: 5, scope: !817)
!822 = !DILocation(line: 646, column: 16, scope: !823)
!823 = distinct !DILexicalBlock(scope: !813, file: !26, line: 646, column: 16)
!824 = !DILocation(line: 646, column: 29, scope: !823)
!825 = !DILocation(line: 646, column: 16, scope: !813)
!826 = !DILocation(line: 647, column: 7, scope: !827)
!827 = distinct !DILexicalBlock(scope: !823, file: !26, line: 646, column: 37)
!828 = !DILocation(line: 648, column: 5, scope: !827)
!829 = !DILocation(line: 649, column: 7, scope: !830)
!830 = distinct !DILexicalBlock(scope: !823, file: !26, line: 648, column: 12)
!831 = !DILocation(line: 650, column: 7, scope: !830)
!832 = !DILocation(line: 651, column: 11, scope: !833)
!833 = distinct !DILexicalBlock(scope: !830, file: !26, line: 651, column: 11)
!834 = !DILocation(line: 651, column: 19, scope: !833)
!835 = !DILocation(line: 651, column: 24, scope: !833)
!836 = !DILocation(line: 651, column: 27, scope: !837)
!837 = !DILexicalBlockFile(scope: !833, file: !26, discriminator: 1)
!838 = !DILocation(line: 651, column: 43, scope: !833)
!839 = !DILocation(line: 651, column: 11, scope: !830)
!840 = !DILocation(line: 652, column: 9, scope: !833)
!841 = !DILocation(line: 655, column: 19, scope: !830)
!842 = !DILocation(line: 656, column: 7, scope: !830)
!843 = !DILocation(line: 657, column: 11, scope: !844)
!844 = distinct !DILexicalBlock(scope: !830, file: !26, line: 657, column: 11)
!845 = !DILocation(line: 657, column: 29, scope: !844)
!846 = !DILocation(line: 657, column: 11, scope: !830)
!847 = !DILocation(line: 658, column: 9, scope: !844)
!848 = !DILocation(line: 662, column: 3, scope: !77)
