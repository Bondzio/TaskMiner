; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._nodeVCGType = type { %struct._constraintVCGType*, i64, i64, i64, %struct._constraintVCGType*, i64, i64, i64 }
%struct._constraintVCGType = type { i64, i64, i64, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@channelNets = external global i64, align 8
@VCG = common global %struct._nodeVCGType* null, align 8
@storageRootVCG = common global %struct._constraintVCGType* null, align 8
@storageVCG = common global %struct._constraintVCGType* null, align 8
@storageLimitVCG = common global i64 0, align 8
@SCC = common global i64* null, align 8
@perSCC = common global i64* null, align 8
@removeVCG = common global %struct._constraintVCGType** null, align 8
@channelColumns = external global i64, align 8
@TOP = external global i64*, align 8
@BOT = external global i64*, align 8
@.str = private unnamed_addr constant [20 x i8] c"storageLimitVCG > 0\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"/home/gleison/tf/Benchmarks/Ptrdist/yacr2/tmp.c\00", align 1
@__PRETTY_FUNCTION__.BuildVCG = private unnamed_addr constant [16 x i8] c"void BuildVCG()\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"[%d]\0A\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"above: \00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"VCG[net].netsAboveHook[which].top == net\00", align 1
@__PRETTY_FUNCTION__.DumpVCG = private unnamed_addr constant [28 x i8] c"void DumpVCG(nodeVCGType *)\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"below: \00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"VCG[net].netsBelowHook[which].bot == net\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"VCG[net].netsAboveHook[s].top == net\00", align 1
@__PRETTY_FUNCTION__.DFSAboveVCG = private unnamed_addr constant [47 x i8] c"void DFSAboveVCG(nodeVCGType *, unsigned long)\00", align 1
@.str.11 = private unnamed_addr constant [37 x i8] c"VCG[net].netsBelowHook[s].bot == net\00", align 1
@__PRETTY_FUNCTION__.DFSBelowVCG = private unnamed_addr constant [47 x i8] c"void DFSBelowVCG(nodeVCGType *, unsigned long)\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"VCG[net].netsAboveLabel > 0\00", align 1
@__PRETTY_FUNCTION__.SCCofVCG = private unnamed_addr constant [63 x i8] c"void SCCofVCG(nodeVCGType *, unsigned long *, unsigned long *)\00", align 1
@totalSCC = common global i64 0, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"totalSCC > 0\00", align 1
@__PRETTY_FUNCTION__.SCC_DFSAboveVCG = private unnamed_addr constant [68 x i8] c"void SCC_DFSAboveVCG(nodeVCGType *, unsigned long, unsigned long *)\00", align 1
@__PRETTY_FUNCTION__.SCC_DFSBelowVCG = private unnamed_addr constant [66 x i8] c"void SCC_DFSBelowVCG(nodeVCGType *, unsigned long, unsigned long)\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"[%d]\09\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"<%d>\00", align 1
@removeTotalVCG = common global i64 0, align 8
@.str.16 = private unnamed_addr constant [28 x i8] c"\0A*** Input is acyclic! ***\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"\0A*** Input is cyclic! ***\0A\00", align 1
@.str.18 = private unnamed_addr constant [27 x i8] c"*** VC's removed (%d) ***\0A\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"remove != NULL\00", align 1
@__PRETTY_FUNCTION__.RemoveConstraintVCG = private unnamed_addr constant [96 x i8] c"void RemoveConstraintVCG(nodeVCGType *, unsigned long *, unsigned long *, constraintVCGType **)\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.20 = private unnamed_addr constant [57 x i8] c"removeTotalVCG < ((channelNets + 1) * (channelNets + 1))\00", align 1
@cardBotNotPref = external global i64, align 8
@channelTracks = external global i64, align 8
@tracksBotNotPref = external global i64*, align 8
@cardTopNotPref = external global i64, align 8
@tracksTopNotPref = external global i64*, align 8
@tracksNotPref = external global i64*, align 8
@cardNotPref = external global i64, align 8
@__PRETTY_FUNCTION__.DFSAboveLongestPathVCG = private unnamed_addr constant [67 x i8] c"unsigned long DFSAboveLongestPathVCG(nodeVCGType *, unsigned long)\00", align 1
@__PRETTY_FUNCTION__.DFSBelowLongestPathVCG = private unnamed_addr constant [67 x i8] c"unsigned long DFSBelowLongestPathVCG(nodeVCGType *, unsigned long)\00", align 1

; Function Attrs: nounwind uwtable
define void @AllocVCG() #0 {
entry:
  %tmp = load i64, i64* @channelNets, align 8, !dbg !84
  %add = add i64 %tmp, 1, !dbg !85
  %mul = mul i64 %add, 64, !dbg !86
  %call = call noalias i8* @malloc(i64 %mul) #5, !dbg !87
  %tmp1 = bitcast i8* %call to %struct._nodeVCGType*, !dbg !88
  store %struct._nodeVCGType* %tmp1, %struct._nodeVCGType** @VCG, align 8, !dbg !89
  %tmp2 = load i64, i64* @channelNets, align 8, !dbg !90
  %add1 = add i64 %tmp2, 1, !dbg !91
  %tmp3 = load i64, i64* @channelNets, align 8, !dbg !92
  %add2 = add i64 %tmp3, 1, !dbg !93
  %mul3 = mul i64 %add1, %add2, !dbg !94
  %mul4 = mul i64 %mul3, 32, !dbg !95
  %call5 = call noalias i8* @malloc(i64 %mul4) #5, !dbg !96
  %tmp4 = bitcast i8* %call5 to %struct._constraintVCGType*, !dbg !97
  store %struct._constraintVCGType* %tmp4, %struct._constraintVCGType** @storageRootVCG, align 8, !dbg !98
  %tmp5 = load %struct._constraintVCGType*, %struct._constraintVCGType** @storageRootVCG, align 8, !dbg !99
  store %struct._constraintVCGType* %tmp5, %struct._constraintVCGType** @storageVCG, align 8, !dbg !100
  %tmp6 = load i64, i64* @channelNets, align 8, !dbg !101
  %add6 = add i64 %tmp6, 1, !dbg !102
  %tmp7 = load i64, i64* @channelNets, align 8, !dbg !103
  %add7 = add i64 %tmp7, 1, !dbg !104
  %mul8 = mul i64 %add6, %add7, !dbg !105
  store i64 %mul8, i64* @storageLimitVCG, align 8, !dbg !106
  %tmp8 = load i64, i64* @channelNets, align 8, !dbg !107
  %add9 = add i64 %tmp8, 1, !dbg !108
  %mul10 = mul i64 %add9, 8, !dbg !109
  %call11 = call noalias i8* @malloc(i64 %mul10) #5, !dbg !110
  %tmp9 = bitcast i8* %call11 to i64*, !dbg !111
  store i64* %tmp9, i64** @SCC, align 8, !dbg !112
  %tmp10 = load i64, i64* @channelNets, align 8, !dbg !113
  %add12 = add i64 %tmp10, 1, !dbg !114
  %mul13 = mul i64 %add12, 8, !dbg !115
  %call14 = call noalias i8* @malloc(i64 %mul13) #5, !dbg !116
  %tmp11 = bitcast i8* %call14 to i64*, !dbg !117
  store i64* %tmp11, i64** @perSCC, align 8, !dbg !118
  %tmp12 = load i64, i64* @channelNets, align 8, !dbg !119
  %add15 = add i64 %tmp12, 1, !dbg !120
  %tmp13 = load i64, i64* @channelNets, align 8, !dbg !121
  %add16 = add i64 %tmp13, 1, !dbg !122
  %mul17 = mul i64 %add15, %add16, !dbg !123
  %mul18 = mul i64 %mul17, 8, !dbg !124
  %call19 = call noalias i8* @malloc(i64 %mul18) #5, !dbg !125
  %tmp14 = bitcast i8* %call19 to %struct._constraintVCGType**, !dbg !126
  store %struct._constraintVCGType** %tmp14, %struct._constraintVCGType*** @removeVCG, align 8, !dbg !127
  ret void, !dbg !128
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

; Function Attrs: nounwind uwtable
define void @FreeVCG() #0 {
entry:
  %tmp = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !129
  %tmp1 = bitcast %struct._nodeVCGType* %tmp to i8*, !dbg !129
  call void @free(i8* %tmp1) #5, !dbg !130
  %tmp2 = load %struct._constraintVCGType*, %struct._constraintVCGType** @storageRootVCG, align 8, !dbg !131
  %tmp3 = bitcast %struct._constraintVCGType* %tmp2 to i8*, !dbg !131
  call void @free(i8* %tmp3) #5, !dbg !132
  store i64 0, i64* @storageLimitVCG, align 8, !dbg !133
  %tmp4 = load i64*, i64** @SCC, align 8, !dbg !134
  %tmp5 = bitcast i64* %tmp4 to i8*, !dbg !134
  call void @free(i8* %tmp5) #5, !dbg !135
  %tmp6 = load i64*, i64** @perSCC, align 8, !dbg !136
  %tmp7 = bitcast i64* %tmp6 to i8*, !dbg !136
  call void @free(i8* %tmp7) #5, !dbg !137
  %tmp8 = load %struct._constraintVCGType**, %struct._constraintVCGType*** @removeVCG, align 8, !dbg !138
  %tmp9 = bitcast %struct._constraintVCGType** %tmp8 to i8*, !dbg !138
  call void @free(i8* %tmp9) #5, !dbg !139
  ret void, !dbg !140
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define void @BuildVCG() #0 {
entry:
  call void @AllocVCG(), !dbg !141
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !142, metadata !143), !dbg !144
  br label %for.cond, !dbg !145

for.cond:                                         ; preds = %for.inc.105, %entry
  %net.0 = phi i64 [ 1, %entry ], [ %inc106, %for.inc.105 ]
  %tmp1 = load i64, i64* @channelNets, align 8, !dbg !147
  %cmp = icmp ule i64 %net.0, %tmp1, !dbg !149
  br i1 %cmp, label %for.body, label %for.end.107, !dbg !150

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !151, metadata !143), !dbg !152
  %tmp2 = load %struct._constraintVCGType*, %struct._constraintVCGType** @storageVCG, align 8, !dbg !153
  %tmp4 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !155
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp4, i64 %net.0, !dbg !155
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 0, !dbg !156
  store %struct._constraintVCGType* %tmp2, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !157
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !158, metadata !143), !dbg !159
  br label %for.cond.1, !dbg !160

for.cond.1:                                       ; preds = %for.inc.41, %for.body
  %constraint.0 = phi i64 [ 0, %for.body ], [ %constraint.2, %for.inc.41 ]
  %col.0 = phi i64 [ 1, %for.body ], [ %inc42, %for.inc.41 ]
  %tmp6 = load i64, i64* @channelColumns, align 8, !dbg !162
  %cmp2 = icmp ule i64 %col.0, %tmp6, !dbg !164
  br i1 %cmp2, label %for.body.3, label %for.end.43, !dbg !165

for.body.3:                                       ; preds = %for.cond.1
  %tmp8 = load i64*, i64** @TOP, align 8, !dbg !166
  %arrayidx4 = getelementptr inbounds i64, i64* %tmp8, i64 %col.0, !dbg !166
  %tmp9 = load i64, i64* %arrayidx4, align 8, !dbg !166
  %cmp5 = icmp eq i64 %tmp9, %net.0, !dbg !169
  br i1 %cmp5, label %land.lhs.true, label %if.end.40, !dbg !170

land.lhs.true:                                    ; preds = %for.body.3
  %tmp12 = load i64*, i64** @BOT, align 8, !dbg !171
  %arrayidx6 = getelementptr inbounds i64, i64* %tmp12, i64 %col.0, !dbg !171
  %tmp13 = load i64, i64* %arrayidx6, align 8, !dbg !171
  %cmp7 = icmp ne i64 %tmp13, %net.0, !dbg !172
  br i1 %cmp7, label %land.lhs.true.8, label %if.end.40, !dbg !173

land.lhs.true.8:                                  ; preds = %land.lhs.true
  %tmp16 = load i64*, i64** @BOT, align 8, !dbg !174
  %arrayidx9 = getelementptr inbounds i64, i64* %tmp16, i64 %col.0, !dbg !174
  %tmp17 = load i64, i64* %arrayidx9, align 8, !dbg !174
  %cmp10 = icmp ne i64 %tmp17, 0, !dbg !175
  br i1 %cmp10, label %if.then, label %if.end.40, !dbg !176

if.then:                                          ; preds = %land.lhs.true.8
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !177, metadata !143), !dbg !178
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !179, metadata !143), !dbg !180
  br label %for.cond.11, !dbg !181

for.cond.11:                                      ; preds = %for.inc, %if.then
  %check.0 = phi i64 [ 0, %if.then ], [ %inc, %for.inc ]
  %cmp12 = icmp ult i64 %check.0, %constraint.0, !dbg !184
  br i1 %cmp12, label %for.body.13, label %for.end.loopexit, !dbg !186

for.body.13:                                      ; preds = %for.cond.11
  %tmp22 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !187
  %arrayidx14 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp22, i64 %net.0, !dbg !187
  %netsAboveHook15 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx14, i32 0, i32 0, !dbg !190
  %tmp23 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook15, align 8, !dbg !190
  %arrayidx16 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp23, i64 %check.0, !dbg !187
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx16, i32 0, i32 1, !dbg !191
  %tmp24 = load i64, i64* %bot, align 8, !dbg !191
  %tmp26 = load i64*, i64** @BOT, align 8, !dbg !192
  %arrayidx17 = getelementptr inbounds i64, i64* %tmp26, i64 %col.0, !dbg !192
  %tmp27 = load i64, i64* %arrayidx17, align 8, !dbg !192
  %cmp18 = icmp eq i64 %tmp24, %tmp27, !dbg !193
  br i1 %cmp18, label %if.then.19, label %if.end, !dbg !194

if.then.19:                                       ; preds = %for.body.13
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !177, metadata !143), !dbg !178
  br label %for.end, !dbg !195

if.end:                                           ; preds = %for.body.13
  br label %for.inc, !dbg !197

for.inc:                                          ; preds = %if.end
  %inc = add i64 %check.0, 1, !dbg !198
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !179, metadata !143), !dbg !180
  br label %for.cond.11, !dbg !199

for.end.loopexit:                                 ; preds = %for.cond.11
  br label %for.end, !dbg !200

for.end:                                          ; preds = %for.end.loopexit, %if.then.19
  %add.0 = phi i64 [ 0, %if.then.19 ], [ 1, %for.end.loopexit ]
  %tobool = icmp ne i64 %add.0, 0, !dbg !200
  br i1 %tobool, label %if.then.20, label %if.end.39, !dbg !202

if.then.20:                                       ; preds = %for.end
  %tmp30 = load i64, i64* @storageLimitVCG, align 8, !dbg !203
  %cmp21 = icmp ugt i64 %tmp30, 0, !dbg !203
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !203

cond.true:                                        ; preds = %if.then.20
  br label %cond.end, !dbg !205

cond.false:                                       ; preds = %if.then.20
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 87, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__PRETTY_FUNCTION__.BuildVCG, i32 0, i32 0)) #6, !dbg !207
  unreachable, !dbg !207

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %tmp32 = load i64*, i64** @TOP, align 8, !dbg !209
  %arrayidx22 = getelementptr inbounds i64, i64* %tmp32, i64 %col.0, !dbg !209
  %tmp33 = load i64, i64* %arrayidx22, align 8, !dbg !209
  %tmp36 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !210
  %arrayidx23 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp36, i64 %net.0, !dbg !210
  %netsAboveHook24 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx23, i32 0, i32 0, !dbg !211
  %tmp37 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook24, align 8, !dbg !211
  %arrayidx25 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp37, i64 %constraint.0, !dbg !210
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx25, i32 0, i32 0, !dbg !212
  store i64 %tmp33, i64* %top, align 8, !dbg !213
  %tmp39 = load i64*, i64** @BOT, align 8, !dbg !214
  %arrayidx26 = getelementptr inbounds i64, i64* %tmp39, i64 %col.0, !dbg !214
  %tmp40 = load i64, i64* %arrayidx26, align 8, !dbg !214
  %tmp43 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !215
  %arrayidx27 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp43, i64 %net.0, !dbg !215
  %netsAboveHook28 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx27, i32 0, i32 0, !dbg !216
  %tmp44 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook28, align 8, !dbg !216
  %arrayidx29 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp44, i64 %constraint.0, !dbg !215
  %bot30 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx29, i32 0, i32 1, !dbg !217
  store i64 %tmp40, i64* %bot30, align 8, !dbg !218
  %tmp48 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !219
  %arrayidx31 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp48, i64 %net.0, !dbg !219
  %netsAboveHook32 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx31, i32 0, i32 0, !dbg !220
  %tmp49 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook32, align 8, !dbg !220
  %arrayidx33 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp49, i64 %constraint.0, !dbg !219
  %col34 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx33, i32 0, i32 2, !dbg !221
  store i64 %col.0, i64* %col34, align 8, !dbg !222
  %tmp52 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !223
  %arrayidx35 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp52, i64 %net.0, !dbg !223
  %netsAboveHook36 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx35, i32 0, i32 0, !dbg !224
  %tmp53 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook36, align 8, !dbg !224
  %arrayidx37 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp53, i64 %constraint.0, !dbg !223
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx37, i32 0, i32 3, !dbg !225
  store i64 0, i64* %removed, align 8, !dbg !226
  %tmp54 = load %struct._constraintVCGType*, %struct._constraintVCGType** @storageVCG, align 8, !dbg !227
  %incdec.ptr = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp54, i32 1, !dbg !227
  store %struct._constraintVCGType* %incdec.ptr, %struct._constraintVCGType** @storageVCG, align 8, !dbg !227
  %tmp55 = load i64, i64* @storageLimitVCG, align 8, !dbg !228
  %dec = add i64 %tmp55, -1, !dbg !228
  store i64 %dec, i64* @storageLimitVCG, align 8, !dbg !228
  %inc38 = add i64 %constraint.0, 1, !dbg !229
  call void @llvm.dbg.value(metadata i64 %inc38, i64 0, metadata !151, metadata !143), !dbg !152
  br label %if.end.39, !dbg !230

if.end.39:                                        ; preds = %cond.end, %for.end
  %constraint.1 = phi i64 [ %inc38, %cond.end ], [ %constraint.0, %for.end ]
  br label %if.end.40, !dbg !231

if.end.40:                                        ; preds = %if.end.39, %land.lhs.true.8, %land.lhs.true, %for.body.3
  %constraint.2 = phi i64 [ %constraint.1, %if.end.39 ], [ %constraint.0, %land.lhs.true.8 ], [ %constraint.0, %land.lhs.true ], [ %constraint.0, %for.body.3 ]
  br label %for.inc.41, !dbg !232

for.inc.41:                                       ; preds = %if.end.40
  %inc42 = add i64 %col.0, 1, !dbg !233
  call void @llvm.dbg.value(metadata i64 %inc42, i64 0, metadata !158, metadata !143), !dbg !159
  br label %for.cond.1, !dbg !234

for.end.43:                                       ; preds = %for.cond.1
  %constraint.0.lcssa = phi i64 [ %constraint.0, %for.cond.1 ]
  %tmp60 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !235
  %arrayidx44 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp60, i64 %net.0, !dbg !235
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx44, i32 0, i32 1, !dbg !236
  store i64 %constraint.0.lcssa, i64* %netsAbove, align 8, !dbg !237
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !151, metadata !143), !dbg !152
  %tmp61 = load %struct._constraintVCGType*, %struct._constraintVCGType** @storageVCG, align 8, !dbg !238
  %tmp63 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !239
  %arrayidx45 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp63, i64 %net.0, !dbg !239
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx45, i32 0, i32 4, !dbg !240
  store %struct._constraintVCGType* %tmp61, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !241
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !158, metadata !143), !dbg !159
  br label %for.cond.46, !dbg !242

for.cond.46:                                      ; preds = %for.inc.101, %for.end.43
  %constraint.3 = phi i64 [ 0, %for.end.43 ], [ %constraint.5, %for.inc.101 ]
  %col.1 = phi i64 [ 1, %for.end.43 ], [ %inc102, %for.inc.101 ]
  %tmp65 = load i64, i64* @channelColumns, align 8, !dbg !244
  %cmp47 = icmp ule i64 %col.1, %tmp65, !dbg !246
  br i1 %cmp47, label %for.body.48, label %for.end.103, !dbg !247

for.body.48:                                      ; preds = %for.cond.46
  %tmp67 = load i64*, i64** @BOT, align 8, !dbg !248
  %arrayidx49 = getelementptr inbounds i64, i64* %tmp67, i64 %col.1, !dbg !248
  %tmp68 = load i64, i64* %arrayidx49, align 8, !dbg !248
  %cmp50 = icmp eq i64 %tmp68, %net.0, !dbg !251
  br i1 %cmp50, label %land.lhs.true.51, label %if.end.100, !dbg !252

land.lhs.true.51:                                 ; preds = %for.body.48
  %tmp71 = load i64*, i64** @TOP, align 8, !dbg !253
  %arrayidx52 = getelementptr inbounds i64, i64* %tmp71, i64 %col.1, !dbg !253
  %tmp72 = load i64, i64* %arrayidx52, align 8, !dbg !253
  %cmp53 = icmp ne i64 %tmp72, %net.0, !dbg !254
  br i1 %cmp53, label %land.lhs.true.54, label %if.end.100, !dbg !255

land.lhs.true.54:                                 ; preds = %land.lhs.true.51
  %tmp75 = load i64*, i64** @TOP, align 8, !dbg !256
  %arrayidx55 = getelementptr inbounds i64, i64* %tmp75, i64 %col.1, !dbg !256
  %tmp76 = load i64, i64* %arrayidx55, align 8, !dbg !256
  %cmp56 = icmp ne i64 %tmp76, 0, !dbg !257
  br i1 %cmp56, label %if.then.57, label %if.end.100, !dbg !258

if.then.57:                                       ; preds = %land.lhs.true.54
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !177, metadata !143), !dbg !178
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !179, metadata !143), !dbg !180
  br label %for.cond.58, !dbg !259

for.cond.58:                                      ; preds = %for.inc.69, %if.then.57
  %check.1 = phi i64 [ 0, %if.then.57 ], [ %inc70, %for.inc.69 ]
  %cmp59 = icmp ult i64 %check.1, %constraint.3, !dbg !262
  br i1 %cmp59, label %for.body.60, label %for.end.71.loopexit, !dbg !264

for.body.60:                                      ; preds = %for.cond.58
  %tmp81 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !265
  %arrayidx61 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp81, i64 %net.0, !dbg !265
  %netsBelowHook62 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx61, i32 0, i32 4, !dbg !268
  %tmp82 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook62, align 8, !dbg !268
  %arrayidx63 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp82, i64 %check.1, !dbg !265
  %top64 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx63, i32 0, i32 0, !dbg !269
  %tmp83 = load i64, i64* %top64, align 8, !dbg !269
  %tmp85 = load i64*, i64** @TOP, align 8, !dbg !270
  %arrayidx65 = getelementptr inbounds i64, i64* %tmp85, i64 %col.1, !dbg !270
  %tmp86 = load i64, i64* %arrayidx65, align 8, !dbg !270
  %cmp66 = icmp eq i64 %tmp83, %tmp86, !dbg !271
  br i1 %cmp66, label %if.then.67, label %if.end.68, !dbg !272

if.then.67:                                       ; preds = %for.body.60
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !177, metadata !143), !dbg !178
  br label %for.end.71, !dbg !273

if.end.68:                                        ; preds = %for.body.60
  br label %for.inc.69, !dbg !275

for.inc.69:                                       ; preds = %if.end.68
  %inc70 = add i64 %check.1, 1, !dbg !276
  call void @llvm.dbg.value(metadata i64 %inc70, i64 0, metadata !179, metadata !143), !dbg !180
  br label %for.cond.58, !dbg !277

for.end.71.loopexit:                              ; preds = %for.cond.58
  br label %for.end.71, !dbg !278

for.end.71:                                       ; preds = %for.end.71.loopexit, %if.then.67
  %add.1 = phi i64 [ 0, %if.then.67 ], [ 1, %for.end.71.loopexit ]
  %tobool72 = icmp ne i64 %add.1, 0, !dbg !278
  br i1 %tobool72, label %if.then.73, label %if.end.99, !dbg !280

if.then.73:                                       ; preds = %for.end.71
  %tmp89 = load i64, i64* @storageLimitVCG, align 8, !dbg !281
  %cmp74 = icmp ugt i64 %tmp89, 0, !dbg !281
  br i1 %cmp74, label %cond.true.75, label %cond.false.76, !dbg !281

cond.true.75:                                     ; preds = %if.then.73
  br label %cond.end.77, !dbg !283

cond.false.76:                                    ; preds = %if.then.73
  call void @__assert_fail(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 122, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__PRETTY_FUNCTION__.BuildVCG, i32 0, i32 0)) #6, !dbg !285
  unreachable, !dbg !285

bb90:                                             ; No predecessors!
  unreachable

cond.end.77:                                      ; preds = %cond.true.75
  %tmp92 = load i64*, i64** @TOP, align 8, !dbg !287
  %arrayidx78 = getelementptr inbounds i64, i64* %tmp92, i64 %col.1, !dbg !287
  %tmp93 = load i64, i64* %arrayidx78, align 8, !dbg !287
  %tmp96 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !288
  %arrayidx79 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp96, i64 %net.0, !dbg !288
  %netsBelowHook80 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx79, i32 0, i32 4, !dbg !289
  %tmp97 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook80, align 8, !dbg !289
  %arrayidx81 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp97, i64 %constraint.3, !dbg !288
  %top82 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx81, i32 0, i32 0, !dbg !290
  store i64 %tmp93, i64* %top82, align 8, !dbg !291
  %tmp99 = load i64*, i64** @BOT, align 8, !dbg !292
  %arrayidx83 = getelementptr inbounds i64, i64* %tmp99, i64 %col.1, !dbg !292
  %tmp100 = load i64, i64* %arrayidx83, align 8, !dbg !292
  %tmp103 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !293
  %arrayidx84 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp103, i64 %net.0, !dbg !293
  %netsBelowHook85 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx84, i32 0, i32 4, !dbg !294
  %tmp104 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook85, align 8, !dbg !294
  %arrayidx86 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp104, i64 %constraint.3, !dbg !293
  %bot87 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx86, i32 0, i32 1, !dbg !295
  store i64 %tmp100, i64* %bot87, align 8, !dbg !296
  %tmp108 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !297
  %arrayidx88 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp108, i64 %net.0, !dbg !297
  %netsBelowHook89 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx88, i32 0, i32 4, !dbg !298
  %tmp109 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook89, align 8, !dbg !298
  %arrayidx90 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp109, i64 %constraint.3, !dbg !297
  %col91 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx90, i32 0, i32 2, !dbg !299
  store i64 %col.1, i64* %col91, align 8, !dbg !300
  %tmp112 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !301
  %arrayidx92 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp112, i64 %net.0, !dbg !301
  %netsBelowHook93 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx92, i32 0, i32 4, !dbg !302
  %tmp113 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook93, align 8, !dbg !302
  %arrayidx94 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp113, i64 %constraint.3, !dbg !301
  %removed95 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx94, i32 0, i32 3, !dbg !303
  store i64 0, i64* %removed95, align 8, !dbg !304
  %tmp114 = load %struct._constraintVCGType*, %struct._constraintVCGType** @storageVCG, align 8, !dbg !305
  %incdec.ptr96 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp114, i32 1, !dbg !305
  store %struct._constraintVCGType* %incdec.ptr96, %struct._constraintVCGType** @storageVCG, align 8, !dbg !305
  %tmp115 = load i64, i64* @storageLimitVCG, align 8, !dbg !306
  %dec97 = add i64 %tmp115, -1, !dbg !306
  store i64 %dec97, i64* @storageLimitVCG, align 8, !dbg !306
  %inc98 = add i64 %constraint.3, 1, !dbg !307
  call void @llvm.dbg.value(metadata i64 %inc98, i64 0, metadata !151, metadata !143), !dbg !152
  br label %if.end.99, !dbg !308

if.end.99:                                        ; preds = %cond.end.77, %for.end.71
  %constraint.4 = phi i64 [ %inc98, %cond.end.77 ], [ %constraint.3, %for.end.71 ]
  br label %if.end.100, !dbg !309

if.end.100:                                       ; preds = %if.end.99, %land.lhs.true.54, %land.lhs.true.51, %for.body.48
  %constraint.5 = phi i64 [ %constraint.4, %if.end.99 ], [ %constraint.3, %land.lhs.true.54 ], [ %constraint.3, %land.lhs.true.51 ], [ %constraint.3, %for.body.48 ]
  br label %for.inc.101, !dbg !310

for.inc.101:                                      ; preds = %if.end.100
  %inc102 = add i64 %col.1, 1, !dbg !311
  call void @llvm.dbg.value(metadata i64 %inc102, i64 0, metadata !158, metadata !143), !dbg !159
  br label %for.cond.46, !dbg !312

for.end.103:                                      ; preds = %for.cond.46
  %constraint.3.lcssa = phi i64 [ %constraint.3, %for.cond.46 ]
  %tmp120 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !313
  %arrayidx104 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp120, i64 %net.0, !dbg !313
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx104, i32 0, i32 5, !dbg !314
  store i64 %constraint.3.lcssa, i64* %netsBelow, align 8, !dbg !315
  br label %for.inc.105, !dbg !316

for.inc.105:                                      ; preds = %for.end.103
  %inc106 = add i64 %net.0, 1, !dbg !317
  call void @llvm.dbg.value(metadata i64 %inc106, i64 0, metadata !142, metadata !143), !dbg !144
  br label %for.cond, !dbg !318

for.end.107:                                      ; preds = %for.cond
  ret void, !dbg !319
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #3

; Function Attrs: nounwind uwtable
define void @DFSClearVCG(%struct._nodeVCGType* %VCG) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !320, metadata !143), !dbg !321
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !322, metadata !143), !dbg !323
  br label %for.cond, !dbg !324

for.cond:                                         ; preds = %for.inc, %entry
  %net.0 = phi i64 [ 1, %entry ], [ %inc, %for.inc ]
  %tmp1 = load i64, i64* @channelNets, align 8, !dbg !326
  %cmp = icmp ule i64 %net.0, %tmp1, !dbg !328
  br i1 %cmp, label %for.body, label %for.end, !dbg !329

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !330
  %netsAboveLabel = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 2, !dbg !332
  store i64 0, i64* %netsAboveLabel, align 8, !dbg !333
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !334
  %netsAboveReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 3, !dbg !335
  store i64 0, i64* %netsAboveReached, align 8, !dbg !336
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !337
  %netsBelowLabel = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 6, !dbg !338
  store i64 0, i64* %netsBelowLabel, align 8, !dbg !339
  %arrayidx3 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !340
  %netsBelowReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx3, i32 0, i32 7, !dbg !341
  store i64 0, i64* %netsBelowReached, align 8, !dbg !342
  br label %for.inc, !dbg !343

for.inc:                                          ; preds = %for.body
  %inc = add i64 %net.0, 1, !dbg !344
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !322, metadata !143), !dbg !323
  br label %for.cond, !dbg !345

for.end:                                          ; preds = %for.cond
  ret void, !dbg !346
}

; Function Attrs: nounwind uwtable
define void @DumpVCG(%struct._nodeVCGType* %VCG) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !347, metadata !143), !dbg !348
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !349, metadata !143), !dbg !350
  br label %for.cond, !dbg !351

for.cond:                                         ; preds = %for.inc.44, %entry
  %net.0 = phi i64 [ 1, %entry ], [ %inc45, %for.inc.44 ]
  %tmp1 = load i64, i64* @channelNets, align 8, !dbg !353
  %cmp = icmp ule i64 %net.0, %tmp1, !dbg !355
  br i1 %cmp, label %for.body, label %for.end.46, !dbg !356

for.body:                                         ; preds = %for.cond
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i64 %net.0), !dbg !357
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0)), !dbg !359
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !360, metadata !143), !dbg !361
  br label %for.cond.2, !dbg !362

for.cond.2:                                       ; preds = %for.inc, %for.body
  %which.0 = phi i64 [ 0, %for.body ], [ %inc, %for.inc ]
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !364
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 1, !dbg !366
  %tmp6 = load i64, i64* %netsAbove, align 8, !dbg !366
  %cmp3 = icmp ult i64 %which.0, %tmp6, !dbg !367
  br i1 %cmp3, label %for.body.4, label %for.end, !dbg !368

for.body.4:                                       ; preds = %for.cond.2
  %arrayidx5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !369
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx5, i32 0, i32 0, !dbg !372
  %tmp10 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !372
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp10, i64 %which.0, !dbg !369
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 3, !dbg !373
  %tmp11 = load i64, i64* %removed, align 8, !dbg !373
  %tobool = icmp ne i64 %tmp11, 0, !dbg !369
  br i1 %tobool, label %if.end, label %if.then, !dbg !374

if.then:                                          ; preds = %for.body.4
  %arrayidx7 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !375
  %netsAboveHook8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx7, i32 0, i32 0, !dbg !375
  %tmp15 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook8, align 8, !dbg !375
  %arrayidx9 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp15, i64 %which.0, !dbg !375
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx9, i32 0, i32 0, !dbg !375
  %tmp16 = load i64, i64* %top, align 8, !dbg !375
  %cmp10 = icmp eq i64 %tmp16, %net.0, !dbg !375
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !375

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !377

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 157, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.DumpVCG, i32 0, i32 0)) #6, !dbg !379
  unreachable, !dbg !379

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !381
  %netsAboveHook12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 0, !dbg !382
  %tmp21 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook12, align 8, !dbg !382
  %arrayidx13 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp21, i64 %which.0, !dbg !381
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx13, i32 0, i32 1, !dbg !383
  %tmp22 = load i64, i64* %bot, align 8, !dbg !383
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i64 %tmp22), !dbg !384
  br label %if.end, !dbg !385

if.end:                                           ; preds = %cond.end, %for.body.4
  br label %for.inc, !dbg !386

for.inc:                                          ; preds = %if.end
  %inc = add i64 %which.0, 1, !dbg !387
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !360, metadata !143), !dbg !361
  br label %for.cond.2, !dbg !388

for.end:                                          ; preds = %for.cond.2
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !389
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0)), !dbg !390
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !360, metadata !143), !dbg !361
  br label %for.cond.17, !dbg !391

for.cond.17:                                      ; preds = %for.inc.40, %for.end
  %which.1 = phi i64 [ 0, %for.end ], [ %inc41, %for.inc.40 ]
  %arrayidx18 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !393
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx18, i32 0, i32 5, !dbg !395
  %tmp27 = load i64, i64* %netsBelow, align 8, !dbg !395
  %cmp19 = icmp ult i64 %which.1, %tmp27, !dbg !396
  br i1 %cmp19, label %for.body.20, label %for.end.42, !dbg !397

for.body.20:                                      ; preds = %for.cond.17
  %arrayidx21 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !398
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx21, i32 0, i32 4, !dbg !401
  %tmp31 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !401
  %arrayidx22 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp31, i64 %which.1, !dbg !398
  %removed23 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx22, i32 0, i32 3, !dbg !402
  %tmp32 = load i64, i64* %removed23, align 8, !dbg !402
  %tobool24 = icmp ne i64 %tmp32, 0, !dbg !398
  br i1 %tobool24, label %if.end.39, label %if.then.25, !dbg !403

if.then.25:                                       ; preds = %for.body.20
  %arrayidx26 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !404
  %netsBelowHook27 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx26, i32 0, i32 4, !dbg !404
  %tmp36 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook27, align 8, !dbg !404
  %arrayidx28 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp36, i64 %which.1, !dbg !404
  %bot29 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx28, i32 0, i32 1, !dbg !404
  %tmp37 = load i64, i64* %bot29, align 8, !dbg !404
  %cmp30 = icmp eq i64 %tmp37, %net.0, !dbg !404
  br i1 %cmp30, label %cond.true.31, label %cond.false.32, !dbg !404

cond.true.31:                                     ; preds = %if.then.25
  br label %cond.end.33, !dbg !406

cond.false.32:                                    ; preds = %if.then.25
  call void @__assert_fail(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 166, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__PRETTY_FUNCTION__.DumpVCG, i32 0, i32 0)) #6, !dbg !408
  unreachable, !dbg !408

bb39:                                             ; No predecessors!
  unreachable

cond.end.33:                                      ; preds = %cond.true.31
  %arrayidx34 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !410
  %netsBelowHook35 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx34, i32 0, i32 4, !dbg !411
  %tmp43 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook35, align 8, !dbg !411
  %arrayidx36 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp43, i64 %which.1, !dbg !410
  %top37 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx36, i32 0, i32 0, !dbg !412
  %tmp44 = load i64, i64* %top37, align 8, !dbg !412
  %call38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i64 %tmp44), !dbg !413
  br label %if.end.39, !dbg !414

if.end.39:                                        ; preds = %cond.end.33, %for.body.20
  br label %for.inc.40, !dbg !415

for.inc.40:                                       ; preds = %if.end.39
  %inc41 = add i64 %which.1, 1, !dbg !416
  call void @llvm.dbg.value(metadata i64 %inc41, i64 0, metadata !360, metadata !143), !dbg !361
  br label %for.cond.17, !dbg !417

for.end.42:                                       ; preds = %for.cond.17
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0)), !dbg !418
  br label %for.inc.44, !dbg !419

for.inc.44:                                       ; preds = %for.end.42
  %inc45 = add i64 %net.0, 1, !dbg !420
  call void @llvm.dbg.value(metadata i64 %inc45, i64 0, metadata !349, metadata !143), !dbg !350
  br label %for.cond, !dbg !421

for.end.46:                                       ; preds = %for.cond
  ret void, !dbg !422
}

declare i32 @printf(i8*, ...) #4

; Function Attrs: nounwind uwtable
define void @DFSAboveVCG(%struct._nodeVCGType* %VCG, i64 %net) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !423, metadata !143), !dbg !424
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !425, metadata !143), !dbg !426
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !427
  %netsAboveReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 3, !dbg !428
  store i64 1, i64* %netsAboveReached, align 8, !dbg !429
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !430, metadata !143), !dbg !431
  br label %for.cond, !dbg !432

for.cond:                                         ; preds = %for.inc, %entry
  %s.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ]
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !434
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 1, !dbg !436
  %tmp5 = load i64, i64* %netsAbove, align 8, !dbg !436
  %cmp = icmp ult i64 %s.0, %tmp5, !dbg !437
  br i1 %cmp, label %for.body, label %for.end, !dbg !438

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !439
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 0, !dbg !442
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !442
  %arrayidx3 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %s.0, !dbg !439
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx3, i32 0, i32 3, !dbg !443
  %tmp10 = load i64, i64* %removed, align 8, !dbg !443
  %tobool = icmp ne i64 %tmp10, 0, !dbg !439
  br i1 %tobool, label %if.end.15, label %if.then, !dbg !444

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !445
  %netsAboveHook5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 0, !dbg !445
  %tmp14 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook5, align 8, !dbg !445
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp14, i64 %s.0, !dbg !445
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 0, !dbg !445
  %tmp15 = load i64, i64* %top, align 8, !dbg !445
  %cmp7 = icmp eq i64 %tmp15, %net, !dbg !445
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !445

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !447

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.DFSAboveVCG, i32 0, i32 0)) #6, !dbg !449
  unreachable, !dbg !449

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !451
  %netsAboveHook9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx8, i32 0, i32 0, !dbg !452
  %tmp20 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook9, align 8, !dbg !452
  %arrayidx10 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp20, i64 %s.0, !dbg !451
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx10, i32 0, i32 1, !dbg !453
  %tmp21 = load i64, i64* %bot, align 8, !dbg !453
  call void @llvm.dbg.value(metadata i64 %tmp21, i64 0, metadata !454, metadata !143), !dbg !455
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp21, !dbg !456
  %netsAboveReached12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 3, !dbg !458
  %tmp24 = load i64, i64* %netsAboveReached12, align 8, !dbg !458
  %tobool13 = icmp ne i64 %tmp24, 0, !dbg !456
  br i1 %tobool13, label %if.end, label %if.then.14, !dbg !459

if.then.14:                                       ; preds = %cond.end
  call void @DFSAboveVCG(%struct._nodeVCGType* %VCG, i64 %tmp21), !dbg !460
  br label %if.end, !dbg !462

if.end:                                           ; preds = %if.then.14, %cond.end
  br label %if.end.15, !dbg !463

if.end.15:                                        ; preds = %if.end, %for.body
  br label %for.inc, !dbg !464

for.inc:                                          ; preds = %if.end.15
  %inc = add i64 %s.0, 1, !dbg !465
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !430, metadata !143), !dbg !431
  br label %for.cond, !dbg !466

for.end:                                          ; preds = %for.cond
  ret void, !dbg !467
}

; Function Attrs: nounwind uwtable
define void @DFSBelowVCG(%struct._nodeVCGType* %VCG, i64 %net) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !468, metadata !143), !dbg !469
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !470, metadata !143), !dbg !471
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !472
  %netsBelowReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 7, !dbg !473
  store i64 1, i64* %netsBelowReached, align 8, !dbg !474
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !475, metadata !143), !dbg !476
  br label %for.cond, !dbg !477

for.cond:                                         ; preds = %for.inc, %entry
  %s.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ]
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !479
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 5, !dbg !481
  %tmp5 = load i64, i64* %netsBelow, align 8, !dbg !481
  %cmp = icmp ult i64 %s.0, %tmp5, !dbg !482
  br i1 %cmp, label %for.body, label %for.end, !dbg !483

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !484
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 4, !dbg !487
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !487
  %arrayidx3 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %s.0, !dbg !484
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx3, i32 0, i32 3, !dbg !488
  %tmp10 = load i64, i64* %removed, align 8, !dbg !488
  %tobool = icmp ne i64 %tmp10, 0, !dbg !484
  br i1 %tobool, label %if.end.15, label %if.then, !dbg !489

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !490
  %netsBelowHook5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 4, !dbg !490
  %tmp14 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook5, align 8, !dbg !490
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp14, i64 %s.0, !dbg !490
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 1, !dbg !490
  %tmp15 = load i64, i64* %bot, align 8, !dbg !490
  %cmp7 = icmp eq i64 %tmp15, %net, !dbg !490
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !490

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !492

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 199, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.DFSBelowVCG, i32 0, i32 0)) #6, !dbg !494
  unreachable, !dbg !494

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !496
  %netsBelowHook9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx8, i32 0, i32 4, !dbg !497
  %tmp20 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook9, align 8, !dbg !497
  %arrayidx10 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp20, i64 %s.0, !dbg !496
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx10, i32 0, i32 0, !dbg !498
  %tmp21 = load i64, i64* %top, align 8, !dbg !498
  call void @llvm.dbg.value(metadata i64 %tmp21, i64 0, metadata !499, metadata !143), !dbg !500
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp21, !dbg !501
  %netsBelowReached12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 7, !dbg !503
  %tmp24 = load i64, i64* %netsBelowReached12, align 8, !dbg !503
  %tobool13 = icmp ne i64 %tmp24, 0, !dbg !501
  br i1 %tobool13, label %if.end, label %if.then.14, !dbg !504

if.then.14:                                       ; preds = %cond.end
  call void @DFSBelowVCG(%struct._nodeVCGType* %VCG, i64 %tmp21), !dbg !505
  br label %if.end, !dbg !507

if.end:                                           ; preds = %if.then.14, %cond.end
  br label %if.end.15, !dbg !508

if.end.15:                                        ; preds = %if.end, %for.body
  br label %for.inc, !dbg !509

for.inc:                                          ; preds = %if.end.15
  %inc = add i64 %s.0, 1, !dbg !510
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !475, metadata !143), !dbg !476
  br label %for.cond, !dbg !511

for.end:                                          ; preds = %for.cond
  ret void, !dbg !512
}

; Function Attrs: nounwind uwtable
define void @SCCofVCG(%struct._nodeVCGType* %VCG, i64* %SCC, i64* %perSCC) #0 {
entry:
  %label = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !513, metadata !143), !dbg !514
  call void @llvm.dbg.value(metadata i64* %SCC, i64 0, metadata !515, metadata !143), !dbg !516
  call void @llvm.dbg.value(metadata i64* %perSCC, i64 0, metadata !517, metadata !143), !dbg !518
  call void @llvm.dbg.declare(metadata i64* %label, metadata !519, metadata !143), !dbg !520
  store i64 0, i64* %label, align 8, !dbg !521
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond, !dbg !524

for.cond:                                         ; preds = %for.inc, %entry
  %net.0 = phi i64 [ 1, %entry ], [ %inc, %for.inc ]
  %tmp1 = load i64, i64* @channelNets, align 8, !dbg !526
  %cmp = icmp ule i64 %net.0, %tmp1, !dbg !528
  br i1 %cmp, label %for.body, label %for.end, !dbg !529

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !530
  %netsAboveReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 3, !dbg !533
  %tmp4 = load i64, i64* %netsAboveReached, align 8, !dbg !533
  %tobool = icmp ne i64 %tmp4, 0, !dbg !530
  br i1 %tobool, label %if.end, label %if.then, !dbg !534

if.then:                                          ; preds = %for.body
  call void @SCC_DFSAboveVCG(%struct._nodeVCGType* %VCG, i64 %net.0, i64* %label), !dbg !535
  br label %if.end, !dbg !537

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !538

for.inc:                                          ; preds = %if.end
  %inc = add i64 %net.0, 1, !dbg !539
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond, !dbg !540

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !541, metadata !143), !dbg !542
  br label %do.body, !dbg !543

do.body:                                          ; preds = %do.cond, %for.end
  %which.0 = phi i64 [ 0, %for.end ], [ %which.1, %do.cond ]
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !544, metadata !143), !dbg !545
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !546, metadata !143), !dbg !547
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !548, metadata !143), !dbg !549
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond.1, !dbg !550

for.cond.1:                                       ; preds = %for.inc.17, %do.body
  %net.1 = phi i64 [ 1, %do.body ], [ %inc18, %for.inc.17 ]
  %choose.0 = phi i64 [ 0, %do.body ], [ %choose.2, %for.inc.17 ]
  %large.0 = phi i64 [ 0, %do.body ], [ %large.2, %for.inc.17 ]
  %done.0 = phi i64 [ 1, %do.body ], [ %done.2, %for.inc.17 ]
  %tmp9 = load i64, i64* @channelNets, align 8, !dbg !553
  %cmp2 = icmp ule i64 %net.1, %tmp9, !dbg !555
  br i1 %cmp2, label %for.body.3, label %for.end.19, !dbg !556

for.body.3:                                       ; preds = %for.cond.1
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.1, !dbg !557
  %netsBelowReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 7, !dbg !560
  %tmp12 = load i64, i64* %netsBelowReached, align 8, !dbg !560
  %tobool5 = icmp ne i64 %tmp12, 0, !dbg !557
  br i1 %tobool5, label %if.end.16, label %if.then.6, !dbg !561

if.then.6:                                        ; preds = %for.body.3
  %arrayidx7 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.1, !dbg !562
  %netsAboveLabel = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx7, i32 0, i32 2, !dbg !562
  %tmp15 = load i64, i64* %netsAboveLabel, align 8, !dbg !562
  %cmp8 = icmp ugt i64 %tmp15, 0, !dbg !562
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !562

cond.true:                                        ; preds = %if.then.6
  br label %cond.end, !dbg !564

cond.false:                                       ; preds = %if.then.6
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 245, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__.SCCofVCG, i32 0, i32 0)) #6, !dbg !566
  unreachable, !dbg !566

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.1, !dbg !568
  %netsAboveLabel10 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx9, i32 0, i32 2, !dbg !570
  %tmp18 = load i64, i64* %netsAboveLabel10, align 8, !dbg !570
  %cmp11 = icmp ugt i64 %tmp18, %large.0, !dbg !571
  br i1 %cmp11, label %if.then.12, label %if.end.15, !dbg !572

if.then.12:                                       ; preds = %cond.end
  call void @llvm.dbg.value(metadata i64 %net.1, i64 0, metadata !546, metadata !143), !dbg !547
  %arrayidx13 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.1, !dbg !573
  %netsAboveLabel14 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx13, i32 0, i32 2, !dbg !575
  %tmp23 = load i64, i64* %netsAboveLabel14, align 8, !dbg !575
  call void @llvm.dbg.value(metadata i64 %tmp23, i64 0, metadata !548, metadata !143), !dbg !549
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !544, metadata !143), !dbg !545
  br label %if.end.15, !dbg !576

if.end.15:                                        ; preds = %if.then.12, %cond.end
  %choose.1 = phi i64 [ %net.1, %if.then.12 ], [ %choose.0, %cond.end ]
  %large.1 = phi i64 [ %tmp23, %if.then.12 ], [ %large.0, %cond.end ]
  %done.1 = phi i64 [ 0, %if.then.12 ], [ %done.0, %cond.end ]
  br label %if.end.16, !dbg !577

if.end.16:                                        ; preds = %if.end.15, %for.body.3
  %choose.2 = phi i64 [ %choose.0, %for.body.3 ], [ %choose.1, %if.end.15 ]
  %large.2 = phi i64 [ %large.0, %for.body.3 ], [ %large.1, %if.end.15 ]
  %done.2 = phi i64 [ %done.0, %for.body.3 ], [ %done.1, %if.end.15 ]
  br label %for.inc.17, !dbg !578

for.inc.17:                                       ; preds = %if.end.16
  %inc18 = add i64 %net.1, 1, !dbg !579
  call void @llvm.dbg.value(metadata i64 %inc18, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond.1, !dbg !580

for.end.19:                                       ; preds = %for.cond.1
  %done.0.lcssa = phi i64 [ %done.0, %for.cond.1 ]
  %choose.0.lcssa = phi i64 [ %choose.0, %for.cond.1 ]
  %tobool20 = icmp ne i64 %done.0.lcssa, 0, !dbg !581
  br i1 %tobool20, label %if.end.23, label %if.then.21, !dbg !583

if.then.21:                                       ; preds = %for.end.19
  %inc22 = add i64 %which.0, 1, !dbg !584
  call void @llvm.dbg.value(metadata i64 %inc22, i64 0, metadata !541, metadata !143), !dbg !542
  call void @SCC_DFSBelowVCG(%struct._nodeVCGType* %VCG, i64 %choose.0.lcssa, i64 %inc22), !dbg !586
  br label %if.end.23, !dbg !587

if.end.23:                                        ; preds = %if.then.21, %for.end.19
  %which.1 = phi i64 [ %which.0, %for.end.19 ], [ %inc22, %if.then.21 ]
  br label %do.cond, !dbg !588

do.cond:                                          ; preds = %if.end.23
  %tobool24 = icmp ne i64 %done.0.lcssa, 0, !dbg !589
  %lnot = xor i1 %tobool24, true, !dbg !589
  br i1 %lnot, label %do.body, label %do.end, !dbg !588

do.end:                                           ; preds = %do.cond
  store i64 0, i64* @totalSCC, align 8, !dbg !590
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond.25, !dbg !591

for.cond.25:                                      ; preds = %for.inc.35, %do.end
  %net.2 = phi i64 [ 1, %do.end ], [ %inc36, %for.inc.35 ]
  %tmp32 = load i64, i64* @channelNets, align 8, !dbg !593
  %cmp26 = icmp ule i64 %net.2, %tmp32, !dbg !595
  br i1 %cmp26, label %for.body.27, label %for.end.37, !dbg !596

for.body.27:                                      ; preds = %for.cond.25
  %arrayidx28 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.2, !dbg !597
  %netsBelowLabel = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx28, i32 0, i32 6, !dbg !599
  %tmp35 = load i64, i64* %netsBelowLabel, align 8, !dbg !599
  %arrayidx29 = getelementptr inbounds i64, i64* %SCC, i64 %net.2, !dbg !600
  store i64 %tmp35, i64* %arrayidx29, align 8, !dbg !601
  %arrayidx30 = getelementptr inbounds i64, i64* %SCC, i64 %net.2, !dbg !602
  %tmp40 = load i64, i64* %arrayidx30, align 8, !dbg !602
  %tmp41 = load i64, i64* @totalSCC, align 8, !dbg !604
  %cmp31 = icmp ugt i64 %tmp40, %tmp41, !dbg !605
  br i1 %cmp31, label %if.then.32, label %if.end.34, !dbg !606

if.then.32:                                       ; preds = %for.body.27
  %arrayidx33 = getelementptr inbounds i64, i64* %SCC, i64 %net.2, !dbg !607
  %tmp44 = load i64, i64* %arrayidx33, align 8, !dbg !607
  store i64 %tmp44, i64* @totalSCC, align 8, !dbg !609
  br label %if.end.34, !dbg !610

if.end.34:                                        ; preds = %if.then.32, %for.body.27
  br label %for.inc.35, !dbg !611

for.inc.35:                                       ; preds = %if.end.34
  %inc36 = add i64 %net.2, 1, !dbg !612
  call void @llvm.dbg.value(metadata i64 %inc36, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond.25, !dbg !613

for.end.37:                                       ; preds = %for.cond.25
  %tmp46 = load i64, i64* @totalSCC, align 8, !dbg !614
  %cmp38 = icmp ugt i64 %tmp46, 0, !dbg !614
  br i1 %cmp38, label %cond.true.39, label %cond.false.40, !dbg !614

cond.true.39:                                     ; preds = %for.end.37
  br label %cond.end.41, !dbg !615

cond.false.40:                                    ; preds = %for.end.37
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 273, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__PRETTY_FUNCTION__.SCCofVCG, i32 0, i32 0)) #6, !dbg !617
  unreachable, !dbg !617

bb47:                                             ; No predecessors!
  br label %cond.end.41, !dbg !614

cond.end.41:                                      ; preds = %bb47, %cond.true.39
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !619, metadata !143), !dbg !620
  br label %for.cond.42, !dbg !621

for.cond.42:                                      ; preds = %for.inc.57, %cond.end.41
  %scc.0 = phi i64 [ 1, %cond.end.41 ], [ %inc58, %for.inc.57 ]
  %tmp49 = load i64, i64* @totalSCC, align 8, !dbg !623
  %cmp43 = icmp ule i64 %scc.0, %tmp49, !dbg !625
  br i1 %cmp43, label %for.body.44, label %for.end.59, !dbg !626

for.body.44:                                      ; preds = %for.cond.42
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !627, metadata !143), !dbg !628
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond.45, !dbg !629

for.cond.45:                                      ; preds = %for.inc.53, %for.body.44
  %per.0 = phi i64 [ 0, %for.body.44 ], [ %per.1, %for.inc.53 ]
  %net.3 = phi i64 [ 1, %for.body.44 ], [ %inc54, %for.inc.53 ]
  %tmp51 = load i64, i64* @channelNets, align 8, !dbg !632
  %cmp46 = icmp ule i64 %net.3, %tmp51, !dbg !634
  br i1 %cmp46, label %for.body.47, label %for.end.55, !dbg !635

for.body.47:                                      ; preds = %for.cond.45
  %arrayidx48 = getelementptr inbounds i64, i64* %SCC, i64 %net.3, !dbg !636
  %tmp54 = load i64, i64* %arrayidx48, align 8, !dbg !636
  %cmp49 = icmp eq i64 %tmp54, %scc.0, !dbg !639
  br i1 %cmp49, label %if.then.50, label %if.end.52, !dbg !640

if.then.50:                                       ; preds = %for.body.47
  %inc51 = add i64 %per.0, 1, !dbg !641
  call void @llvm.dbg.value(metadata i64 %inc51, i64 0, metadata !627, metadata !143), !dbg !628
  br label %if.end.52, !dbg !643

if.end.52:                                        ; preds = %if.then.50, %for.body.47
  %per.1 = phi i64 [ %inc51, %if.then.50 ], [ %per.0, %for.body.47 ]
  br label %for.inc.53, !dbg !644

for.inc.53:                                       ; preds = %if.end.52
  %inc54 = add i64 %net.3, 1, !dbg !645
  call void @llvm.dbg.value(metadata i64 %inc54, i64 0, metadata !522, metadata !143), !dbg !523
  br label %for.cond.45, !dbg !646

for.end.55:                                       ; preds = %for.cond.45
  %per.0.lcssa = phi i64 [ %per.0, %for.cond.45 ]
  %arrayidx56 = getelementptr inbounds i64, i64* %perSCC, i64 %scc.0, !dbg !647
  store i64 %per.0.lcssa, i64* %arrayidx56, align 8, !dbg !648
  br label %for.inc.57, !dbg !649

for.inc.57:                                       ; preds = %for.end.55
  %inc58 = add i64 %scc.0, 1, !dbg !650
  call void @llvm.dbg.value(metadata i64 %inc58, i64 0, metadata !619, metadata !143), !dbg !620
  br label %for.cond.42, !dbg !651

for.end.59:                                       ; preds = %for.cond.42
  ret void, !dbg !652
}

; Function Attrs: nounwind uwtable
define void @SCC_DFSAboveVCG(%struct._nodeVCGType* %VCG, i64 %net, i64* %label) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !653, metadata !143), !dbg !654
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !655, metadata !143), !dbg !656
  call void @llvm.dbg.value(metadata i64* %label, i64 0, metadata !657, metadata !143), !dbg !658
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !659
  %netsAboveReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 3, !dbg !660
  store i64 1, i64* %netsAboveReached, align 8, !dbg !661
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !662, metadata !143), !dbg !663
  br label %for.cond, !dbg !664

for.cond:                                         ; preds = %for.inc, %entry
  %s.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ]
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !666
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 1, !dbg !668
  %tmp5 = load i64, i64* %netsAbove, align 8, !dbg !668
  %cmp = icmp ult i64 %s.0, %tmp5, !dbg !669
  br i1 %cmp, label %for.body, label %for.end, !dbg !670

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !671
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 0, !dbg !674
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !674
  %arrayidx3 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %s.0, !dbg !671
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx3, i32 0, i32 3, !dbg !675
  %tmp10 = load i64, i64* %removed, align 8, !dbg !675
  %tobool = icmp ne i64 %tmp10, 0, !dbg !671
  br i1 %tobool, label %if.end.15, label %if.then, !dbg !676

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !677
  %netsAboveHook5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 0, !dbg !677
  %tmp14 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook5, align 8, !dbg !677
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp14, i64 %s.0, !dbg !677
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 0, !dbg !677
  %tmp15 = load i64, i64* %top, align 8, !dbg !677
  %cmp7 = icmp eq i64 %tmp15, %net, !dbg !677
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !677

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !679

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 294, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__.SCC_DFSAboveVCG, i32 0, i32 0)) #6, !dbg !681
  unreachable, !dbg !681

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !683
  %netsAboveHook9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx8, i32 0, i32 0, !dbg !684
  %tmp20 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook9, align 8, !dbg !684
  %arrayidx10 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp20, i64 %s.0, !dbg !683
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx10, i32 0, i32 1, !dbg !685
  %tmp21 = load i64, i64* %bot, align 8, !dbg !685
  call void @llvm.dbg.value(metadata i64 %tmp21, i64 0, metadata !686, metadata !143), !dbg !687
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp21, !dbg !688
  %netsAboveReached12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 3, !dbg !690
  %tmp24 = load i64, i64* %netsAboveReached12, align 8, !dbg !690
  %tobool13 = icmp ne i64 %tmp24, 0, !dbg !688
  br i1 %tobool13, label %if.end, label %if.then.14, !dbg !691

if.then.14:                                       ; preds = %cond.end
  call void @SCC_DFSAboveVCG(%struct._nodeVCGType* %VCG, i64 %tmp21, i64* %label), !dbg !692
  br label %if.end, !dbg !694

if.end:                                           ; preds = %if.then.14, %cond.end
  br label %if.end.15, !dbg !695

if.end.15:                                        ; preds = %if.end, %for.body
  br label %for.inc, !dbg !696

for.inc:                                          ; preds = %if.end.15
  %inc = add i64 %s.0, 1, !dbg !697
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !662, metadata !143), !dbg !663
  br label %for.cond, !dbg !698

for.end:                                          ; preds = %for.cond
  %tmp30 = load i64, i64* %label, align 8, !dbg !699
  %inc16 = add i64 %tmp30, 1, !dbg !699
  store i64 %inc16, i64* %label, align 8, !dbg !699
  %tmp32 = load i64, i64* %label, align 8, !dbg !700
  %arrayidx17 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !701
  %netsAboveLabel = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx17, i32 0, i32 2, !dbg !702
  store i64 %tmp32, i64* %netsAboveLabel, align 8, !dbg !703
  ret void, !dbg !704
}

; Function Attrs: nounwind uwtable
define void @SCC_DFSBelowVCG(%struct._nodeVCGType* %VCG, i64 %net, i64 %label) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !705, metadata !143), !dbg !706
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !707, metadata !143), !dbg !708
  call void @llvm.dbg.value(metadata i64 %label, i64 0, metadata !709, metadata !143), !dbg !710
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !711
  %netsBelowReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 7, !dbg !712
  store i64 1, i64* %netsBelowReached, align 8, !dbg !713
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !714, metadata !143), !dbg !715
  br label %for.cond, !dbg !716

for.cond:                                         ; preds = %for.inc, %entry
  %s.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ]
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !718
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 5, !dbg !720
  %tmp5 = load i64, i64* %netsBelow, align 8, !dbg !720
  %cmp = icmp ult i64 %s.0, %tmp5, !dbg !721
  br i1 %cmp, label %for.body, label %for.end, !dbg !722

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !723
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 4, !dbg !726
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !726
  %arrayidx3 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %s.0, !dbg !723
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx3, i32 0, i32 3, !dbg !727
  %tmp10 = load i64, i64* %removed, align 8, !dbg !727
  %tobool = icmp ne i64 %tmp10, 0, !dbg !723
  br i1 %tobool, label %if.end.15, label %if.then, !dbg !728

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !729
  %netsBelowHook5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 4, !dbg !729
  %tmp14 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook5, align 8, !dbg !729
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp14, i64 %s.0, !dbg !729
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 1, !dbg !729
  %tmp15 = load i64, i64* %bot, align 8, !dbg !729
  %cmp7 = icmp eq i64 %tmp15, %net, !dbg !729
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !729

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !731

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 314, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__.SCC_DFSBelowVCG, i32 0, i32 0)) #6, !dbg !733
  unreachable, !dbg !733

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !735
  %netsBelowHook9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx8, i32 0, i32 4, !dbg !736
  %tmp20 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook9, align 8, !dbg !736
  %arrayidx10 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp20, i64 %s.0, !dbg !735
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx10, i32 0, i32 0, !dbg !737
  %tmp21 = load i64, i64* %top, align 8, !dbg !737
  call void @llvm.dbg.value(metadata i64 %tmp21, i64 0, metadata !738, metadata !143), !dbg !739
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp21, !dbg !740
  %netsBelowReached12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 7, !dbg !742
  %tmp24 = load i64, i64* %netsBelowReached12, align 8, !dbg !742
  %tobool13 = icmp ne i64 %tmp24, 0, !dbg !740
  br i1 %tobool13, label %if.end, label %if.then.14, !dbg !743

if.then.14:                                       ; preds = %cond.end
  call void @SCC_DFSBelowVCG(%struct._nodeVCGType* %VCG, i64 %tmp21, i64 %label), !dbg !744
  br label %if.end, !dbg !746

if.end:                                           ; preds = %if.then.14, %cond.end
  br label %if.end.15, !dbg !747

if.end.15:                                        ; preds = %if.end, %for.body
  br label %for.inc, !dbg !748

for.inc:                                          ; preds = %if.end.15
  %inc = add i64 %s.0, 1, !dbg !749
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !714, metadata !143), !dbg !715
  br label %for.cond, !dbg !750

for.end:                                          ; preds = %for.cond
  %arrayidx16 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !751
  %netsBelowLabel = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx16, i32 0, i32 6, !dbg !752
  store i64 %label, i64* %netsBelowLabel, align 8, !dbg !753
  ret void, !dbg !754
}

; Function Attrs: nounwind uwtable
define void @DumpSCC(i64* %SCC, i64* %perSCC) #0 {
entry:
  call void @llvm.dbg.value(metadata i64* %SCC, i64 0, metadata !755, metadata !143), !dbg !756
  call void @llvm.dbg.value(metadata i64* %perSCC, i64 0, metadata !757, metadata !143), !dbg !758
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !759, metadata !143), !dbg !760
  br label %for.cond, !dbg !761

for.cond:                                         ; preds = %for.inc.9, %entry
  %scc.0 = phi i64 [ 1, %entry ], [ %inc10, %for.inc.9 ]
  %tmp1 = load i64, i64* @totalSCC, align 8, !dbg !763
  %cmp = icmp ule i64 %scc.0, %tmp1, !dbg !765
  br i1 %cmp, label %for.body, label %for.end.11, !dbg !766

for.body:                                         ; preds = %for.cond
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i64 %scc.0), !dbg !767
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !769, metadata !143), !dbg !770
  br label %for.cond.1, !dbg !771

for.cond.1:                                       ; preds = %for.inc, %for.body
  %net.0 = phi i64 [ 1, %for.body ], [ %inc, %for.inc ]
  %tmp4 = load i64, i64* @channelNets, align 8, !dbg !773
  %cmp2 = icmp ule i64 %net.0, %tmp4, !dbg !775
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !776

for.body.3:                                       ; preds = %for.cond.1
  %arrayidx = getelementptr inbounds i64, i64* %SCC, i64 %net.0, !dbg !777
  %tmp7 = load i64, i64* %arrayidx, align 8, !dbg !777
  %cmp4 = icmp eq i64 %tmp7, %scc.0, !dbg !780
  br i1 %cmp4, label %if.then, label %if.end, !dbg !781

if.then:                                          ; preds = %for.body.3
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i64 %net.0), !dbg !782
  br label %if.end, !dbg !784

if.end:                                           ; preds = %if.then, %for.body.3
  br label %for.inc, !dbg !785

for.inc:                                          ; preds = %if.end
  %inc = add i64 %net.0, 1, !dbg !786
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !769, metadata !143), !dbg !770
  br label %for.cond.1, !dbg !787

for.end:                                          ; preds = %for.cond.1
  %arrayidx6 = getelementptr inbounds i64, i64* %perSCC, i64 %scc.0, !dbg !788
  %tmp13 = load i64, i64* %arrayidx6, align 8, !dbg !788
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0), i64 %tmp13), !dbg !789
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !790
  br label %for.inc.9, !dbg !791

for.inc.9:                                        ; preds = %for.end
  %inc10 = add i64 %scc.0, 1, !dbg !792
  call void @llvm.dbg.value(metadata i64 %inc10, i64 0, metadata !759, metadata !143), !dbg !760
  br label %for.cond, !dbg !793

for.end.11:                                       ; preds = %for.cond
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)), !dbg !794
  ret void, !dbg !795
}

; Function Attrs: nounwind uwtable
define void @AcyclicVCG() #0 {
entry:
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !796, metadata !143), !dbg !797
  br label %for.cond, !dbg !798

for.cond:                                         ; preds = %for.inc.16, %entry
  %net.0 = phi i64 [ 1, %entry ], [ %inc17, %for.inc.16 ]
  %tmp1 = load i64, i64* @channelNets, align 8, !dbg !800
  %cmp = icmp ule i64 %net.0, %tmp1, !dbg !802
  br i1 %cmp, label %for.body, label %for.end.18, !dbg !803

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.1, !dbg !806

for.cond.1:                                       ; preds = %for.inc, %for.body
  %which.0 = phi i64 [ 0, %for.body ], [ %inc, %for.inc ]
  %tmp4 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !809
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp4, i64 %net.0, !dbg !809
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 1, !dbg !811
  %tmp5 = load i64, i64* %netsAbove, align 8, !dbg !811
  %cmp2 = icmp ult i64 %which.0, %tmp5, !dbg !812
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !813

for.body.3:                                       ; preds = %for.cond.1
  %tmp8 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !814
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp8, i64 %net.0, !dbg !814
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 0, !dbg !816
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !816
  %arrayidx5 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %which.0, !dbg !814
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx5, i32 0, i32 3, !dbg !817
  store i64 0, i64* %removed, align 8, !dbg !818
  br label %for.inc, !dbg !819

for.inc:                                          ; preds = %for.body.3
  %inc = add i64 %which.0, 1, !dbg !820
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.1, !dbg !821

for.end:                                          ; preds = %for.cond.1
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.6, !dbg !822

for.cond.6:                                       ; preds = %for.inc.13, %for.end
  %which.1 = phi i64 [ 0, %for.end ], [ %inc14, %for.inc.13 ]
  %tmp13 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !824
  %arrayidx7 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp13, i64 %net.0, !dbg !824
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx7, i32 0, i32 5, !dbg !826
  %tmp14 = load i64, i64* %netsBelow, align 8, !dbg !826
  %cmp8 = icmp ult i64 %which.1, %tmp14, !dbg !827
  br i1 %cmp8, label %for.body.9, label %for.end.15, !dbg !828

for.body.9:                                       ; preds = %for.cond.6
  %tmp17 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !829
  %arrayidx10 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp17, i64 %net.0, !dbg !829
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx10, i32 0, i32 4, !dbg !831
  %tmp18 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !831
  %arrayidx11 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp18, i64 %which.1, !dbg !829
  %removed12 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx11, i32 0, i32 3, !dbg !832
  store i64 0, i64* %removed12, align 8, !dbg !833
  br label %for.inc.13, !dbg !834

for.inc.13:                                       ; preds = %for.body.9
  %inc14 = add i64 %which.1, 1, !dbg !835
  call void @llvm.dbg.value(metadata i64 %inc14, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.6, !dbg !836

for.end.15:                                       ; preds = %for.cond.6
  br label %for.inc.16, !dbg !837

for.inc.16:                                       ; preds = %for.end.15
  %inc17 = add i64 %net.0, 1, !dbg !838
  call void @llvm.dbg.value(metadata i64 %inc17, i64 0, metadata !796, metadata !143), !dbg !797
  br label %for.cond, !dbg !839

for.end.18:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !840, metadata !143), !dbg !841
  store i64 0, i64* @removeTotalVCG, align 8, !dbg !842
  br label %do.body, !dbg !843

do.body:                                          ; preds = %do.cond, %for.end.18
  %acyclic.0 = phi i64 [ 1, %for.end.18 ], [ %acyclic.1, %do.cond ]
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !844, metadata !143), !dbg !845
  %tmp21 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !846
  call void @DFSClearVCG(%struct._nodeVCGType* %tmp21), !dbg !848
  %tmp22 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !849
  %tmp23 = load i64*, i64** @SCC, align 8, !dbg !850
  %tmp24 = load i64*, i64** @perSCC, align 8, !dbg !851
  call void @SCCofVCG(%struct._nodeVCGType* %tmp22, i64* %tmp23, i64* %tmp24), !dbg !852
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !853, metadata !143), !dbg !854
  br label %for.cond.19, !dbg !855

for.cond.19:                                      ; preds = %for.inc.24, %do.body
  %scc.0 = phi i64 [ 1, %do.body ], [ %inc25, %for.inc.24 ]
  %tmp26 = load i64, i64* @totalSCC, align 8, !dbg !857
  %cmp20 = icmp ule i64 %scc.0, %tmp26, !dbg !859
  br i1 %cmp20, label %for.body.21, label %for.end.26.loopexit, !dbg !860

for.body.21:                                      ; preds = %for.cond.19
  %tmp28 = load i64*, i64** @perSCC, align 8, !dbg !861
  %arrayidx22 = getelementptr inbounds i64, i64* %tmp28, i64 %scc.0, !dbg !861
  %tmp29 = load i64, i64* %arrayidx22, align 8, !dbg !861
  %cmp23 = icmp ugt i64 %tmp29, 1, !dbg !864
  br i1 %cmp23, label %if.then, label %if.end, !dbg !865

if.then:                                          ; preds = %for.body.21
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !840, metadata !143), !dbg !841
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !844, metadata !143), !dbg !845
  br label %for.end.26, !dbg !866

if.end:                                           ; preds = %for.body.21
  br label %for.inc.24, !dbg !868

for.inc.24:                                       ; preds = %if.end
  %inc25 = add i64 %scc.0, 1, !dbg !869
  call void @llvm.dbg.value(metadata i64 %inc25, i64 0, metadata !853, metadata !143), !dbg !854
  br label %for.cond.19, !dbg !870

for.end.26.loopexit:                              ; preds = %for.cond.19
  br label %for.end.26, !dbg !871

for.end.26:                                       ; preds = %for.end.26.loopexit, %if.then
  %acyclic.1 = phi i64 [ 0, %if.then ], [ %acyclic.0, %for.end.26.loopexit ]
  %done.0 = phi i64 [ 0, %if.then ], [ 1, %for.end.26.loopexit ]
  %tobool = icmp ne i64 %done.0, 0, !dbg !871
  br i1 %tobool, label %if.end.28, label %if.then.27, !dbg !873

if.then.27:                                       ; preds = %for.end.26
  %tmp32 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !874
  %tmp33 = load i64*, i64** @SCC, align 8, !dbg !876
  %tmp34 = load i64*, i64** @perSCC, align 8, !dbg !877
  %tmp35 = load %struct._constraintVCGType**, %struct._constraintVCGType*** @removeVCG, align 8, !dbg !878
  call void @RemoveConstraintVCG(%struct._nodeVCGType* %tmp32, i64* %tmp33, i64* %tmp34, %struct._constraintVCGType** %tmp35), !dbg !879
  br label %if.end.28, !dbg !880

if.end.28:                                        ; preds = %if.then.27, %for.end.26
  br label %do.cond, !dbg !881

do.cond:                                          ; preds = %if.end.28
  %tobool29 = icmp ne i64 %done.0, 0, !dbg !882
  %lnot = xor i1 %tobool29, true, !dbg !882
  br i1 %lnot, label %do.body, label %do.end, !dbg !881

do.end:                                           ; preds = %do.cond
  %acyclic.1.lcssa = phi i64 [ %acyclic.1, %do.cond ]
  %tmp37 = load i64, i64* @removeTotalVCG, align 8, !dbg !883
  call void @llvm.dbg.value(metadata i64 %tmp37, i64 0, metadata !884, metadata !143), !dbg !885
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !886, metadata !143), !dbg !887
  br label %for.cond.30, !dbg !888

for.cond.30:                                      ; preds = %for.inc.126, %do.end
  %total.0 = phi i64 [ %tmp37, %do.end ], [ %total.1, %for.inc.126 ]
  %rep.0 = phi i64 [ 0, %do.end ], [ %inc127, %for.inc.126 ]
  %tmp39 = load i64, i64* @removeTotalVCG, align 8, !dbg !890
  %cmp31 = icmp ult i64 %rep.0, %tmp39, !dbg !892
  br i1 %cmp31, label %for.body.32, label %for.end.128, !dbg !893

for.body.32:                                      ; preds = %for.cond.30
  %tmp41 = load %struct._constraintVCGType**, %struct._constraintVCGType*** @removeVCG, align 8, !dbg !894
  %arrayidx33 = getelementptr inbounds %struct._constraintVCGType*, %struct._constraintVCGType** %tmp41, i64 %rep.0, !dbg !894
  %tmp42 = load %struct._constraintVCGType*, %struct._constraintVCGType** %arrayidx33, align 8, !dbg !894
  %top34 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp42, i32 0, i32 0, !dbg !896
  %tmp43 = load i64, i64* %top34, align 8, !dbg !896
  call void @llvm.dbg.value(metadata i64 %tmp43, i64 0, metadata !897, metadata !143), !dbg !898
  %tmp45 = load %struct._constraintVCGType**, %struct._constraintVCGType*** @removeVCG, align 8, !dbg !899
  %arrayidx35 = getelementptr inbounds %struct._constraintVCGType*, %struct._constraintVCGType** %tmp45, i64 %rep.0, !dbg !899
  %tmp46 = load %struct._constraintVCGType*, %struct._constraintVCGType** %arrayidx35, align 8, !dbg !899
  %bot36 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp46, i32 0, i32 1, !dbg !900
  %tmp47 = load i64, i64* %bot36, align 8, !dbg !900
  call void @llvm.dbg.value(metadata i64 %tmp47, i64 0, metadata !901, metadata !143), !dbg !902
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.37, !dbg !903

for.cond.37:                                      ; preds = %for.inc.53, %for.body.32
  %which.2 = phi i64 [ 0, %for.body.32 ], [ %inc54, %for.inc.53 ]
  %tmp50 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !905
  %arrayidx38 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp50, i64 %tmp43, !dbg !905
  %netsAbove39 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx38, i32 0, i32 1, !dbg !907
  %tmp51 = load i64, i64* %netsAbove39, align 8, !dbg !907
  %cmp40 = icmp ult i64 %which.2, %tmp51, !dbg !908
  br i1 %cmp40, label %for.body.41, label %for.end.55.loopexit, !dbg !909

for.body.41:                                      ; preds = %for.cond.37
  %tmp54 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !910
  %arrayidx42 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp54, i64 %tmp43, !dbg !910
  %netsAboveHook43 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx42, i32 0, i32 0, !dbg !913
  %tmp55 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook43, align 8, !dbg !913
  %arrayidx44 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp55, i64 %which.2, !dbg !910
  %bot45 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx44, i32 0, i32 1, !dbg !914
  %tmp56 = load i64, i64* %bot45, align 8, !dbg !914
  %cmp46 = icmp eq i64 %tmp56, %tmp47, !dbg !915
  br i1 %cmp46, label %if.then.47, label %if.end.52, !dbg !916

if.then.47:                                       ; preds = %for.body.41
  %which.2.lcssa123 = phi i64 [ %which.2, %for.body.41 ]
  %tmp60 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !917
  %arrayidx48 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp60, i64 %tmp43, !dbg !917
  %netsAboveHook49 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx48, i32 0, i32 0, !dbg !919
  %tmp61 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook49, align 8, !dbg !919
  %arrayidx50 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp61, i64 %which.2.lcssa123, !dbg !917
  %removed51 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx50, i32 0, i32 3, !dbg !920
  store i64 0, i64* %removed51, align 8, !dbg !921
  br label %for.end.55, !dbg !922

if.end.52:                                        ; preds = %for.body.41
  br label %for.inc.53, !dbg !923

for.inc.53:                                       ; preds = %if.end.52
  %inc54 = add i64 %which.2, 1, !dbg !924
  call void @llvm.dbg.value(metadata i64 %inc54, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.37, !dbg !925

for.end.55.loopexit:                              ; preds = %for.cond.37
  br label %for.end.55, !dbg !805

for.end.55:                                       ; preds = %for.end.55.loopexit, %if.then.47
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.56, !dbg !926

for.cond.56:                                      ; preds = %for.inc.72, %for.end.55
  %which.3 = phi i64 [ 0, %for.end.55 ], [ %inc73, %for.inc.72 ]
  %tmp65 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !928
  %arrayidx57 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp65, i64 %tmp47, !dbg !928
  %netsBelow58 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx57, i32 0, i32 5, !dbg !930
  %tmp66 = load i64, i64* %netsBelow58, align 8, !dbg !930
  %cmp59 = icmp ult i64 %which.3, %tmp66, !dbg !931
  br i1 %cmp59, label %for.body.60, label %for.end.74.loopexit, !dbg !932

for.body.60:                                      ; preds = %for.cond.56
  %tmp69 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !933
  %arrayidx61 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp69, i64 %tmp47, !dbg !933
  %netsBelowHook62 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx61, i32 0, i32 4, !dbg !936
  %tmp70 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook62, align 8, !dbg !936
  %arrayidx63 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp70, i64 %which.3, !dbg !933
  %top64 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx63, i32 0, i32 0, !dbg !937
  %tmp71 = load i64, i64* %top64, align 8, !dbg !937
  %cmp65 = icmp eq i64 %tmp71, %tmp43, !dbg !938
  br i1 %cmp65, label %if.then.66, label %if.end.71, !dbg !939

if.then.66:                                       ; preds = %for.body.60
  %which.3.lcssa124 = phi i64 [ %which.3, %for.body.60 ]
  %tmp75 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !940
  %arrayidx67 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp75, i64 %tmp47, !dbg !940
  %netsBelowHook68 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx67, i32 0, i32 4, !dbg !942
  %tmp76 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook68, align 8, !dbg !942
  %arrayidx69 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp76, i64 %which.3.lcssa124, !dbg !940
  %removed70 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx69, i32 0, i32 3, !dbg !943
  store i64 0, i64* %removed70, align 8, !dbg !944
  br label %for.end.74, !dbg !945

if.end.71:                                        ; preds = %for.body.60
  br label %for.inc.72, !dbg !946

for.inc.72:                                       ; preds = %if.end.71
  %inc73 = add i64 %which.3, 1, !dbg !947
  call void @llvm.dbg.value(metadata i64 %inc73, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.56, !dbg !948

for.end.74.loopexit:                              ; preds = %for.cond.56
  br label %for.end.74, !dbg !949

for.end.74:                                       ; preds = %for.end.74.loopexit, %if.then.66
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !950, metadata !143), !dbg !949
  %tmp78 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !951
  call void @DFSClearVCG(%struct._nodeVCGType* %tmp78), !dbg !952
  %tmp79 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !953
  %tmp80 = load i64*, i64** @SCC, align 8, !dbg !954
  %tmp81 = load i64*, i64** @perSCC, align 8, !dbg !955
  call void @SCCofVCG(%struct._nodeVCGType* %tmp79, i64* %tmp80, i64* %tmp81), !dbg !956
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !853, metadata !143), !dbg !854
  br label %for.cond.75, !dbg !957

for.cond.75:                                      ; preds = %for.inc.82, %for.end.74
  %scc.1 = phi i64 [ 1, %for.end.74 ], [ %inc83, %for.inc.82 ]
  %tmp83 = load i64, i64* @totalSCC, align 8, !dbg !959
  %cmp76 = icmp ule i64 %scc.1, %tmp83, !dbg !961
  br i1 %cmp76, label %for.body.77, label %for.end.84.loopexit, !dbg !962

for.body.77:                                      ; preds = %for.cond.75
  %tmp85 = load i64*, i64** @perSCC, align 8, !dbg !963
  %arrayidx78 = getelementptr inbounds i64, i64* %tmp85, i64 %scc.1, !dbg !963
  %tmp86 = load i64, i64* %arrayidx78, align 8, !dbg !963
  %cmp79 = icmp ugt i64 %tmp86, 1, !dbg !966
  br i1 %cmp79, label %if.then.80, label %if.end.81, !dbg !967

if.then.80:                                       ; preds = %for.body.77
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !950, metadata !143), !dbg !949
  br label %for.end.84, !dbg !968

if.end.81:                                        ; preds = %for.body.77
  br label %for.inc.82, !dbg !970

for.inc.82:                                       ; preds = %if.end.81
  %inc83 = add i64 %scc.1, 1, !dbg !971
  call void @llvm.dbg.value(metadata i64 %inc83, i64 0, metadata !853, metadata !143), !dbg !854
  br label %for.cond.75, !dbg !972

for.end.84.loopexit:                              ; preds = %for.cond.75
  br label %for.end.84, !dbg !973

for.end.84:                                       ; preds = %for.end.84.loopexit, %if.then.80
  %cycle.0 = phi i64 [ 1, %if.then.80 ], [ 0, %for.end.84.loopexit ]
  %tobool85 = icmp ne i64 %cycle.0, 0, !dbg !973
  br i1 %tobool85, label %if.then.86, label %if.else, !dbg !975

if.then.86:                                       ; preds = %for.end.84
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.87, !dbg !976

for.cond.87:                                      ; preds = %for.inc.103, %if.then.86
  %which.4 = phi i64 [ 0, %if.then.86 ], [ %inc104, %for.inc.103 ]
  %tmp91 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !979
  %arrayidx88 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp91, i64 %tmp43, !dbg !979
  %netsAbove89 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx88, i32 0, i32 1, !dbg !981
  %tmp92 = load i64, i64* %netsAbove89, align 8, !dbg !981
  %cmp90 = icmp ult i64 %which.4, %tmp92, !dbg !982
  br i1 %cmp90, label %for.body.91, label %for.end.105.loopexit, !dbg !983

for.body.91:                                      ; preds = %for.cond.87
  %tmp95 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !984
  %arrayidx92 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp95, i64 %tmp43, !dbg !984
  %netsAboveHook93 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx92, i32 0, i32 0, !dbg !987
  %tmp96 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook93, align 8, !dbg !987
  %arrayidx94 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp96, i64 %which.4, !dbg !984
  %bot95 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx94, i32 0, i32 1, !dbg !988
  %tmp97 = load i64, i64* %bot95, align 8, !dbg !988
  %cmp96 = icmp eq i64 %tmp97, %tmp47, !dbg !989
  br i1 %cmp96, label %if.then.97, label %if.end.102, !dbg !990

if.then.97:                                       ; preds = %for.body.91
  %which.4.lcssa125 = phi i64 [ %which.4, %for.body.91 ]
  %tmp101 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !991
  %arrayidx98 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp101, i64 %tmp43, !dbg !991
  %netsAboveHook99 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx98, i32 0, i32 0, !dbg !993
  %tmp102 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook99, align 8, !dbg !993
  %arrayidx100 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp102, i64 %which.4.lcssa125, !dbg !991
  %removed101 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx100, i32 0, i32 3, !dbg !994
  store i64 1, i64* %removed101, align 8, !dbg !995
  br label %for.end.105, !dbg !996

if.end.102:                                       ; preds = %for.body.91
  br label %for.inc.103, !dbg !997

for.inc.103:                                      ; preds = %if.end.102
  %inc104 = add i64 %which.4, 1, !dbg !998
  call void @llvm.dbg.value(metadata i64 %inc104, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.87, !dbg !999

for.end.105.loopexit:                             ; preds = %for.cond.87
  br label %for.end.105, !dbg !805

for.end.105:                                      ; preds = %for.end.105.loopexit, %if.then.97
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.106, !dbg !1000

for.cond.106:                                     ; preds = %for.inc.122, %for.end.105
  %which.5 = phi i64 [ 0, %for.end.105 ], [ %inc123, %for.inc.122 ]
  %tmp106 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !1002
  %arrayidx107 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp106, i64 %tmp47, !dbg !1002
  %netsBelow108 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx107, i32 0, i32 5, !dbg !1004
  %tmp107 = load i64, i64* %netsBelow108, align 8, !dbg !1004
  %cmp109 = icmp ult i64 %which.5, %tmp107, !dbg !1005
  br i1 %cmp109, label %for.body.110, label %for.end.124.loopexit, !dbg !1006

for.body.110:                                     ; preds = %for.cond.106
  %tmp110 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !1007
  %arrayidx111 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp110, i64 %tmp47, !dbg !1007
  %netsBelowHook112 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx111, i32 0, i32 4, !dbg !1010
  %tmp111 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook112, align 8, !dbg !1010
  %arrayidx113 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp111, i64 %which.5, !dbg !1007
  %top114 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx113, i32 0, i32 0, !dbg !1011
  %tmp112 = load i64, i64* %top114, align 8, !dbg !1011
  %cmp115 = icmp eq i64 %tmp112, %tmp43, !dbg !1012
  br i1 %cmp115, label %if.then.116, label %if.end.121, !dbg !1013

if.then.116:                                      ; preds = %for.body.110
  %which.5.lcssa126 = phi i64 [ %which.5, %for.body.110 ]
  %tmp116 = load %struct._nodeVCGType*, %struct._nodeVCGType** @VCG, align 8, !dbg !1014
  %arrayidx117 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %tmp116, i64 %tmp47, !dbg !1014
  %netsBelowHook118 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx117, i32 0, i32 4, !dbg !1016
  %tmp117 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook118, align 8, !dbg !1016
  %arrayidx119 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp117, i64 %which.5.lcssa126, !dbg !1014
  %removed120 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx119, i32 0, i32 3, !dbg !1017
  store i64 1, i64* %removed120, align 8, !dbg !1018
  br label %for.end.124, !dbg !1019

if.end.121:                                       ; preds = %for.body.110
  br label %for.inc.122, !dbg !1020

for.inc.122:                                      ; preds = %if.end.121
  %inc123 = add i64 %which.5, 1, !dbg !1021
  call void @llvm.dbg.value(metadata i64 %inc123, i64 0, metadata !804, metadata !143), !dbg !805
  br label %for.cond.106, !dbg !1022

for.end.124.loopexit:                             ; preds = %for.cond.106
  br label %for.end.124, !dbg !1023

for.end.124:                                      ; preds = %for.end.124.loopexit, %if.then.116
  br label %if.end.125, !dbg !1023

if.else:                                          ; preds = %for.end.84
  %dec = add i64 %total.0, -1, !dbg !1024
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !884, metadata !143), !dbg !885
  br label %if.end.125

if.end.125:                                       ; preds = %if.else, %for.end.124
  %total.1 = phi i64 [ %total.0, %for.end.124 ], [ %dec, %if.else ]
  br label %for.inc.126, !dbg !1026

for.inc.126:                                      ; preds = %if.end.125
  %inc127 = add i64 %rep.0, 1, !dbg !1027
  call void @llvm.dbg.value(metadata i64 %inc127, i64 0, metadata !886, metadata !143), !dbg !887
  br label %for.cond.30, !dbg !1028

for.end.128:                                      ; preds = %for.cond.30
  %total.0.lcssa = phi i64 [ %total.0, %for.cond.30 ]
  %tobool129 = icmp ne i64 %acyclic.1.lcssa, 0, !dbg !1029
  br i1 %tobool129, label %if.then.130, label %if.else.131, !dbg !1031

if.then.130:                                      ; preds = %for.end.128
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i32 0, i32 0)), !dbg !1032
  br label %if.end.134, !dbg !1034

if.else.131:                                      ; preds = %for.end.128
  %call132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0)), !dbg !1035
  %call133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.18, i32 0, i32 0), i64 %total.0.lcssa), !dbg !1037
  br label %if.end.134

if.end.134:                                       ; preds = %if.else.131, %if.then.130
  ret void, !dbg !1038
}

; Function Attrs: nounwind uwtable
define void @RemoveConstraintVCG(%struct._nodeVCGType* %VCG, i64* %SCC, i64* %perSCC, %struct._constraintVCGType** %removeVCG) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !1039, metadata !143), !dbg !1040
  call void @llvm.dbg.value(metadata i64* %SCC, i64 0, metadata !1041, metadata !143), !dbg !1042
  call void @llvm.dbg.value(metadata i64* %perSCC, i64 0, metadata !1043, metadata !143), !dbg !1044
  call void @llvm.dbg.value(metadata %struct._constraintVCGType** %removeVCG, i64 0, metadata !1045, metadata !143), !dbg !1046
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1047, metadata !143), !dbg !1048
  br label %for.cond, !dbg !1049

for.cond:                                         ; preds = %for.inc.159, %entry
  %scc.0 = phi i64 [ 1, %entry ], [ %inc160, %for.inc.159 ]
  %tmp1 = load i64, i64* @totalSCC, align 8, !dbg !1051
  %cmp = icmp ule i64 %scc.0, %tmp1, !dbg !1053
  br i1 %cmp, label %for.body, label %for.end.161, !dbg !1054

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %perSCC, i64 %scc.0, !dbg !1055
  %tmp4 = load i64, i64* %arrayidx, align 8, !dbg !1055
  %cmp1 = icmp ugt i64 %tmp4, 1, !dbg !1058
  br i1 %cmp1, label %if.then, label %if.end.158, !dbg !1059

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct._constraintVCGType* null, i64 0, metadata !1060, metadata !143), !dbg !1061
  call void @llvm.dbg.value(metadata i64 7, i64 0, metadata !1062, metadata !143), !dbg !1063
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1064, metadata !143), !dbg !1065
  br label %for.cond.2, !dbg !1066

for.cond.2:                                       ; preds = %for.inc.126, %if.then
  %net.0 = phi i64 [ 1, %if.then ], [ %inc127, %for.inc.126 ]
  %best.0 = phi i64 [ 7, %if.then ], [ %best.4, %for.inc.126 ]
  %remove.0 = phi %struct._constraintVCGType* [ null, %if.then ], [ %remove.4, %for.inc.126 ]
  %tmp6 = load i64, i64* @channelNets, align 8, !dbg !1069
  %cmp3 = icmp ule i64 %net.0, %tmp6, !dbg !1071
  br i1 %cmp3, label %for.body.4, label %for.end.128, !dbg !1072

for.body.4:                                       ; preds = %for.cond.2
  %arrayidx5 = getelementptr inbounds i64, i64* %SCC, i64 %net.0, !dbg !1073
  %tmp9 = load i64, i64* %arrayidx5, align 8, !dbg !1073
  %cmp6 = icmp eq i64 %tmp9, %scc.0, !dbg !1076
  br i1 %cmp6, label %if.then.7, label %if.end.125, !dbg !1077

if.then.7:                                        ; preds = %for.body.4
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1078, metadata !143), !dbg !1079
  br label %for.cond.8, !dbg !1080

for.cond.8:                                       ; preds = %for.inc, %if.then.7
  %which.0 = phi i64 [ 0, %if.then.7 ], [ %inc, %for.inc ]
  %best.1 = phi i64 [ %best.0, %if.then.7 ], [ %best.3, %for.inc ]
  %remove.1 = phi %struct._constraintVCGType* [ %remove.0, %if.then.7 ], [ %remove.3, %for.inc ]
  %arrayidx9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !1083
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx9, i32 0, i32 1, !dbg !1085
  %tmp14 = load i64, i64* %netsAbove, align 8, !dbg !1085
  %cmp10 = icmp ult i64 %which.0, %tmp14, !dbg !1086
  br i1 %cmp10, label %for.body.11, label %for.end, !dbg !1087

for.body.11:                                      ; preds = %for.cond.8
  %arrayidx12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !1088
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx12, i32 0, i32 0, !dbg !1090
  %tmp18 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !1090
  %arrayidx13 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp18, i64 %which.0, !dbg !1088
  %bot14 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx13, i32 0, i32 1, !dbg !1091
  %tmp19 = load i64, i64* %bot14, align 8, !dbg !1091
  call void @llvm.dbg.value(metadata i64 %tmp19, i64 0, metadata !1092, metadata !143), !dbg !1093
  %arrayidx15 = getelementptr inbounds i64, i64* %SCC, i64 %tmp19, !dbg !1094
  %tmp22 = load i64, i64* %arrayidx15, align 8, !dbg !1094
  %cmp16 = icmp eq i64 %tmp22, %scc.0, !dbg !1096
  br i1 %cmp16, label %land.lhs.true, label %if.end.124, !dbg !1097

land.lhs.true:                                    ; preds = %for.body.11
  %arrayidx17 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !1098
  %netsAboveHook18 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx17, i32 0, i32 0, !dbg !1099
  %tmp27 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook18, align 8, !dbg !1099
  %arrayidx19 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp27, i64 %which.0, !dbg !1098
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx19, i32 0, i32 3, !dbg !1100
  %tmp28 = load i64, i64* %removed, align 8, !dbg !1100
  %tobool = icmp ne i64 %tmp28, 0, !dbg !1098
  br i1 %tobool, label %if.end.124, label %if.then.20, !dbg !1101

if.then.20:                                       ; preds = %land.lhs.true
  %arrayidx21 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !1102
  %netsAboveHook22 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx21, i32 0, i32 0, !dbg !1104
  %tmp32 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook22, align 8, !dbg !1104
  %arrayidx23 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp32, i64 %which.0, !dbg !1102
  %col24 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx23, i32 0, i32 2, !dbg !1105
  %tmp33 = load i64, i64* %col24, align 8, !dbg !1105
  call void @llvm.dbg.value(metadata i64 %tmp33, i64 0, metadata !1106, metadata !143), !dbg !1107
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1108, metadata !143), !dbg !1109
  %cmp25 = icmp eq i64 %tmp33, 1, !dbg !1110
  br i1 %cmp25, label %if.then.26, label %if.else.46, !dbg !1112

if.then.26:                                       ; preds = %if.then.20
  %add = add i64 0, 3, !dbg !1113
  call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !1108, metadata !143), !dbg !1109
  %add27 = add i64 %tmp33, 1, !dbg !1115
  %tmp37 = load i64*, i64** @TOP, align 8, !dbg !1117
  %arrayidx28 = getelementptr inbounds i64, i64* %tmp37, i64 %add27, !dbg !1117
  %tmp38 = load i64, i64* %arrayidx28, align 8, !dbg !1117
  %tobool29 = icmp ne i64 %tmp38, 0, !dbg !1117
  br i1 %tobool29, label %land.lhs.true.30, label %if.else, !dbg !1118

land.lhs.true.30:                                 ; preds = %if.then.26
  %add31 = add i64 %tmp33, 1, !dbg !1119
  %tmp40 = load i64*, i64** @BOT, align 8, !dbg !1120
  %arrayidx32 = getelementptr inbounds i64, i64* %tmp40, i64 %add31, !dbg !1120
  %tmp41 = load i64, i64* %arrayidx32, align 8, !dbg !1120
  %tobool33 = icmp ne i64 %tmp41, 0, !dbg !1120
  br i1 %tobool33, label %if.then.34, label %if.else, !dbg !1121

if.then.34:                                       ; preds = %land.lhs.true.30
  %add35 = add i64 %add, 3, !dbg !1122
  call void @llvm.dbg.value(metadata i64 %add35, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.45, !dbg !1124

if.else:                                          ; preds = %land.lhs.true.30, %if.then.26
  %add36 = add i64 %tmp33, 1, !dbg !1125
  %tmp44 = load i64*, i64** @TOP, align 8, !dbg !1127
  %arrayidx37 = getelementptr inbounds i64, i64* %tmp44, i64 %add36, !dbg !1127
  %tmp45 = load i64, i64* %arrayidx37, align 8, !dbg !1127
  %tobool38 = icmp ne i64 %tmp45, 0, !dbg !1127
  br i1 %tobool38, label %if.else.43, label %lor.lhs.false, !dbg !1128

lor.lhs.false:                                    ; preds = %if.else
  %add39 = add i64 %tmp33, 1, !dbg !1129
  %tmp47 = load i64*, i64** @BOT, align 8, !dbg !1130
  %arrayidx40 = getelementptr inbounds i64, i64* %tmp47, i64 %add39, !dbg !1130
  %tmp48 = load i64, i64* %arrayidx40, align 8, !dbg !1130
  %tobool41 = icmp ne i64 %tmp48, 0, !dbg !1130
  br i1 %tobool41, label %if.else.43, label %if.then.42, !dbg !1131

if.then.42:                                       ; preds = %lor.lhs.false
  br label %if.end, !dbg !1132

if.else.43:                                       ; preds = %lor.lhs.false, %if.else
  %add44 = add i64 %add, 2, !dbg !1134
  call void @llvm.dbg.value(metadata i64 %add44, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end

if.end:                                           ; preds = %if.else.43, %if.then.42
  %weight.0 = phi i64 [ %add44, %if.else.43 ], [ %add, %if.then.42 ]
  br label %if.end.45

if.end.45:                                        ; preds = %if.end, %if.then.34
  %weight.1 = phi i64 [ %add35, %if.then.34 ], [ %weight.0, %if.end ]
  br label %if.end.117, !dbg !1136

if.else.46:                                       ; preds = %if.then.20
  %tmp51 = load i64, i64* @channelColumns, align 8, !dbg !1137
  %cmp47 = icmp eq i64 %tmp33, %tmp51, !dbg !1139
  br i1 %cmp47, label %if.then.48, label %if.else.71, !dbg !1140

if.then.48:                                       ; preds = %if.else.46
  %add49 = add i64 0, 3, !dbg !1141
  call void @llvm.dbg.value(metadata i64 %add49, i64 0, metadata !1108, metadata !143), !dbg !1109
  %sub = sub i64 %tmp33, 1, !dbg !1143
  %tmp54 = load i64*, i64** @TOP, align 8, !dbg !1145
  %arrayidx50 = getelementptr inbounds i64, i64* %tmp54, i64 %sub, !dbg !1145
  %tmp55 = load i64, i64* %arrayidx50, align 8, !dbg !1145
  %tobool51 = icmp ne i64 %tmp55, 0, !dbg !1145
  br i1 %tobool51, label %land.lhs.true.52, label %if.else.58, !dbg !1146

land.lhs.true.52:                                 ; preds = %if.then.48
  %sub53 = sub i64 %tmp33, 1, !dbg !1147
  %tmp57 = load i64*, i64** @BOT, align 8, !dbg !1148
  %arrayidx54 = getelementptr inbounds i64, i64* %tmp57, i64 %sub53, !dbg !1148
  %tmp58 = load i64, i64* %arrayidx54, align 8, !dbg !1148
  %tobool55 = icmp ne i64 %tmp58, 0, !dbg !1148
  br i1 %tobool55, label %if.then.56, label %if.else.58, !dbg !1149

if.then.56:                                       ; preds = %land.lhs.true.52
  %add57 = add i64 %add49, 3, !dbg !1150
  call void @llvm.dbg.value(metadata i64 %add57, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.70, !dbg !1152

if.else.58:                                       ; preds = %land.lhs.true.52, %if.then.48
  %sub59 = sub i64 %tmp33, 1, !dbg !1153
  %tmp61 = load i64*, i64** @TOP, align 8, !dbg !1155
  %arrayidx60 = getelementptr inbounds i64, i64* %tmp61, i64 %sub59, !dbg !1155
  %tmp62 = load i64, i64* %arrayidx60, align 8, !dbg !1155
  %tobool61 = icmp ne i64 %tmp62, 0, !dbg !1155
  br i1 %tobool61, label %if.else.67, label %lor.lhs.false.62, !dbg !1156

lor.lhs.false.62:                                 ; preds = %if.else.58
  %sub63 = sub i64 %tmp33, 1, !dbg !1157
  %tmp64 = load i64*, i64** @BOT, align 8, !dbg !1158
  %arrayidx64 = getelementptr inbounds i64, i64* %tmp64, i64 %sub63, !dbg !1158
  %tmp65 = load i64, i64* %arrayidx64, align 8, !dbg !1158
  %tobool65 = icmp ne i64 %tmp65, 0, !dbg !1158
  br i1 %tobool65, label %if.else.67, label %if.then.66, !dbg !1159

if.then.66:                                       ; preds = %lor.lhs.false.62
  br label %if.end.69, !dbg !1160

if.else.67:                                       ; preds = %lor.lhs.false.62, %if.else.58
  %add68 = add i64 %add49, 2, !dbg !1162
  call void @llvm.dbg.value(metadata i64 %add68, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.69

if.end.69:                                        ; preds = %if.else.67, %if.then.66
  %weight.2 = phi i64 [ %add68, %if.else.67 ], [ %add49, %if.then.66 ]
  br label %if.end.70

if.end.70:                                        ; preds = %if.end.69, %if.then.56
  %weight.3 = phi i64 [ %add57, %if.then.56 ], [ %weight.2, %if.end.69 ]
  br label %if.end.116, !dbg !1164

if.else.71:                                       ; preds = %if.else.46
  %sub72 = sub i64 %tmp33, 1, !dbg !1165
  %tmp68 = load i64*, i64** @TOP, align 8, !dbg !1168
  %arrayidx73 = getelementptr inbounds i64, i64* %tmp68, i64 %sub72, !dbg !1168
  %tmp69 = load i64, i64* %arrayidx73, align 8, !dbg !1168
  %tobool74 = icmp ne i64 %tmp69, 0, !dbg !1168
  br i1 %tobool74, label %land.lhs.true.75, label %if.else.81, !dbg !1169

land.lhs.true.75:                                 ; preds = %if.else.71
  %sub76 = sub i64 %tmp33, 1, !dbg !1170
  %tmp71 = load i64*, i64** @BOT, align 8, !dbg !1171
  %arrayidx77 = getelementptr inbounds i64, i64* %tmp71, i64 %sub76, !dbg !1171
  %tmp72 = load i64, i64* %arrayidx77, align 8, !dbg !1171
  %tobool78 = icmp ne i64 %tmp72, 0, !dbg !1171
  br i1 %tobool78, label %if.then.79, label %if.else.81, !dbg !1172

if.then.79:                                       ; preds = %land.lhs.true.75
  %add80 = add i64 0, 3, !dbg !1173
  call void @llvm.dbg.value(metadata i64 %add80, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.93, !dbg !1175

if.else.81:                                       ; preds = %land.lhs.true.75, %if.else.71
  %sub82 = sub i64 %tmp33, 1, !dbg !1176
  %tmp75 = load i64*, i64** @TOP, align 8, !dbg !1178
  %arrayidx83 = getelementptr inbounds i64, i64* %tmp75, i64 %sub82, !dbg !1178
  %tmp76 = load i64, i64* %arrayidx83, align 8, !dbg !1178
  %tobool84 = icmp ne i64 %tmp76, 0, !dbg !1178
  br i1 %tobool84, label %if.else.90, label %lor.lhs.false.85, !dbg !1179

lor.lhs.false.85:                                 ; preds = %if.else.81
  %sub86 = sub i64 %tmp33, 1, !dbg !1180
  %tmp78 = load i64*, i64** @BOT, align 8, !dbg !1181
  %arrayidx87 = getelementptr inbounds i64, i64* %tmp78, i64 %sub86, !dbg !1181
  %tmp79 = load i64, i64* %arrayidx87, align 8, !dbg !1181
  %tobool88 = icmp ne i64 %tmp79, 0, !dbg !1181
  br i1 %tobool88, label %if.else.90, label %if.then.89, !dbg !1182

if.then.89:                                       ; preds = %lor.lhs.false.85
  br label %if.end.92, !dbg !1183

if.else.90:                                       ; preds = %lor.lhs.false.85, %if.else.81
  %add91 = add i64 0, 2, !dbg !1185
  call void @llvm.dbg.value(metadata i64 %add91, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.92

if.end.92:                                        ; preds = %if.else.90, %if.then.89
  %weight.4 = phi i64 [ %add91, %if.else.90 ], [ 0, %if.then.89 ]
  br label %if.end.93

if.end.93:                                        ; preds = %if.end.92, %if.then.79
  %weight.5 = phi i64 [ %add80, %if.then.79 ], [ %weight.4, %if.end.92 ]
  %add94 = add i64 %tmp33, 1, !dbg !1187
  %tmp82 = load i64*, i64** @TOP, align 8, !dbg !1189
  %arrayidx95 = getelementptr inbounds i64, i64* %tmp82, i64 %add94, !dbg !1189
  %tmp83 = load i64, i64* %arrayidx95, align 8, !dbg !1189
  %tobool96 = icmp ne i64 %tmp83, 0, !dbg !1189
  br i1 %tobool96, label %land.lhs.true.97, label %if.else.103, !dbg !1190

land.lhs.true.97:                                 ; preds = %if.end.93
  %add98 = add i64 %tmp33, 1, !dbg !1191
  %tmp85 = load i64*, i64** @BOT, align 8, !dbg !1192
  %arrayidx99 = getelementptr inbounds i64, i64* %tmp85, i64 %add98, !dbg !1192
  %tmp86 = load i64, i64* %arrayidx99, align 8, !dbg !1192
  %tobool100 = icmp ne i64 %tmp86, 0, !dbg !1192
  br i1 %tobool100, label %if.then.101, label %if.else.103, !dbg !1193

if.then.101:                                      ; preds = %land.lhs.true.97
  %add102 = add i64 %weight.5, 3, !dbg !1194
  call void @llvm.dbg.value(metadata i64 %add102, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.115, !dbg !1196

if.else.103:                                      ; preds = %land.lhs.true.97, %if.end.93
  %add104 = add i64 %tmp33, 1, !dbg !1197
  %tmp89 = load i64*, i64** @TOP, align 8, !dbg !1199
  %arrayidx105 = getelementptr inbounds i64, i64* %tmp89, i64 %add104, !dbg !1199
  %tmp90 = load i64, i64* %arrayidx105, align 8, !dbg !1199
  %tobool106 = icmp ne i64 %tmp90, 0, !dbg !1199
  br i1 %tobool106, label %if.else.112, label %lor.lhs.false.107, !dbg !1200

lor.lhs.false.107:                                ; preds = %if.else.103
  %add108 = add i64 %tmp33, 1, !dbg !1201
  %tmp92 = load i64*, i64** @BOT, align 8, !dbg !1202
  %arrayidx109 = getelementptr inbounds i64, i64* %tmp92, i64 %add108, !dbg !1202
  %tmp93 = load i64, i64* %arrayidx109, align 8, !dbg !1202
  %tobool110 = icmp ne i64 %tmp93, 0, !dbg !1202
  br i1 %tobool110, label %if.else.112, label %if.then.111, !dbg !1203

if.then.111:                                      ; preds = %lor.lhs.false.107
  br label %if.end.114, !dbg !1204

if.else.112:                                      ; preds = %lor.lhs.false.107, %if.else.103
  %add113 = add i64 %weight.5, 2, !dbg !1206
  call void @llvm.dbg.value(metadata i64 %add113, i64 0, metadata !1108, metadata !143), !dbg !1109
  br label %if.end.114

if.end.114:                                       ; preds = %if.else.112, %if.then.111
  %weight.6 = phi i64 [ %add113, %if.else.112 ], [ %weight.5, %if.then.111 ]
  br label %if.end.115

if.end.115:                                       ; preds = %if.end.114, %if.then.101
  %weight.7 = phi i64 [ %add102, %if.then.101 ], [ %weight.6, %if.end.114 ]
  br label %if.end.116

if.end.116:                                       ; preds = %if.end.115, %if.end.70
  %weight.8 = phi i64 [ %weight.3, %if.end.70 ], [ %weight.7, %if.end.115 ]
  br label %if.end.117

if.end.117:                                       ; preds = %if.end.116, %if.end.45
  %weight.9 = phi i64 [ %weight.1, %if.end.45 ], [ %weight.8, %if.end.116 ]
  %cmp118 = icmp ult i64 %weight.9, %best.1, !dbg !1208
  br i1 %cmp118, label %if.then.119, label %if.end.123, !dbg !1210

if.then.119:                                      ; preds = %if.end.117
  call void @llvm.dbg.value(metadata i64 %weight.9, i64 0, metadata !1062, metadata !143), !dbg !1063
  %arrayidx120 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net.0, !dbg !1211
  %netsAboveHook121 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx120, i32 0, i32 0, !dbg !1213
  %tmp101 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook121, align 8, !dbg !1213
  %arrayidx122 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp101, i64 %which.0, !dbg !1211
  call void @llvm.dbg.value(metadata %struct._constraintVCGType* %arrayidx122, i64 0, metadata !1060, metadata !143), !dbg !1061
  br label %if.end.123, !dbg !1214

if.end.123:                                       ; preds = %if.then.119, %if.end.117
  %best.2 = phi i64 [ %weight.9, %if.then.119 ], [ %best.1, %if.end.117 ]
  %remove.2 = phi %struct._constraintVCGType* [ %arrayidx122, %if.then.119 ], [ %remove.1, %if.end.117 ]
  br label %if.end.124, !dbg !1215

if.end.124:                                       ; preds = %if.end.123, %land.lhs.true, %for.body.11
  %best.3 = phi i64 [ %best.1, %land.lhs.true ], [ %best.2, %if.end.123 ], [ %best.1, %for.body.11 ]
  %remove.3 = phi %struct._constraintVCGType* [ %remove.1, %land.lhs.true ], [ %remove.2, %if.end.123 ], [ %remove.1, %for.body.11 ]
  br label %for.inc, !dbg !1216

for.inc:                                          ; preds = %if.end.124
  %inc = add i64 %which.0, 1, !dbg !1217
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1078, metadata !143), !dbg !1079
  br label %for.cond.8, !dbg !1218

for.end:                                          ; preds = %for.cond.8
  %remove.1.lcssa = phi %struct._constraintVCGType* [ %remove.1, %for.cond.8 ]
  %best.1.lcssa = phi i64 [ %best.1, %for.cond.8 ]
  br label %if.end.125, !dbg !1219

if.end.125:                                       ; preds = %for.end, %for.body.4
  %best.4 = phi i64 [ %best.1.lcssa, %for.end ], [ %best.0, %for.body.4 ]
  %remove.4 = phi %struct._constraintVCGType* [ %remove.1.lcssa, %for.end ], [ %remove.0, %for.body.4 ]
  br label %for.inc.126, !dbg !1220

for.inc.126:                                      ; preds = %if.end.125
  %inc127 = add i64 %net.0, 1, !dbg !1221
  call void @llvm.dbg.value(metadata i64 %inc127, i64 0, metadata !1064, metadata !143), !dbg !1065
  br label %for.cond.2, !dbg !1222

for.end.128:                                      ; preds = %for.cond.2
  %remove.0.lcssa = phi %struct._constraintVCGType* [ %remove.0, %for.cond.2 ]
  %cmp129 = icmp ne %struct._constraintVCGType* %remove.0.lcssa, null, !dbg !1223
  br i1 %cmp129, label %cond.true, label %cond.false, !dbg !1223

cond.true:                                        ; preds = %for.end.128
  br label %cond.end, !dbg !1224

cond.false:                                       ; preds = %for.end.128
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 572, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.RemoveConstraintVCG, i32 0, i32 0)) #6, !dbg !1226
  unreachable, !dbg !1226

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %tmp105 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1228
  %call = call i32 @fflush(%struct._IO_FILE* %tmp105), !dbg !1229
  %tmp106 = load i64, i64* @removeTotalVCG, align 8, !dbg !1230
  %tmp107 = load i64, i64* @channelNets, align 8, !dbg !1230
  %add130 = add i64 %tmp107, 1, !dbg !1230
  %tmp108 = load i64, i64* @channelNets, align 8, !dbg !1230
  %add131 = add i64 %tmp108, 1, !dbg !1230
  %mul = mul i64 %add130, %add131, !dbg !1230
  %cmp132 = icmp ult i64 %tmp106, %mul, !dbg !1230
  br i1 %cmp132, label %cond.true.133, label %cond.false.134, !dbg !1230

cond.true.133:                                    ; preds = %cond.end
  br label %cond.end.135, !dbg !1231

cond.false.134:                                   ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 574, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @__PRETTY_FUNCTION__.RemoveConstraintVCG, i32 0, i32 0)) #6, !dbg !1232
  unreachable, !dbg !1232

bb109:                                            ; No predecessors!
  unreachable

cond.end.135:                                     ; preds = %cond.true.133
  %tmp111 = load i64, i64* @removeTotalVCG, align 8, !dbg !1233
  %arrayidx136 = getelementptr inbounds %struct._constraintVCGType*, %struct._constraintVCGType** %removeVCG, i64 %tmp111, !dbg !1234
  store %struct._constraintVCGType* %remove.0.lcssa, %struct._constraintVCGType** %arrayidx136, align 8, !dbg !1235
  %tmp113 = load i64, i64* @removeTotalVCG, align 8, !dbg !1236
  %inc137 = add i64 %tmp113, 1, !dbg !1236
  store i64 %inc137, i64* @removeTotalVCG, align 8, !dbg !1236
  %top138 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %remove.0.lcssa, i32 0, i32 0, !dbg !1237
  %tmp115 = load i64, i64* %top138, align 8, !dbg !1237
  call void @llvm.dbg.value(metadata i64 %tmp115, i64 0, metadata !1238, metadata !143), !dbg !1239
  %bot139 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %remove.0.lcssa, i32 0, i32 1, !dbg !1240
  %tmp117 = load i64, i64* %bot139, align 8, !dbg !1240
  call void @llvm.dbg.value(metadata i64 %tmp117, i64 0, metadata !1092, metadata !143), !dbg !1093
  %removed140 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %remove.0.lcssa, i32 0, i32 3, !dbg !1241
  store i64 1, i64* %removed140, align 8, !dbg !1242
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1078, metadata !143), !dbg !1079
  br label %for.cond.141, !dbg !1243

for.cond.141:                                     ; preds = %for.inc.155, %cond.end.135
  %which.1 = phi i64 [ 0, %cond.end.135 ], [ %inc156, %for.inc.155 ]
  %arrayidx142 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp117, !dbg !1245
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx142, i32 0, i32 5, !dbg !1247
  %tmp122 = load i64, i64* %netsBelow, align 8, !dbg !1247
  %cmp143 = icmp ult i64 %which.1, %tmp122, !dbg !1248
  br i1 %cmp143, label %for.body.144, label %for.end.157.loopexit, !dbg !1249

for.body.144:                                     ; preds = %for.cond.141
  %arrayidx145 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp117, !dbg !1250
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx145, i32 0, i32 4, !dbg !1253
  %tmp126 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !1253
  %arrayidx146 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp126, i64 %which.1, !dbg !1250
  %top147 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx146, i32 0, i32 0, !dbg !1254
  %tmp127 = load i64, i64* %top147, align 8, !dbg !1254
  %cmp148 = icmp eq i64 %tmp127, %tmp115, !dbg !1255
  br i1 %cmp148, label %if.then.149, label %if.end.154, !dbg !1256

if.then.149:                                      ; preds = %for.body.144
  %which.1.lcssa135 = phi i64 [ %which.1, %for.body.144 ]
  %arrayidx150 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp117, !dbg !1257
  %netsBelowHook151 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx150, i32 0, i32 4, !dbg !1259
  %tmp132 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook151, align 8, !dbg !1259
  %arrayidx152 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp132, i64 %which.1.lcssa135, !dbg !1257
  %removed153 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx152, i32 0, i32 3, !dbg !1260
  store i64 1, i64* %removed153, align 8, !dbg !1261
  br label %for.end.157, !dbg !1262

if.end.154:                                       ; preds = %for.body.144
  br label %for.inc.155, !dbg !1263

for.inc.155:                                      ; preds = %if.end.154
  %inc156 = add i64 %which.1, 1, !dbg !1264
  call void @llvm.dbg.value(metadata i64 %inc156, i64 0, metadata !1078, metadata !143), !dbg !1079
  br label %for.cond.141, !dbg !1265

for.end.157.loopexit:                             ; preds = %for.cond.141
  br label %for.end.157, !dbg !1266

for.end.157:                                      ; preds = %for.end.157.loopexit, %if.then.149
  br label %if.end.158, !dbg !1266

if.end.158:                                       ; preds = %for.end.157, %for.body
  br label %for.inc.159, !dbg !1267

for.inc.159:                                      ; preds = %if.end.158
  %inc160 = add i64 %scc.0, 1, !dbg !1268
  call void @llvm.dbg.value(metadata i64 %inc160, i64 0, metadata !1047, metadata !143), !dbg !1048
  br label %for.cond, !dbg !1269

for.end.161:                                      ; preds = %for.cond
  ret void, !dbg !1270
}

declare i32 @fflush(%struct._IO_FILE*) #4

; Function Attrs: nounwind uwtable
define i64 @ExistPathAboveVCG(%struct._nodeVCGType* %VCG, i64 %above, i64 %below) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !1271, metadata !143), !dbg !1272
  call void @llvm.dbg.value(metadata i64 %above, i64 0, metadata !1273, metadata !143), !dbg !1274
  call void @llvm.dbg.value(metadata i64 %below, i64 0, metadata !1275, metadata !143), !dbg !1276
  call void @DFSClearVCG(%struct._nodeVCGType* %VCG), !dbg !1277
  call void @DFSAboveVCG(%struct._nodeVCGType* %VCG, i64 %above), !dbg !1278
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %below, !dbg !1279
  %netsAboveReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 3, !dbg !1280
  %tmp5 = load i64, i64* %netsAboveReached, align 8, !dbg !1280
  ret i64 %tmp5, !dbg !1281
}

; Function Attrs: nounwind uwtable
define void @LongestPathVCG(%struct._nodeVCGType* %VCG, i64 %net) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !1282, metadata !143), !dbg !1283
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !1284, metadata !143), !dbg !1285
  call void @DFSClearVCG(%struct._nodeVCGType* %VCG), !dbg !1286
  %call = call i64 @DFSAboveLongestPathVCG(%struct._nodeVCGType* %VCG, i64 %net), !dbg !1287
  %sub = sub i64 %call, 1, !dbg !1288
  store i64 %sub, i64* @cardBotNotPref, align 8, !dbg !1289
  %tmp3 = load i64, i64* @cardBotNotPref, align 8, !dbg !1290
  call void @llvm.dbg.value(metadata i64 %tmp3, i64 0, metadata !1291, metadata !143), !dbg !1292
  %tmp4 = load i64, i64* @channelTracks, align 8, !dbg !1293
  call void @llvm.dbg.value(metadata i64 %tmp4, i64 0, metadata !1295, metadata !143), !dbg !1296
  br label %for.cond, !dbg !1297

for.cond:                                         ; preds = %for.inc, %entry
  %bot.0 = phi i64 [ %tmp3, %entry ], [ %bot.1, %for.inc ]
  %track.0 = phi i64 [ %tmp4, %entry ], [ %dec3, %for.inc ]
  %cmp = icmp uge i64 %track.0, 1, !dbg !1298
  br i1 %cmp, label %for.body, label %for.end, !dbg !1300

for.body:                                         ; preds = %for.cond
  %cmp1 = icmp ugt i64 %bot.0, 0, !dbg !1301
  br i1 %cmp1, label %if.then, label %if.else, !dbg !1304

if.then:                                          ; preds = %for.body
  %tmp8 = load i64*, i64** @tracksBotNotPref, align 8, !dbg !1305
  %arrayidx = getelementptr inbounds i64, i64* %tmp8, i64 %track.0, !dbg !1305
  store i64 1, i64* %arrayidx, align 8, !dbg !1307
  %dec = add i64 %bot.0, -1, !dbg !1308
  call void @llvm.dbg.value(metadata i64 %dec, i64 0, metadata !1291, metadata !143), !dbg !1292
  br label %if.end, !dbg !1309

if.else:                                          ; preds = %for.body
  %tmp11 = load i64*, i64** @tracksBotNotPref, align 8, !dbg !1310
  %arrayidx2 = getelementptr inbounds i64, i64* %tmp11, i64 %track.0, !dbg !1310
  store i64 0, i64* %arrayidx2, align 8, !dbg !1312
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %bot.1 = phi i64 [ %dec, %if.then ], [ %bot.0, %if.else ]
  br label %for.inc, !dbg !1313

for.inc:                                          ; preds = %if.end
  %dec3 = add i64 %track.0, -1, !dbg !1314
  call void @llvm.dbg.value(metadata i64 %dec3, i64 0, metadata !1295, metadata !143), !dbg !1296
  br label %for.cond, !dbg !1315

for.end:                                          ; preds = %for.cond
  call void @DFSClearVCG(%struct._nodeVCGType* %VCG), !dbg !1316
  %call4 = call i64 @DFSBelowLongestPathVCG(%struct._nodeVCGType* %VCG, i64 %net), !dbg !1317
  %sub5 = sub i64 %call4, 1, !dbg !1318
  store i64 %sub5, i64* @cardTopNotPref, align 8, !dbg !1319
  %tmp16 = load i64, i64* @cardTopNotPref, align 8, !dbg !1320
  call void @llvm.dbg.value(metadata i64 %tmp16, i64 0, metadata !1321, metadata !143), !dbg !1322
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1295, metadata !143), !dbg !1296
  br label %for.cond.6, !dbg !1323

for.cond.6:                                       ; preds = %for.inc.16, %for.end
  %track.1 = phi i64 [ 1, %for.end ], [ %inc, %for.inc.16 ]
  %top.0 = phi i64 [ %tmp16, %for.end ], [ %top.1, %for.inc.16 ]
  %tmp18 = load i64, i64* @channelTracks, align 8, !dbg !1325
  %cmp7 = icmp ule i64 %track.1, %tmp18, !dbg !1327
  br i1 %cmp7, label %for.body.8, label %for.end.17, !dbg !1328

for.body.8:                                       ; preds = %for.cond.6
  %cmp9 = icmp ugt i64 %top.0, 0, !dbg !1329
  br i1 %cmp9, label %if.then.10, label %if.else.13, !dbg !1332

if.then.10:                                       ; preds = %for.body.8
  %tmp21 = load i64*, i64** @tracksTopNotPref, align 8, !dbg !1333
  %arrayidx11 = getelementptr inbounds i64, i64* %tmp21, i64 %track.1, !dbg !1333
  store i64 1, i64* %arrayidx11, align 8, !dbg !1335
  %dec12 = add i64 %top.0, -1, !dbg !1336
  call void @llvm.dbg.value(metadata i64 %dec12, i64 0, metadata !1321, metadata !143), !dbg !1322
  br label %if.end.15, !dbg !1337

if.else.13:                                       ; preds = %for.body.8
  %tmp24 = load i64*, i64** @tracksTopNotPref, align 8, !dbg !1338
  %arrayidx14 = getelementptr inbounds i64, i64* %tmp24, i64 %track.1, !dbg !1338
  store i64 0, i64* %arrayidx14, align 8, !dbg !1340
  br label %if.end.15

if.end.15:                                        ; preds = %if.else.13, %if.then.10
  %top.1 = phi i64 [ %dec12, %if.then.10 ], [ %top.0, %if.else.13 ]
  br label %for.inc.16, !dbg !1341

for.inc.16:                                       ; preds = %if.end.15
  %inc = add i64 %track.1, 1, !dbg !1342
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1295, metadata !143), !dbg !1296
  br label %for.cond.6, !dbg !1343

for.end.17:                                       ; preds = %for.cond.6
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1344, metadata !143), !dbg !1345
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1295, metadata !143), !dbg !1296
  br label %for.cond.18, !dbg !1346

for.cond.18:                                      ; preds = %for.inc.30, %for.end.17
  %track.2 = phi i64 [ 1, %for.end.17 ], [ %inc31, %for.inc.30 ]
  %not.0 = phi i64 [ 0, %for.end.17 ], [ %not.1, %for.inc.30 ]
  %tmp27 = load i64, i64* @channelTracks, align 8, !dbg !1348
  %cmp19 = icmp ule i64 %track.2, %tmp27, !dbg !1350
  br i1 %cmp19, label %for.body.20, label %for.end.32, !dbg !1351

for.body.20:                                      ; preds = %for.cond.18
  %tmp29 = load i64*, i64** @tracksTopNotPref, align 8, !dbg !1352
  %arrayidx21 = getelementptr inbounds i64, i64* %tmp29, i64 %track.2, !dbg !1352
  %tmp30 = load i64, i64* %arrayidx21, align 8, !dbg !1352
  %tobool = icmp ne i64 %tmp30, 0, !dbg !1352
  br i1 %tobool, label %if.then.24, label %lor.lhs.false, !dbg !1355

lor.lhs.false:                                    ; preds = %for.body.20
  %tmp32 = load i64*, i64** @tracksBotNotPref, align 8, !dbg !1356
  %arrayidx22 = getelementptr inbounds i64, i64* %tmp32, i64 %track.2, !dbg !1356
  %tmp33 = load i64, i64* %arrayidx22, align 8, !dbg !1356
  %tobool23 = icmp ne i64 %tmp33, 0, !dbg !1356
  br i1 %tobool23, label %if.then.24, label %if.else.27, !dbg !1357

if.then.24:                                       ; preds = %lor.lhs.false, %for.body.20
  %tmp35 = load i64*, i64** @tracksNotPref, align 8, !dbg !1358
  %arrayidx25 = getelementptr inbounds i64, i64* %tmp35, i64 %track.2, !dbg !1358
  store i64 1, i64* %arrayidx25, align 8, !dbg !1360
  %inc26 = add i64 %not.0, 1, !dbg !1361
  call void @llvm.dbg.value(metadata i64 %inc26, i64 0, metadata !1344, metadata !143), !dbg !1345
  br label %if.end.29, !dbg !1362

if.else.27:                                       ; preds = %lor.lhs.false
  %tmp38 = load i64*, i64** @tracksNotPref, align 8, !dbg !1363
  %arrayidx28 = getelementptr inbounds i64, i64* %tmp38, i64 %track.2, !dbg !1363
  store i64 0, i64* %arrayidx28, align 8, !dbg !1365
  br label %if.end.29

if.end.29:                                        ; preds = %if.else.27, %if.then.24
  %not.1 = phi i64 [ %inc26, %if.then.24 ], [ %not.0, %if.else.27 ]
  br label %for.inc.30, !dbg !1366

for.inc.30:                                       ; preds = %if.end.29
  %inc31 = add i64 %track.2, 1, !dbg !1367
  call void @llvm.dbg.value(metadata i64 %inc31, i64 0, metadata !1295, metadata !143), !dbg !1296
  br label %for.cond.18, !dbg !1368

for.end.32:                                       ; preds = %for.cond.18
  %not.0.lcssa = phi i64 [ %not.0, %for.cond.18 ]
  store i64 %not.0.lcssa, i64* @cardNotPref, align 8, !dbg !1369
  ret void, !dbg !1370
}

; Function Attrs: nounwind uwtable
define i64 @DFSAboveLongestPathVCG(%struct._nodeVCGType* %VCG, i64 %net) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !1371, metadata !143), !dbg !1372
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !1373, metadata !143), !dbg !1374
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1375, metadata !143), !dbg !1376
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1377
  %netsAboveReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 3, !dbg !1378
  store i64 1, i64* %netsAboveReached, align 8, !dbg !1379
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1380, metadata !143), !dbg !1381
  br label %for.cond, !dbg !1382

for.cond:                                         ; preds = %for.inc, %entry
  %s.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ]
  %longest.0 = phi i64 [ 0, %entry ], [ %longest.3, %for.inc ]
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1384
  %netsAbove = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 1, !dbg !1386
  %tmp5 = load i64, i64* %netsAbove, align 8, !dbg !1386
  %cmp = icmp ult i64 %s.0, %tmp5, !dbg !1387
  br i1 %cmp, label %for.body, label %for.end, !dbg !1388

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1389
  %netsAboveHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 0, !dbg !1392
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook, align 8, !dbg !1392
  %arrayidx3 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %s.0, !dbg !1389
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx3, i32 0, i32 3, !dbg !1393
  %tmp10 = load i64, i64* %removed, align 8, !dbg !1393
  %tobool = icmp ne i64 %tmp10, 0, !dbg !1389
  br i1 %tobool, label %if.end.18, label %if.then, !dbg !1394

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1395
  %netsAboveHook5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 0, !dbg !1395
  %tmp14 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook5, align 8, !dbg !1395
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp14, i64 %s.0, !dbg !1395
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 0, !dbg !1395
  %tmp15 = load i64, i64* %top, align 8, !dbg !1395
  %cmp7 = icmp eq i64 %tmp15, %net, !dbg !1395
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !1395

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !1397

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 676, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.DFSAboveLongestPathVCG, i32 0, i32 0)) #6, !dbg !1399
  unreachable, !dbg !1399

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1401
  %netsAboveHook9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx8, i32 0, i32 0, !dbg !1402
  %tmp20 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsAboveHook9, align 8, !dbg !1402
  %arrayidx10 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp20, i64 %s.0, !dbg !1401
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx10, i32 0, i32 1, !dbg !1403
  %tmp21 = load i64, i64* %bot, align 8, !dbg !1403
  call void @llvm.dbg.value(metadata i64 %tmp21, i64 0, metadata !1404, metadata !143), !dbg !1405
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp21, !dbg !1406
  %netsAboveReached12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 3, !dbg !1408
  %tmp24 = load i64, i64* %netsAboveReached12, align 8, !dbg !1408
  %tobool13 = icmp ne i64 %tmp24, 0, !dbg !1406
  br i1 %tobool13, label %if.end.17, label %if.then.14, !dbg !1409

if.then.14:                                       ; preds = %cond.end
  %call = call i64 @DFSAboveLongestPathVCG(%struct._nodeVCGType* %VCG, i64 %tmp21), !dbg !1410
  call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1412, metadata !143), !dbg !1413
  %cmp15 = icmp ugt i64 %call, %longest.0, !dbg !1414
  br i1 %cmp15, label %if.then.16, label %if.end, !dbg !1416

if.then.16:                                       ; preds = %if.then.14
  call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1375, metadata !143), !dbg !1376
  br label %if.end, !dbg !1417

if.end:                                           ; preds = %if.then.16, %if.then.14
  %longest.1 = phi i64 [ %call, %if.then.16 ], [ %longest.0, %if.then.14 ]
  br label %if.end.17, !dbg !1419

if.end.17:                                        ; preds = %if.end, %cond.end
  %longest.2 = phi i64 [ %longest.0, %cond.end ], [ %longest.1, %if.end ]
  br label %if.end.18, !dbg !1420

if.end.18:                                        ; preds = %if.end.17, %for.body
  %longest.3 = phi i64 [ %longest.0, %for.body ], [ %longest.2, %if.end.17 ]
  br label %for.inc, !dbg !1421

for.inc:                                          ; preds = %if.end.18
  %inc = add i64 %s.0, 1, !dbg !1422
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1380, metadata !143), !dbg !1381
  br label %for.cond, !dbg !1423

for.end:                                          ; preds = %for.cond
  %longest.0.lcssa = phi i64 [ %longest.0, %for.cond ]
  %add = add i64 %longest.0.lcssa, 1, !dbg !1424
  ret i64 %add, !dbg !1425
}

; Function Attrs: nounwind uwtable
define i64 @DFSBelowLongestPathVCG(%struct._nodeVCGType* %VCG, i64 %net) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !1426, metadata !143), !dbg !1427
  call void @llvm.dbg.value(metadata i64 %net, i64 0, metadata !1428, metadata !143), !dbg !1429
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1430, metadata !143), !dbg !1431
  %arrayidx = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1432
  %netsBelowReached = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx, i32 0, i32 7, !dbg !1433
  store i64 1, i64* %netsBelowReached, align 8, !dbg !1434
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1435, metadata !143), !dbg !1436
  br label %for.cond, !dbg !1437

for.cond:                                         ; preds = %for.inc, %entry
  %s.0 = phi i64 [ 0, %entry ], [ %inc, %for.inc ]
  %longest.0 = phi i64 [ 0, %entry ], [ %longest.3, %for.inc ]
  %arrayidx1 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1439
  %netsBelow = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx1, i32 0, i32 5, !dbg !1441
  %tmp5 = load i64, i64* %netsBelow, align 8, !dbg !1441
  %cmp = icmp ult i64 %s.0, %tmp5, !dbg !1442
  br i1 %cmp, label %for.body, label %for.end, !dbg !1443

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1444
  %netsBelowHook = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx2, i32 0, i32 4, !dbg !1447
  %tmp9 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook, align 8, !dbg !1447
  %arrayidx3 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp9, i64 %s.0, !dbg !1444
  %removed = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx3, i32 0, i32 3, !dbg !1448
  %tmp10 = load i64, i64* %removed, align 8, !dbg !1448
  %tobool = icmp ne i64 %tmp10, 0, !dbg !1444
  br i1 %tobool, label %if.end.18, label %if.then, !dbg !1449

if.then:                                          ; preds = %for.body
  %arrayidx4 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1450
  %netsBelowHook5 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx4, i32 0, i32 4, !dbg !1450
  %tmp14 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook5, align 8, !dbg !1450
  %arrayidx6 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp14, i64 %s.0, !dbg !1450
  %bot = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx6, i32 0, i32 1, !dbg !1450
  %tmp15 = load i64, i64* %bot, align 8, !dbg !1450
  %cmp7 = icmp eq i64 %tmp15, %net, !dbg !1450
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !1450

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !1452

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 700, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.DFSBelowLongestPathVCG, i32 0, i32 0)) #6, !dbg !1454
  unreachable, !dbg !1454

bb:                                               ; No predecessors!
  unreachable

cond.end:                                         ; preds = %cond.true
  %arrayidx8 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %net, !dbg !1456
  %netsBelowHook9 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx8, i32 0, i32 4, !dbg !1457
  %tmp20 = load %struct._constraintVCGType*, %struct._constraintVCGType** %netsBelowHook9, align 8, !dbg !1457
  %arrayidx10 = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %tmp20, i64 %s.0, !dbg !1456
  %top = getelementptr inbounds %struct._constraintVCGType, %struct._constraintVCGType* %arrayidx10, i32 0, i32 0, !dbg !1458
  %tmp21 = load i64, i64* %top, align 8, !dbg !1458
  call void @llvm.dbg.value(metadata i64 %tmp21, i64 0, metadata !1459, metadata !143), !dbg !1460
  %arrayidx11 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %VCG, i64 %tmp21, !dbg !1461
  %netsBelowReached12 = getelementptr inbounds %struct._nodeVCGType, %struct._nodeVCGType* %arrayidx11, i32 0, i32 7, !dbg !1463
  %tmp24 = load i64, i64* %netsBelowReached12, align 8, !dbg !1463
  %tobool13 = icmp ne i64 %tmp24, 0, !dbg !1461
  br i1 %tobool13, label %if.end.17, label %if.then.14, !dbg !1464

if.then.14:                                       ; preds = %cond.end
  %call = call i64 @DFSBelowLongestPathVCG(%struct._nodeVCGType* %VCG, i64 %tmp21), !dbg !1465
  call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1467, metadata !143), !dbg !1468
  %cmp15 = icmp ugt i64 %call, %longest.0, !dbg !1469
  br i1 %cmp15, label %if.then.16, label %if.end, !dbg !1471

if.then.16:                                       ; preds = %if.then.14
  call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !1430, metadata !143), !dbg !1431
  br label %if.end, !dbg !1472

if.end:                                           ; preds = %if.then.16, %if.then.14
  %longest.1 = phi i64 [ %call, %if.then.16 ], [ %longest.0, %if.then.14 ]
  br label %if.end.17, !dbg !1474

if.end.17:                                        ; preds = %if.end, %cond.end
  %longest.2 = phi i64 [ %longest.0, %cond.end ], [ %longest.1, %if.end ]
  br label %if.end.18, !dbg !1475

if.end.18:                                        ; preds = %if.end.17, %for.body
  %longest.3 = phi i64 [ %longest.0, %for.body ], [ %longest.2, %if.end.17 ]
  br label %for.inc, !dbg !1476

for.inc:                                          ; preds = %if.end.18
  %inc = add i64 %s.0, 1, !dbg !1477
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1435, metadata !143), !dbg !1436
  br label %for.cond, !dbg !1478

for.end:                                          ; preds = %for.cond
  %longest.0.lcssa = phi i64 [ %longest.0, %for.cond ]
  %add = add i64 %longest.0.lcssa, 1, !dbg !1479
  ret i64 %add, !dbg !1480
}

; Function Attrs: nounwind uwtable
define i64 @VCV(%struct._nodeVCGType* %VCG, i64 %check, i64 %track, i64* %assign) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct._nodeVCGType* %VCG, i64 0, metadata !1481, metadata !143), !dbg !1482
  call void @llvm.dbg.value(metadata i64 %check, i64 0, metadata !1483, metadata !143), !dbg !1484
  call void @llvm.dbg.value(metadata i64 %track, i64 0, metadata !1485, metadata !143), !dbg !1486
  call void @llvm.dbg.value(metadata i64* %assign, i64 0, metadata !1487, metadata !143), !dbg !1488
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1489, metadata !143), !dbg !1490
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1491, metadata !143), !dbg !1492
  br label %for.cond, !dbg !1493

for.cond:                                         ; preds = %for.inc, %entry
  %net.0 = phi i64 [ 1, %entry ], [ %inc25, %for.inc ]
  %vcv.0 = phi i64 [ 0, %entry ], [ %vcv.6, %for.inc ]
  %tmp1 = load i64, i64* @channelNets, align 8, !dbg !1495
  %cmp = icmp ule i64 %net.0, %tmp1, !dbg !1497
  br i1 %cmp, label %for.body, label %for.end, !dbg !1498

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i64, i64* %assign, i64 %net.0, !dbg !1499
  %tmp4 = load i64, i64* %arrayidx, align 8, !dbg !1499
  %tobool = icmp ne i64 %tmp4, 0, !dbg !1499
  br i1 %tobool, label %if.then, label %if.end.24, !dbg !1502

if.then:                                          ; preds = %for.body
  %arrayidx1 = getelementptr inbounds i64, i64* %assign, i64 %net.0, !dbg !1503
  %tmp7 = load i64, i64* %arrayidx1, align 8, !dbg !1503
  %cmp2 = icmp ult i64 %tmp7, %track, !dbg !1506
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !1507

if.then.3:                                        ; preds = %if.then
  %call = call i64 @ExistPathAboveVCG(%struct._nodeVCGType* %VCG, i64 %net.0, i64 %check), !dbg !1508
  %tobool4 = icmp ne i64 %call, 0, !dbg !1508
  br i1 %tobool4, label %if.then.5, label %if.end, !dbg !1511

if.then.5:                                        ; preds = %if.then.3
  %inc = add i64 %vcv.0, 1, !dbg !1512
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !1489, metadata !143), !dbg !1490
  br label %if.end, !dbg !1514

if.end:                                           ; preds = %if.then.5, %if.then.3
  %vcv.1 = phi i64 [ %inc, %if.then.5 ], [ %vcv.0, %if.then.3 ]
  br label %if.end.23, !dbg !1515

if.else:                                          ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i64, i64* %assign, i64 %net.0, !dbg !1516
  %tmp15 = load i64, i64* %arrayidx6, align 8, !dbg !1516
  %cmp7 = icmp ugt i64 %tmp15, %track, !dbg !1518
  br i1 %cmp7, label %if.then.8, label %if.else.14, !dbg !1519

if.then.8:                                        ; preds = %if.else
  %call9 = call i64 @ExistPathAboveVCG(%struct._nodeVCGType* %VCG, i64 %check, i64 %net.0), !dbg !1520
  %tobool10 = icmp ne i64 %call9, 0, !dbg !1520
  br i1 %tobool10, label %if.then.11, label %if.end.13, !dbg !1523

if.then.11:                                       ; preds = %if.then.8
  %inc12 = add i64 %vcv.0, 1, !dbg !1524
  call void @llvm.dbg.value(metadata i64 %inc12, i64 0, metadata !1489, metadata !143), !dbg !1490
  br label %if.end.13, !dbg !1526

if.end.13:                                        ; preds = %if.then.11, %if.then.8
  %vcv.2 = phi i64 [ %inc12, %if.then.11 ], [ %vcv.0, %if.then.8 ]
  br label %if.end.22, !dbg !1527

if.else.14:                                       ; preds = %if.else
  %call15 = call i64 @ExistPathAboveVCG(%struct._nodeVCGType* %VCG, i64 %net.0, i64 %check), !dbg !1528
  %tobool16 = icmp ne i64 %call15, 0, !dbg !1528
  br i1 %tobool16, label %if.then.19, label %lor.lhs.false, !dbg !1531

lor.lhs.false:                                    ; preds = %if.else.14
  %call17 = call i64 @ExistPathAboveVCG(%struct._nodeVCGType* %VCG, i64 %check, i64 %net.0), !dbg !1532
  %tobool18 = icmp ne i64 %call17, 0, !dbg !1532
  br i1 %tobool18, label %if.then.19, label %if.end.21, !dbg !1533

if.then.19:                                       ; preds = %lor.lhs.false, %if.else.14
  %inc20 = add i64 %vcv.0, 1, !dbg !1534
  call void @llvm.dbg.value(metadata i64 %inc20, i64 0, metadata !1489, metadata !143), !dbg !1490
  br label %if.end.21, !dbg !1536

if.end.21:                                        ; preds = %if.then.19, %lor.lhs.false
  %vcv.3 = phi i64 [ %inc20, %if.then.19 ], [ %vcv.0, %lor.lhs.false ]
  br label %if.end.22

if.end.22:                                        ; preds = %if.end.21, %if.end.13
  %vcv.4 = phi i64 [ %vcv.2, %if.end.13 ], [ %vcv.3, %if.end.21 ]
  br label %if.end.23

if.end.23:                                        ; preds = %if.end.22, %if.end
  %vcv.5 = phi i64 [ %vcv.1, %if.end ], [ %vcv.4, %if.end.22 ]
  br label %if.end.24, !dbg !1537

if.end.24:                                        ; preds = %if.end.23, %for.body
  %vcv.6 = phi i64 [ %vcv.5, %if.end.23 ], [ %vcv.0, %for.body ]
  br label %for.inc, !dbg !1538

for.inc:                                          ; preds = %if.end.24
  %inc25 = add i64 %net.0, 1, !dbg !1539
  call void @llvm.dbg.value(metadata i64 %inc25, i64 0, metadata !1491, metadata !143), !dbg !1492
  br label %for.cond, !dbg !1540

for.end:                                          ; preds = %for.cond
  %vcv.0.lcssa = phi i64 [ %vcv.0, %for.cond ]
  ret i64 %vcv.0.lcssa, !dbg !1541
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!81, !82}
!llvm.ident = !{!83}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !29, globals: !71)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Ptrdist/yacr2")
!2 = !{}
!3 = !{!4, !10, !26, !27, !28}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "nodeVCGType", file: !6, line: 57, baseType: !7)
!6 = !DIFile(filename: "./vcg.h", directory: "/home/gleison/tf/Benchmarks/Ptrdist/yacr2")
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "_nodeVCGType", file: !6, line: 48, size: 512, align: 64, elements: !8)
!8 = !{!9, !19, !20, !21, !22, !23, !24, !25}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "netsAboveHook", scope: !7, file: !6, line: 49, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "constraintVCGType", file: !6, line: 46, baseType: !12)
!12 = !DICompositeType(tag: DW_TAG_structure_type, name: "_constraintVCGType", file: !6, line: 41, size: 256, align: 64, elements: !13)
!13 = !{!14, !16, !17, !18}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12, file: !6, line: 42, baseType: !15, size: 64, align: 64)
!15 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "bot", scope: !12, file: !6, line: 43, baseType: !15, size: 64, align: 64, offset: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !12, file: !6, line: 44, baseType: !15, size: 64, align: 64, offset: 128)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !12, file: !6, line: 45, baseType: !15, size: 64, align: 64, offset: 192)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "netsAbove", scope: !7, file: !6, line: 50, baseType: !15, size: 64, align: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "netsAboveLabel", scope: !7, file: !6, line: 51, baseType: !15, size: 64, align: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "netsAboveReached", scope: !7, file: !6, line: 52, baseType: !15, size: 64, align: 64, offset: 192)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "netsBelowHook", scope: !7, file: !6, line: 53, baseType: !10, size: 64, align: 64, offset: 256)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "netsBelow", scope: !7, file: !6, line: 54, baseType: !15, size: 64, align: 64, offset: 320)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "netsBelowLabel", scope: !7, file: !6, line: 55, baseType: !15, size: 64, align: 64, offset: 384)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "netsBelowReached", scope: !7, file: !6, line: 56, baseType: !15, size: 64, align: 64, offset: 448)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!29 = !{!30, !34, !35, !36, !39, !40, !43, !44, !47, !50, !53, !56, !57, !60, !63, !64, !67, !68}
!30 = !DISubprogram(name: "AllocVCG", scope: !31, file: !31, line: 30, type: !32, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @AllocVCG, variables: !2)
!31 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Ptrdist/yacr2/tmp.c", directory: "/home/gleison/tf/Benchmarks/Ptrdist/yacr2")
!32 = !DISubroutineType(types: !33)
!33 = !{null}
!34 = !DISubprogram(name: "FreeVCG", scope: !31, file: !31, line: 40, type: !32, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @FreeVCG, variables: !2)
!35 = !DISubprogram(name: "BuildVCG", scope: !31, file: !31, line: 49, type: !32, isLocal: false, isDefinition: true, scopeLine: 49, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @BuildVCG, variables: !2)
!36 = !DISubprogram(name: "DFSClearVCG", scope: !31, file: !31, line: 137, type: !37, isLocal: false, isDefinition: true, scopeLine: 137, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*)* @DFSClearVCG, variables: !2)
!37 = !DISubroutineType(types: !38)
!38 = !{null, !4}
!39 = !DISubprogram(name: "DumpVCG", scope: !31, file: !31, line: 148, type: !37, isLocal: false, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*)* @DumpVCG, variables: !2)
!40 = !DISubprogram(name: "DFSAboveVCG", scope: !31, file: !31, line: 174, type: !41, isLocal: false, isDefinition: true, scopeLine: 175, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64)* @DFSAboveVCG, variables: !2)
!41 = !DISubroutineType(types: !42)
!42 = !{null, !4, !15}
!43 = !DISubprogram(name: "DFSBelowVCG", scope: !31, file: !31, line: 191, type: !41, isLocal: false, isDefinition: true, scopeLine: 192, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64)* @DFSBelowVCG, variables: !2)
!44 = !DISubprogram(name: "SCCofVCG", scope: !31, file: !31, line: 208, type: !45, isLocal: false, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64*, i64*)* @SCCofVCG, variables: !2)
!45 = !DISubroutineType(types: !46)
!46 = !{null, !4, !26, !26}
!47 = !DISubprogram(name: "SCC_DFSAboveVCG", scope: !31, file: !31, line: 285, type: !48, isLocal: false, isDefinition: true, scopeLine: 287, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64, i64*)* @SCC_DFSAboveVCG, variables: !2)
!48 = !DISubroutineType(types: !49)
!49 = !{null, !4, !15, !26}
!50 = !DISubprogram(name: "SCC_DFSBelowVCG", scope: !31, file: !31, line: 305, type: !51, isLocal: false, isDefinition: true, scopeLine: 307, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64, i64)* @SCC_DFSBelowVCG, variables: !2)
!51 = !DISubroutineType(types: !52)
!52 = !{null, !4, !15, !15}
!53 = !DISubprogram(name: "DumpSCC", scope: !31, file: !31, line: 324, type: !54, isLocal: false, isDefinition: true, scopeLine: 325, flags: DIFlagPrototyped, isOptimized: false, function: void (i64*, i64*)* @DumpSCC, variables: !2)
!54 = !DISubroutineType(types: !55)
!55 = !{null, !26, !26}
!56 = !DISubprogram(name: "AcyclicVCG", scope: !31, file: !31, line: 342, type: !32, isLocal: false, isDefinition: true, scopeLine: 342, flags: DIFlagPrototyped, isOptimized: false, function: void ()* @AcyclicVCG, variables: !2)
!57 = !DISubprogram(name: "RemoveConstraintVCG", scope: !31, file: !31, line: 470, type: !58, isLocal: false, isDefinition: true, scopeLine: 473, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64*, i64*, %struct._constraintVCGType**)* @RemoveConstraintVCG, variables: !2)
!58 = !DISubroutineType(types: !59)
!59 = !{null, !4, !26, !26, !27}
!60 = !DISubprogram(name: "ExistPathAboveVCG", scope: !31, file: !31, line: 598, type: !61, isLocal: false, isDefinition: true, scopeLine: 600, flags: DIFlagPrototyped, isOptimized: false, function: i64 (%struct._nodeVCGType*, i64, i64)* @ExistPathAboveVCG, variables: !2)
!61 = !DISubroutineType(types: !62)
!62 = !{!15, !4, !15, !15}
!63 = !DISubprogram(name: "LongestPathVCG", scope: !31, file: !31, line: 606, type: !41, isLocal: false, isDefinition: true, scopeLine: 607, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct._nodeVCGType*, i64)* @LongestPathVCG, variables: !2)
!64 = !DISubprogram(name: "DFSAboveLongestPathVCG", scope: !31, file: !31, line: 665, type: !65, isLocal: false, isDefinition: true, scopeLine: 666, flags: DIFlagPrototyped, isOptimized: false, function: i64 (%struct._nodeVCGType*, i64)* @DFSAboveLongestPathVCG, variables: !2)
!65 = !DISubroutineType(types: !66)
!66 = !{!15, !4, !15}
!67 = !DISubprogram(name: "DFSBelowLongestPathVCG", scope: !31, file: !31, line: 689, type: !65, isLocal: false, isDefinition: true, scopeLine: 690, flags: DIFlagPrototyped, isOptimized: false, function: i64 (%struct._nodeVCGType*, i64)* @DFSBelowLongestPathVCG, variables: !2)
!68 = !DISubprogram(name: "VCV", scope: !31, file: !31, line: 713, type: !69, isLocal: false, isDefinition: true, scopeLine: 716, flags: DIFlagPrototyped, isOptimized: false, function: i64 (%struct._nodeVCGType*, i64, i64, i64*)* @VCV, variables: !2)
!69 = !DISubroutineType(types: !70)
!70 = !{!15, !4, !15, !15, !26}
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80}
!72 = !DIGlobalVariable(name: "VCG", scope: !0, file: !6, line: 68, type: !4, isLocal: false, isDefinition: true, variable: %struct._nodeVCGType** @VCG)
!73 = !DIGlobalVariable(name: "storageRootVCG", scope: !0, file: !6, line: 69, type: !10, isLocal: false, isDefinition: true, variable: %struct._constraintVCGType** @storageRootVCG)
!74 = !DIGlobalVariable(name: "storageVCG", scope: !0, file: !6, line: 70, type: !10, isLocal: false, isDefinition: true, variable: %struct._constraintVCGType** @storageVCG)
!75 = !DIGlobalVariable(name: "storageLimitVCG", scope: !0, file: !6, line: 71, type: !15, isLocal: false, isDefinition: true, variable: i64* @storageLimitVCG)
!76 = !DIGlobalVariable(name: "removeVCG", scope: !0, file: !6, line: 72, type: !27, isLocal: false, isDefinition: true, variable: %struct._constraintVCGType*** @removeVCG)
!77 = !DIGlobalVariable(name: "removeTotalVCG", scope: !0, file: !6, line: 73, type: !15, isLocal: false, isDefinition: true, variable: i64* @removeTotalVCG)
!78 = !DIGlobalVariable(name: "SCC", scope: !0, file: !6, line: 74, type: !26, isLocal: false, isDefinition: true, variable: i64** @SCC)
!79 = !DIGlobalVariable(name: "totalSCC", scope: !0, file: !6, line: 75, type: !15, isLocal: false, isDefinition: true, variable: i64* @totalSCC)
!80 = !DIGlobalVariable(name: "perSCC", scope: !0, file: !6, line: 76, type: !26, isLocal: false, isDefinition: true, variable: i64** @perSCC)
!81 = !{i32 2, !"Dwarf Version", i32 4}
!82 = !{i32 2, !"Debug Info Version", i32 3}
!83 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!84 = !DILocation(line: 31, column: 32, scope: !30)
!85 = !DILocation(line: 31, column: 44, scope: !30)
!86 = !DILocation(line: 31, column: 49, scope: !30)
!87 = !DILocation(line: 31, column: 24, scope: !30)
!88 = !DILocation(line: 31, column: 9, scope: !30)
!89 = !DILocation(line: 31, column: 7, scope: !30)
!90 = !DILocation(line: 32, column: 49, scope: !30)
!91 = !DILocation(line: 32, column: 61, scope: !30)
!92 = !DILocation(line: 32, column: 69, scope: !30)
!93 = !DILocation(line: 32, column: 81, scope: !30)
!94 = !DILocation(line: 32, column: 66, scope: !30)
!95 = !DILocation(line: 32, column: 86, scope: !30)
!96 = !DILocation(line: 32, column: 41, scope: !30)
!97 = !DILocation(line: 32, column: 20, scope: !30)
!98 = !DILocation(line: 32, column: 18, scope: !30)
!99 = !DILocation(line: 33, column: 16, scope: !30)
!100 = !DILocation(line: 33, column: 14, scope: !30)
!101 = !DILocation(line: 34, column: 22, scope: !30)
!102 = !DILocation(line: 34, column: 34, scope: !30)
!103 = !DILocation(line: 34, column: 42, scope: !30)
!104 = !DILocation(line: 34, column: 54, scope: !30)
!105 = !DILocation(line: 34, column: 39, scope: !30)
!106 = !DILocation(line: 34, column: 19, scope: !30)
!107 = !DILocation(line: 35, column: 26, scope: !30)
!108 = !DILocation(line: 35, column: 38, scope: !30)
!109 = !DILocation(line: 35, column: 43, scope: !30)
!110 = !DILocation(line: 35, column: 18, scope: !30)
!111 = !DILocation(line: 35, column: 9, scope: !30)
!112 = !DILocation(line: 35, column: 7, scope: !30)
!113 = !DILocation(line: 36, column: 29, scope: !30)
!114 = !DILocation(line: 36, column: 41, scope: !30)
!115 = !DILocation(line: 36, column: 46, scope: !30)
!116 = !DILocation(line: 36, column: 21, scope: !30)
!117 = !DILocation(line: 36, column: 12, scope: !30)
!118 = !DILocation(line: 36, column: 10, scope: !30)
!119 = !DILocation(line: 37, column: 45, scope: !30)
!120 = !DILocation(line: 37, column: 57, scope: !30)
!121 = !DILocation(line: 37, column: 65, scope: !30)
!122 = !DILocation(line: 37, column: 77, scope: !30)
!123 = !DILocation(line: 37, column: 62, scope: !30)
!124 = !DILocation(line: 37, column: 82, scope: !30)
!125 = !DILocation(line: 37, column: 37, scope: !30)
!126 = !DILocation(line: 37, column: 15, scope: !30)
!127 = !DILocation(line: 37, column: 13, scope: !30)
!128 = !DILocation(line: 38, column: 1, scope: !30)
!129 = !DILocation(line: 41, column: 8, scope: !34)
!130 = !DILocation(line: 41, column: 3, scope: !34)
!131 = !DILocation(line: 42, column: 8, scope: !34)
!132 = !DILocation(line: 42, column: 3, scope: !34)
!133 = !DILocation(line: 43, column: 19, scope: !34)
!134 = !DILocation(line: 44, column: 8, scope: !34)
!135 = !DILocation(line: 44, column: 3, scope: !34)
!136 = !DILocation(line: 45, column: 8, scope: !34)
!137 = !DILocation(line: 45, column: 3, scope: !34)
!138 = !DILocation(line: 46, column: 8, scope: !34)
!139 = !DILocation(line: 46, column: 3, scope: !34)
!140 = !DILocation(line: 47, column: 1, scope: !34)
!141 = !DILocation(line: 59, column: 3, scope: !35)
!142 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !35, file: !31, line: 51, type: !15)
!143 = !DIExpression()
!144 = !DILocation(line: 51, column: 9, scope: !35)
!145 = !DILocation(line: 64, column: 8, scope: !146)
!146 = distinct !DILexicalBlock(scope: !35, file: !31, line: 64, column: 3)
!147 = !DILocation(line: 64, column: 24, scope: !148)
!148 = distinct !DILexicalBlock(scope: !146, file: !31, line: 64, column: 3)
!149 = !DILocation(line: 64, column: 21, scope: !148)
!150 = !DILocation(line: 64, column: 3, scope: !146)
!151 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "constraint", scope: !35, file: !31, line: 52, type: !15)
!152 = !DILocation(line: 52, column: 9, scope: !35)
!153 = !DILocation(line: 69, column: 30, scope: !154)
!154 = distinct !DILexicalBlock(scope: !148, file: !31, line: 64, column: 44)
!155 = !DILocation(line: 69, column: 5, scope: !154)
!156 = !DILocation(line: 69, column: 14, scope: !154)
!157 = !DILocation(line: 69, column: 28, scope: !154)
!158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "col", scope: !35, file: !31, line: 50, type: !15)
!159 = !DILocation(line: 50, column: 9, scope: !35)
!160 = !DILocation(line: 70, column: 10, scope: !161)
!161 = distinct !DILexicalBlock(scope: !154, file: !31, line: 70, column: 5)
!162 = !DILocation(line: 70, column: 26, scope: !163)
!163 = distinct !DILexicalBlock(scope: !161, file: !31, line: 70, column: 5)
!164 = !DILocation(line: 70, column: 23, scope: !163)
!165 = !DILocation(line: 70, column: 5, scope: !161)
!166 = !DILocation(line: 71, column: 12, scope: !167)
!167 = distinct !DILexicalBlock(scope: !168, file: !31, line: 71, column: 11)
!168 = distinct !DILexicalBlock(scope: !163, file: !31, line: 70, column: 49)
!169 = !DILocation(line: 71, column: 21, scope: !167)
!170 = !DILocation(line: 71, column: 29, scope: !167)
!171 = !DILocation(line: 71, column: 33, scope: !167)
!172 = !DILocation(line: 71, column: 42, scope: !167)
!173 = !DILocation(line: 71, column: 50, scope: !167)
!174 = !DILocation(line: 71, column: 54, scope: !167)
!175 = !DILocation(line: 71, column: 63, scope: !167)
!176 = !DILocation(line: 71, column: 11, scope: !168)
!177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "add", scope: !35, file: !31, line: 54, type: !15)
!178 = !DILocation(line: 54, column: 9, scope: !35)
!179 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "check", scope: !35, file: !31, line: 53, type: !15)
!180 = !DILocation(line: 53, column: 9, scope: !35)
!181 = !DILocation(line: 76, column: 14, scope: !182)
!182 = distinct !DILexicalBlock(scope: !183, file: !31, line: 76, column: 9)
!183 = distinct !DILexicalBlock(scope: !167, file: !31, line: 71, column: 70)
!184 = !DILocation(line: 76, column: 31, scope: !185)
!185 = distinct !DILexicalBlock(scope: !182, file: !31, line: 76, column: 9)
!186 = !DILocation(line: 76, column: 9, scope: !182)
!187 = !DILocation(line: 77, column: 15, scope: !188)
!188 = distinct !DILexicalBlock(scope: !189, file: !31, line: 77, column: 15)
!189 = distinct !DILexicalBlock(scope: !185, file: !31, line: 76, column: 54)
!190 = !DILocation(line: 77, column: 24, scope: !188)
!191 = !DILocation(line: 77, column: 45, scope: !188)
!192 = !DILocation(line: 77, column: 52, scope: !188)
!193 = !DILocation(line: 77, column: 49, scope: !188)
!194 = !DILocation(line: 77, column: 15, scope: !189)
!195 = !DILocation(line: 79, column: 13, scope: !196)
!196 = distinct !DILexicalBlock(scope: !188, file: !31, line: 77, column: 62)
!197 = !DILocation(line: 81, column: 9, scope: !189)
!198 = !DILocation(line: 76, column: 50, scope: !185)
!199 = !DILocation(line: 76, column: 9, scope: !185)
!200 = !DILocation(line: 86, column: 13, scope: !201)
!201 = distinct !DILexicalBlock(scope: !183, file: !31, line: 86, column: 13)
!202 = !DILocation(line: 86, column: 13, scope: !183)
!203 = !DILocation(line: 87, column: 11, scope: !204)
!204 = distinct !DILexicalBlock(scope: !201, file: !31, line: 86, column: 18)
!205 = !DILocation(line: 87, column: 11, scope: !206)
!206 = !DILexicalBlockFile(scope: !204, file: !31, discriminator: 1)
!207 = !DILocation(line: 87, column: 11, scope: !208)
!208 = !DILexicalBlockFile(scope: !204, file: !31, discriminator: 2)
!209 = !DILocation(line: 88, column: 52, scope: !204)
!210 = !DILocation(line: 88, column: 11, scope: !204)
!211 = !DILocation(line: 88, column: 20, scope: !204)
!212 = !DILocation(line: 88, column: 46, scope: !204)
!213 = !DILocation(line: 88, column: 50, scope: !204)
!214 = !DILocation(line: 89, column: 52, scope: !204)
!215 = !DILocation(line: 89, column: 11, scope: !204)
!216 = !DILocation(line: 89, column: 20, scope: !204)
!217 = !DILocation(line: 89, column: 46, scope: !204)
!218 = !DILocation(line: 89, column: 50, scope: !204)
!219 = !DILocation(line: 90, column: 11, scope: !204)
!220 = !DILocation(line: 90, column: 20, scope: !204)
!221 = !DILocation(line: 90, column: 46, scope: !204)
!222 = !DILocation(line: 90, column: 50, scope: !204)
!223 = !DILocation(line: 91, column: 11, scope: !204)
!224 = !DILocation(line: 91, column: 20, scope: !204)
!225 = !DILocation(line: 91, column: 46, scope: !204)
!226 = !DILocation(line: 91, column: 54, scope: !204)
!227 = !DILocation(line: 92, column: 21, scope: !204)
!228 = !DILocation(line: 93, column: 26, scope: !204)
!229 = !DILocation(line: 94, column: 21, scope: !204)
!230 = !DILocation(line: 95, column: 9, scope: !204)
!231 = !DILocation(line: 96, column: 7, scope: !183)
!232 = !DILocation(line: 97, column: 5, scope: !168)
!233 = !DILocation(line: 70, column: 45, scope: !163)
!234 = !DILocation(line: 70, column: 5, scope: !163)
!235 = !DILocation(line: 98, column: 5, scope: !154)
!236 = !DILocation(line: 98, column: 14, scope: !154)
!237 = !DILocation(line: 98, column: 24, scope: !154)
!238 = !DILocation(line: 104, column: 30, scope: !154)
!239 = !DILocation(line: 104, column: 5, scope: !154)
!240 = !DILocation(line: 104, column: 14, scope: !154)
!241 = !DILocation(line: 104, column: 28, scope: !154)
!242 = !DILocation(line: 105, column: 10, scope: !243)
!243 = distinct !DILexicalBlock(scope: !154, file: !31, line: 105, column: 5)
!244 = !DILocation(line: 105, column: 26, scope: !245)
!245 = distinct !DILexicalBlock(scope: !243, file: !31, line: 105, column: 5)
!246 = !DILocation(line: 105, column: 23, scope: !245)
!247 = !DILocation(line: 105, column: 5, scope: !243)
!248 = !DILocation(line: 106, column: 12, scope: !249)
!249 = distinct !DILexicalBlock(scope: !250, file: !31, line: 106, column: 11)
!250 = distinct !DILexicalBlock(scope: !245, file: !31, line: 105, column: 49)
!251 = !DILocation(line: 106, column: 21, scope: !249)
!252 = !DILocation(line: 106, column: 29, scope: !249)
!253 = !DILocation(line: 106, column: 33, scope: !249)
!254 = !DILocation(line: 106, column: 42, scope: !249)
!255 = !DILocation(line: 106, column: 50, scope: !249)
!256 = !DILocation(line: 106, column: 54, scope: !249)
!257 = !DILocation(line: 106, column: 63, scope: !249)
!258 = !DILocation(line: 106, column: 11, scope: !250)
!259 = !DILocation(line: 111, column: 14, scope: !260)
!260 = distinct !DILexicalBlock(scope: !261, file: !31, line: 111, column: 9)
!261 = distinct !DILexicalBlock(scope: !249, file: !31, line: 106, column: 70)
!262 = !DILocation(line: 111, column: 31, scope: !263)
!263 = distinct !DILexicalBlock(scope: !260, file: !31, line: 111, column: 9)
!264 = !DILocation(line: 111, column: 9, scope: !260)
!265 = !DILocation(line: 112, column: 15, scope: !266)
!266 = distinct !DILexicalBlock(scope: !267, file: !31, line: 112, column: 15)
!267 = distinct !DILexicalBlock(scope: !263, file: !31, line: 111, column: 54)
!268 = !DILocation(line: 112, column: 24, scope: !266)
!269 = !DILocation(line: 112, column: 45, scope: !266)
!270 = !DILocation(line: 112, column: 52, scope: !266)
!271 = !DILocation(line: 112, column: 49, scope: !266)
!272 = !DILocation(line: 112, column: 15, scope: !267)
!273 = !DILocation(line: 114, column: 13, scope: !274)
!274 = distinct !DILexicalBlock(scope: !266, file: !31, line: 112, column: 62)
!275 = !DILocation(line: 116, column: 9, scope: !267)
!276 = !DILocation(line: 111, column: 50, scope: !263)
!277 = !DILocation(line: 111, column: 9, scope: !263)
!278 = !DILocation(line: 121, column: 13, scope: !279)
!279 = distinct !DILexicalBlock(scope: !261, file: !31, line: 121, column: 13)
!280 = !DILocation(line: 121, column: 13, scope: !261)
!281 = !DILocation(line: 122, column: 11, scope: !282)
!282 = distinct !DILexicalBlock(scope: !279, file: !31, line: 121, column: 18)
!283 = !DILocation(line: 122, column: 11, scope: !284)
!284 = !DILexicalBlockFile(scope: !282, file: !31, discriminator: 1)
!285 = !DILocation(line: 122, column: 11, scope: !286)
!286 = !DILexicalBlockFile(scope: !282, file: !31, discriminator: 2)
!287 = !DILocation(line: 123, column: 52, scope: !282)
!288 = !DILocation(line: 123, column: 11, scope: !282)
!289 = !DILocation(line: 123, column: 20, scope: !282)
!290 = !DILocation(line: 123, column: 46, scope: !282)
!291 = !DILocation(line: 123, column: 50, scope: !282)
!292 = !DILocation(line: 124, column: 52, scope: !282)
!293 = !DILocation(line: 124, column: 11, scope: !282)
!294 = !DILocation(line: 124, column: 20, scope: !282)
!295 = !DILocation(line: 124, column: 46, scope: !282)
!296 = !DILocation(line: 124, column: 50, scope: !282)
!297 = !DILocation(line: 125, column: 11, scope: !282)
!298 = !DILocation(line: 125, column: 20, scope: !282)
!299 = !DILocation(line: 125, column: 46, scope: !282)
!300 = !DILocation(line: 125, column: 50, scope: !282)
!301 = !DILocation(line: 126, column: 11, scope: !282)
!302 = !DILocation(line: 126, column: 20, scope: !282)
!303 = !DILocation(line: 126, column: 46, scope: !282)
!304 = !DILocation(line: 126, column: 54, scope: !282)
!305 = !DILocation(line: 127, column: 21, scope: !282)
!306 = !DILocation(line: 128, column: 26, scope: !282)
!307 = !DILocation(line: 129, column: 21, scope: !282)
!308 = !DILocation(line: 130, column: 9, scope: !282)
!309 = !DILocation(line: 131, column: 7, scope: !261)
!310 = !DILocation(line: 132, column: 5, scope: !250)
!311 = !DILocation(line: 105, column: 45, scope: !245)
!312 = !DILocation(line: 105, column: 5, scope: !245)
!313 = !DILocation(line: 133, column: 5, scope: !154)
!314 = !DILocation(line: 133, column: 14, scope: !154)
!315 = !DILocation(line: 133, column: 24, scope: !154)
!316 = !DILocation(line: 134, column: 3, scope: !154)
!317 = !DILocation(line: 64, column: 40, scope: !148)
!318 = !DILocation(line: 64, column: 3, scope: !148)
!319 = !DILocation(line: 135, column: 1, scope: !35)
!320 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !36, file: !31, line: 137, type: !4)
!321 = !DILocation(line: 137, column: 31, scope: !36)
!322 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !36, file: !31, line: 138, type: !15)
!323 = !DILocation(line: 138, column: 9, scope: !36)
!324 = !DILocation(line: 140, column: 8, scope: !325)
!325 = distinct !DILexicalBlock(scope: !36, file: !31, line: 140, column: 3)
!326 = !DILocation(line: 140, column: 24, scope: !327)
!327 = distinct !DILexicalBlock(scope: !325, file: !31, line: 140, column: 3)
!328 = !DILocation(line: 140, column: 21, scope: !327)
!329 = !DILocation(line: 140, column: 3, scope: !325)
!330 = !DILocation(line: 141, column: 5, scope: !331)
!331 = distinct !DILexicalBlock(scope: !327, file: !31, line: 140, column: 44)
!332 = !DILocation(line: 141, column: 14, scope: !331)
!333 = !DILocation(line: 141, column: 29, scope: !331)
!334 = !DILocation(line: 142, column: 5, scope: !331)
!335 = !DILocation(line: 142, column: 14, scope: !331)
!336 = !DILocation(line: 142, column: 31, scope: !331)
!337 = !DILocation(line: 143, column: 5, scope: !331)
!338 = !DILocation(line: 143, column: 14, scope: !331)
!339 = !DILocation(line: 143, column: 29, scope: !331)
!340 = !DILocation(line: 144, column: 5, scope: !331)
!341 = !DILocation(line: 144, column: 14, scope: !331)
!342 = !DILocation(line: 144, column: 31, scope: !331)
!343 = !DILocation(line: 145, column: 3, scope: !331)
!344 = !DILocation(line: 140, column: 40, scope: !327)
!345 = !DILocation(line: 140, column: 3, scope: !327)
!346 = !DILocation(line: 146, column: 1, scope: !36)
!347 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !39, file: !31, line: 148, type: !4)
!348 = !DILocation(line: 148, column: 27, scope: !39)
!349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !39, file: !31, line: 149, type: !15)
!350 = !DILocation(line: 149, column: 9, scope: !39)
!351 = !DILocation(line: 152, column: 8, scope: !352)
!352 = distinct !DILexicalBlock(scope: !39, file: !31, line: 152, column: 3)
!353 = !DILocation(line: 152, column: 24, scope: !354)
!354 = distinct !DILexicalBlock(scope: !352, file: !31, line: 152, column: 3)
!355 = !DILocation(line: 152, column: 21, scope: !354)
!356 = !DILocation(line: 152, column: 3, scope: !352)
!357 = !DILocation(line: 153, column: 5, scope: !358)
!358 = distinct !DILexicalBlock(scope: !354, file: !31, line: 152, column: 44)
!359 = !DILocation(line: 154, column: 5, scope: !358)
!360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "which", scope: !39, file: !31, line: 150, type: !15)
!361 = !DILocation(line: 150, column: 9, scope: !39)
!362 = !DILocation(line: 155, column: 10, scope: !363)
!363 = distinct !DILexicalBlock(scope: !358, file: !31, line: 155, column: 5)
!364 = !DILocation(line: 155, column: 29, scope: !365)
!365 = distinct !DILexicalBlock(scope: !363, file: !31, line: 155, column: 5)
!366 = !DILocation(line: 155, column: 38, scope: !365)
!367 = !DILocation(line: 155, column: 27, scope: !365)
!368 = !DILocation(line: 155, column: 5, scope: !363)
!369 = !DILocation(line: 156, column: 12, scope: !370)
!370 = distinct !DILexicalBlock(scope: !371, file: !31, line: 156, column: 11)
!371 = distinct !DILexicalBlock(scope: !365, file: !31, line: 155, column: 58)
!372 = !DILocation(line: 156, column: 21, scope: !370)
!373 = !DILocation(line: 156, column: 42, scope: !370)
!374 = !DILocation(line: 156, column: 11, scope: !371)
!375 = !DILocation(line: 157, column: 9, scope: !376)
!376 = distinct !DILexicalBlock(scope: !370, file: !31, line: 156, column: 51)
!377 = !DILocation(line: 157, column: 9, scope: !378)
!378 = !DILexicalBlockFile(scope: !376, file: !31, discriminator: 1)
!379 = !DILocation(line: 157, column: 9, scope: !380)
!380 = !DILexicalBlockFile(scope: !376, file: !31, discriminator: 2)
!381 = !DILocation(line: 158, column: 23, scope: !376)
!382 = !DILocation(line: 158, column: 32, scope: !376)
!383 = !DILocation(line: 158, column: 53, scope: !376)
!384 = !DILocation(line: 158, column: 9, scope: !376)
!385 = !DILocation(line: 159, column: 7, scope: !376)
!386 = !DILocation(line: 160, column: 5, scope: !371)
!387 = !DILocation(line: 155, column: 54, scope: !365)
!388 = !DILocation(line: 155, column: 5, scope: !365)
!389 = !DILocation(line: 162, column: 5, scope: !358)
!390 = !DILocation(line: 163, column: 5, scope: !358)
!391 = !DILocation(line: 164, column: 10, scope: !392)
!392 = distinct !DILexicalBlock(scope: !358, file: !31, line: 164, column: 5)
!393 = !DILocation(line: 164, column: 29, scope: !394)
!394 = distinct !DILexicalBlock(scope: !392, file: !31, line: 164, column: 5)
!395 = !DILocation(line: 164, column: 38, scope: !394)
!396 = !DILocation(line: 164, column: 27, scope: !394)
!397 = !DILocation(line: 164, column: 5, scope: !392)
!398 = !DILocation(line: 165, column: 12, scope: !399)
!399 = distinct !DILexicalBlock(scope: !400, file: !31, line: 165, column: 11)
!400 = distinct !DILexicalBlock(scope: !394, file: !31, line: 164, column: 58)
!401 = !DILocation(line: 165, column: 21, scope: !399)
!402 = !DILocation(line: 165, column: 42, scope: !399)
!403 = !DILocation(line: 165, column: 11, scope: !400)
!404 = !DILocation(line: 166, column: 9, scope: !405)
!405 = distinct !DILexicalBlock(scope: !399, file: !31, line: 165, column: 51)
!406 = !DILocation(line: 166, column: 9, scope: !407)
!407 = !DILexicalBlockFile(scope: !405, file: !31, discriminator: 1)
!408 = !DILocation(line: 166, column: 9, scope: !409)
!409 = !DILexicalBlockFile(scope: !405, file: !31, discriminator: 2)
!410 = !DILocation(line: 167, column: 23, scope: !405)
!411 = !DILocation(line: 167, column: 32, scope: !405)
!412 = !DILocation(line: 167, column: 53, scope: !405)
!413 = !DILocation(line: 167, column: 9, scope: !405)
!414 = !DILocation(line: 168, column: 7, scope: !405)
!415 = !DILocation(line: 169, column: 5, scope: !400)
!416 = !DILocation(line: 164, column: 54, scope: !394)
!417 = !DILocation(line: 164, column: 5, scope: !394)
!418 = !DILocation(line: 170, column: 5, scope: !358)
!419 = !DILocation(line: 171, column: 3, scope: !358)
!420 = !DILocation(line: 152, column: 40, scope: !354)
!421 = !DILocation(line: 152, column: 3, scope: !354)
!422 = !DILocation(line: 172, column: 1, scope: !39)
!423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !40, file: !31, line: 174, type: !4)
!424 = !DILocation(line: 174, column: 31, scope: !40)
!425 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !40, file: !31, line: 175, type: !15)
!426 = !DILocation(line: 175, column: 24, scope: !40)
!427 = !DILocation(line: 179, column: 3, scope: !40)
!428 = !DILocation(line: 179, column: 12, scope: !40)
!429 = !DILocation(line: 179, column: 29, scope: !40)
!430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !40, file: !31, line: 176, type: !15)
!431 = !DILocation(line: 176, column: 9, scope: !40)
!432 = !DILocation(line: 180, column: 8, scope: !433)
!433 = distinct !DILexicalBlock(scope: !40, file: !31, line: 180, column: 3)
!434 = !DILocation(line: 180, column: 19, scope: !435)
!435 = distinct !DILexicalBlock(scope: !433, file: !31, line: 180, column: 3)
!436 = !DILocation(line: 180, column: 28, scope: !435)
!437 = !DILocation(line: 180, column: 17, scope: !435)
!438 = !DILocation(line: 180, column: 3, scope: !433)
!439 = !DILocation(line: 181, column: 10, scope: !440)
!440 = distinct !DILexicalBlock(scope: !441, file: !31, line: 181, column: 9)
!441 = distinct !DILexicalBlock(scope: !435, file: !31, line: 180, column: 44)
!442 = !DILocation(line: 181, column: 19, scope: !440)
!443 = !DILocation(line: 181, column: 36, scope: !440)
!444 = !DILocation(line: 181, column: 9, scope: !441)
!445 = !DILocation(line: 182, column: 7, scope: !446)
!446 = distinct !DILexicalBlock(scope: !440, file: !31, line: 181, column: 45)
!447 = !DILocation(line: 182, column: 7, scope: !448)
!448 = !DILexicalBlockFile(scope: !446, file: !31, discriminator: 1)
!449 = !DILocation(line: 182, column: 7, scope: !450)
!450 = !DILexicalBlockFile(scope: !446, file: !31, discriminator: 2)
!451 = !DILocation(line: 183, column: 15, scope: !446)
!452 = !DILocation(line: 183, column: 24, scope: !446)
!453 = !DILocation(line: 183, column: 41, scope: !446)
!454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "above", scope: !40, file: !31, line: 177, type: !15)
!455 = !DILocation(line: 177, column: 9, scope: !40)
!456 = !DILocation(line: 184, column: 12, scope: !457)
!457 = distinct !DILexicalBlock(scope: !446, file: !31, line: 184, column: 11)
!458 = !DILocation(line: 184, column: 23, scope: !457)
!459 = !DILocation(line: 184, column: 11, scope: !446)
!460 = !DILocation(line: 185, column: 9, scope: !461)
!461 = distinct !DILexicalBlock(scope: !457, file: !31, line: 184, column: 41)
!462 = !DILocation(line: 186, column: 7, scope: !461)
!463 = !DILocation(line: 187, column: 5, scope: !446)
!464 = !DILocation(line: 188, column: 3, scope: !441)
!465 = !DILocation(line: 180, column: 40, scope: !435)
!466 = !DILocation(line: 180, column: 3, scope: !435)
!467 = !DILocation(line: 189, column: 1, scope: !40)
!468 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !43, file: !31, line: 191, type: !4)
!469 = !DILocation(line: 191, column: 31, scope: !43)
!470 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !43, file: !31, line: 192, type: !15)
!471 = !DILocation(line: 192, column: 24, scope: !43)
!472 = !DILocation(line: 196, column: 3, scope: !43)
!473 = !DILocation(line: 196, column: 12, scope: !43)
!474 = !DILocation(line: 196, column: 29, scope: !43)
!475 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !43, file: !31, line: 193, type: !15)
!476 = !DILocation(line: 193, column: 9, scope: !43)
!477 = !DILocation(line: 197, column: 8, scope: !478)
!478 = distinct !DILexicalBlock(scope: !43, file: !31, line: 197, column: 3)
!479 = !DILocation(line: 197, column: 19, scope: !480)
!480 = distinct !DILexicalBlock(scope: !478, file: !31, line: 197, column: 3)
!481 = !DILocation(line: 197, column: 28, scope: !480)
!482 = !DILocation(line: 197, column: 17, scope: !480)
!483 = !DILocation(line: 197, column: 3, scope: !478)
!484 = !DILocation(line: 198, column: 10, scope: !485)
!485 = distinct !DILexicalBlock(scope: !486, file: !31, line: 198, column: 9)
!486 = distinct !DILexicalBlock(scope: !480, file: !31, line: 197, column: 44)
!487 = !DILocation(line: 198, column: 19, scope: !485)
!488 = !DILocation(line: 198, column: 36, scope: !485)
!489 = !DILocation(line: 198, column: 9, scope: !486)
!490 = !DILocation(line: 199, column: 7, scope: !491)
!491 = distinct !DILexicalBlock(scope: !485, file: !31, line: 198, column: 45)
!492 = !DILocation(line: 199, column: 7, scope: !493)
!493 = !DILexicalBlockFile(scope: !491, file: !31, discriminator: 1)
!494 = !DILocation(line: 199, column: 7, scope: !495)
!495 = !DILexicalBlockFile(scope: !491, file: !31, discriminator: 2)
!496 = !DILocation(line: 200, column: 15, scope: !491)
!497 = !DILocation(line: 200, column: 24, scope: !491)
!498 = !DILocation(line: 200, column: 41, scope: !491)
!499 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "below", scope: !43, file: !31, line: 194, type: !15)
!500 = !DILocation(line: 194, column: 9, scope: !43)
!501 = !DILocation(line: 201, column: 12, scope: !502)
!502 = distinct !DILexicalBlock(scope: !491, file: !31, line: 201, column: 11)
!503 = !DILocation(line: 201, column: 23, scope: !502)
!504 = !DILocation(line: 201, column: 11, scope: !491)
!505 = !DILocation(line: 202, column: 9, scope: !506)
!506 = distinct !DILexicalBlock(scope: !502, file: !31, line: 201, column: 41)
!507 = !DILocation(line: 203, column: 7, scope: !506)
!508 = !DILocation(line: 204, column: 5, scope: !491)
!509 = !DILocation(line: 205, column: 3, scope: !486)
!510 = !DILocation(line: 197, column: 40, scope: !480)
!511 = !DILocation(line: 197, column: 3, scope: !480)
!512 = !DILocation(line: 206, column: 1, scope: !43)
!513 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !44, file: !31, line: 208, type: !4)
!514 = !DILocation(line: 208, column: 28, scope: !44)
!515 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "SCC", arg: 2, scope: !44, file: !31, line: 209, type: !26)
!516 = !DILocation(line: 209, column: 22, scope: !44)
!517 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "perSCC", arg: 3, scope: !44, file: !31, line: 210, type: !26)
!518 = !DILocation(line: 210, column: 22, scope: !44)
!519 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "label", scope: !44, file: !31, line: 214, type: !15)
!520 = !DILocation(line: 214, column: 9, scope: !44)
!521 = !DILocation(line: 224, column: 9, scope: !44)
!522 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !44, file: !31, line: 211, type: !15)
!523 = !DILocation(line: 211, column: 9, scope: !44)
!524 = !DILocation(line: 225, column: 8, scope: !525)
!525 = distinct !DILexicalBlock(scope: !44, file: !31, line: 225, column: 3)
!526 = !DILocation(line: 225, column: 24, scope: !527)
!527 = distinct !DILexicalBlock(scope: !525, file: !31, line: 225, column: 3)
!528 = !DILocation(line: 225, column: 21, scope: !527)
!529 = !DILocation(line: 225, column: 3, scope: !525)
!530 = !DILocation(line: 226, column: 10, scope: !531)
!531 = distinct !DILexicalBlock(scope: !532, file: !31, line: 226, column: 9)
!532 = distinct !DILexicalBlock(scope: !527, file: !31, line: 225, column: 44)
!533 = !DILocation(line: 226, column: 19, scope: !531)
!534 = !DILocation(line: 226, column: 9, scope: !532)
!535 = !DILocation(line: 227, column: 7, scope: !536)
!536 = distinct !DILexicalBlock(scope: !531, file: !31, line: 226, column: 37)
!537 = !DILocation(line: 228, column: 5, scope: !536)
!538 = !DILocation(line: 229, column: 3, scope: !532)
!539 = !DILocation(line: 225, column: 40, scope: !527)
!540 = !DILocation(line: 225, column: 3, scope: !527)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "which", scope: !44, file: !31, line: 215, type: !15)
!542 = !DILocation(line: 215, column: 9, scope: !44)
!543 = !DILocation(line: 235, column: 3, scope: !44)
!544 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "done", scope: !44, file: !31, line: 218, type: !15)
!545 = !DILocation(line: 218, column: 9, scope: !44)
!546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "choose", scope: !44, file: !31, line: 216, type: !15)
!547 = !DILocation(line: 216, column: 9, scope: !44)
!548 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "large", scope: !44, file: !31, line: 217, type: !15)
!549 = !DILocation(line: 217, column: 9, scope: !44)
!550 = !DILocation(line: 243, column: 10, scope: !551)
!551 = distinct !DILexicalBlock(scope: !552, file: !31, line: 243, column: 5)
!552 = distinct !DILexicalBlock(scope: !44, file: !31, line: 235, column: 6)
!553 = !DILocation(line: 243, column: 26, scope: !554)
!554 = distinct !DILexicalBlock(scope: !551, file: !31, line: 243, column: 5)
!555 = !DILocation(line: 243, column: 23, scope: !554)
!556 = !DILocation(line: 243, column: 5, scope: !551)
!557 = !DILocation(line: 244, column: 12, scope: !558)
!558 = distinct !DILexicalBlock(scope: !559, file: !31, line: 244, column: 11)
!559 = distinct !DILexicalBlock(scope: !554, file: !31, line: 243, column: 46)
!560 = !DILocation(line: 244, column: 21, scope: !558)
!561 = !DILocation(line: 244, column: 11, scope: !559)
!562 = !DILocation(line: 245, column: 9, scope: !563)
!563 = distinct !DILexicalBlock(scope: !558, file: !31, line: 244, column: 39)
!564 = !DILocation(line: 245, column: 9, scope: !565)
!565 = !DILexicalBlockFile(scope: !563, file: !31, discriminator: 1)
!566 = !DILocation(line: 245, column: 9, scope: !567)
!567 = !DILexicalBlockFile(scope: !563, file: !31, discriminator: 2)
!568 = !DILocation(line: 246, column: 13, scope: !569)
!569 = distinct !DILexicalBlock(scope: !563, file: !31, line: 246, column: 13)
!570 = !DILocation(line: 246, column: 22, scope: !569)
!571 = !DILocation(line: 246, column: 37, scope: !569)
!572 = !DILocation(line: 246, column: 13, scope: !563)
!573 = !DILocation(line: 248, column: 19, scope: !574)
!574 = distinct !DILexicalBlock(scope: !569, file: !31, line: 246, column: 46)
!575 = !DILocation(line: 248, column: 28, scope: !574)
!576 = !DILocation(line: 250, column: 9, scope: !574)
!577 = !DILocation(line: 251, column: 7, scope: !563)
!578 = !DILocation(line: 252, column: 5, scope: !559)
!579 = !DILocation(line: 243, column: 42, scope: !554)
!580 = !DILocation(line: 243, column: 5, scope: !554)
!581 = !DILocation(line: 257, column: 10, scope: !582)
!582 = distinct !DILexicalBlock(scope: !552, file: !31, line: 257, column: 9)
!583 = !DILocation(line: 257, column: 9, scope: !552)
!584 = !DILocation(line: 258, column: 12, scope: !585)
!585 = distinct !DILexicalBlock(scope: !582, file: !31, line: 257, column: 16)
!586 = !DILocation(line: 259, column: 7, scope: !585)
!587 = !DILocation(line: 260, column: 5, scope: !585)
!588 = !DILocation(line: 261, column: 3, scope: !552)
!589 = !DILocation(line: 261, column: 12, scope: !44)
!590 = !DILocation(line: 266, column: 12, scope: !44)
!591 = !DILocation(line: 267, column: 8, scope: !592)
!592 = distinct !DILexicalBlock(scope: !44, file: !31, line: 267, column: 3)
!593 = !DILocation(line: 267, column: 24, scope: !594)
!594 = distinct !DILexicalBlock(scope: !592, file: !31, line: 267, column: 3)
!595 = !DILocation(line: 267, column: 21, scope: !594)
!596 = !DILocation(line: 267, column: 3, scope: !592)
!597 = !DILocation(line: 268, column: 16, scope: !598)
!598 = distinct !DILexicalBlock(scope: !594, file: !31, line: 267, column: 44)
!599 = !DILocation(line: 268, column: 25, scope: !598)
!600 = !DILocation(line: 268, column: 5, scope: !598)
!601 = !DILocation(line: 268, column: 14, scope: !598)
!602 = !DILocation(line: 269, column: 9, scope: !603)
!603 = distinct !DILexicalBlock(scope: !598, file: !31, line: 269, column: 9)
!604 = !DILocation(line: 269, column: 20, scope: !603)
!605 = !DILocation(line: 269, column: 18, scope: !603)
!606 = !DILocation(line: 269, column: 9, scope: !598)
!607 = !DILocation(line: 270, column: 18, scope: !608)
!608 = distinct !DILexicalBlock(scope: !603, file: !31, line: 269, column: 30)
!609 = !DILocation(line: 270, column: 16, scope: !608)
!610 = !DILocation(line: 271, column: 5, scope: !608)
!611 = !DILocation(line: 272, column: 3, scope: !598)
!612 = !DILocation(line: 267, column: 40, scope: !594)
!613 = !DILocation(line: 267, column: 3, scope: !594)
!614 = !DILocation(line: 273, column: 3, scope: !44)
!615 = !DILocation(line: 273, column: 3, scope: !616)
!616 = !DILexicalBlockFile(scope: !44, file: !31, discriminator: 1)
!617 = !DILocation(line: 273, column: 3, scope: !618)
!618 = !DILexicalBlockFile(scope: !44, file: !31, discriminator: 2)
!619 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scc", scope: !44, file: !31, line: 212, type: !15)
!620 = !DILocation(line: 212, column: 9, scope: !44)
!621 = !DILocation(line: 274, column: 8, scope: !622)
!622 = distinct !DILexicalBlock(scope: !44, file: !31, line: 274, column: 3)
!623 = !DILocation(line: 274, column: 24, scope: !624)
!624 = distinct !DILexicalBlock(scope: !622, file: !31, line: 274, column: 3)
!625 = !DILocation(line: 274, column: 21, scope: !624)
!626 = !DILocation(line: 274, column: 3, scope: !622)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "per", scope: !44, file: !31, line: 213, type: !15)
!628 = !DILocation(line: 213, column: 9, scope: !44)
!629 = !DILocation(line: 276, column: 10, scope: !630)
!630 = distinct !DILexicalBlock(scope: !631, file: !31, line: 276, column: 5)
!631 = distinct !DILexicalBlock(scope: !624, file: !31, line: 274, column: 41)
!632 = !DILocation(line: 276, column: 26, scope: !633)
!633 = distinct !DILexicalBlock(scope: !630, file: !31, line: 276, column: 5)
!634 = !DILocation(line: 276, column: 23, scope: !633)
!635 = !DILocation(line: 276, column: 5, scope: !630)
!636 = !DILocation(line: 277, column: 11, scope: !637)
!637 = distinct !DILexicalBlock(scope: !638, file: !31, line: 277, column: 11)
!638 = distinct !DILexicalBlock(scope: !633, file: !31, line: 276, column: 46)
!639 = !DILocation(line: 277, column: 20, scope: !637)
!640 = !DILocation(line: 277, column: 11, scope: !638)
!641 = !DILocation(line: 278, column: 12, scope: !642)
!642 = distinct !DILexicalBlock(scope: !637, file: !31, line: 277, column: 28)
!643 = !DILocation(line: 279, column: 7, scope: !642)
!644 = !DILocation(line: 280, column: 5, scope: !638)
!645 = !DILocation(line: 276, column: 42, scope: !633)
!646 = !DILocation(line: 276, column: 5, scope: !633)
!647 = !DILocation(line: 281, column: 5, scope: !631)
!648 = !DILocation(line: 281, column: 17, scope: !631)
!649 = !DILocation(line: 282, column: 3, scope: !631)
!650 = !DILocation(line: 274, column: 37, scope: !624)
!651 = !DILocation(line: 274, column: 3, scope: !624)
!652 = !DILocation(line: 283, column: 1, scope: !44)
!653 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !47, file: !31, line: 285, type: !4)
!654 = !DILocation(line: 285, column: 35, scope: !47)
!655 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !47, file: !31, line: 286, type: !15)
!656 = !DILocation(line: 286, column: 28, scope: !47)
!657 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "label", arg: 3, scope: !47, file: !31, line: 287, type: !26)
!658 = !DILocation(line: 287, column: 29, scope: !47)
!659 = !DILocation(line: 291, column: 3, scope: !47)
!660 = !DILocation(line: 291, column: 12, scope: !47)
!661 = !DILocation(line: 291, column: 29, scope: !47)
!662 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !47, file: !31, line: 288, type: !15)
!663 = !DILocation(line: 288, column: 9, scope: !47)
!664 = !DILocation(line: 292, column: 8, scope: !665)
!665 = distinct !DILexicalBlock(scope: !47, file: !31, line: 292, column: 3)
!666 = !DILocation(line: 292, column: 19, scope: !667)
!667 = distinct !DILexicalBlock(scope: !665, file: !31, line: 292, column: 3)
!668 = !DILocation(line: 292, column: 28, scope: !667)
!669 = !DILocation(line: 292, column: 17, scope: !667)
!670 = !DILocation(line: 292, column: 3, scope: !665)
!671 = !DILocation(line: 293, column: 10, scope: !672)
!672 = distinct !DILexicalBlock(scope: !673, file: !31, line: 293, column: 9)
!673 = distinct !DILexicalBlock(scope: !667, file: !31, line: 292, column: 44)
!674 = !DILocation(line: 293, column: 19, scope: !672)
!675 = !DILocation(line: 293, column: 36, scope: !672)
!676 = !DILocation(line: 293, column: 9, scope: !673)
!677 = !DILocation(line: 294, column: 7, scope: !678)
!678 = distinct !DILexicalBlock(scope: !672, file: !31, line: 293, column: 45)
!679 = !DILocation(line: 294, column: 7, scope: !680)
!680 = !DILexicalBlockFile(scope: !678, file: !31, discriminator: 1)
!681 = !DILocation(line: 294, column: 7, scope: !682)
!682 = !DILexicalBlockFile(scope: !678, file: !31, discriminator: 2)
!683 = !DILocation(line: 295, column: 15, scope: !678)
!684 = !DILocation(line: 295, column: 24, scope: !678)
!685 = !DILocation(line: 295, column: 41, scope: !678)
!686 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "above", scope: !47, file: !31, line: 289, type: !15)
!687 = !DILocation(line: 289, column: 9, scope: !47)
!688 = !DILocation(line: 296, column: 12, scope: !689)
!689 = distinct !DILexicalBlock(scope: !678, file: !31, line: 296, column: 11)
!690 = !DILocation(line: 296, column: 23, scope: !689)
!691 = !DILocation(line: 296, column: 11, scope: !678)
!692 = !DILocation(line: 297, column: 9, scope: !693)
!693 = distinct !DILexicalBlock(scope: !689, file: !31, line: 296, column: 41)
!694 = !DILocation(line: 298, column: 7, scope: !693)
!695 = !DILocation(line: 299, column: 5, scope: !678)
!696 = !DILocation(line: 300, column: 3, scope: !673)
!697 = !DILocation(line: 292, column: 40, scope: !667)
!698 = !DILocation(line: 292, column: 3, scope: !667)
!699 = !DILocation(line: 301, column: 11, scope: !47)
!700 = !DILocation(line: 302, column: 29, scope: !47)
!701 = !DILocation(line: 302, column: 3, scope: !47)
!702 = !DILocation(line: 302, column: 12, scope: !47)
!703 = !DILocation(line: 302, column: 27, scope: !47)
!704 = !DILocation(line: 303, column: 1, scope: !47)
!705 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !50, file: !31, line: 305, type: !4)
!706 = !DILocation(line: 305, column: 35, scope: !50)
!707 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !50, file: !31, line: 306, type: !15)
!708 = !DILocation(line: 306, column: 28, scope: !50)
!709 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "label", arg: 3, scope: !50, file: !31, line: 307, type: !15)
!710 = !DILocation(line: 307, column: 28, scope: !50)
!711 = !DILocation(line: 311, column: 3, scope: !50)
!712 = !DILocation(line: 311, column: 12, scope: !50)
!713 = !DILocation(line: 311, column: 29, scope: !50)
!714 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !50, file: !31, line: 308, type: !15)
!715 = !DILocation(line: 308, column: 9, scope: !50)
!716 = !DILocation(line: 312, column: 8, scope: !717)
!717 = distinct !DILexicalBlock(scope: !50, file: !31, line: 312, column: 3)
!718 = !DILocation(line: 312, column: 19, scope: !719)
!719 = distinct !DILexicalBlock(scope: !717, file: !31, line: 312, column: 3)
!720 = !DILocation(line: 312, column: 28, scope: !719)
!721 = !DILocation(line: 312, column: 17, scope: !719)
!722 = !DILocation(line: 312, column: 3, scope: !717)
!723 = !DILocation(line: 313, column: 10, scope: !724)
!724 = distinct !DILexicalBlock(scope: !725, file: !31, line: 313, column: 9)
!725 = distinct !DILexicalBlock(scope: !719, file: !31, line: 312, column: 44)
!726 = !DILocation(line: 313, column: 19, scope: !724)
!727 = !DILocation(line: 313, column: 36, scope: !724)
!728 = !DILocation(line: 313, column: 9, scope: !725)
!729 = !DILocation(line: 314, column: 7, scope: !730)
!730 = distinct !DILexicalBlock(scope: !724, file: !31, line: 313, column: 45)
!731 = !DILocation(line: 314, column: 7, scope: !732)
!732 = !DILexicalBlockFile(scope: !730, file: !31, discriminator: 1)
!733 = !DILocation(line: 314, column: 7, scope: !734)
!734 = !DILexicalBlockFile(scope: !730, file: !31, discriminator: 2)
!735 = !DILocation(line: 315, column: 15, scope: !730)
!736 = !DILocation(line: 315, column: 24, scope: !730)
!737 = !DILocation(line: 315, column: 41, scope: !730)
!738 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "below", scope: !50, file: !31, line: 309, type: !15)
!739 = !DILocation(line: 309, column: 9, scope: !50)
!740 = !DILocation(line: 316, column: 12, scope: !741)
!741 = distinct !DILexicalBlock(scope: !730, file: !31, line: 316, column: 11)
!742 = !DILocation(line: 316, column: 23, scope: !741)
!743 = !DILocation(line: 316, column: 11, scope: !730)
!744 = !DILocation(line: 317, column: 9, scope: !745)
!745 = distinct !DILexicalBlock(scope: !741, file: !31, line: 316, column: 41)
!746 = !DILocation(line: 318, column: 7, scope: !745)
!747 = !DILocation(line: 319, column: 5, scope: !730)
!748 = !DILocation(line: 320, column: 3, scope: !725)
!749 = !DILocation(line: 312, column: 40, scope: !719)
!750 = !DILocation(line: 312, column: 3, scope: !719)
!751 = !DILocation(line: 321, column: 3, scope: !50)
!752 = !DILocation(line: 321, column: 12, scope: !50)
!753 = !DILocation(line: 321, column: 27, scope: !50)
!754 = !DILocation(line: 322, column: 1, scope: !50)
!755 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "SCC", arg: 1, scope: !53, file: !31, line: 324, type: !26)
!756 = !DILocation(line: 324, column: 21, scope: !53)
!757 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "perSCC", arg: 2, scope: !53, file: !31, line: 325, type: !26)
!758 = !DILocation(line: 325, column: 21, scope: !53)
!759 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scc", scope: !53, file: !31, line: 327, type: !15)
!760 = !DILocation(line: 327, column: 9, scope: !53)
!761 = !DILocation(line: 329, column: 8, scope: !762)
!762 = distinct !DILexicalBlock(scope: !53, file: !31, line: 329, column: 3)
!763 = !DILocation(line: 329, column: 24, scope: !764)
!764 = distinct !DILexicalBlock(scope: !762, file: !31, line: 329, column: 3)
!765 = !DILocation(line: 329, column: 21, scope: !764)
!766 = !DILocation(line: 329, column: 3, scope: !762)
!767 = !DILocation(line: 330, column: 5, scope: !768)
!768 = distinct !DILexicalBlock(scope: !764, file: !31, line: 329, column: 41)
!769 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !53, file: !31, line: 326, type: !15)
!770 = !DILocation(line: 326, column: 9, scope: !53)
!771 = !DILocation(line: 331, column: 10, scope: !772)
!772 = distinct !DILexicalBlock(scope: !768, file: !31, line: 331, column: 5)
!773 = !DILocation(line: 331, column: 26, scope: !774)
!774 = distinct !DILexicalBlock(scope: !772, file: !31, line: 331, column: 5)
!775 = !DILocation(line: 331, column: 23, scope: !774)
!776 = !DILocation(line: 331, column: 5, scope: !772)
!777 = !DILocation(line: 332, column: 11, scope: !778)
!778 = distinct !DILexicalBlock(scope: !779, file: !31, line: 332, column: 11)
!779 = distinct !DILexicalBlock(scope: !774, file: !31, line: 331, column: 46)
!780 = !DILocation(line: 332, column: 20, scope: !778)
!781 = !DILocation(line: 332, column: 11, scope: !779)
!782 = !DILocation(line: 333, column: 9, scope: !783)
!783 = distinct !DILexicalBlock(scope: !778, file: !31, line: 332, column: 28)
!784 = !DILocation(line: 334, column: 7, scope: !783)
!785 = !DILocation(line: 335, column: 5, scope: !779)
!786 = !DILocation(line: 331, column: 42, scope: !774)
!787 = !DILocation(line: 331, column: 5, scope: !774)
!788 = !DILocation(line: 336, column: 20, scope: !768)
!789 = !DILocation(line: 336, column: 5, scope: !768)
!790 = !DILocation(line: 337, column: 5, scope: !768)
!791 = !DILocation(line: 338, column: 3, scope: !768)
!792 = !DILocation(line: 329, column: 37, scope: !764)
!793 = !DILocation(line: 329, column: 3, scope: !764)
!794 = !DILocation(line: 339, column: 3, scope: !53)
!795 = !DILocation(line: 340, column: 1, scope: !53)
!796 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !56, file: !31, line: 345, type: !15)
!797 = !DILocation(line: 345, column: 9, scope: !56)
!798 = !DILocation(line: 354, column: 8, scope: !799)
!799 = distinct !DILexicalBlock(scope: !56, file: !31, line: 354, column: 3)
!800 = !DILocation(line: 354, column: 24, scope: !801)
!801 = distinct !DILexicalBlock(scope: !799, file: !31, line: 354, column: 3)
!802 = !DILocation(line: 354, column: 21, scope: !801)
!803 = !DILocation(line: 354, column: 3, scope: !799)
!804 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "which", scope: !56, file: !31, line: 349, type: !15)
!805 = !DILocation(line: 349, column: 9, scope: !56)
!806 = !DILocation(line: 355, column: 10, scope: !807)
!807 = distinct !DILexicalBlock(scope: !808, file: !31, line: 355, column: 5)
!808 = distinct !DILexicalBlock(scope: !801, file: !31, line: 354, column: 44)
!809 = !DILocation(line: 355, column: 29, scope: !810)
!810 = distinct !DILexicalBlock(scope: !807, file: !31, line: 355, column: 5)
!811 = !DILocation(line: 355, column: 38, scope: !810)
!812 = !DILocation(line: 355, column: 27, scope: !810)
!813 = !DILocation(line: 355, column: 5, scope: !807)
!814 = !DILocation(line: 356, column: 7, scope: !815)
!815 = distinct !DILexicalBlock(scope: !810, file: !31, line: 355, column: 58)
!816 = !DILocation(line: 356, column: 16, scope: !815)
!817 = !DILocation(line: 356, column: 37, scope: !815)
!818 = !DILocation(line: 356, column: 45, scope: !815)
!819 = !DILocation(line: 357, column: 5, scope: !815)
!820 = !DILocation(line: 355, column: 54, scope: !810)
!821 = !DILocation(line: 355, column: 5, scope: !810)
!822 = !DILocation(line: 358, column: 10, scope: !823)
!823 = distinct !DILexicalBlock(scope: !808, file: !31, line: 358, column: 5)
!824 = !DILocation(line: 358, column: 29, scope: !825)
!825 = distinct !DILexicalBlock(scope: !823, file: !31, line: 358, column: 5)
!826 = !DILocation(line: 358, column: 38, scope: !825)
!827 = !DILocation(line: 358, column: 27, scope: !825)
!828 = !DILocation(line: 358, column: 5, scope: !823)
!829 = !DILocation(line: 359, column: 7, scope: !830)
!830 = distinct !DILexicalBlock(scope: !825, file: !31, line: 358, column: 58)
!831 = !DILocation(line: 359, column: 16, scope: !830)
!832 = !DILocation(line: 359, column: 37, scope: !830)
!833 = !DILocation(line: 359, column: 45, scope: !830)
!834 = !DILocation(line: 360, column: 5, scope: !830)
!835 = !DILocation(line: 358, column: 54, scope: !825)
!836 = !DILocation(line: 358, column: 5, scope: !825)
!837 = !DILocation(line: 361, column: 3, scope: !808)
!838 = !DILocation(line: 354, column: 40, scope: !801)
!839 = !DILocation(line: 354, column: 3, scope: !801)
!840 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "acyclic", scope: !56, file: !31, line: 352, type: !15)
!841 = !DILocation(line: 352, column: 9, scope: !56)
!842 = !DILocation(line: 364, column: 18, scope: !56)
!843 = !DILocation(line: 365, column: 3, scope: !56)
!844 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "done", scope: !56, file: !31, line: 343, type: !15)
!845 = !DILocation(line: 343, column: 9, scope: !56)
!846 = !DILocation(line: 371, column: 17, scope: !847)
!847 = distinct !DILexicalBlock(scope: !56, file: !31, line: 365, column: 6)
!848 = !DILocation(line: 371, column: 5, scope: !847)
!849 = !DILocation(line: 372, column: 14, scope: !847)
!850 = !DILocation(line: 372, column: 19, scope: !847)
!851 = !DILocation(line: 372, column: 24, scope: !847)
!852 = !DILocation(line: 372, column: 5, scope: !847)
!853 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scc", scope: !56, file: !31, line: 344, type: !15)
!854 = !DILocation(line: 344, column: 9, scope: !56)
!855 = !DILocation(line: 373, column: 10, scope: !856)
!856 = distinct !DILexicalBlock(scope: !847, file: !31, line: 373, column: 5)
!857 = !DILocation(line: 373, column: 26, scope: !858)
!858 = distinct !DILexicalBlock(scope: !856, file: !31, line: 373, column: 5)
!859 = !DILocation(line: 373, column: 23, scope: !858)
!860 = !DILocation(line: 373, column: 5, scope: !856)
!861 = !DILocation(line: 374, column: 11, scope: !862)
!862 = distinct !DILexicalBlock(scope: !863, file: !31, line: 374, column: 11)
!863 = distinct !DILexicalBlock(scope: !858, file: !31, line: 373, column: 43)
!864 = !DILocation(line: 374, column: 23, scope: !862)
!865 = !DILocation(line: 374, column: 11, scope: !863)
!866 = !DILocation(line: 377, column: 9, scope: !867)
!867 = distinct !DILexicalBlock(scope: !862, file: !31, line: 374, column: 28)
!868 = !DILocation(line: 379, column: 5, scope: !863)
!869 = !DILocation(line: 373, column: 39, scope: !858)
!870 = !DILocation(line: 373, column: 5, scope: !858)
!871 = !DILocation(line: 385, column: 10, scope: !872)
!872 = distinct !DILexicalBlock(scope: !847, file: !31, line: 385, column: 9)
!873 = !DILocation(line: 385, column: 9, scope: !847)
!874 = !DILocation(line: 386, column: 27, scope: !875)
!875 = distinct !DILexicalBlock(scope: !872, file: !31, line: 385, column: 16)
!876 = !DILocation(line: 386, column: 32, scope: !875)
!877 = !DILocation(line: 386, column: 37, scope: !875)
!878 = !DILocation(line: 386, column: 45, scope: !875)
!879 = !DILocation(line: 386, column: 7, scope: !875)
!880 = !DILocation(line: 387, column: 5, scope: !875)
!881 = !DILocation(line: 388, column: 3, scope: !847)
!882 = !DILocation(line: 388, column: 12, scope: !56)
!883 = !DILocation(line: 395, column: 11, scope: !56)
!884 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total", scope: !56, file: !31, line: 350, type: !15)
!885 = !DILocation(line: 350, column: 9, scope: !56)
!886 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rep", scope: !56, file: !31, line: 348, type: !15)
!887 = !DILocation(line: 348, column: 9, scope: !56)
!888 = !DILocation(line: 396, column: 8, scope: !889)
!889 = distinct !DILexicalBlock(scope: !56, file: !31, line: 396, column: 3)
!890 = !DILocation(line: 396, column: 23, scope: !891)
!891 = distinct !DILexicalBlock(scope: !889, file: !31, line: 396, column: 3)
!892 = !DILocation(line: 396, column: 21, scope: !891)
!893 = !DILocation(line: 396, column: 3, scope: !889)
!894 = !DILocation(line: 401, column: 13, scope: !895)
!895 = distinct !DILexicalBlock(scope: !891, file: !31, line: 396, column: 46)
!896 = !DILocation(line: 401, column: 29, scope: !895)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "top", scope: !56, file: !31, line: 346, type: !15)
!898 = !DILocation(line: 346, column: 9, scope: !56)
!899 = !DILocation(line: 402, column: 13, scope: !895)
!900 = !DILocation(line: 402, column: 29, scope: !895)
!901 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bot", scope: !56, file: !31, line: 347, type: !15)
!902 = !DILocation(line: 347, column: 9, scope: !56)
!903 = !DILocation(line: 407, column: 10, scope: !904)
!904 = distinct !DILexicalBlock(scope: !895, file: !31, line: 407, column: 5)
!905 = !DILocation(line: 407, column: 29, scope: !906)
!906 = distinct !DILexicalBlock(scope: !904, file: !31, line: 407, column: 5)
!907 = !DILocation(line: 407, column: 38, scope: !906)
!908 = !DILocation(line: 407, column: 27, scope: !906)
!909 = !DILocation(line: 407, column: 5, scope: !904)
!910 = !DILocation(line: 408, column: 11, scope: !911)
!911 = distinct !DILexicalBlock(scope: !912, file: !31, line: 408, column: 11)
!912 = distinct !DILexicalBlock(scope: !906, file: !31, line: 407, column: 58)
!913 = !DILocation(line: 408, column: 20, scope: !911)
!914 = !DILocation(line: 408, column: 41, scope: !911)
!915 = !DILocation(line: 408, column: 45, scope: !911)
!916 = !DILocation(line: 408, column: 11, scope: !912)
!917 = !DILocation(line: 409, column: 9, scope: !918)
!918 = distinct !DILexicalBlock(scope: !911, file: !31, line: 408, column: 53)
!919 = !DILocation(line: 409, column: 18, scope: !918)
!920 = !DILocation(line: 409, column: 39, scope: !918)
!921 = !DILocation(line: 409, column: 47, scope: !918)
!922 = !DILocation(line: 410, column: 9, scope: !918)
!923 = !DILocation(line: 412, column: 5, scope: !912)
!924 = !DILocation(line: 407, column: 54, scope: !906)
!925 = !DILocation(line: 407, column: 5, scope: !906)
!926 = !DILocation(line: 417, column: 10, scope: !927)
!927 = distinct !DILexicalBlock(scope: !895, file: !31, line: 417, column: 5)
!928 = !DILocation(line: 417, column: 29, scope: !929)
!929 = distinct !DILexicalBlock(scope: !927, file: !31, line: 417, column: 5)
!930 = !DILocation(line: 417, column: 38, scope: !929)
!931 = !DILocation(line: 417, column: 27, scope: !929)
!932 = !DILocation(line: 417, column: 5, scope: !927)
!933 = !DILocation(line: 418, column: 11, scope: !934)
!934 = distinct !DILexicalBlock(scope: !935, file: !31, line: 418, column: 11)
!935 = distinct !DILexicalBlock(scope: !929, file: !31, line: 417, column: 58)
!936 = !DILocation(line: 418, column: 20, scope: !934)
!937 = !DILocation(line: 418, column: 41, scope: !934)
!938 = !DILocation(line: 418, column: 45, scope: !934)
!939 = !DILocation(line: 418, column: 11, scope: !935)
!940 = !DILocation(line: 419, column: 9, scope: !941)
!941 = distinct !DILexicalBlock(scope: !934, file: !31, line: 418, column: 53)
!942 = !DILocation(line: 419, column: 18, scope: !941)
!943 = !DILocation(line: 419, column: 39, scope: !941)
!944 = !DILocation(line: 419, column: 47, scope: !941)
!945 = !DILocation(line: 420, column: 9, scope: !941)
!946 = !DILocation(line: 422, column: 5, scope: !935)
!947 = !DILocation(line: 417, column: 54, scope: !929)
!948 = !DILocation(line: 417, column: 5, scope: !929)
!949 = !DILocation(line: 351, column: 9, scope: !56)
!950 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cycle", scope: !56, file: !31, line: 351, type: !15)
!951 = !DILocation(line: 428, column: 17, scope: !895)
!952 = !DILocation(line: 428, column: 5, scope: !895)
!953 = !DILocation(line: 429, column: 14, scope: !895)
!954 = !DILocation(line: 429, column: 19, scope: !895)
!955 = !DILocation(line: 429, column: 24, scope: !895)
!956 = !DILocation(line: 429, column: 5, scope: !895)
!957 = !DILocation(line: 430, column: 10, scope: !958)
!958 = distinct !DILexicalBlock(scope: !895, file: !31, line: 430, column: 5)
!959 = !DILocation(line: 430, column: 26, scope: !960)
!960 = distinct !DILexicalBlock(scope: !958, file: !31, line: 430, column: 5)
!961 = !DILocation(line: 430, column: 23, scope: !960)
!962 = !DILocation(line: 430, column: 5, scope: !958)
!963 = !DILocation(line: 431, column: 11, scope: !964)
!964 = distinct !DILexicalBlock(scope: !965, file: !31, line: 431, column: 11)
!965 = distinct !DILexicalBlock(scope: !960, file: !31, line: 430, column: 43)
!966 = !DILocation(line: 431, column: 23, scope: !964)
!967 = !DILocation(line: 431, column: 11, scope: !965)
!968 = !DILocation(line: 433, column: 9, scope: !969)
!969 = distinct !DILexicalBlock(scope: !964, file: !31, line: 431, column: 28)
!970 = !DILocation(line: 435, column: 5, scope: !965)
!971 = !DILocation(line: 430, column: 39, scope: !960)
!972 = !DILocation(line: 430, column: 5, scope: !960)
!973 = !DILocation(line: 436, column: 9, scope: !974)
!974 = distinct !DILexicalBlock(scope: !895, file: !31, line: 436, column: 9)
!975 = !DILocation(line: 436, column: 9, scope: !895)
!976 = !DILocation(line: 441, column: 12, scope: !977)
!977 = distinct !DILexicalBlock(scope: !978, file: !31, line: 441, column: 7)
!978 = distinct !DILexicalBlock(scope: !974, file: !31, line: 436, column: 16)
!979 = !DILocation(line: 441, column: 31, scope: !980)
!980 = distinct !DILexicalBlock(scope: !977, file: !31, line: 441, column: 7)
!981 = !DILocation(line: 441, column: 40, scope: !980)
!982 = !DILocation(line: 441, column: 29, scope: !980)
!983 = !DILocation(line: 441, column: 7, scope: !977)
!984 = !DILocation(line: 442, column: 13, scope: !985)
!985 = distinct !DILexicalBlock(scope: !986, file: !31, line: 442, column: 13)
!986 = distinct !DILexicalBlock(scope: !980, file: !31, line: 441, column: 60)
!987 = !DILocation(line: 442, column: 22, scope: !985)
!988 = !DILocation(line: 442, column: 43, scope: !985)
!989 = !DILocation(line: 442, column: 47, scope: !985)
!990 = !DILocation(line: 442, column: 13, scope: !986)
!991 = !DILocation(line: 443, column: 11, scope: !992)
!992 = distinct !DILexicalBlock(scope: !985, file: !31, line: 442, column: 55)
!993 = !DILocation(line: 443, column: 20, scope: !992)
!994 = !DILocation(line: 443, column: 41, scope: !992)
!995 = !DILocation(line: 443, column: 49, scope: !992)
!996 = !DILocation(line: 444, column: 11, scope: !992)
!997 = !DILocation(line: 446, column: 7, scope: !986)
!998 = !DILocation(line: 441, column: 56, scope: !980)
!999 = !DILocation(line: 441, column: 7, scope: !980)
!1000 = !DILocation(line: 447, column: 12, scope: !1001)
!1001 = distinct !DILexicalBlock(scope: !978, file: !31, line: 447, column: 7)
!1002 = !DILocation(line: 447, column: 31, scope: !1003)
!1003 = distinct !DILexicalBlock(scope: !1001, file: !31, line: 447, column: 7)
!1004 = !DILocation(line: 447, column: 40, scope: !1003)
!1005 = !DILocation(line: 447, column: 29, scope: !1003)
!1006 = !DILocation(line: 447, column: 7, scope: !1001)
!1007 = !DILocation(line: 448, column: 13, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !31, line: 448, column: 13)
!1009 = distinct !DILexicalBlock(scope: !1003, file: !31, line: 447, column: 60)
!1010 = !DILocation(line: 448, column: 22, scope: !1008)
!1011 = !DILocation(line: 448, column: 43, scope: !1008)
!1012 = !DILocation(line: 448, column: 47, scope: !1008)
!1013 = !DILocation(line: 448, column: 13, scope: !1009)
!1014 = !DILocation(line: 449, column: 11, scope: !1015)
!1015 = distinct !DILexicalBlock(scope: !1008, file: !31, line: 448, column: 55)
!1016 = !DILocation(line: 449, column: 20, scope: !1015)
!1017 = !DILocation(line: 449, column: 41, scope: !1015)
!1018 = !DILocation(line: 449, column: 49, scope: !1015)
!1019 = !DILocation(line: 450, column: 11, scope: !1015)
!1020 = !DILocation(line: 452, column: 7, scope: !1009)
!1021 = !DILocation(line: 447, column: 56, scope: !1003)
!1022 = !DILocation(line: 447, column: 7, scope: !1003)
!1023 = !DILocation(line: 453, column: 5, scope: !978)
!1024 = !DILocation(line: 458, column: 12, scope: !1025)
!1025 = distinct !DILexicalBlock(scope: !974, file: !31, line: 453, column: 12)
!1026 = !DILocation(line: 460, column: 3, scope: !895)
!1027 = !DILocation(line: 396, column: 42, scope: !891)
!1028 = !DILocation(line: 396, column: 3, scope: !891)
!1029 = !DILocation(line: 462, column: 7, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !56, file: !31, line: 462, column: 7)
!1031 = !DILocation(line: 462, column: 7, scope: !56)
!1032 = !DILocation(line: 463, column: 5, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !1030, file: !31, line: 462, column: 16)
!1034 = !DILocation(line: 464, column: 3, scope: !1033)
!1035 = !DILocation(line: 465, column: 5, scope: !1036)
!1036 = distinct !DILexicalBlock(scope: !1030, file: !31, line: 464, column: 10)
!1037 = !DILocation(line: 466, column: 5, scope: !1036)
!1038 = !DILocation(line: 468, column: 1, scope: !56)
!1039 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !57, file: !31, line: 470, type: !4)
!1040 = !DILocation(line: 470, column: 39, scope: !57)
!1041 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "SCC", arg: 2, scope: !57, file: !31, line: 471, type: !26)
!1042 = !DILocation(line: 471, column: 33, scope: !57)
!1043 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "perSCC", arg: 3, scope: !57, file: !31, line: 472, type: !26)
!1044 = !DILocation(line: 472, column: 33, scope: !57)
!1045 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "removeVCG", arg: 4, scope: !57, file: !31, line: 473, type: !27)
!1046 = !DILocation(line: 473, column: 46, scope: !57)
!1047 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "scc", scope: !57, file: !31, line: 474, type: !15)
!1048 = !DILocation(line: 474, column: 9, scope: !57)
!1049 = !DILocation(line: 484, column: 8, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !57, file: !31, line: 484, column: 3)
!1051 = !DILocation(line: 484, column: 24, scope: !1052)
!1052 = distinct !DILexicalBlock(scope: !1050, file: !31, line: 484, column: 3)
!1053 = !DILocation(line: 484, column: 21, scope: !1052)
!1054 = !DILocation(line: 484, column: 3, scope: !1050)
!1055 = !DILocation(line: 488, column: 9, scope: !1056)
!1056 = distinct !DILexicalBlock(scope: !1057, file: !31, line: 488, column: 9)
!1057 = distinct !DILexicalBlock(scope: !1052, file: !31, line: 484, column: 41)
!1058 = !DILocation(line: 488, column: 21, scope: !1056)
!1059 = !DILocation(line: 488, column: 9, scope: !1057)
!1060 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "remove", scope: !57, file: !31, line: 482, type: !10)
!1061 = !DILocation(line: 482, column: 22, scope: !57)
!1062 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "best", scope: !57, file: !31, line: 477, type: !15)
!1063 = !DILocation(line: 477, column: 9, scope: !57)
!1064 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !57, file: !31, line: 475, type: !15)
!1065 = !DILocation(line: 475, column: 9, scope: !57)
!1066 = !DILocation(line: 494, column: 12, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !1068, file: !31, line: 494, column: 7)
!1068 = distinct !DILexicalBlock(scope: !1056, file: !31, line: 488, column: 26)
!1069 = !DILocation(line: 494, column: 28, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1067, file: !31, line: 494, column: 7)
!1071 = !DILocation(line: 494, column: 25, scope: !1070)
!1072 = !DILocation(line: 494, column: 7, scope: !1067)
!1073 = !DILocation(line: 498, column: 13, scope: !1074)
!1074 = distinct !DILexicalBlock(scope: !1075, file: !31, line: 498, column: 13)
!1075 = distinct !DILexicalBlock(scope: !1070, file: !31, line: 494, column: 48)
!1076 = !DILocation(line: 498, column: 22, scope: !1074)
!1077 = !DILocation(line: 498, column: 13, scope: !1075)
!1078 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "which", scope: !57, file: !31, line: 476, type: !15)
!1079 = !DILocation(line: 476, column: 9, scope: !57)
!1080 = !DILocation(line: 503, column: 16, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1082, file: !31, line: 503, column: 11)
!1082 = distinct !DILexicalBlock(scope: !1074, file: !31, line: 498, column: 30)
!1083 = !DILocation(line: 503, column: 35, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1081, file: !31, line: 503, column: 11)
!1085 = !DILocation(line: 503, column: 44, scope: !1084)
!1086 = !DILocation(line: 503, column: 33, scope: !1084)
!1087 = !DILocation(line: 503, column: 11, scope: !1081)
!1088 = !DILocation(line: 504, column: 19, scope: !1089)
!1089 = distinct !DILexicalBlock(scope: !1084, file: !31, line: 503, column: 64)
!1090 = !DILocation(line: 504, column: 28, scope: !1089)
!1091 = !DILocation(line: 504, column: 49, scope: !1089)
!1092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bot", scope: !57, file: !31, line: 480, type: !15)
!1093 = !DILocation(line: 480, column: 9, scope: !57)
!1094 = !DILocation(line: 505, column: 18, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1089, file: !31, line: 505, column: 17)
!1096 = !DILocation(line: 505, column: 27, scope: !1095)
!1097 = !DILocation(line: 505, column: 35, scope: !1095)
!1098 = !DILocation(line: 505, column: 40, scope: !1095)
!1099 = !DILocation(line: 505, column: 49, scope: !1095)
!1100 = !DILocation(line: 505, column: 70, scope: !1095)
!1101 = !DILocation(line: 505, column: 17, scope: !1089)
!1102 = !DILocation(line: 524, column: 21, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1095, file: !31, line: 505, column: 80)
!1104 = !DILocation(line: 524, column: 30, scope: !1103)
!1105 = !DILocation(line: 524, column: 51, scope: !1103)
!1106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "col", scope: !57, file: !31, line: 481, type: !15)
!1107 = !DILocation(line: 481, column: 9, scope: !57)
!1108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "weight", scope: !57, file: !31, line: 478, type: !15)
!1109 = !DILocation(line: 478, column: 9, scope: !57)
!1110 = !DILocation(line: 526, column: 23, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1103, file: !31, line: 526, column: 19)
!1112 = !DILocation(line: 526, column: 19, scope: !1103)
!1113 = !DILocation(line: 527, column: 24, scope: !1114)
!1114 = distinct !DILexicalBlock(scope: !1111, file: !31, line: 526, column: 29)
!1115 = !DILocation(line: 528, column: 29, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1114, file: !31, line: 528, column: 21)
!1117 = !DILocation(line: 528, column: 21, scope: !1116)
!1118 = !DILocation(line: 528, column: 34, scope: !1116)
!1119 = !DILocation(line: 528, column: 45, scope: !1116)
!1120 = !DILocation(line: 528, column: 37, scope: !1116)
!1121 = !DILocation(line: 528, column: 21, scope: !1114)
!1122 = !DILocation(line: 529, column: 26, scope: !1123)
!1123 = distinct !DILexicalBlock(scope: !1116, file: !31, line: 528, column: 51)
!1124 = !DILocation(line: 530, column: 17, scope: !1123)
!1125 = !DILocation(line: 530, column: 38, scope: !1126)
!1126 = distinct !DILexicalBlock(scope: !1116, file: !31, line: 530, column: 28)
!1127 = !DILocation(line: 530, column: 30, scope: !1126)
!1128 = !DILocation(line: 530, column: 43, scope: !1126)
!1129 = !DILocation(line: 530, column: 54, scope: !1126)
!1130 = !DILocation(line: 530, column: 46, scope: !1126)
!1131 = !DILocation(line: 530, column: 28, scope: !1116)
!1132 = !DILocation(line: 531, column: 17, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1126, file: !31, line: 530, column: 61)
!1134 = !DILocation(line: 532, column: 26, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1126, file: !31, line: 531, column: 24)
!1136 = !DILocation(line: 534, column: 15, scope: !1114)
!1137 = !DILocation(line: 534, column: 33, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1111, file: !31, line: 534, column: 26)
!1139 = !DILocation(line: 534, column: 30, scope: !1138)
!1140 = !DILocation(line: 534, column: 26, scope: !1111)
!1141 = !DILocation(line: 535, column: 24, scope: !1142)
!1142 = distinct !DILexicalBlock(scope: !1138, file: !31, line: 534, column: 49)
!1143 = !DILocation(line: 536, column: 29, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1142, file: !31, line: 536, column: 21)
!1145 = !DILocation(line: 536, column: 21, scope: !1144)
!1146 = !DILocation(line: 536, column: 34, scope: !1144)
!1147 = !DILocation(line: 536, column: 45, scope: !1144)
!1148 = !DILocation(line: 536, column: 37, scope: !1144)
!1149 = !DILocation(line: 536, column: 21, scope: !1142)
!1150 = !DILocation(line: 537, column: 26, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1144, file: !31, line: 536, column: 51)
!1152 = !DILocation(line: 538, column: 17, scope: !1151)
!1153 = !DILocation(line: 538, column: 38, scope: !1154)
!1154 = distinct !DILexicalBlock(scope: !1144, file: !31, line: 538, column: 28)
!1155 = !DILocation(line: 538, column: 30, scope: !1154)
!1156 = !DILocation(line: 538, column: 43, scope: !1154)
!1157 = !DILocation(line: 538, column: 54, scope: !1154)
!1158 = !DILocation(line: 538, column: 46, scope: !1154)
!1159 = !DILocation(line: 538, column: 28, scope: !1144)
!1160 = !DILocation(line: 539, column: 17, scope: !1161)
!1161 = distinct !DILexicalBlock(scope: !1154, file: !31, line: 538, column: 61)
!1162 = !DILocation(line: 540, column: 26, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1154, file: !31, line: 539, column: 24)
!1164 = !DILocation(line: 542, column: 15, scope: !1142)
!1165 = !DILocation(line: 543, column: 29, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1167, file: !31, line: 543, column: 21)
!1167 = distinct !DILexicalBlock(scope: !1138, file: !31, line: 542, column: 22)
!1168 = !DILocation(line: 543, column: 21, scope: !1166)
!1169 = !DILocation(line: 543, column: 34, scope: !1166)
!1170 = !DILocation(line: 543, column: 45, scope: !1166)
!1171 = !DILocation(line: 543, column: 37, scope: !1166)
!1172 = !DILocation(line: 543, column: 21, scope: !1167)
!1173 = !DILocation(line: 544, column: 26, scope: !1174)
!1174 = distinct !DILexicalBlock(scope: !1166, file: !31, line: 543, column: 51)
!1175 = !DILocation(line: 545, column: 17, scope: !1174)
!1176 = !DILocation(line: 545, column: 38, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1166, file: !31, line: 545, column: 28)
!1178 = !DILocation(line: 545, column: 30, scope: !1177)
!1179 = !DILocation(line: 545, column: 43, scope: !1177)
!1180 = !DILocation(line: 545, column: 54, scope: !1177)
!1181 = !DILocation(line: 545, column: 46, scope: !1177)
!1182 = !DILocation(line: 545, column: 28, scope: !1166)
!1183 = !DILocation(line: 546, column: 17, scope: !1184)
!1184 = distinct !DILexicalBlock(scope: !1177, file: !31, line: 545, column: 61)
!1185 = !DILocation(line: 547, column: 26, scope: !1186)
!1186 = distinct !DILexicalBlock(scope: !1177, file: !31, line: 546, column: 24)
!1187 = !DILocation(line: 549, column: 29, scope: !1188)
!1188 = distinct !DILexicalBlock(scope: !1167, file: !31, line: 549, column: 21)
!1189 = !DILocation(line: 549, column: 21, scope: !1188)
!1190 = !DILocation(line: 549, column: 34, scope: !1188)
!1191 = !DILocation(line: 549, column: 45, scope: !1188)
!1192 = !DILocation(line: 549, column: 37, scope: !1188)
!1193 = !DILocation(line: 549, column: 21, scope: !1167)
!1194 = !DILocation(line: 550, column: 26, scope: !1195)
!1195 = distinct !DILexicalBlock(scope: !1188, file: !31, line: 549, column: 51)
!1196 = !DILocation(line: 551, column: 17, scope: !1195)
!1197 = !DILocation(line: 551, column: 38, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1188, file: !31, line: 551, column: 28)
!1199 = !DILocation(line: 551, column: 30, scope: !1198)
!1200 = !DILocation(line: 551, column: 43, scope: !1198)
!1201 = !DILocation(line: 551, column: 54, scope: !1198)
!1202 = !DILocation(line: 551, column: 46, scope: !1198)
!1203 = !DILocation(line: 551, column: 28, scope: !1188)
!1204 = !DILocation(line: 552, column: 17, scope: !1205)
!1205 = distinct !DILexicalBlock(scope: !1198, file: !31, line: 551, column: 61)
!1206 = !DILocation(line: 553, column: 26, scope: !1207)
!1207 = distinct !DILexicalBlock(scope: !1198, file: !31, line: 552, column: 24)
!1208 = !DILocation(line: 560, column: 26, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1103, file: !31, line: 560, column: 19)
!1210 = !DILocation(line: 560, column: 19, scope: !1103)
!1211 = !DILocation(line: 562, column: 27, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1209, file: !31, line: 560, column: 34)
!1213 = !DILocation(line: 562, column: 36, scope: !1212)
!1214 = !DILocation(line: 563, column: 15, scope: !1212)
!1215 = !DILocation(line: 564, column: 13, scope: !1103)
!1216 = !DILocation(line: 565, column: 11, scope: !1089)
!1217 = !DILocation(line: 503, column: 60, scope: !1084)
!1218 = !DILocation(line: 503, column: 11, scope: !1084)
!1219 = !DILocation(line: 566, column: 9, scope: !1082)
!1220 = !DILocation(line: 567, column: 7, scope: !1075)
!1221 = !DILocation(line: 494, column: 44, scope: !1070)
!1222 = !DILocation(line: 494, column: 7, scope: !1070)
!1223 = !DILocation(line: 572, column: 7, scope: !1068)
!1224 = !DILocation(line: 572, column: 7, scope: !1225)
!1225 = !DILexicalBlockFile(scope: !1068, file: !31, discriminator: 1)
!1226 = !DILocation(line: 572, column: 7, scope: !1227)
!1227 = !DILexicalBlockFile(scope: !1068, file: !31, discriminator: 2)
!1228 = !DILocation(line: 573, column: 14, scope: !1068)
!1229 = !DILocation(line: 573, column: 7, scope: !1068)
!1230 = !DILocation(line: 574, column: 7, scope: !1068)
!1231 = !DILocation(line: 574, column: 7, scope: !1225)
!1232 = !DILocation(line: 574, column: 7, scope: !1227)
!1233 = !DILocation(line: 575, column: 17, scope: !1068)
!1234 = !DILocation(line: 575, column: 7, scope: !1068)
!1235 = !DILocation(line: 575, column: 33, scope: !1068)
!1236 = !DILocation(line: 576, column: 21, scope: !1068)
!1237 = !DILocation(line: 577, column: 23, scope: !1068)
!1238 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "top", scope: !57, file: !31, line: 479, type: !15)
!1239 = !DILocation(line: 479, column: 9, scope: !57)
!1240 = !DILocation(line: 578, column: 23, scope: !1068)
!1241 = !DILocation(line: 583, column: 17, scope: !1068)
!1242 = !DILocation(line: 583, column: 25, scope: !1068)
!1243 = !DILocation(line: 588, column: 12, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1068, file: !31, line: 588, column: 7)
!1245 = !DILocation(line: 588, column: 31, scope: !1246)
!1246 = distinct !DILexicalBlock(scope: !1244, file: !31, line: 588, column: 7)
!1247 = !DILocation(line: 588, column: 40, scope: !1246)
!1248 = !DILocation(line: 588, column: 29, scope: !1246)
!1249 = !DILocation(line: 588, column: 7, scope: !1244)
!1250 = !DILocation(line: 589, column: 13, scope: !1251)
!1251 = distinct !DILexicalBlock(scope: !1252, file: !31, line: 589, column: 13)
!1252 = distinct !DILexicalBlock(scope: !1246, file: !31, line: 588, column: 60)
!1253 = !DILocation(line: 589, column: 22, scope: !1251)
!1254 = !DILocation(line: 589, column: 43, scope: !1251)
!1255 = !DILocation(line: 589, column: 47, scope: !1251)
!1256 = !DILocation(line: 589, column: 13, scope: !1252)
!1257 = !DILocation(line: 590, column: 11, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1251, file: !31, line: 589, column: 55)
!1259 = !DILocation(line: 590, column: 20, scope: !1258)
!1260 = !DILocation(line: 590, column: 41, scope: !1258)
!1261 = !DILocation(line: 590, column: 49, scope: !1258)
!1262 = !DILocation(line: 591, column: 11, scope: !1258)
!1263 = !DILocation(line: 593, column: 7, scope: !1252)
!1264 = !DILocation(line: 588, column: 56, scope: !1246)
!1265 = !DILocation(line: 588, column: 7, scope: !1246)
!1266 = !DILocation(line: 594, column: 5, scope: !1068)
!1267 = !DILocation(line: 595, column: 3, scope: !1057)
!1268 = !DILocation(line: 484, column: 37, scope: !1052)
!1269 = !DILocation(line: 484, column: 3, scope: !1052)
!1270 = !DILocation(line: 596, column: 1, scope: !57)
!1271 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !60, file: !31, line: 598, type: !4)
!1272 = !DILocation(line: 598, column: 38, scope: !60)
!1273 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "above", arg: 2, scope: !60, file: !31, line: 599, type: !15)
!1274 = !DILocation(line: 599, column: 31, scope: !60)
!1275 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "below", arg: 3, scope: !60, file: !31, line: 600, type: !15)
!1276 = !DILocation(line: 600, column: 31, scope: !60)
!1277 = !DILocation(line: 601, column: 3, scope: !60)
!1278 = !DILocation(line: 602, column: 3, scope: !60)
!1279 = !DILocation(line: 603, column: 11, scope: !60)
!1280 = !DILocation(line: 603, column: 22, scope: !60)
!1281 = !DILocation(line: 603, column: 3, scope: !60)
!1282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !63, file: !31, line: 606, type: !4)
!1283 = !DILocation(line: 606, column: 34, scope: !63)
!1284 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !63, file: !31, line: 607, type: !15)
!1285 = !DILocation(line: 607, column: 27, scope: !63)
!1286 = !DILocation(line: 618, column: 3, scope: !63)
!1287 = !DILocation(line: 619, column: 20, scope: !63)
!1288 = !DILocation(line: 619, column: 53, scope: !63)
!1289 = !DILocation(line: 619, column: 18, scope: !63)
!1290 = !DILocation(line: 620, column: 9, scope: !63)
!1291 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bot", scope: !63, file: !31, line: 609, type: !15)
!1292 = !DILocation(line: 609, column: 9, scope: !63)
!1293 = !DILocation(line: 621, column: 16, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !63, file: !31, line: 621, column: 3)
!1295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "track", scope: !63, file: !31, line: 608, type: !15)
!1296 = !DILocation(line: 608, column: 9, scope: !63)
!1297 = !DILocation(line: 621, column: 8, scope: !1294)
!1298 = !DILocation(line: 621, column: 37, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1294, file: !31, line: 621, column: 3)
!1300 = !DILocation(line: 621, column: 3, scope: !1294)
!1301 = !DILocation(line: 622, column: 13, scope: !1302)
!1302 = distinct !DILexicalBlock(scope: !1303, file: !31, line: 622, column: 9)
!1303 = distinct !DILexicalBlock(scope: !1299, file: !31, line: 621, column: 52)
!1304 = !DILocation(line: 622, column: 9, scope: !1303)
!1305 = !DILocation(line: 623, column: 7, scope: !1306)
!1306 = distinct !DILexicalBlock(scope: !1302, file: !31, line: 622, column: 18)
!1307 = !DILocation(line: 623, column: 31, scope: !1306)
!1308 = !DILocation(line: 624, column: 10, scope: !1306)
!1309 = !DILocation(line: 625, column: 5, scope: !1306)
!1310 = !DILocation(line: 626, column: 7, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1302, file: !31, line: 625, column: 12)
!1312 = !DILocation(line: 626, column: 31, scope: !1311)
!1313 = !DILocation(line: 628, column: 3, scope: !1303)
!1314 = !DILocation(line: 621, column: 48, scope: !1299)
!1315 = !DILocation(line: 621, column: 3, scope: !1299)
!1316 = !DILocation(line: 635, column: 3, scope: !63)
!1317 = !DILocation(line: 636, column: 20, scope: !63)
!1318 = !DILocation(line: 636, column: 53, scope: !63)
!1319 = !DILocation(line: 636, column: 18, scope: !63)
!1320 = !DILocation(line: 637, column: 9, scope: !63)
!1321 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "top", scope: !63, file: !31, line: 610, type: !15)
!1322 = !DILocation(line: 610, column: 9, scope: !63)
!1323 = !DILocation(line: 638, column: 8, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !63, file: !31, line: 638, column: 3)
!1325 = !DILocation(line: 638, column: 28, scope: !1326)
!1326 = distinct !DILexicalBlock(scope: !1324, file: !31, line: 638, column: 3)
!1327 = !DILocation(line: 638, column: 25, scope: !1326)
!1328 = !DILocation(line: 638, column: 3, scope: !1324)
!1329 = !DILocation(line: 639, column: 13, scope: !1330)
!1330 = distinct !DILexicalBlock(scope: !1331, file: !31, line: 639, column: 9)
!1331 = distinct !DILexicalBlock(scope: !1326, file: !31, line: 638, column: 52)
!1332 = !DILocation(line: 639, column: 9, scope: !1331)
!1333 = !DILocation(line: 640, column: 7, scope: !1334)
!1334 = distinct !DILexicalBlock(scope: !1330, file: !31, line: 639, column: 18)
!1335 = !DILocation(line: 640, column: 31, scope: !1334)
!1336 = !DILocation(line: 641, column: 10, scope: !1334)
!1337 = !DILocation(line: 642, column: 5, scope: !1334)
!1338 = !DILocation(line: 643, column: 7, scope: !1339)
!1339 = distinct !DILexicalBlock(scope: !1330, file: !31, line: 642, column: 12)
!1340 = !DILocation(line: 643, column: 31, scope: !1339)
!1341 = !DILocation(line: 645, column: 3, scope: !1331)
!1342 = !DILocation(line: 638, column: 48, scope: !1326)
!1343 = !DILocation(line: 638, column: 3, scope: !1326)
!1344 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "not", scope: !63, file: !31, line: 611, type: !15)
!1345 = !DILocation(line: 611, column: 9, scope: !63)
!1346 = !DILocation(line: 654, column: 8, scope: !1347)
!1347 = distinct !DILexicalBlock(scope: !63, file: !31, line: 654, column: 3)
!1348 = !DILocation(line: 654, column: 28, scope: !1349)
!1349 = distinct !DILexicalBlock(scope: !1347, file: !31, line: 654, column: 3)
!1350 = !DILocation(line: 654, column: 25, scope: !1349)
!1351 = !DILocation(line: 654, column: 3, scope: !1347)
!1352 = !DILocation(line: 655, column: 9, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1354, file: !31, line: 655, column: 9)
!1354 = distinct !DILexicalBlock(scope: !1349, file: !31, line: 654, column: 52)
!1355 = !DILocation(line: 655, column: 33, scope: !1353)
!1356 = !DILocation(line: 655, column: 36, scope: !1353)
!1357 = !DILocation(line: 655, column: 9, scope: !1354)
!1358 = !DILocation(line: 656, column: 7, scope: !1359)
!1359 = distinct !DILexicalBlock(scope: !1353, file: !31, line: 655, column: 61)
!1360 = !DILocation(line: 656, column: 28, scope: !1359)
!1361 = !DILocation(line: 657, column: 10, scope: !1359)
!1362 = !DILocation(line: 658, column: 5, scope: !1359)
!1363 = !DILocation(line: 659, column: 7, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1353, file: !31, line: 658, column: 12)
!1365 = !DILocation(line: 659, column: 28, scope: !1364)
!1366 = !DILocation(line: 661, column: 3, scope: !1354)
!1367 = !DILocation(line: 654, column: 48, scope: !1349)
!1368 = !DILocation(line: 654, column: 3, scope: !1349)
!1369 = !DILocation(line: 662, column: 15, scope: !63)
!1370 = !DILocation(line: 663, column: 1, scope: !63)
!1371 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !64, file: !31, line: 665, type: !4)
!1372 = !DILocation(line: 665, column: 43, scope: !64)
!1373 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !64, file: !31, line: 666, type: !15)
!1374 = !DILocation(line: 666, column: 36, scope: !64)
!1375 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "longest", scope: !64, file: !31, line: 670, type: !15)
!1376 = !DILocation(line: 670, column: 9, scope: !64)
!1377 = !DILocation(line: 673, column: 3, scope: !64)
!1378 = !DILocation(line: 673, column: 12, scope: !64)
!1379 = !DILocation(line: 673, column: 29, scope: !64)
!1380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !64, file: !31, line: 667, type: !15)
!1381 = !DILocation(line: 667, column: 9, scope: !64)
!1382 = !DILocation(line: 674, column: 8, scope: !1383)
!1383 = distinct !DILexicalBlock(scope: !64, file: !31, line: 674, column: 3)
!1384 = !DILocation(line: 674, column: 19, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1383, file: !31, line: 674, column: 3)
!1386 = !DILocation(line: 674, column: 28, scope: !1385)
!1387 = !DILocation(line: 674, column: 17, scope: !1385)
!1388 = !DILocation(line: 674, column: 3, scope: !1383)
!1389 = !DILocation(line: 675, column: 10, scope: !1390)
!1390 = distinct !DILexicalBlock(scope: !1391, file: !31, line: 675, column: 9)
!1391 = distinct !DILexicalBlock(scope: !1385, file: !31, line: 674, column: 44)
!1392 = !DILocation(line: 675, column: 19, scope: !1390)
!1393 = !DILocation(line: 675, column: 36, scope: !1390)
!1394 = !DILocation(line: 675, column: 9, scope: !1391)
!1395 = !DILocation(line: 676, column: 7, scope: !1396)
!1396 = distinct !DILexicalBlock(scope: !1390, file: !31, line: 675, column: 45)
!1397 = !DILocation(line: 676, column: 7, scope: !1398)
!1398 = !DILexicalBlockFile(scope: !1396, file: !31, discriminator: 1)
!1399 = !DILocation(line: 676, column: 7, scope: !1400)
!1400 = !DILexicalBlockFile(scope: !1396, file: !31, discriminator: 2)
!1401 = !DILocation(line: 677, column: 15, scope: !1396)
!1402 = !DILocation(line: 677, column: 24, scope: !1396)
!1403 = !DILocation(line: 677, column: 41, scope: !1396)
!1404 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "above", scope: !64, file: !31, line: 668, type: !15)
!1405 = !DILocation(line: 668, column: 9, scope: !64)
!1406 = !DILocation(line: 678, column: 12, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1396, file: !31, line: 678, column: 11)
!1408 = !DILocation(line: 678, column: 23, scope: !1407)
!1409 = !DILocation(line: 678, column: 11, scope: !1396)
!1410 = !DILocation(line: 679, column: 16, scope: !1411)
!1411 = distinct !DILexicalBlock(scope: !1407, file: !31, line: 678, column: 41)
!1412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !64, file: !31, line: 669, type: !15)
!1413 = !DILocation(line: 669, column: 9, scope: !64)
!1414 = !DILocation(line: 680, column: 18, scope: !1415)
!1415 = distinct !DILexicalBlock(scope: !1411, file: !31, line: 680, column: 13)
!1416 = !DILocation(line: 680, column: 13, scope: !1411)
!1417 = !DILocation(line: 682, column: 9, scope: !1418)
!1418 = distinct !DILexicalBlock(scope: !1415, file: !31, line: 680, column: 29)
!1419 = !DILocation(line: 683, column: 7, scope: !1411)
!1420 = !DILocation(line: 684, column: 5, scope: !1396)
!1421 = !DILocation(line: 685, column: 3, scope: !1391)
!1422 = !DILocation(line: 674, column: 40, scope: !1385)
!1423 = !DILocation(line: 674, column: 3, scope: !1385)
!1424 = !DILocation(line: 686, column: 19, scope: !64)
!1425 = !DILocation(line: 686, column: 3, scope: !64)
!1426 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !67, file: !31, line: 689, type: !4)
!1427 = !DILocation(line: 689, column: 43, scope: !67)
!1428 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 2, scope: !67, file: !31, line: 690, type: !15)
!1429 = !DILocation(line: 690, column: 36, scope: !67)
!1430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "longest", scope: !67, file: !31, line: 694, type: !15)
!1431 = !DILocation(line: 694, column: 9, scope: !67)
!1432 = !DILocation(line: 697, column: 3, scope: !67)
!1433 = !DILocation(line: 697, column: 12, scope: !67)
!1434 = !DILocation(line: 697, column: 29, scope: !67)
!1435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !67, file: !31, line: 691, type: !15)
!1436 = !DILocation(line: 691, column: 9, scope: !67)
!1437 = !DILocation(line: 698, column: 8, scope: !1438)
!1438 = distinct !DILexicalBlock(scope: !67, file: !31, line: 698, column: 3)
!1439 = !DILocation(line: 698, column: 19, scope: !1440)
!1440 = distinct !DILexicalBlock(scope: !1438, file: !31, line: 698, column: 3)
!1441 = !DILocation(line: 698, column: 28, scope: !1440)
!1442 = !DILocation(line: 698, column: 17, scope: !1440)
!1443 = !DILocation(line: 698, column: 3, scope: !1438)
!1444 = !DILocation(line: 699, column: 10, scope: !1445)
!1445 = distinct !DILexicalBlock(scope: !1446, file: !31, line: 699, column: 9)
!1446 = distinct !DILexicalBlock(scope: !1440, file: !31, line: 698, column: 44)
!1447 = !DILocation(line: 699, column: 19, scope: !1445)
!1448 = !DILocation(line: 699, column: 36, scope: !1445)
!1449 = !DILocation(line: 699, column: 9, scope: !1446)
!1450 = !DILocation(line: 700, column: 7, scope: !1451)
!1451 = distinct !DILexicalBlock(scope: !1445, file: !31, line: 699, column: 45)
!1452 = !DILocation(line: 700, column: 7, scope: !1453)
!1453 = !DILexicalBlockFile(scope: !1451, file: !31, discriminator: 1)
!1454 = !DILocation(line: 700, column: 7, scope: !1455)
!1455 = !DILexicalBlockFile(scope: !1451, file: !31, discriminator: 2)
!1456 = !DILocation(line: 701, column: 15, scope: !1451)
!1457 = !DILocation(line: 701, column: 24, scope: !1451)
!1458 = !DILocation(line: 701, column: 41, scope: !1451)
!1459 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "below", scope: !67, file: !31, line: 692, type: !15)
!1460 = !DILocation(line: 692, column: 9, scope: !67)
!1461 = !DILocation(line: 702, column: 12, scope: !1462)
!1462 = distinct !DILexicalBlock(scope: !1451, file: !31, line: 702, column: 11)
!1463 = !DILocation(line: 702, column: 23, scope: !1462)
!1464 = !DILocation(line: 702, column: 11, scope: !1451)
!1465 = !DILocation(line: 703, column: 16, scope: !1466)
!1466 = distinct !DILexicalBlock(scope: !1462, file: !31, line: 702, column: 41)
!1467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "path", scope: !67, file: !31, line: 693, type: !15)
!1468 = !DILocation(line: 693, column: 9, scope: !67)
!1469 = !DILocation(line: 704, column: 18, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1466, file: !31, line: 704, column: 13)
!1471 = !DILocation(line: 704, column: 13, scope: !1466)
!1472 = !DILocation(line: 706, column: 9, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1470, file: !31, line: 704, column: 29)
!1474 = !DILocation(line: 707, column: 7, scope: !1466)
!1475 = !DILocation(line: 708, column: 5, scope: !1451)
!1476 = !DILocation(line: 709, column: 3, scope: !1446)
!1477 = !DILocation(line: 698, column: 40, scope: !1440)
!1478 = !DILocation(line: 698, column: 3, scope: !1440)
!1479 = !DILocation(line: 710, column: 19, scope: !67)
!1480 = !DILocation(line: 710, column: 3, scope: !67)
!1481 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "VCG", arg: 1, scope: !68, file: !31, line: 713, type: !4)
!1482 = !DILocation(line: 713, column: 24, scope: !68)
!1483 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "check", arg: 2, scope: !68, file: !31, line: 714, type: !15)
!1484 = !DILocation(line: 714, column: 17, scope: !68)
!1485 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "track", arg: 3, scope: !68, file: !31, line: 715, type: !15)
!1486 = !DILocation(line: 715, column: 17, scope: !68)
!1487 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "assign", arg: 4, scope: !68, file: !31, line: 716, type: !26)
!1488 = !DILocation(line: 716, column: 18, scope: !68)
!1489 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "vcv", scope: !68, file: !31, line: 718, type: !15)
!1490 = !DILocation(line: 718, column: 9, scope: !68)
!1491 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !68, file: !31, line: 717, type: !15)
!1492 = !DILocation(line: 717, column: 9, scope: !68)
!1493 = !DILocation(line: 721, column: 8, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !68, file: !31, line: 721, column: 3)
!1495 = !DILocation(line: 721, column: 24, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1494, file: !31, line: 721, column: 3)
!1497 = !DILocation(line: 721, column: 21, scope: !1496)
!1498 = !DILocation(line: 721, column: 3, scope: !1494)
!1499 = !DILocation(line: 722, column: 9, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1501, file: !31, line: 722, column: 9)
!1501 = distinct !DILexicalBlock(scope: !1496, file: !31, line: 721, column: 44)
!1502 = !DILocation(line: 722, column: 9, scope: !1501)
!1503 = !DILocation(line: 723, column: 11, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1505, file: !31, line: 723, column: 11)
!1505 = distinct !DILexicalBlock(scope: !1500, file: !31, line: 722, column: 22)
!1506 = !DILocation(line: 723, column: 23, scope: !1504)
!1507 = !DILocation(line: 723, column: 11, scope: !1505)
!1508 = !DILocation(line: 727, column: 13, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !1510, file: !31, line: 727, column: 13)
!1510 = distinct !DILexicalBlock(scope: !1504, file: !31, line: 723, column: 32)
!1511 = !DILocation(line: 727, column: 13, scope: !1510)
!1512 = !DILocation(line: 728, column: 14, scope: !1513)
!1513 = distinct !DILexicalBlock(scope: !1509, file: !31, line: 727, column: 49)
!1514 = !DILocation(line: 729, column: 9, scope: !1513)
!1515 = !DILocation(line: 730, column: 7, scope: !1510)
!1516 = !DILocation(line: 730, column: 18, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1504, file: !31, line: 730, column: 18)
!1518 = !DILocation(line: 730, column: 30, scope: !1517)
!1519 = !DILocation(line: 730, column: 18, scope: !1504)
!1520 = !DILocation(line: 734, column: 13, scope: !1521)
!1521 = distinct !DILexicalBlock(scope: !1522, file: !31, line: 734, column: 13)
!1522 = distinct !DILexicalBlock(scope: !1517, file: !31, line: 730, column: 39)
!1523 = !DILocation(line: 734, column: 13, scope: !1522)
!1524 = !DILocation(line: 735, column: 14, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1521, file: !31, line: 734, column: 49)
!1526 = !DILocation(line: 736, column: 9, scope: !1525)
!1527 = !DILocation(line: 737, column: 7, scope: !1522)
!1528 = !DILocation(line: 741, column: 13, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1530, file: !31, line: 741, column: 13)
!1530 = distinct !DILexicalBlock(scope: !1517, file: !31, line: 737, column: 14)
!1531 = !DILocation(line: 741, column: 48, scope: !1529)
!1532 = !DILocation(line: 741, column: 51, scope: !1529)
!1533 = !DILocation(line: 741, column: 13, scope: !1530)
!1534 = !DILocation(line: 742, column: 14, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1529, file: !31, line: 741, column: 87)
!1536 = !DILocation(line: 743, column: 9, scope: !1535)
!1537 = !DILocation(line: 745, column: 5, scope: !1505)
!1538 = !DILocation(line: 746, column: 3, scope: !1501)
!1539 = !DILocation(line: 721, column: 40, scope: !1496)
!1540 = !DILocation(line: 721, column: 3, scope: !1496)
!1541 = !DILocation(line: 747, column: 3, scope: !68)
