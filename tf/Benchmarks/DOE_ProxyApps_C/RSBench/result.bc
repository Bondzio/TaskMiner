; ModuleID = '/home/gleison/tf/Benchmarks/DOE_ProxyApps_C/RSBench/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Input = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.CalcDataPtrs = type { i32*, i32*, %struct.Materials, %struct.Pole**, %struct.Window**, double** }
%struct.Materials = type { i32*, i32**, double** }
%struct.Pole = type { { double, double }, { double, double }, { double, double }, { double, double }, i16 }
%struct.Window = type { double, double, double, i32, i32 }

@fast_nuclear_W.an = private unnamed_addr constant [10 x double] [double 2.758402e-01, double 2.245740e-01, double 1.594149e-01, double 9.866577e-02, double 5.324414e-02, double 2.505215e-02, double 1.027747e-02, double 3.676164e-03, double 1.146494e-03, double 3.117570e-04], align 16
@fast_nuclear_W.neg_1n = private unnamed_addr constant [10 x double] [double -1.000000e+00, double 1.000000e+00, double -1.000000e+00, double 1.000000e+00, double -1.000000e+00, double 1.000000e+00, double -1.000000e+00, double 1.000000e+00, double -1.000000e+00, double 1.000000e+00], align 16
@fast_nuclear_W.denominator_left = private unnamed_addr constant [10 x double] [double 9.869604e+00, double 3.947842e+01, double 8.882644e+01, double 1.579137e+02, double 2.467401e+02, double 3.553058e+02, double 4.836106e+02, double 6.316547e+02, double 7.994380e+02, double 9.869604e+02], align 16

; Function Attrs: nounwind uwtable
define { double, double } @fast_nuclear_W(double %Z.coerce0, double %Z.coerce1) #0 {
entry:
  %retval = alloca { double, double }, align 8
  %Z = alloca { double, double }, align 8
  %coerce = alloca { double, double }, align 8
  %prefactor = alloca { double, double }, align 8
  %an = alloca [10 x double], align 16
  %neg_1n = alloca [10 x double], align 16
  %denominator_left = alloca [10 x double], align 16
  %W = alloca { double, double }, align 8
  %coerce9 = alloca { double, double }, align 8
  %sum = alloca { double, double }, align 8
  %n = alloca i32, align 4
  %top = alloca { double, double }, align 8
  %coerce55 = alloca { double, double }, align 8
  %bot = alloca { double, double }, align 8
  %a = alloca double, align 8
  %b = alloca double, align 8
  %c = alloca double, align 8
  %d = alloca double, align 8
  %W147 = alloca { double, double }, align 8
  %0 = getelementptr { double, double }, { double, double }* %Z, i32 0, i32 0
  store double %Z.coerce0, double* %0
  %1 = getelementptr { double, double }, { double, double }* %Z, i32 0, i32 1
  store double %Z.coerce1, double* %1
  call void @llvm.dbg.declare(metadata { double, double }* %Z, metadata !88, metadata !89), !dbg !90
  %Z.realp = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !91
  %Z.real = load double, double* %Z.realp, align 8, !dbg !91
  %Z.imagp = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !91
  %Z.imag = load double, double* %Z.imagp, align 8, !dbg !91
  %real = getelementptr inbounds { double, double }, { double, double }* %coerce, i32 0, i32 0, !dbg !93
  %imag = getelementptr inbounds { double, double }, { double, double }* %coerce, i32 0, i32 1, !dbg !93
  store double %Z.real, double* %real, align 8, !dbg !93
  store double %Z.imag, double* %imag, align 8, !dbg !93
  %2 = getelementptr { double, double }, { double, double }* %coerce, i32 0, i32 0, !dbg !93
  %3 = load double, double* %2, align 1, !dbg !93
  %4 = getelementptr { double, double }, { double, double }* %coerce, i32 0, i32 1, !dbg !93
  %5 = load double, double* %4, align 1, !dbg !93
  %call = call double @cabs(double %3, double %5) #1, !dbg !93
  %cmp = fcmp olt double %call, 6.000000e+00, !dbg !94
  br i1 %cmp, label %if.then, label %if.end, !dbg !95

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata { double, double }* %prefactor, metadata !96, metadata !89), !dbg !98
  %real1 = getelementptr inbounds { double, double }, { double, double }* %prefactor, i32 0, i32 0, !dbg !98
  %imag2 = getelementptr inbounds { double, double }, { double, double }* %prefactor, i32 0, i32 1, !dbg !98
  store double 0.000000e+00, double* %real1, align 8, !dbg !98
  store double 8.124330e+01, double* %imag2, align 8, !dbg !98
  call void @llvm.dbg.declare(metadata [10 x double]* %an, metadata !99, metadata !89), !dbg !103
  %6 = bitcast [10 x double]* %an to i8*, !dbg !103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast ([10 x double]* @fast_nuclear_W.an to i8*), i64 80, i32 16, i1 false), !dbg !103
  call void @llvm.dbg.declare(metadata [10 x double]* %neg_1n, metadata !104, metadata !89), !dbg !105
  %7 = bitcast [10 x double]* %neg_1n to i8*, !dbg !105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* bitcast ([10 x double]* @fast_nuclear_W.neg_1n to i8*), i64 80, i32 16, i1 false), !dbg !105
  call void @llvm.dbg.declare(metadata [10 x double]* %denominator_left, metadata !106, metadata !89), !dbg !107
  %8 = bitcast [10 x double]* %denominator_left to i8*, !dbg !107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast ([10 x double]* @fast_nuclear_W.denominator_left to i8*), i64 80, i32 16, i1 false), !dbg !107
  call void @llvm.dbg.declare(metadata { double, double }* %W, metadata !108, metadata !89), !dbg !109
  %Z.realp3 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !110
  %Z.real4 = load double, double* %Z.realp3, align 8, !dbg !110
  %Z.imagp5 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !110
  %Z.imag6 = load double, double* %Z.imagp5, align 8, !dbg !110
  %mul_ac = fmul double 0.000000e+00, %Z.real4, !dbg !111
  %mul_bd = fmul double 1.200000e+01, %Z.imag6, !dbg !111
  %mul_ad = fmul double 0.000000e+00, %Z.imag6, !dbg !111
  %mul_bc = fmul double 1.200000e+01, %Z.real4, !dbg !111
  %mul_r = fsub double %mul_ac, %mul_bd, !dbg !111
  %mul_i = fadd double %mul_ad, %mul_bc, !dbg !111
  %isnan_cmp = fcmp uno double %mul_r, %mul_r, !dbg !111
  br i1 %isnan_cmp, label %complex_mul_imag_nan, label %complex_mul_cont, !dbg !111, !prof !112

complex_mul_imag_nan:                             ; preds = %if.then
  %isnan_cmp7 = fcmp uno double %mul_i, %mul_i, !dbg !113
  br i1 %isnan_cmp7, label %complex_mul_libcall, label %complex_mul_cont, !dbg !113, !prof !112

complex_mul_libcall:                              ; preds = %complex_mul_imag_nan
  %call8 = call { double, double } @__muldc3(double 0.000000e+00, double 1.200000e+01, double %Z.real4, double %Z.imag6) #3, !dbg !115
  %9 = extractvalue { double, double } %call8, 0, !dbg !115
  %10 = extractvalue { double, double } %call8, 1, !dbg !115
  br label %complex_mul_cont, !dbg !115

complex_mul_cont:                                 ; preds = %complex_mul_libcall, %complex_mul_imag_nan, %if.then
  %real_mul_phi = phi double [ %mul_r, %if.then ], [ %mul_r, %complex_mul_imag_nan ], [ %9, %complex_mul_libcall ], !dbg !111
  %imag_mul_phi = phi double [ %mul_i, %if.then ], [ %mul_i, %complex_mul_imag_nan ], [ %10, %complex_mul_libcall ], !dbg !111
  %real10 = getelementptr inbounds { double, double }, { double, double }* %coerce9, i32 0, i32 0, !dbg !117
  %imag11 = getelementptr inbounds { double, double }, { double, double }* %coerce9, i32 0, i32 1, !dbg !117
  store double %real_mul_phi, double* %real10, align 8, !dbg !117
  store double %imag_mul_phi, double* %imag11, align 8, !dbg !117
  %11 = getelementptr { double, double }, { double, double }* %coerce9, i32 0, i32 0, !dbg !117
  %12 = load double, double* %11, align 1, !dbg !117
  %13 = getelementptr { double, double }, { double, double }* %coerce9, i32 0, i32 1, !dbg !117
  %14 = load double, double* %13, align 1, !dbg !117
  %call12 = call { double, double } @cexp(double %12, double %14) #1, !dbg !117
  %15 = extractvalue { double, double } %call12, 0, !dbg !117
  %16 = extractvalue { double, double } %call12, 1, !dbg !117
  %sub.r = fsub double 1.000000e+00, %15, !dbg !121
  %sub.i = fsub double 0.000000e+00, %16, !dbg !121
  %mul_ac13 = fmul double 0.000000e+00, %sub.r, !dbg !122
  %mul_bd14 = fmul double 1.000000e+00, %sub.i, !dbg !122
  %mul_ad15 = fmul double 0.000000e+00, %sub.i, !dbg !122
  %mul_bc16 = fmul double 1.000000e+00, %sub.r, !dbg !122
  %mul_r17 = fsub double %mul_ac13, %mul_bd14, !dbg !122
  %mul_i18 = fadd double %mul_ad15, %mul_bc16, !dbg !122
  %isnan_cmp19 = fcmp uno double %mul_r17, %mul_r17, !dbg !122
  br i1 %isnan_cmp19, label %complex_mul_imag_nan.20, label %complex_mul_cont.24, !dbg !122, !prof !112

complex_mul_imag_nan.20:                          ; preds = %complex_mul_cont
  %isnan_cmp21 = fcmp uno double %mul_i18, %mul_i18, !dbg !123
  br i1 %isnan_cmp21, label %complex_mul_libcall.22, label %complex_mul_cont.24, !dbg !123, !prof !112

complex_mul_libcall.22:                           ; preds = %complex_mul_imag_nan.20
  %call23 = call { double, double } @__muldc3(double 0.000000e+00, double 1.000000e+00, double %sub.r, double %sub.i) #3, !dbg !125
  %17 = extractvalue { double, double } %call23, 0, !dbg !125
  %18 = extractvalue { double, double } %call23, 1, !dbg !125
  br label %complex_mul_cont.24, !dbg !125

complex_mul_cont.24:                              ; preds = %complex_mul_libcall.22, %complex_mul_imag_nan.20, %complex_mul_cont
  %real_mul_phi25 = phi double [ %mul_r17, %complex_mul_cont ], [ %mul_r17, %complex_mul_imag_nan.20 ], [ %17, %complex_mul_libcall.22 ], !dbg !122
  %imag_mul_phi26 = phi double [ %mul_i18, %complex_mul_cont ], [ %mul_i18, %complex_mul_imag_nan.20 ], [ %18, %complex_mul_libcall.22 ], !dbg !122
  %Z.realp27 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !127
  %Z.real28 = load double, double* %Z.realp27, align 8, !dbg !127
  %Z.imagp29 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !127
  %Z.imag30 = load double, double* %Z.imagp29, align 8, !dbg !127
  %mul.rl = fmul double 1.200000e+01, %Z.real28, !dbg !131
  %mul.ir = fmul double 1.200000e+01, %Z.imag30, !dbg !131
  %call31 = call { double, double } @__divdc3(double %real_mul_phi25, double %imag_mul_phi26, double %mul.rl, double %mul.ir) #3, !dbg !132
  %19 = extractvalue { double, double } %call31, 0, !dbg !132
  %20 = extractvalue { double, double } %call31, 1, !dbg !132
  %real32 = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 0, !dbg !109
  %imag33 = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 1, !dbg !109
  store double %19, double* %real32, align 8, !dbg !109
  store double %20, double* %imag33, align 8, !dbg !109
  call void @llvm.dbg.declare(metadata { double, double }* %sum, metadata !133, metadata !89), !dbg !134
  %real34 = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 0, !dbg !134
  %imag35 = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 1, !dbg !134
  store double 0.000000e+00, double* %real34, align 8, !dbg !134
  store double 0.000000e+00, double* %imag35, align 8, !dbg !134
  call void @llvm.dbg.declare(metadata i32* %n, metadata !135, metadata !89), !dbg !137
  store i32 0, i32* %n, align 4, !dbg !137
  br label %for.cond, !dbg !138

for.cond:                                         ; preds = %for.inc, %complex_mul_cont.24
  %21 = load i32, i32* %n, align 4, !dbg !139
  %cmp36 = icmp slt i32 %21, 10, !dbg !143
  br i1 %cmp36, label %for.body, label %for.end, !dbg !144

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata { double, double }* %top, metadata !145, metadata !89), !dbg !147
  %22 = load i32, i32* %n, align 4, !dbg !148
  %idxprom = sext i32 %22 to i64, !dbg !149
  %arrayidx = getelementptr inbounds [10 x double], [10 x double]* %neg_1n, i32 0, i64 %idxprom, !dbg !149
  %23 = load double, double* %arrayidx, align 8, !dbg !149
  %Z.realp37 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !150
  %Z.real38 = load double, double* %Z.realp37, align 8, !dbg !150
  %Z.imagp39 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !150
  %Z.imag40 = load double, double* %Z.imagp39, align 8, !dbg !150
  %mul_ac41 = fmul double 0.000000e+00, %Z.real38, !dbg !151
  %mul_bd42 = fmul double 1.200000e+01, %Z.imag40, !dbg !151
  %mul_ad43 = fmul double 0.000000e+00, %Z.imag40, !dbg !151
  %mul_bc44 = fmul double 1.200000e+01, %Z.real38, !dbg !151
  %mul_r45 = fsub double %mul_ac41, %mul_bd42, !dbg !151
  %mul_i46 = fadd double %mul_ad43, %mul_bc44, !dbg !151
  %isnan_cmp47 = fcmp uno double %mul_r45, %mul_r45, !dbg !151
  br i1 %isnan_cmp47, label %complex_mul_imag_nan.48, label %complex_mul_cont.52, !dbg !151, !prof !112

complex_mul_imag_nan.48:                          ; preds = %for.body
  %isnan_cmp49 = fcmp uno double %mul_i46, %mul_i46, !dbg !152
  br i1 %isnan_cmp49, label %complex_mul_libcall.50, label %complex_mul_cont.52, !dbg !152, !prof !112

complex_mul_libcall.50:                           ; preds = %complex_mul_imag_nan.48
  %call51 = call { double, double } @__muldc3(double 0.000000e+00, double 1.200000e+01, double %Z.real38, double %Z.imag40) #3, !dbg !154
  %24 = extractvalue { double, double } %call51, 0, !dbg !154
  %25 = extractvalue { double, double } %call51, 1, !dbg !154
  br label %complex_mul_cont.52, !dbg !154

complex_mul_cont.52:                              ; preds = %complex_mul_libcall.50, %complex_mul_imag_nan.48, %for.body
  %real_mul_phi53 = phi double [ %mul_r45, %for.body ], [ %mul_r45, %complex_mul_imag_nan.48 ], [ %24, %complex_mul_libcall.50 ], !dbg !151
  %imag_mul_phi54 = phi double [ %mul_i46, %for.body ], [ %mul_i46, %complex_mul_imag_nan.48 ], [ %25, %complex_mul_libcall.50 ], !dbg !151
  %real56 = getelementptr inbounds { double, double }, { double, double }* %coerce55, i32 0, i32 0, !dbg !156
  %imag57 = getelementptr inbounds { double, double }, { double, double }* %coerce55, i32 0, i32 1, !dbg !156
  store double %real_mul_phi53, double* %real56, align 8, !dbg !156
  store double %imag_mul_phi54, double* %imag57, align 8, !dbg !156
  %26 = getelementptr { double, double }, { double, double }* %coerce55, i32 0, i32 0, !dbg !156
  %27 = load double, double* %26, align 1, !dbg !156
  %28 = getelementptr { double, double }, { double, double }* %coerce55, i32 0, i32 1, !dbg !156
  %29 = load double, double* %28, align 1, !dbg !156
  %call58 = call { double, double } @cexp(double %27, double %29) #1, !dbg !156
  %30 = extractvalue { double, double } %call58, 0, !dbg !156
  %31 = extractvalue { double, double } %call58, 1, !dbg !156
  %mul.rl59 = fmul double %23, %30, !dbg !160
  %mul.ir60 = fmul double %23, %31, !dbg !160
  %sub.r61 = fsub double %mul.rl59, 1.000000e+00, !dbg !161
  %real62 = getelementptr inbounds { double, double }, { double, double }* %top, i32 0, i32 0, !dbg !147
  %imag63 = getelementptr inbounds { double, double }, { double, double }* %top, i32 0, i32 1, !dbg !147
  store double %sub.r61, double* %real62, align 8, !dbg !147
  store double %mul.ir60, double* %imag63, align 8, !dbg !147
  call void @llvm.dbg.declare(metadata { double, double }* %bot, metadata !162, metadata !89), !dbg !163
  %32 = load i32, i32* %n, align 4, !dbg !164
  %idxprom64 = sext i32 %32 to i64, !dbg !165
  %arrayidx65 = getelementptr inbounds [10 x double], [10 x double]* %denominator_left, i32 0, i64 %idxprom64, !dbg !165
  %33 = load double, double* %arrayidx65, align 8, !dbg !165
  %Z.realp66 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !166
  %Z.real67 = load double, double* %Z.realp66, align 8, !dbg !166
  %Z.imagp68 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !166
  %Z.imag69 = load double, double* %Z.imagp68, align 8, !dbg !166
  %mul.rl70 = fmul double 1.440000e+02, %Z.real67, !dbg !167
  %mul.ir71 = fmul double 1.440000e+02, %Z.imag69, !dbg !167
  %Z.realp72 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !168
  %Z.real73 = load double, double* %Z.realp72, align 8, !dbg !168
  %Z.imagp74 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !168
  %Z.imag75 = load double, double* %Z.imagp74, align 8, !dbg !168
  %mul_ac76 = fmul double %mul.rl70, %Z.real73, !dbg !169
  %mul_bd77 = fmul double %mul.ir71, %Z.imag75, !dbg !169
  %mul_ad78 = fmul double %mul.rl70, %Z.imag75, !dbg !169
  %mul_bc79 = fmul double %mul.ir71, %Z.real73, !dbg !169
  %mul_r80 = fsub double %mul_ac76, %mul_bd77, !dbg !169
  %mul_i81 = fadd double %mul_ad78, %mul_bc79, !dbg !169
  %isnan_cmp82 = fcmp uno double %mul_r80, %mul_r80, !dbg !169
  br i1 %isnan_cmp82, label %complex_mul_imag_nan.83, label %complex_mul_cont.87, !dbg !169, !prof !112

complex_mul_imag_nan.83:                          ; preds = %complex_mul_cont.52
  %isnan_cmp84 = fcmp uno double %mul_i81, %mul_i81, !dbg !170
  br i1 %isnan_cmp84, label %complex_mul_libcall.85, label %complex_mul_cont.87, !dbg !170, !prof !112

complex_mul_libcall.85:                           ; preds = %complex_mul_imag_nan.83
  %call86 = call { double, double } @__muldc3(double %mul.rl70, double %mul.ir71, double %Z.real73, double %Z.imag75) #3, !dbg !171
  %34 = extractvalue { double, double } %call86, 0, !dbg !171
  %35 = extractvalue { double, double } %call86, 1, !dbg !171
  br label %complex_mul_cont.87, !dbg !171

complex_mul_cont.87:                              ; preds = %complex_mul_libcall.85, %complex_mul_imag_nan.83, %complex_mul_cont.52
  %real_mul_phi88 = phi double [ %mul_r80, %complex_mul_cont.52 ], [ %mul_r80, %complex_mul_imag_nan.83 ], [ %34, %complex_mul_libcall.85 ], !dbg !169
  %imag_mul_phi89 = phi double [ %mul_i81, %complex_mul_cont.52 ], [ %mul_i81, %complex_mul_imag_nan.83 ], [ %35, %complex_mul_libcall.85 ], !dbg !169
  %sub.r90 = fsub double %33, %real_mul_phi88, !dbg !172
  %sub.i91 = fsub double -0.000000e+00, %imag_mul_phi89, !dbg !172
  %real92 = getelementptr inbounds { double, double }, { double, double }* %bot, i32 0, i32 0, !dbg !163
  %imag93 = getelementptr inbounds { double, double }, { double, double }* %bot, i32 0, i32 1, !dbg !163
  store double %sub.r90, double* %real92, align 8, !dbg !163
  store double %sub.i91, double* %imag93, align 8, !dbg !163
  %36 = load i32, i32* %n, align 4, !dbg !173
  %idxprom94 = sext i32 %36 to i64, !dbg !174
  %arrayidx95 = getelementptr inbounds [10 x double], [10 x double]* %an, i32 0, i64 %idxprom94, !dbg !174
  %37 = load double, double* %arrayidx95, align 8, !dbg !174
  %top.realp = getelementptr inbounds { double, double }, { double, double }* %top, i32 0, i32 0, !dbg !175
  %top.real = load double, double* %top.realp, align 8, !dbg !175
  %top.imagp = getelementptr inbounds { double, double }, { double, double }* %top, i32 0, i32 1, !dbg !175
  %top.imag = load double, double* %top.imagp, align 8, !dbg !175
  %bot.realp = getelementptr inbounds { double, double }, { double, double }* %bot, i32 0, i32 0, !dbg !176
  %bot.real = load double, double* %bot.realp, align 8, !dbg !176
  %bot.imagp = getelementptr inbounds { double, double }, { double, double }* %bot, i32 0, i32 1, !dbg !176
  %bot.imag = load double, double* %bot.imagp, align 8, !dbg !176
  %call96 = call { double, double } @__divdc3(double %top.real, double %top.imag, double %bot.real, double %bot.imag) #3, !dbg !177
  %38 = extractvalue { double, double } %call96, 0, !dbg !177
  %39 = extractvalue { double, double } %call96, 1, !dbg !177
  %mul.rl97 = fmul double %37, %38, !dbg !178
  %mul.ir98 = fmul double %37, %39, !dbg !178
  %sum.realp = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 0, !dbg !179
  %sum.real = load double, double* %sum.realp, align 8, !dbg !179
  %sum.imagp = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 1, !dbg !179
  %sum.imag = load double, double* %sum.imagp, align 8, !dbg !179
  %add.r = fadd double %sum.real, %mul.rl97, !dbg !179
  %add.i = fadd double %sum.imag, %mul.ir98, !dbg !179
  %real99 = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 0, !dbg !179
  %imag100 = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 1, !dbg !179
  store double %add.r, double* %real99, align 8, !dbg !179
  store double %add.i, double* %imag100, align 8, !dbg !179
  br label %for.inc, !dbg !180

for.inc:                                          ; preds = %complex_mul_cont.87
  %40 = load i32, i32* %n, align 4, !dbg !181
  %inc = add nsw i32 %40, 1, !dbg !181
  store i32 %inc, i32* %n, align 4, !dbg !181
  br label %for.cond, !dbg !182

for.end:                                          ; preds = %for.cond
  %prefactor.realp = getelementptr inbounds { double, double }, { double, double }* %prefactor, i32 0, i32 0, !dbg !183
  %prefactor.real = load double, double* %prefactor.realp, align 8, !dbg !183
  %prefactor.imagp = getelementptr inbounds { double, double }, { double, double }* %prefactor, i32 0, i32 1, !dbg !183
  %prefactor.imag = load double, double* %prefactor.imagp, align 8, !dbg !183
  %Z.realp101 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !184
  %Z.real102 = load double, double* %Z.realp101, align 8, !dbg !184
  %Z.imagp103 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !184
  %Z.imag104 = load double, double* %Z.imagp103, align 8, !dbg !184
  %mul_ac105 = fmul double %prefactor.real, %Z.real102, !dbg !185
  %mul_bd106 = fmul double %prefactor.imag, %Z.imag104, !dbg !185
  %mul_ad107 = fmul double %prefactor.real, %Z.imag104, !dbg !185
  %mul_bc108 = fmul double %prefactor.imag, %Z.real102, !dbg !185
  %mul_r109 = fsub double %mul_ac105, %mul_bd106, !dbg !185
  %mul_i110 = fadd double %mul_ad107, %mul_bc108, !dbg !185
  %isnan_cmp111 = fcmp uno double %mul_r109, %mul_r109, !dbg !185
  br i1 %isnan_cmp111, label %complex_mul_imag_nan.112, label %complex_mul_cont.116, !dbg !185, !prof !112

complex_mul_imag_nan.112:                         ; preds = %for.end
  %isnan_cmp113 = fcmp uno double %mul_i110, %mul_i110, !dbg !186
  br i1 %isnan_cmp113, label %complex_mul_libcall.114, label %complex_mul_cont.116, !dbg !186, !prof !112

complex_mul_libcall.114:                          ; preds = %complex_mul_imag_nan.112
  %call115 = call { double, double } @__muldc3(double %prefactor.real, double %prefactor.imag, double %Z.real102, double %Z.imag104) #3, !dbg !187
  %41 = extractvalue { double, double } %call115, 0, !dbg !187
  %42 = extractvalue { double, double } %call115, 1, !dbg !187
  br label %complex_mul_cont.116, !dbg !187

complex_mul_cont.116:                             ; preds = %complex_mul_libcall.114, %complex_mul_imag_nan.112, %for.end
  %real_mul_phi117 = phi double [ %mul_r109, %for.end ], [ %mul_r109, %complex_mul_imag_nan.112 ], [ %41, %complex_mul_libcall.114 ], !dbg !185
  %imag_mul_phi118 = phi double [ %mul_i110, %for.end ], [ %mul_i110, %complex_mul_imag_nan.112 ], [ %42, %complex_mul_libcall.114 ], !dbg !185
  %sum.realp119 = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 0, !dbg !188
  %sum.real120 = load double, double* %sum.realp119, align 8, !dbg !188
  %sum.imagp121 = getelementptr inbounds { double, double }, { double, double }* %sum, i32 0, i32 1, !dbg !188
  %sum.imag122 = load double, double* %sum.imagp121, align 8, !dbg !188
  %mul_ac123 = fmul double %real_mul_phi117, %sum.real120, !dbg !189
  %mul_bd124 = fmul double %imag_mul_phi118, %sum.imag122, !dbg !189
  %mul_ad125 = fmul double %real_mul_phi117, %sum.imag122, !dbg !189
  %mul_bc126 = fmul double %imag_mul_phi118, %sum.real120, !dbg !189
  %mul_r127 = fsub double %mul_ac123, %mul_bd124, !dbg !189
  %mul_i128 = fadd double %mul_ad125, %mul_bc126, !dbg !189
  %isnan_cmp129 = fcmp uno double %mul_r127, %mul_r127, !dbg !189
  br i1 %isnan_cmp129, label %complex_mul_imag_nan.130, label %complex_mul_cont.134, !dbg !189, !prof !112

complex_mul_imag_nan.130:                         ; preds = %complex_mul_cont.116
  %isnan_cmp131 = fcmp uno double %mul_i128, %mul_i128, !dbg !190
  br i1 %isnan_cmp131, label %complex_mul_libcall.132, label %complex_mul_cont.134, !dbg !190, !prof !112

complex_mul_libcall.132:                          ; preds = %complex_mul_imag_nan.130
  %call133 = call { double, double } @__muldc3(double %real_mul_phi117, double %imag_mul_phi118, double %sum.real120, double %sum.imag122) #3, !dbg !191
  %43 = extractvalue { double, double } %call133, 0, !dbg !191
  %44 = extractvalue { double, double } %call133, 1, !dbg !191
  br label %complex_mul_cont.134, !dbg !191

complex_mul_cont.134:                             ; preds = %complex_mul_libcall.132, %complex_mul_imag_nan.130, %complex_mul_cont.116
  %real_mul_phi135 = phi double [ %mul_r127, %complex_mul_cont.116 ], [ %mul_r127, %complex_mul_imag_nan.130 ], [ %43, %complex_mul_libcall.132 ], !dbg !189
  %imag_mul_phi136 = phi double [ %mul_i128, %complex_mul_cont.116 ], [ %mul_i128, %complex_mul_imag_nan.130 ], [ %44, %complex_mul_libcall.132 ], !dbg !189
  %W.realp = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 0, !dbg !192
  %W.real = load double, double* %W.realp, align 8, !dbg !192
  %W.imagp = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 1, !dbg !192
  %W.imag = load double, double* %W.imagp, align 8, !dbg !192
  %add.r137 = fadd double %W.real, %real_mul_phi135, !dbg !192
  %add.i138 = fadd double %W.imag, %imag_mul_phi136, !dbg !192
  %real139 = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 0, !dbg !192
  %imag140 = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 1, !dbg !192
  store double %add.r137, double* %real139, align 8, !dbg !192
  store double %add.i138, double* %imag140, align 8, !dbg !192
  %W.realp141 = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 0, !dbg !193
  %W.real142 = load double, double* %W.realp141, align 8, !dbg !193
  %W.imagp143 = getelementptr inbounds { double, double }, { double, double }* %W, i32 0, i32 1, !dbg !193
  %W.imag144 = load double, double* %W.imagp143, align 8, !dbg !193
  %real145 = getelementptr inbounds { double, double }, { double, double }* %retval, i32 0, i32 0, !dbg !194
  %imag146 = getelementptr inbounds { double, double }, { double, double }* %retval, i32 0, i32 1, !dbg !194
  store double %W.real142, double* %real145, align 8, !dbg !194
  store double %W.imag144, double* %imag146, align 8, !dbg !194
  br label %return, !dbg !194

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %a, metadata !195, metadata !89), !dbg !196
  store double 0x3FE065C77CDFFF0D, double* %a, align 8, !dbg !196
  call void @llvm.dbg.declare(metadata double* %b, metadata !197, metadata !89), !dbg !198
  store double 0x3FD19DC7AFDB7B46, double* %b, align 8, !dbg !198
  call void @llvm.dbg.declare(metadata double* %c, metadata !199, metadata !89), !dbg !200
  store double 0x3FAA80FD3629C600, double* %c, align 8, !dbg !200
  call void @llvm.dbg.declare(metadata double* %d, metadata !201, metadata !89), !dbg !202
  store double 0x4005CC470A049097, double* %d, align 8, !dbg !202
  call void @llvm.dbg.declare(metadata { double, double }* %W147, metadata !203, metadata !89), !dbg !204
  %Z.realp148 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !205
  %Z.real149 = load double, double* %Z.realp148, align 8, !dbg !205
  %Z.imagp150 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !205
  %Z.imag151 = load double, double* %Z.imagp150, align 8, !dbg !205
  %mul_ac152 = fmul double 0.000000e+00, %Z.real149, !dbg !206
  %mul_bd153 = fmul double 1.000000e+00, %Z.imag151, !dbg !206
  %mul_ad154 = fmul double 0.000000e+00, %Z.imag151, !dbg !206
  %mul_bc155 = fmul double 1.000000e+00, %Z.real149, !dbg !206
  %mul_r156 = fsub double %mul_ac152, %mul_bd153, !dbg !206
  %mul_i157 = fadd double %mul_ad154, %mul_bc155, !dbg !206
  %isnan_cmp158 = fcmp uno double %mul_r156, %mul_r156, !dbg !206
  br i1 %isnan_cmp158, label %complex_mul_imag_nan.159, label %complex_mul_cont.163, !dbg !206, !prof !112

complex_mul_imag_nan.159:                         ; preds = %if.end
  %isnan_cmp160 = fcmp uno double %mul_i157, %mul_i157, !dbg !207
  br i1 %isnan_cmp160, label %complex_mul_libcall.161, label %complex_mul_cont.163, !dbg !207, !prof !112

complex_mul_libcall.161:                          ; preds = %complex_mul_imag_nan.159
  %call162 = call { double, double } @__muldc3(double 0.000000e+00, double 1.000000e+00, double %Z.real149, double %Z.imag151) #3, !dbg !209
  %45 = extractvalue { double, double } %call162, 0, !dbg !209
  %46 = extractvalue { double, double } %call162, 1, !dbg !209
  br label %complex_mul_cont.163, !dbg !209

complex_mul_cont.163:                             ; preds = %complex_mul_libcall.161, %complex_mul_imag_nan.159, %if.end
  %real_mul_phi164 = phi double [ %mul_r156, %if.end ], [ %mul_r156, %complex_mul_imag_nan.159 ], [ %45, %complex_mul_libcall.161 ], !dbg !206
  %imag_mul_phi165 = phi double [ %mul_i157, %if.end ], [ %mul_i157, %complex_mul_imag_nan.159 ], [ %46, %complex_mul_libcall.161 ], !dbg !206
  %47 = load double, double* %a, align 8, !dbg !211
  %Z.realp166 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !215
  %Z.real167 = load double, double* %Z.realp166, align 8, !dbg !215
  %Z.imagp168 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !215
  %Z.imag169 = load double, double* %Z.imagp168, align 8, !dbg !215
  %Z.realp170 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !216
  %Z.real171 = load double, double* %Z.realp170, align 8, !dbg !216
  %Z.imagp172 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !216
  %Z.imag173 = load double, double* %Z.imagp172, align 8, !dbg !216
  %mul_ac174 = fmul double %Z.real167, %Z.real171, !dbg !217
  %mul_bd175 = fmul double %Z.imag169, %Z.imag173, !dbg !217
  %mul_ad176 = fmul double %Z.real167, %Z.imag173, !dbg !217
  %mul_bc177 = fmul double %Z.imag169, %Z.real171, !dbg !217
  %mul_r178 = fsub double %mul_ac174, %mul_bd175, !dbg !217
  %mul_i179 = fadd double %mul_ad176, %mul_bc177, !dbg !217
  %isnan_cmp180 = fcmp uno double %mul_r178, %mul_r178, !dbg !217
  br i1 %isnan_cmp180, label %complex_mul_imag_nan.181, label %complex_mul_cont.185, !dbg !217, !prof !112

complex_mul_imag_nan.181:                         ; preds = %complex_mul_cont.163
  %isnan_cmp182 = fcmp uno double %mul_i179, %mul_i179, !dbg !218
  br i1 %isnan_cmp182, label %complex_mul_libcall.183, label %complex_mul_cont.185, !dbg !218, !prof !112

complex_mul_libcall.183:                          ; preds = %complex_mul_imag_nan.181
  %call184 = call { double, double } @__muldc3(double %Z.real167, double %Z.imag169, double %Z.real171, double %Z.imag173) #3, !dbg !220
  %48 = extractvalue { double, double } %call184, 0, !dbg !220
  %49 = extractvalue { double, double } %call184, 1, !dbg !220
  br label %complex_mul_cont.185, !dbg !220

complex_mul_cont.185:                             ; preds = %complex_mul_libcall.183, %complex_mul_imag_nan.181, %complex_mul_cont.163
  %real_mul_phi186 = phi double [ %mul_r178, %complex_mul_cont.163 ], [ %mul_r178, %complex_mul_imag_nan.181 ], [ %48, %complex_mul_libcall.183 ], !dbg !217
  %imag_mul_phi187 = phi double [ %mul_i179, %complex_mul_cont.163 ], [ %mul_i179, %complex_mul_imag_nan.181 ], [ %49, %complex_mul_libcall.183 ], !dbg !217
  %50 = load double, double* %b, align 8, !dbg !222
  %sub.r188 = fsub double %real_mul_phi186, %50, !dbg !226
  %call189 = call { double, double } @__divdc3(double %47, double 0.000000e+00, double %sub.r188, double %imag_mul_phi187) #3, !dbg !227
  %51 = extractvalue { double, double } %call189, 0, !dbg !227
  %52 = extractvalue { double, double } %call189, 1, !dbg !227
  %53 = load double, double* %c, align 8, !dbg !228
  %Z.realp190 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !229
  %Z.real191 = load double, double* %Z.realp190, align 8, !dbg !229
  %Z.imagp192 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !229
  %Z.imag193 = load double, double* %Z.imagp192, align 8, !dbg !229
  %Z.realp194 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !230
  %Z.real195 = load double, double* %Z.realp194, align 8, !dbg !230
  %Z.imagp196 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !230
  %Z.imag197 = load double, double* %Z.imagp196, align 8, !dbg !230
  %mul_ac198 = fmul double %Z.real191, %Z.real195, !dbg !231
  %mul_bd199 = fmul double %Z.imag193, %Z.imag197, !dbg !231
  %mul_ad200 = fmul double %Z.real191, %Z.imag197, !dbg !231
  %mul_bc201 = fmul double %Z.imag193, %Z.real195, !dbg !231
  %mul_r202 = fsub double %mul_ac198, %mul_bd199, !dbg !231
  %mul_i203 = fadd double %mul_ad200, %mul_bc201, !dbg !231
  %isnan_cmp204 = fcmp uno double %mul_r202, %mul_r202, !dbg !231
  br i1 %isnan_cmp204, label %complex_mul_imag_nan.205, label %complex_mul_cont.209, !dbg !231, !prof !112

complex_mul_imag_nan.205:                         ; preds = %complex_mul_cont.185
  %isnan_cmp206 = fcmp uno double %mul_i203, %mul_i203, !dbg !232
  br i1 %isnan_cmp206, label %complex_mul_libcall.207, label %complex_mul_cont.209, !dbg !232, !prof !112

complex_mul_libcall.207:                          ; preds = %complex_mul_imag_nan.205
  %call208 = call { double, double } @__muldc3(double %Z.real191, double %Z.imag193, double %Z.real195, double %Z.imag197) #3, !dbg !234
  %54 = extractvalue { double, double } %call208, 0, !dbg !234
  %55 = extractvalue { double, double } %call208, 1, !dbg !234
  br label %complex_mul_cont.209, !dbg !234

complex_mul_cont.209:                             ; preds = %complex_mul_libcall.207, %complex_mul_imag_nan.205, %complex_mul_cont.185
  %real_mul_phi210 = phi double [ %mul_r202, %complex_mul_cont.185 ], [ %mul_r202, %complex_mul_imag_nan.205 ], [ %54, %complex_mul_libcall.207 ], !dbg !231
  %imag_mul_phi211 = phi double [ %mul_i203, %complex_mul_cont.185 ], [ %mul_i203, %complex_mul_imag_nan.205 ], [ %55, %complex_mul_libcall.207 ], !dbg !231
  %56 = load double, double* %d, align 8, !dbg !236
  %sub.r212 = fsub double %real_mul_phi210, %56, !dbg !240
  %call213 = call { double, double } @__divdc3(double %53, double 0.000000e+00, double %sub.r212, double %imag_mul_phi211) #3, !dbg !241
  %57 = extractvalue { double, double } %call213, 0, !dbg !241
  %58 = extractvalue { double, double } %call213, 1, !dbg !241
  %add.r214 = fadd double %51, %57, !dbg !242
  %add.i215 = fadd double %52, %58, !dbg !242
  %mul_ac216 = fmul double %real_mul_phi164, %add.r214, !dbg !243
  %mul_bd217 = fmul double %imag_mul_phi165, %add.i215, !dbg !243
  %mul_ad218 = fmul double %real_mul_phi164, %add.i215, !dbg !243
  %mul_bc219 = fmul double %imag_mul_phi165, %add.r214, !dbg !243
  %mul_r220 = fsub double %mul_ac216, %mul_bd217, !dbg !243
  %mul_i221 = fadd double %mul_ad218, %mul_bc219, !dbg !243
  %isnan_cmp222 = fcmp uno double %mul_r220, %mul_r220, !dbg !243
  br i1 %isnan_cmp222, label %complex_mul_imag_nan.223, label %complex_mul_cont.227, !dbg !243, !prof !112

complex_mul_imag_nan.223:                         ; preds = %complex_mul_cont.209
  %isnan_cmp224 = fcmp uno double %mul_i221, %mul_i221, !dbg !244
  br i1 %isnan_cmp224, label %complex_mul_libcall.225, label %complex_mul_cont.227, !dbg !244, !prof !112

complex_mul_libcall.225:                          ; preds = %complex_mul_imag_nan.223
  %call226 = call { double, double } @__muldc3(double %real_mul_phi164, double %imag_mul_phi165, double %add.r214, double %add.i215) #3, !dbg !246
  %59 = extractvalue { double, double } %call226, 0, !dbg !246
  %60 = extractvalue { double, double } %call226, 1, !dbg !246
  br label %complex_mul_cont.227, !dbg !246

complex_mul_cont.227:                             ; preds = %complex_mul_libcall.225, %complex_mul_imag_nan.223, %complex_mul_cont.209
  %real_mul_phi228 = phi double [ %mul_r220, %complex_mul_cont.209 ], [ %mul_r220, %complex_mul_imag_nan.223 ], [ %59, %complex_mul_libcall.225 ], !dbg !243
  %imag_mul_phi229 = phi double [ %mul_i221, %complex_mul_cont.209 ], [ %mul_i221, %complex_mul_imag_nan.223 ], [ %60, %complex_mul_libcall.225 ], !dbg !243
  %real230 = getelementptr inbounds { double, double }, { double, double }* %W147, i32 0, i32 0, !dbg !248
  %imag231 = getelementptr inbounds { double, double }, { double, double }* %W147, i32 0, i32 1, !dbg !248
  store double %real_mul_phi228, double* %real230, align 8, !dbg !248
  store double %imag_mul_phi229, double* %imag231, align 8, !dbg !248
  %W147.realp = getelementptr inbounds { double, double }, { double, double }* %W147, i32 0, i32 0, !dbg !252
  %W147.real = load double, double* %W147.realp, align 8, !dbg !252
  %W147.imagp = getelementptr inbounds { double, double }, { double, double }* %W147, i32 0, i32 1, !dbg !252
  %W147.imag = load double, double* %W147.imagp, align 8, !dbg !252
  %real232 = getelementptr inbounds { double, double }, { double, double }* %retval, i32 0, i32 0, !dbg !253
  %imag233 = getelementptr inbounds { double, double }, { double, double }* %retval, i32 0, i32 1, !dbg !253
  store double %W147.real, double* %real232, align 8, !dbg !253
  store double %W147.imag, double* %imag233, align 8, !dbg !253
  br label %return, !dbg !253

return:                                           ; preds = %complex_mul_cont.227, %complex_mul_cont.134
  %61 = load { double, double }, { double, double }* %retval, !dbg !254
  ret { double, double } %61, !dbg !254
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone
declare double @cabs(double, double) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind readnone
declare { double, double } @cexp(double, double) #2

declare { double, double } @__muldc3(double, double, double, double)

declare { double, double } @__divdc3(double, double, double, double)

; Function Attrs: nounwind uwtable
define void @calculate_macro_xs(double* %macro_xs, i32 %mat, double %E, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %sigTfactors, i64* %abrarov, i64* %alls) #0 {
entry:
  %macro_xs.addr = alloca double*, align 8
  %mat.addr = alloca i32, align 4
  %E.addr = alloca double, align 8
  %sigTfactors.addr = alloca { double, double }*, align 8
  %abrarov.addr = alloca i64*, align 8
  %alls.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  %i1 = alloca i32, align 4
  %micro_xs = alloca [4 x double], align 16
  %nuc = alloca i32, align 4
  %j = alloca i32, align 4
  store double* %macro_xs, double** %macro_xs.addr, align 8
  call void @llvm.dbg.declare(metadata double** %macro_xs.addr, metadata !255, metadata !89), !dbg !256
  store i32 %mat, i32* %mat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mat.addr, metadata !257, metadata !89), !dbg !258
  store double %E, double* %E.addr, align 8
  call void @llvm.dbg.declare(metadata double* %E.addr, metadata !259, metadata !89), !dbg !260
  call void @llvm.dbg.declare(metadata %struct.Input* %input, metadata !261, metadata !89), !dbg !262
  call void @llvm.dbg.declare(metadata %struct.CalcDataPtrs* %data, metadata !263, metadata !89), !dbg !264
  store { double, double }* %sigTfactors, { double, double }** %sigTfactors.addr, align 8
  call void @llvm.dbg.declare(metadata { double, double }** %sigTfactors.addr, metadata !265, metadata !89), !dbg !266
  store i64* %abrarov, i64** %abrarov.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %abrarov.addr, metadata !267, metadata !89), !dbg !268
  store i64* %alls, i64** %alls.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %alls.addr, metadata !269, metadata !89), !dbg !270
  call void @llvm.dbg.declare(metadata i32* %i, metadata !271, metadata !89), !dbg !273
  store i32 0, i32* %i, align 4, !dbg !273
  br label %for.cond, !dbg !274

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !275
  %cmp = icmp slt i32 %0, 4, !dbg !279
  br i1 %cmp, label %for.body, label %for.end, !dbg !280

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !281
  %idxprom = sext i32 %1 to i64, !dbg !282
  %2 = load double*, double** %macro_xs.addr, align 8, !dbg !282
  %arrayidx = getelementptr inbounds double, double* %2, i64 %idxprom, !dbg !282
  store double 0.000000e+00, double* %arrayidx, align 8, !dbg !283
  br label %for.inc, !dbg !282

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !284
  %inc = add nsw i32 %3, 1, !dbg !284
  store i32 %inc, i32* %i, align 4, !dbg !284
  br label %for.cond, !dbg !285

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i1, metadata !286, metadata !89), !dbg !288
  store i32 0, i32* %i1, align 4, !dbg !288
  br label %for.cond.2, !dbg !289

for.cond.2:                                       ; preds = %for.inc.29, %for.end
  %4 = load i32, i32* %i1, align 4, !dbg !290
  %5 = load i32, i32* %mat.addr, align 4, !dbg !294
  %idxprom3 = sext i32 %5 to i64, !dbg !295
  %materials = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 2, !dbg !296
  %num_nucs = getelementptr inbounds %struct.Materials, %struct.Materials* %materials, i32 0, i32 0, !dbg !297
  %6 = load i32*, i32** %num_nucs, align 8, !dbg !297
  %arrayidx4 = getelementptr inbounds i32, i32* %6, i64 %idxprom3, !dbg !295
  %7 = load i32, i32* %arrayidx4, align 4, !dbg !295
  %cmp5 = icmp slt i32 %4, %7, !dbg !298
  br i1 %cmp5, label %for.body.6, label %for.end.31, !dbg !299

for.body.6:                                       ; preds = %for.cond.2
  call void @llvm.dbg.declare(metadata [4 x double]* %micro_xs, metadata !300, metadata !89), !dbg !305
  call void @llvm.dbg.declare(metadata i32* %nuc, metadata !306, metadata !89), !dbg !307
  %8 = load i32, i32* %i1, align 4, !dbg !308
  %idxprom7 = sext i32 %8 to i64, !dbg !309
  %9 = load i32, i32* %mat.addr, align 4, !dbg !310
  %idxprom8 = sext i32 %9 to i64, !dbg !309
  %materials9 = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 2, !dbg !311
  %mats = getelementptr inbounds %struct.Materials, %struct.Materials* %materials9, i32 0, i32 1, !dbg !312
  %10 = load i32**, i32*** %mats, align 8, !dbg !312
  %arrayidx10 = getelementptr inbounds i32*, i32** %10, i64 %idxprom8, !dbg !309
  %11 = load i32*, i32** %arrayidx10, align 8, !dbg !309
  %arrayidx11 = getelementptr inbounds i32, i32* %11, i64 %idxprom7, !dbg !309
  %12 = load i32, i32* %arrayidx11, align 4, !dbg !309
  store i32 %12, i32* %nuc, align 4, !dbg !307
  %doppler = getelementptr inbounds %struct.Input, %struct.Input* %input, i32 0, i32 7, !dbg !313
  %13 = load i32, i32* %doppler, align 4, !dbg !313
  %cmp12 = icmp eq i32 %13, 1, !dbg !315
  br i1 %cmp12, label %if.then, label %if.else, !dbg !316

if.then:                                          ; preds = %for.body.6
  %arraydecay = getelementptr inbounds [4 x double], [4 x double]* %micro_xs, i32 0, i32 0, !dbg !317
  %14 = load i32, i32* %nuc, align 4, !dbg !318
  %15 = load double, double* %E.addr, align 8, !dbg !319
  %16 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !320
  %17 = load i64*, i64** %abrarov.addr, align 8, !dbg !321
  %18 = load i64*, i64** %alls.addr, align 8, !dbg !322
  call void @calculate_micro_xs_doppler(double* %arraydecay, i32 %14, double %15, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %16, i64* %17, i64* %18), !dbg !323
  br label %if.end, !dbg !323

if.else:                                          ; preds = %for.body.6
  %arraydecay13 = getelementptr inbounds [4 x double], [4 x double]* %micro_xs, i32 0, i32 0, !dbg !324
  %19 = load i32, i32* %nuc, align 4, !dbg !325
  %20 = load double, double* %E.addr, align 8, !dbg !326
  %21 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !327
  call void @calculate_micro_xs(double* %arraydecay13, i32 %19, double %20, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %21), !dbg !328
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %j, metadata !329, metadata !89), !dbg !331
  store i32 0, i32* %j, align 4, !dbg !331
  br label %for.cond.14, !dbg !332

for.cond.14:                                      ; preds = %for.inc.26, %if.end
  %22 = load i32, i32* %j, align 4, !dbg !333
  %cmp15 = icmp slt i32 %22, 4, !dbg !337
  br i1 %cmp15, label %for.body.16, label %for.end.28, !dbg !338

for.body.16:                                      ; preds = %for.cond.14
  %23 = load i32, i32* %j, align 4, !dbg !339
  %idxprom17 = sext i32 %23 to i64, !dbg !341
  %arrayidx18 = getelementptr inbounds [4 x double], [4 x double]* %micro_xs, i32 0, i64 %idxprom17, !dbg !341
  %24 = load double, double* %arrayidx18, align 8, !dbg !341
  %25 = load i32, i32* %i1, align 4, !dbg !342
  %idxprom19 = sext i32 %25 to i64, !dbg !343
  %26 = load i32, i32* %mat.addr, align 4, !dbg !344
  %idxprom20 = sext i32 %26 to i64, !dbg !343
  %materials21 = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 2, !dbg !345
  %concs = getelementptr inbounds %struct.Materials, %struct.Materials* %materials21, i32 0, i32 2, !dbg !346
  %27 = load double**, double*** %concs, align 8, !dbg !346
  %arrayidx22 = getelementptr inbounds double*, double** %27, i64 %idxprom20, !dbg !343
  %28 = load double*, double** %arrayidx22, align 8, !dbg !343
  %arrayidx23 = getelementptr inbounds double, double* %28, i64 %idxprom19, !dbg !343
  %29 = load double, double* %arrayidx23, align 8, !dbg !343
  %mul = fmul double %24, %29, !dbg !347
  %30 = load i32, i32* %j, align 4, !dbg !348
  %idxprom24 = sext i32 %30 to i64, !dbg !349
  %31 = load double*, double** %macro_xs.addr, align 8, !dbg !349
  %arrayidx25 = getelementptr inbounds double, double* %31, i64 %idxprom24, !dbg !349
  %32 = load double, double* %arrayidx25, align 8, !dbg !350
  %add = fadd double %32, %mul, !dbg !350
  store double %add, double* %arrayidx25, align 8, !dbg !350
  br label %for.inc.26, !dbg !351

for.inc.26:                                       ; preds = %for.body.16
  %33 = load i32, i32* %j, align 4, !dbg !352
  %inc27 = add nsw i32 %33, 1, !dbg !352
  store i32 %inc27, i32* %j, align 4, !dbg !352
  br label %for.cond.14, !dbg !353

for.end.28:                                       ; preds = %for.cond.14
  br label %for.inc.29, !dbg !354

for.inc.29:                                       ; preds = %for.end.28
  %34 = load i32, i32* %i1, align 4, !dbg !355
  %inc30 = add nsw i32 %34, 1, !dbg !355
  store i32 %inc30, i32* %i1, align 4, !dbg !355
  br label %for.cond.2, !dbg !356

for.end.31:                                       ; preds = %for.cond.2
  ret void, !dbg !357
}

; Function Attrs: nounwind uwtable
define void @calculate_micro_xs_doppler(double* %micro_xs, i32 %nuc, double %E, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %sigTfactors, i64* %abrarov, i64* %alls) #0 {
entry:
  %micro_xs.addr = alloca double*, align 8
  %nuc.addr = alloca i32, align 4
  %E.addr = alloca double, align 8
  %sigTfactors.addr = alloca { double, double }*, align 8
  %abrarov.addr = alloca i64*, align 8
  %alls.addr = alloca i64*, align 8
  %sigT = alloca double, align 8
  %sigA = alloca double, align 8
  %sigF = alloca double, align 8
  %sigE = alloca double, align 8
  %spacing = alloca double, align 8
  %window = alloca i32, align 4
  %w = alloca %struct.Window, align 8
  %dopp = alloca double, align 8
  %i = alloca i32, align 4
  %pole = alloca %struct.Pole, align 8
  %Z = alloca { double, double }, align 8
  %coerce = alloca { double, double }, align 8
  %faddeeva = alloca { double, double }, align 8
  %coerce30 = alloca { double, double }, align 8
  store double* %micro_xs, double** %micro_xs.addr, align 8
  call void @llvm.dbg.declare(metadata double** %micro_xs.addr, metadata !358, metadata !89), !dbg !359
  store i32 %nuc, i32* %nuc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nuc.addr, metadata !360, metadata !89), !dbg !361
  store double %E, double* %E.addr, align 8
  call void @llvm.dbg.declare(metadata double* %E.addr, metadata !362, metadata !89), !dbg !363
  call void @llvm.dbg.declare(metadata %struct.Input* %input, metadata !364, metadata !89), !dbg !365
  call void @llvm.dbg.declare(metadata %struct.CalcDataPtrs* %data, metadata !366, metadata !89), !dbg !367
  store { double, double }* %sigTfactors, { double, double }** %sigTfactors.addr, align 8
  call void @llvm.dbg.declare(metadata { double, double }** %sigTfactors.addr, metadata !368, metadata !89), !dbg !369
  store i64* %abrarov, i64** %abrarov.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %abrarov.addr, metadata !370, metadata !89), !dbg !371
  store i64* %alls, i64** %alls.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %alls.addr, metadata !372, metadata !89), !dbg !373
  call void @llvm.dbg.declare(metadata double* %sigT, metadata !374, metadata !89), !dbg !375
  call void @llvm.dbg.declare(metadata double* %sigA, metadata !376, metadata !89), !dbg !377
  call void @llvm.dbg.declare(metadata double* %sigF, metadata !378, metadata !89), !dbg !379
  call void @llvm.dbg.declare(metadata double* %sigE, metadata !380, metadata !89), !dbg !381
  call void @llvm.dbg.declare(metadata double* %spacing, metadata !382, metadata !89), !dbg !383
  %0 = load i32, i32* %nuc.addr, align 4, !dbg !384
  %idxprom = sext i32 %0 to i64, !dbg !385
  %n_windows = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 1, !dbg !386
  %1 = load i32*, i32** %n_windows, align 8, !dbg !386
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !385
  %2 = load i32, i32* %arrayidx, align 4, !dbg !385
  %conv = sitofp i32 %2 to double, !dbg !385
  %div = fdiv double 1.000000e+00, %conv, !dbg !387
  store double %div, double* %spacing, align 8, !dbg !383
  call void @llvm.dbg.declare(metadata i32* %window, metadata !388, metadata !89), !dbg !389
  %3 = load double, double* %E.addr, align 8, !dbg !390
  %4 = load double, double* %spacing, align 8, !dbg !391
  %div1 = fdiv double %3, %4, !dbg !392
  %conv2 = fptosi double %div1 to i32, !dbg !393
  store i32 %conv2, i32* %window, align 4, !dbg !389
  %5 = load i32, i32* %window, align 4, !dbg !394
  %6 = load i32, i32* %nuc.addr, align 4, !dbg !396
  %idxprom3 = sext i32 %6 to i64, !dbg !397
  %n_windows4 = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 1, !dbg !398
  %7 = load i32*, i32** %n_windows4, align 8, !dbg !398
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !397
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !397
  %cmp = icmp eq i32 %5, %8, !dbg !399
  br i1 %cmp, label %if.then, label %if.end, !dbg !400

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %window, align 4, !dbg !401
  %dec = add nsw i32 %9, -1, !dbg !401
  store i32 %dec, i32* %window, align 4, !dbg !401
  br label %if.end, !dbg !402

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %nuc.addr, align 4, !dbg !403
  %11 = load double, double* %E.addr, align 8, !dbg !404
  %12 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !405
  call void @calculate_sig_T(i32 %10, double %11, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %12), !dbg !406
  call void @llvm.dbg.declare(metadata %struct.Window* %w, metadata !407, metadata !89), !dbg !408
  %13 = load i32, i32* %window, align 4, !dbg !409
  %idxprom7 = sext i32 %13 to i64, !dbg !410
  %14 = load i32, i32* %nuc.addr, align 4, !dbg !411
  %idxprom8 = sext i32 %14 to i64, !dbg !410
  %windows = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 4, !dbg !412
  %15 = load %struct.Window**, %struct.Window*** %windows, align 8, !dbg !412
  %arrayidx9 = getelementptr inbounds %struct.Window*, %struct.Window** %15, i64 %idxprom8, !dbg !410
  %16 = load %struct.Window*, %struct.Window** %arrayidx9, align 8, !dbg !410
  %arrayidx10 = getelementptr inbounds %struct.Window, %struct.Window* %16, i64 %idxprom7, !dbg !410
  %17 = bitcast %struct.Window* %w to i8*, !dbg !410
  %18 = bitcast %struct.Window* %arrayidx10 to i8*, !dbg !410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 32, i32 8, i1 false), !dbg !410
  %19 = load double, double* %E.addr, align 8, !dbg !413
  %T = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 0, !dbg !414
  %20 = load double, double* %T, align 8, !dbg !414
  %mul = fmul double %19, %20, !dbg !415
  store double %mul, double* %sigT, align 8, !dbg !416
  %21 = load double, double* %E.addr, align 8, !dbg !417
  %A = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 1, !dbg !418
  %22 = load double, double* %A, align 8, !dbg !418
  %mul11 = fmul double %21, %22, !dbg !419
  store double %mul11, double* %sigA, align 8, !dbg !420
  %23 = load double, double* %E.addr, align 8, !dbg !421
  %F = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 2, !dbg !422
  %24 = load double, double* %F, align 8, !dbg !422
  %mul12 = fmul double %23, %24, !dbg !423
  store double %mul12, double* %sigF, align 8, !dbg !424
  call void @llvm.dbg.declare(metadata double* %dopp, metadata !425, metadata !89), !dbg !426
  store double 5.000000e-01, double* %dopp, align 8, !dbg !426
  call void @llvm.dbg.declare(metadata i32* %i, metadata !427, metadata !89), !dbg !429
  %start = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 3, !dbg !430
  %25 = load i32, i32* %start, align 4, !dbg !430
  store i32 %25, i32* %i, align 4, !dbg !429
  br label %for.cond, !dbg !431

for.cond:                                         ; preds = %for.inc, %if.end
  %26 = load i32, i32* %i, align 4, !dbg !432
  %end = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 4, !dbg !436
  %27 = load i32, i32* %end, align 4, !dbg !436
  %cmp13 = icmp slt i32 %26, %27, !dbg !437
  br i1 %cmp13, label %for.body, label %for.end, !dbg !438

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.Pole* %pole, metadata !439, metadata !89), !dbg !441
  %28 = load i32, i32* %i, align 4, !dbg !442
  %idxprom15 = sext i32 %28 to i64, !dbg !443
  %29 = load i32, i32* %nuc.addr, align 4, !dbg !444
  %idxprom16 = sext i32 %29 to i64, !dbg !443
  %poles = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 3, !dbg !445
  %30 = load %struct.Pole**, %struct.Pole*** %poles, align 8, !dbg !445
  %arrayidx17 = getelementptr inbounds %struct.Pole*, %struct.Pole** %30, i64 %idxprom16, !dbg !443
  %31 = load %struct.Pole*, %struct.Pole** %arrayidx17, align 8, !dbg !443
  %arrayidx18 = getelementptr inbounds %struct.Pole, %struct.Pole* %31, i64 %idxprom15, !dbg !443
  %32 = bitcast %struct.Pole* %pole to i8*, !dbg !443
  %33 = bitcast %struct.Pole* %arrayidx18 to i8*, !dbg !443
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 72, i32 8, i1 false), !dbg !443
  call void @llvm.dbg.declare(metadata { double, double }* %Z, metadata !446, metadata !89), !dbg !447
  %34 = load double, double* %E.addr, align 8, !dbg !448
  %MP_EA = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 0, !dbg !449
  %MP_EA.realp = getelementptr inbounds { double, double }, { double, double }* %MP_EA, i32 0, i32 0, !dbg !449
  %MP_EA.real = load double, double* %MP_EA.realp, align 8, !dbg !449
  %MP_EA.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_EA, i32 0, i32 1, !dbg !449
  %MP_EA.imag = load double, double* %MP_EA.imagp, align 8, !dbg !449
  %sub.r = fsub double %34, %MP_EA.real, !dbg !450
  %sub.i = fsub double -0.000000e+00, %MP_EA.imag, !dbg !450
  %35 = load double, double* %dopp, align 8, !dbg !451
  %mul.rl = fmul double %sub.r, %35, !dbg !452
  %mul.il = fmul double %sub.i, %35, !dbg !452
  %real = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !447
  %imag = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !447
  store double %mul.rl, double* %real, align 8, !dbg !447
  store double %mul.il, double* %imag, align 8, !dbg !447
  %Z.realp = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !453
  %Z.real = load double, double* %Z.realp, align 8, !dbg !453
  %Z.imagp = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !453
  %Z.imag = load double, double* %Z.imagp, align 8, !dbg !453
  %real19 = getelementptr inbounds { double, double }, { double, double }* %coerce, i32 0, i32 0, !dbg !455
  %imag20 = getelementptr inbounds { double, double }, { double, double }* %coerce, i32 0, i32 1, !dbg !455
  store double %Z.real, double* %real19, align 8, !dbg !455
  store double %Z.imag, double* %imag20, align 8, !dbg !455
  %36 = getelementptr { double, double }, { double, double }* %coerce, i32 0, i32 0, !dbg !455
  %37 = load double, double* %36, align 1, !dbg !455
  %38 = getelementptr { double, double }, { double, double }* %coerce, i32 0, i32 1, !dbg !455
  %39 = load double, double* %38, align 1, !dbg !455
  %call = call double @cabs(double %37, double %39) #1, !dbg !455
  %cmp21 = fcmp olt double %call, 6.000000e+00, !dbg !456
  br i1 %cmp21, label %if.then.23, label %if.end.24, !dbg !457

if.then.23:                                       ; preds = %for.body
  %40 = load i64*, i64** %abrarov.addr, align 8, !dbg !458
  %41 = load i64, i64* %40, align 8, !dbg !459
  %inc = add nsw i64 %41, 1, !dbg !459
  store i64 %inc, i64* %40, align 8, !dbg !459
  br label %if.end.24, !dbg !460

if.end.24:                                        ; preds = %if.then.23, %for.body
  %42 = load i64*, i64** %alls.addr, align 8, !dbg !461
  %43 = load i64, i64* %42, align 8, !dbg !462
  %inc25 = add nsw i64 %43, 1, !dbg !462
  store i64 %inc25, i64* %42, align 8, !dbg !462
  call void @llvm.dbg.declare(metadata { double, double }* %faddeeva, metadata !463, metadata !89), !dbg !464
  %Z.realp26 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 0, !dbg !465
  %Z.real27 = load double, double* %Z.realp26, align 8, !dbg !465
  %Z.imagp28 = getelementptr inbounds { double, double }, { double, double }* %Z, i32 0, i32 1, !dbg !465
  %Z.imag29 = load double, double* %Z.imagp28, align 8, !dbg !465
  %real31 = getelementptr inbounds { double, double }, { double, double }* %coerce30, i32 0, i32 0, !dbg !466
  %imag32 = getelementptr inbounds { double, double }, { double, double }* %coerce30, i32 0, i32 1, !dbg !466
  store double %Z.real27, double* %real31, align 8, !dbg !466
  store double %Z.imag29, double* %imag32, align 8, !dbg !466
  %44 = getelementptr { double, double }, { double, double }* %coerce30, i32 0, i32 0, !dbg !466
  %45 = load double, double* %44, align 1, !dbg !466
  %46 = getelementptr { double, double }, { double, double }* %coerce30, i32 0, i32 1, !dbg !466
  %47 = load double, double* %46, align 1, !dbg !466
  %call33 = call { double, double } @fast_nuclear_W(double %45, double %47), !dbg !466
  %48 = extractvalue { double, double } %call33, 0, !dbg !466
  %49 = extractvalue { double, double } %call33, 1, !dbg !466
  %real34 = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 0, !dbg !464
  %imag35 = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 1, !dbg !464
  store double %48, double* %real34, align 8, !dbg !464
  store double %49, double* %imag35, align 8, !dbg !464
  %MP_RT = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 1, !dbg !467
  %MP_RT.realp = getelementptr inbounds { double, double }, { double, double }* %MP_RT, i32 0, i32 0, !dbg !467
  %MP_RT.real = load double, double* %MP_RT.realp, align 8, !dbg !467
  %MP_RT.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_RT, i32 0, i32 1, !dbg !467
  %MP_RT.imag = load double, double* %MP_RT.imagp, align 8, !dbg !467
  %faddeeva.realp = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 0, !dbg !468
  %faddeeva.real = load double, double* %faddeeva.realp, align 8, !dbg !468
  %faddeeva.imagp = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 1, !dbg !468
  %faddeeva.imag = load double, double* %faddeeva.imagp, align 8, !dbg !468
  %mul_ac = fmul double %MP_RT.real, %faddeeva.real, !dbg !469
  %mul_bd = fmul double %MP_RT.imag, %faddeeva.imag, !dbg !469
  %mul_ad = fmul double %MP_RT.real, %faddeeva.imag, !dbg !469
  %mul_bc = fmul double %MP_RT.imag, %faddeeva.real, !dbg !469
  %mul_r = fsub double %mul_ac, %mul_bd, !dbg !469
  %mul_i = fadd double %mul_ad, %mul_bc, !dbg !469
  %isnan_cmp = fcmp uno double %mul_r, %mul_r, !dbg !469
  br i1 %isnan_cmp, label %complex_mul_imag_nan, label %complex_mul_cont, !dbg !469, !prof !112

complex_mul_imag_nan:                             ; preds = %if.end.24
  %isnan_cmp36 = fcmp uno double %mul_i, %mul_i, !dbg !470
  br i1 %isnan_cmp36, label %complex_mul_libcall, label %complex_mul_cont, !dbg !470, !prof !112

complex_mul_libcall:                              ; preds = %complex_mul_imag_nan
  %call37 = call { double, double } @__muldc3(double %MP_RT.real, double %MP_RT.imag, double %faddeeva.real, double %faddeeva.imag) #3, !dbg !472
  %50 = extractvalue { double, double } %call37, 0, !dbg !472
  %51 = extractvalue { double, double } %call37, 1, !dbg !472
  br label %complex_mul_cont, !dbg !472

complex_mul_cont:                                 ; preds = %complex_mul_libcall, %complex_mul_imag_nan, %if.end.24
  %real_mul_phi = phi double [ %mul_r, %if.end.24 ], [ %mul_r, %complex_mul_imag_nan ], [ %50, %complex_mul_libcall ], !dbg !469
  %imag_mul_phi = phi double [ %mul_i, %if.end.24 ], [ %mul_i, %complex_mul_imag_nan ], [ %51, %complex_mul_libcall ], !dbg !469
  %l_value = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 4, !dbg !474
  %52 = load i16, i16* %l_value, align 2, !dbg !474
  %idxprom38 = sext i16 %52 to i64, !dbg !478
  %53 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !478
  %arrayidx39 = getelementptr inbounds { double, double }, { double, double }* %53, i64 %idxprom38, !dbg !478
  %arrayidx39.realp = getelementptr inbounds { double, double }, { double, double }* %arrayidx39, i32 0, i32 0, !dbg !478
  %arrayidx39.real = load double, double* %arrayidx39.realp, align 8, !dbg !478
  %arrayidx39.imagp = getelementptr inbounds { double, double }, { double, double }* %arrayidx39, i32 0, i32 1, !dbg !478
  %arrayidx39.imag = load double, double* %arrayidx39.imagp, align 8, !dbg !478
  %mul_ac40 = fmul double %real_mul_phi, %arrayidx39.real, !dbg !479
  %mul_bd41 = fmul double %imag_mul_phi, %arrayidx39.imag, !dbg !479
  %mul_ad42 = fmul double %real_mul_phi, %arrayidx39.imag, !dbg !479
  %mul_bc43 = fmul double %imag_mul_phi, %arrayidx39.real, !dbg !479
  %mul_r44 = fsub double %mul_ac40, %mul_bd41, !dbg !479
  %mul_i45 = fadd double %mul_ad42, %mul_bc43, !dbg !479
  %isnan_cmp46 = fcmp uno double %mul_r44, %mul_r44, !dbg !479
  br i1 %isnan_cmp46, label %complex_mul_imag_nan.47, label %complex_mul_cont.51, !dbg !479, !prof !112

complex_mul_imag_nan.47:                          ; preds = %complex_mul_cont
  %isnan_cmp48 = fcmp uno double %mul_i45, %mul_i45, !dbg !480
  br i1 %isnan_cmp48, label %complex_mul_libcall.49, label %complex_mul_cont.51, !dbg !480, !prof !112

complex_mul_libcall.49:                           ; preds = %complex_mul_imag_nan.47
  %call50 = call { double, double } @__muldc3(double %real_mul_phi, double %imag_mul_phi, double %arrayidx39.real, double %arrayidx39.imag) #3, !dbg !482
  %54 = extractvalue { double, double } %call50, 0, !dbg !482
  %55 = extractvalue { double, double } %call50, 1, !dbg !482
  br label %complex_mul_cont.51, !dbg !482

complex_mul_cont.51:                              ; preds = %complex_mul_libcall.49, %complex_mul_imag_nan.47, %complex_mul_cont
  %real_mul_phi52 = phi double [ %mul_r44, %complex_mul_cont ], [ %mul_r44, %complex_mul_imag_nan.47 ], [ %54, %complex_mul_libcall.49 ], !dbg !479
  %imag_mul_phi53 = phi double [ %mul_i45, %complex_mul_cont ], [ %mul_i45, %complex_mul_imag_nan.47 ], [ %55, %complex_mul_libcall.49 ], !dbg !479
  %56 = load double, double* %sigT, align 8, !dbg !484
  %add = fadd double %56, %real_mul_phi52, !dbg !484
  store double %add, double* %sigT, align 8, !dbg !484
  %MP_RA = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 2, !dbg !488
  %MP_RA.realp = getelementptr inbounds { double, double }, { double, double }* %MP_RA, i32 0, i32 0, !dbg !488
  %MP_RA.real = load double, double* %MP_RA.realp, align 8, !dbg !488
  %MP_RA.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_RA, i32 0, i32 1, !dbg !488
  %MP_RA.imag = load double, double* %MP_RA.imagp, align 8, !dbg !488
  %faddeeva.realp54 = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 0, !dbg !489
  %faddeeva.real55 = load double, double* %faddeeva.realp54, align 8, !dbg !489
  %faddeeva.imagp56 = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 1, !dbg !489
  %faddeeva.imag57 = load double, double* %faddeeva.imagp56, align 8, !dbg !489
  %mul_ac58 = fmul double %MP_RA.real, %faddeeva.real55, !dbg !490
  %mul_bd59 = fmul double %MP_RA.imag, %faddeeva.imag57, !dbg !490
  %mul_ad60 = fmul double %MP_RA.real, %faddeeva.imag57, !dbg !490
  %mul_bc61 = fmul double %MP_RA.imag, %faddeeva.real55, !dbg !490
  %mul_r62 = fsub double %mul_ac58, %mul_bd59, !dbg !490
  %mul_i63 = fadd double %mul_ad60, %mul_bc61, !dbg !490
  %isnan_cmp64 = fcmp uno double %mul_r62, %mul_r62, !dbg !490
  br i1 %isnan_cmp64, label %complex_mul_imag_nan.65, label %complex_mul_cont.69, !dbg !490, !prof !112

complex_mul_imag_nan.65:                          ; preds = %complex_mul_cont.51
  %isnan_cmp66 = fcmp uno double %mul_i63, %mul_i63, !dbg !491
  br i1 %isnan_cmp66, label %complex_mul_libcall.67, label %complex_mul_cont.69, !dbg !491, !prof !112

complex_mul_libcall.67:                           ; preds = %complex_mul_imag_nan.65
  %call68 = call { double, double } @__muldc3(double %MP_RA.real, double %MP_RA.imag, double %faddeeva.real55, double %faddeeva.imag57) #3, !dbg !492
  %57 = extractvalue { double, double } %call68, 0, !dbg !492
  %58 = extractvalue { double, double } %call68, 1, !dbg !492
  br label %complex_mul_cont.69, !dbg !492

complex_mul_cont.69:                              ; preds = %complex_mul_libcall.67, %complex_mul_imag_nan.65, %complex_mul_cont.51
  %real_mul_phi70 = phi double [ %mul_r62, %complex_mul_cont.51 ], [ %mul_r62, %complex_mul_imag_nan.65 ], [ %57, %complex_mul_libcall.67 ], !dbg !490
  %imag_mul_phi71 = phi double [ %mul_i63, %complex_mul_cont.51 ], [ %mul_i63, %complex_mul_imag_nan.65 ], [ %58, %complex_mul_libcall.67 ], !dbg !490
  %59 = load double, double* %sigA, align 8, !dbg !493
  %add72 = fadd double %59, %real_mul_phi70, !dbg !493
  store double %add72, double* %sigA, align 8, !dbg !493
  %MP_RF = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 3, !dbg !494
  %MP_RF.realp = getelementptr inbounds { double, double }, { double, double }* %MP_RF, i32 0, i32 0, !dbg !494
  %MP_RF.real = load double, double* %MP_RF.realp, align 8, !dbg !494
  %MP_RF.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_RF, i32 0, i32 1, !dbg !494
  %MP_RF.imag = load double, double* %MP_RF.imagp, align 8, !dbg !494
  %faddeeva.realp73 = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 0, !dbg !495
  %faddeeva.real74 = load double, double* %faddeeva.realp73, align 8, !dbg !495
  %faddeeva.imagp75 = getelementptr inbounds { double, double }, { double, double }* %faddeeva, i32 0, i32 1, !dbg !495
  %faddeeva.imag76 = load double, double* %faddeeva.imagp75, align 8, !dbg !495
  %mul_ac77 = fmul double %MP_RF.real, %faddeeva.real74, !dbg !496
  %mul_bd78 = fmul double %MP_RF.imag, %faddeeva.imag76, !dbg !496
  %mul_ad79 = fmul double %MP_RF.real, %faddeeva.imag76, !dbg !496
  %mul_bc80 = fmul double %MP_RF.imag, %faddeeva.real74, !dbg !496
  %mul_r81 = fsub double %mul_ac77, %mul_bd78, !dbg !496
  %mul_i82 = fadd double %mul_ad79, %mul_bc80, !dbg !496
  %isnan_cmp83 = fcmp uno double %mul_r81, %mul_r81, !dbg !496
  br i1 %isnan_cmp83, label %complex_mul_imag_nan.84, label %complex_mul_cont.88, !dbg !496, !prof !112

complex_mul_imag_nan.84:                          ; preds = %complex_mul_cont.69
  %isnan_cmp85 = fcmp uno double %mul_i82, %mul_i82, !dbg !497
  br i1 %isnan_cmp85, label %complex_mul_libcall.86, label %complex_mul_cont.88, !dbg !497, !prof !112

complex_mul_libcall.86:                           ; preds = %complex_mul_imag_nan.84
  %call87 = call { double, double } @__muldc3(double %MP_RF.real, double %MP_RF.imag, double %faddeeva.real74, double %faddeeva.imag76) #3, !dbg !498
  %60 = extractvalue { double, double } %call87, 0, !dbg !498
  %61 = extractvalue { double, double } %call87, 1, !dbg !498
  br label %complex_mul_cont.88, !dbg !498

complex_mul_cont.88:                              ; preds = %complex_mul_libcall.86, %complex_mul_imag_nan.84, %complex_mul_cont.69
  %real_mul_phi89 = phi double [ %mul_r81, %complex_mul_cont.69 ], [ %mul_r81, %complex_mul_imag_nan.84 ], [ %60, %complex_mul_libcall.86 ], !dbg !496
  %imag_mul_phi90 = phi double [ %mul_i82, %complex_mul_cont.69 ], [ %mul_i82, %complex_mul_imag_nan.84 ], [ %61, %complex_mul_libcall.86 ], !dbg !496
  %62 = load double, double* %sigF, align 8, !dbg !499
  %add91 = fadd double %62, %real_mul_phi89, !dbg !499
  store double %add91, double* %sigF, align 8, !dbg !499
  br label %for.inc, !dbg !500

for.inc:                                          ; preds = %complex_mul_cont.88
  %63 = load i32, i32* %i, align 4, !dbg !501
  %inc92 = add nsw i32 %63, 1, !dbg !501
  store i32 %inc92, i32* %i, align 4, !dbg !501
  br label %for.cond, !dbg !502

for.end:                                          ; preds = %for.cond
  %64 = load double, double* %sigT, align 8, !dbg !503
  %65 = load double, double* %sigA, align 8, !dbg !504
  %sub = fsub double %64, %65, !dbg !505
  store double %sub, double* %sigE, align 8, !dbg !506
  %66 = load double, double* %sigT, align 8, !dbg !507
  %67 = load double*, double** %micro_xs.addr, align 8, !dbg !508
  %arrayidx93 = getelementptr inbounds double, double* %67, i64 0, !dbg !508
  store double %66, double* %arrayidx93, align 8, !dbg !509
  %68 = load double, double* %sigA, align 8, !dbg !510
  %69 = load double*, double** %micro_xs.addr, align 8, !dbg !511
  %arrayidx94 = getelementptr inbounds double, double* %69, i64 1, !dbg !511
  store double %68, double* %arrayidx94, align 8, !dbg !512
  %70 = load double, double* %sigF, align 8, !dbg !513
  %71 = load double*, double** %micro_xs.addr, align 8, !dbg !514
  %arrayidx95 = getelementptr inbounds double, double* %71, i64 2, !dbg !514
  store double %70, double* %arrayidx95, align 8, !dbg !515
  %72 = load double, double* %sigE, align 8, !dbg !516
  %73 = load double*, double** %micro_xs.addr, align 8, !dbg !517
  %arrayidx96 = getelementptr inbounds double, double* %73, i64 3, !dbg !517
  store double %72, double* %arrayidx96, align 8, !dbg !518
  ret void, !dbg !519
}

; Function Attrs: nounwind uwtable
define void @calculate_micro_xs(double* %micro_xs, i32 %nuc, double %E, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %sigTfactors) #0 {
entry:
  %micro_xs.addr = alloca double*, align 8
  %nuc.addr = alloca i32, align 4
  %E.addr = alloca double, align 8
  %sigTfactors.addr = alloca { double, double }*, align 8
  %sigT = alloca double, align 8
  %sigA = alloca double, align 8
  %sigF = alloca double, align 8
  %sigE = alloca double, align 8
  %spacing = alloca double, align 8
  %window = alloca i32, align 4
  %w = alloca %struct.Window, align 8
  %i = alloca i32, align 4
  %PSIIKI = alloca { double, double }, align 8
  %CDUM = alloca { double, double }, align 8
  %pole = alloca %struct.Pole, align 8
  store double* %micro_xs, double** %micro_xs.addr, align 8
  call void @llvm.dbg.declare(metadata double** %micro_xs.addr, metadata !520, metadata !89), !dbg !521
  store i32 %nuc, i32* %nuc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nuc.addr, metadata !522, metadata !89), !dbg !523
  store double %E, double* %E.addr, align 8
  call void @llvm.dbg.declare(metadata double* %E.addr, metadata !524, metadata !89), !dbg !525
  call void @llvm.dbg.declare(metadata %struct.Input* %input, metadata !526, metadata !89), !dbg !527
  call void @llvm.dbg.declare(metadata %struct.CalcDataPtrs* %data, metadata !528, metadata !89), !dbg !529
  store { double, double }* %sigTfactors, { double, double }** %sigTfactors.addr, align 8
  call void @llvm.dbg.declare(metadata { double, double }** %sigTfactors.addr, metadata !530, metadata !89), !dbg !531
  call void @llvm.dbg.declare(metadata double* %sigT, metadata !532, metadata !89), !dbg !533
  call void @llvm.dbg.declare(metadata double* %sigA, metadata !534, metadata !89), !dbg !535
  call void @llvm.dbg.declare(metadata double* %sigF, metadata !536, metadata !89), !dbg !537
  call void @llvm.dbg.declare(metadata double* %sigE, metadata !538, metadata !89), !dbg !539
  call void @llvm.dbg.declare(metadata double* %spacing, metadata !540, metadata !89), !dbg !541
  %0 = load i32, i32* %nuc.addr, align 4, !dbg !542
  %idxprom = sext i32 %0 to i64, !dbg !543
  %n_windows = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 1, !dbg !544
  %1 = load i32*, i32** %n_windows, align 8, !dbg !544
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !543
  %2 = load i32, i32* %arrayidx, align 4, !dbg !543
  %conv = sitofp i32 %2 to double, !dbg !543
  %div = fdiv double 1.000000e+00, %conv, !dbg !545
  store double %div, double* %spacing, align 8, !dbg !541
  call void @llvm.dbg.declare(metadata i32* %window, metadata !546, metadata !89), !dbg !547
  %3 = load double, double* %E.addr, align 8, !dbg !548
  %4 = load double, double* %spacing, align 8, !dbg !549
  %div1 = fdiv double %3, %4, !dbg !550
  %conv2 = fptosi double %div1 to i32, !dbg !551
  store i32 %conv2, i32* %window, align 4, !dbg !547
  %5 = load i32, i32* %window, align 4, !dbg !552
  %6 = load i32, i32* %nuc.addr, align 4, !dbg !554
  %idxprom3 = sext i32 %6 to i64, !dbg !555
  %n_windows4 = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 1, !dbg !556
  %7 = load i32*, i32** %n_windows4, align 8, !dbg !556
  %arrayidx5 = getelementptr inbounds i32, i32* %7, i64 %idxprom3, !dbg !555
  %8 = load i32, i32* %arrayidx5, align 4, !dbg !555
  %cmp = icmp eq i32 %5, %8, !dbg !557
  br i1 %cmp, label %if.then, label %if.end, !dbg !558

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %window, align 4, !dbg !559
  %dec = add nsw i32 %9, -1, !dbg !559
  store i32 %dec, i32* %window, align 4, !dbg !559
  br label %if.end, !dbg !560

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %nuc.addr, align 4, !dbg !561
  %11 = load double, double* %E.addr, align 8, !dbg !562
  %12 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !563
  call void @calculate_sig_T(i32 %10, double %11, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %12), !dbg !564
  call void @llvm.dbg.declare(metadata %struct.Window* %w, metadata !565, metadata !89), !dbg !566
  %13 = load i32, i32* %window, align 4, !dbg !567
  %idxprom7 = sext i32 %13 to i64, !dbg !568
  %14 = load i32, i32* %nuc.addr, align 4, !dbg !569
  %idxprom8 = sext i32 %14 to i64, !dbg !568
  %windows = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 4, !dbg !570
  %15 = load %struct.Window**, %struct.Window*** %windows, align 8, !dbg !570
  %arrayidx9 = getelementptr inbounds %struct.Window*, %struct.Window** %15, i64 %idxprom8, !dbg !568
  %16 = load %struct.Window*, %struct.Window** %arrayidx9, align 8, !dbg !568
  %arrayidx10 = getelementptr inbounds %struct.Window, %struct.Window* %16, i64 %idxprom7, !dbg !568
  %17 = bitcast %struct.Window* %w to i8*, !dbg !568
  %18 = bitcast %struct.Window* %arrayidx10 to i8*, !dbg !568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 32, i32 8, i1 false), !dbg !568
  %19 = load double, double* %E.addr, align 8, !dbg !571
  %T = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 0, !dbg !572
  %20 = load double, double* %T, align 8, !dbg !572
  %mul = fmul double %19, %20, !dbg !573
  store double %mul, double* %sigT, align 8, !dbg !574
  %21 = load double, double* %E.addr, align 8, !dbg !575
  %A = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 1, !dbg !576
  %22 = load double, double* %A, align 8, !dbg !576
  %mul11 = fmul double %21, %22, !dbg !577
  store double %mul11, double* %sigA, align 8, !dbg !578
  %23 = load double, double* %E.addr, align 8, !dbg !579
  %F = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 2, !dbg !580
  %24 = load double, double* %F, align 8, !dbg !580
  %mul12 = fmul double %23, %24, !dbg !581
  store double %mul12, double* %sigF, align 8, !dbg !582
  call void @llvm.dbg.declare(metadata i32* %i, metadata !583, metadata !89), !dbg !585
  %start = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 3, !dbg !586
  %25 = load i32, i32* %start, align 4, !dbg !586
  store i32 %25, i32* %i, align 4, !dbg !585
  br label %for.cond, !dbg !587

for.cond:                                         ; preds = %for.inc, %if.end
  %26 = load i32, i32* %i, align 4, !dbg !588
  %end = getelementptr inbounds %struct.Window, %struct.Window* %w, i32 0, i32 4, !dbg !592
  %27 = load i32, i32* %end, align 4, !dbg !592
  %cmp13 = icmp slt i32 %26, %27, !dbg !593
  br i1 %cmp13, label %for.body, label %for.end, !dbg !594

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata { double, double }* %PSIIKI, metadata !595, metadata !89), !dbg !597
  call void @llvm.dbg.declare(metadata { double, double }* %CDUM, metadata !598, metadata !89), !dbg !599
  call void @llvm.dbg.declare(metadata %struct.Pole* %pole, metadata !600, metadata !89), !dbg !601
  %28 = load i32, i32* %i, align 4, !dbg !602
  %idxprom15 = sext i32 %28 to i64, !dbg !603
  %29 = load i32, i32* %nuc.addr, align 4, !dbg !604
  %idxprom16 = sext i32 %29 to i64, !dbg !603
  %poles = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 3, !dbg !605
  %30 = load %struct.Pole**, %struct.Pole*** %poles, align 8, !dbg !605
  %arrayidx17 = getelementptr inbounds %struct.Pole*, %struct.Pole** %30, i64 %idxprom16, !dbg !603
  %31 = load %struct.Pole*, %struct.Pole** %arrayidx17, align 8, !dbg !603
  %arrayidx18 = getelementptr inbounds %struct.Pole, %struct.Pole* %31, i64 %idxprom15, !dbg !603
  %32 = bitcast %struct.Pole* %pole to i8*, !dbg !603
  %33 = bitcast %struct.Pole* %arrayidx18 to i8*, !dbg !603
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 72, i32 8, i1 false), !dbg !603
  %MP_EA = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 0, !dbg !606
  %MP_EA.realp = getelementptr inbounds { double, double }, { double, double }* %MP_EA, i32 0, i32 0, !dbg !606
  %MP_EA.real = load double, double* %MP_EA.realp, align 8, !dbg !606
  %MP_EA.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_EA, i32 0, i32 1, !dbg !606
  %MP_EA.imag = load double, double* %MP_EA.imagp, align 8, !dbg !606
  %34 = load double, double* %E.addr, align 8, !dbg !607
  %call = call double @sqrt(double %34) #3, !dbg !608
  %sub.r = fsub double %MP_EA.real, %call, !dbg !609
  %call19 = call { double, double } @__divdc3(double -0.000000e+00, double 1.000000e+00, double %sub.r, double %MP_EA.imag) #3, !dbg !610
  %35 = extractvalue { double, double } %call19, 0, !dbg !610
  %36 = extractvalue { double, double } %call19, 1, !dbg !610
  %real = getelementptr inbounds { double, double }, { double, double }* %PSIIKI, i32 0, i32 0, !dbg !611
  %imag = getelementptr inbounds { double, double }, { double, double }* %PSIIKI, i32 0, i32 1, !dbg !611
  store double %35, double* %real, align 8, !dbg !611
  store double %36, double* %imag, align 8, !dbg !611
  %PSIIKI.realp = getelementptr inbounds { double, double }, { double, double }* %PSIIKI, i32 0, i32 0, !dbg !612
  %PSIIKI.real = load double, double* %PSIIKI.realp, align 8, !dbg !612
  %PSIIKI.imagp = getelementptr inbounds { double, double }, { double, double }* %PSIIKI, i32 0, i32 1, !dbg !612
  %PSIIKI.imag = load double, double* %PSIIKI.imagp, align 8, !dbg !612
  %37 = load double, double* %E.addr, align 8, !dbg !613
  %38 = fdiv double %PSIIKI.real, %37, !dbg !614
  %39 = fdiv double %PSIIKI.imag, %37, !dbg !614
  %real20 = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 0, !dbg !615
  %imag21 = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 1, !dbg !615
  store double %38, double* %real20, align 8, !dbg !615
  store double %39, double* %imag21, align 8, !dbg !615
  %MP_RT = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 1, !dbg !616
  %MP_RT.realp = getelementptr inbounds { double, double }, { double, double }* %MP_RT, i32 0, i32 0, !dbg !616
  %MP_RT.real = load double, double* %MP_RT.realp, align 8, !dbg !616
  %MP_RT.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_RT, i32 0, i32 1, !dbg !616
  %MP_RT.imag = load double, double* %MP_RT.imagp, align 8, !dbg !616
  %CDUM.realp = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 0, !dbg !617
  %CDUM.real = load double, double* %CDUM.realp, align 8, !dbg !617
  %CDUM.imagp = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 1, !dbg !617
  %CDUM.imag = load double, double* %CDUM.imagp, align 8, !dbg !617
  %mul_ac = fmul double %MP_RT.real, %CDUM.real, !dbg !618
  %mul_bd = fmul double %MP_RT.imag, %CDUM.imag, !dbg !618
  %mul_ad = fmul double %MP_RT.real, %CDUM.imag, !dbg !618
  %mul_bc = fmul double %MP_RT.imag, %CDUM.real, !dbg !618
  %mul_r = fsub double %mul_ac, %mul_bd, !dbg !618
  %mul_i = fadd double %mul_ad, %mul_bc, !dbg !618
  %isnan_cmp = fcmp uno double %mul_r, %mul_r, !dbg !618
  br i1 %isnan_cmp, label %complex_mul_imag_nan, label %complex_mul_cont, !dbg !618, !prof !112

complex_mul_imag_nan:                             ; preds = %for.body
  %isnan_cmp22 = fcmp uno double %mul_i, %mul_i, !dbg !619
  br i1 %isnan_cmp22, label %complex_mul_libcall, label %complex_mul_cont, !dbg !619, !prof !112

complex_mul_libcall:                              ; preds = %complex_mul_imag_nan
  %call23 = call { double, double } @__muldc3(double %MP_RT.real, double %MP_RT.imag, double %CDUM.real, double %CDUM.imag) #3, !dbg !621
  %40 = extractvalue { double, double } %call23, 0, !dbg !621
  %41 = extractvalue { double, double } %call23, 1, !dbg !621
  br label %complex_mul_cont, !dbg !621

complex_mul_cont:                                 ; preds = %complex_mul_libcall, %complex_mul_imag_nan, %for.body
  %real_mul_phi = phi double [ %mul_r, %for.body ], [ %mul_r, %complex_mul_imag_nan ], [ %40, %complex_mul_libcall ], !dbg !618
  %imag_mul_phi = phi double [ %mul_i, %for.body ], [ %mul_i, %complex_mul_imag_nan ], [ %41, %complex_mul_libcall ], !dbg !618
  %l_value = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 4, !dbg !623
  %42 = load i16, i16* %l_value, align 2, !dbg !623
  %idxprom24 = sext i16 %42 to i64, !dbg !627
  %43 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !627
  %arrayidx25 = getelementptr inbounds { double, double }, { double, double }* %43, i64 %idxprom24, !dbg !627
  %arrayidx25.realp = getelementptr inbounds { double, double }, { double, double }* %arrayidx25, i32 0, i32 0, !dbg !627
  %arrayidx25.real = load double, double* %arrayidx25.realp, align 8, !dbg !627
  %arrayidx25.imagp = getelementptr inbounds { double, double }, { double, double }* %arrayidx25, i32 0, i32 1, !dbg !627
  %arrayidx25.imag = load double, double* %arrayidx25.imagp, align 8, !dbg !627
  %mul_ac26 = fmul double %real_mul_phi, %arrayidx25.real, !dbg !628
  %mul_bd27 = fmul double %imag_mul_phi, %arrayidx25.imag, !dbg !628
  %mul_ad28 = fmul double %real_mul_phi, %arrayidx25.imag, !dbg !628
  %mul_bc29 = fmul double %imag_mul_phi, %arrayidx25.real, !dbg !628
  %mul_r30 = fsub double %mul_ac26, %mul_bd27, !dbg !628
  %mul_i31 = fadd double %mul_ad28, %mul_bc29, !dbg !628
  %isnan_cmp32 = fcmp uno double %mul_r30, %mul_r30, !dbg !628
  br i1 %isnan_cmp32, label %complex_mul_imag_nan.33, label %complex_mul_cont.37, !dbg !628, !prof !112

complex_mul_imag_nan.33:                          ; preds = %complex_mul_cont
  %isnan_cmp34 = fcmp uno double %mul_i31, %mul_i31, !dbg !629
  br i1 %isnan_cmp34, label %complex_mul_libcall.35, label %complex_mul_cont.37, !dbg !629, !prof !112

complex_mul_libcall.35:                           ; preds = %complex_mul_imag_nan.33
  %call36 = call { double, double } @__muldc3(double %real_mul_phi, double %imag_mul_phi, double %arrayidx25.real, double %arrayidx25.imag) #3, !dbg !631
  %44 = extractvalue { double, double } %call36, 0, !dbg !631
  %45 = extractvalue { double, double } %call36, 1, !dbg !631
  br label %complex_mul_cont.37, !dbg !631

complex_mul_cont.37:                              ; preds = %complex_mul_libcall.35, %complex_mul_imag_nan.33, %complex_mul_cont
  %real_mul_phi38 = phi double [ %mul_r30, %complex_mul_cont ], [ %mul_r30, %complex_mul_imag_nan.33 ], [ %44, %complex_mul_libcall.35 ], !dbg !628
  %imag_mul_phi39 = phi double [ %mul_i31, %complex_mul_cont ], [ %mul_i31, %complex_mul_imag_nan.33 ], [ %45, %complex_mul_libcall.35 ], !dbg !628
  %46 = load double, double* %sigT, align 8, !dbg !633
  %add = fadd double %46, %real_mul_phi38, !dbg !633
  store double %add, double* %sigT, align 8, !dbg !633
  %MP_RA = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 2, !dbg !637
  %MP_RA.realp = getelementptr inbounds { double, double }, { double, double }* %MP_RA, i32 0, i32 0, !dbg !637
  %MP_RA.real = load double, double* %MP_RA.realp, align 8, !dbg !637
  %MP_RA.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_RA, i32 0, i32 1, !dbg !637
  %MP_RA.imag = load double, double* %MP_RA.imagp, align 8, !dbg !637
  %CDUM.realp40 = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 0, !dbg !638
  %CDUM.real41 = load double, double* %CDUM.realp40, align 8, !dbg !638
  %CDUM.imagp42 = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 1, !dbg !638
  %CDUM.imag43 = load double, double* %CDUM.imagp42, align 8, !dbg !638
  %mul_ac44 = fmul double %MP_RA.real, %CDUM.real41, !dbg !639
  %mul_bd45 = fmul double %MP_RA.imag, %CDUM.imag43, !dbg !639
  %mul_ad46 = fmul double %MP_RA.real, %CDUM.imag43, !dbg !639
  %mul_bc47 = fmul double %MP_RA.imag, %CDUM.real41, !dbg !639
  %mul_r48 = fsub double %mul_ac44, %mul_bd45, !dbg !639
  %mul_i49 = fadd double %mul_ad46, %mul_bc47, !dbg !639
  %isnan_cmp50 = fcmp uno double %mul_r48, %mul_r48, !dbg !639
  br i1 %isnan_cmp50, label %complex_mul_imag_nan.51, label %complex_mul_cont.55, !dbg !639, !prof !112

complex_mul_imag_nan.51:                          ; preds = %complex_mul_cont.37
  %isnan_cmp52 = fcmp uno double %mul_i49, %mul_i49, !dbg !640
  br i1 %isnan_cmp52, label %complex_mul_libcall.53, label %complex_mul_cont.55, !dbg !640, !prof !112

complex_mul_libcall.53:                           ; preds = %complex_mul_imag_nan.51
  %call54 = call { double, double } @__muldc3(double %MP_RA.real, double %MP_RA.imag, double %CDUM.real41, double %CDUM.imag43) #3, !dbg !641
  %47 = extractvalue { double, double } %call54, 0, !dbg !641
  %48 = extractvalue { double, double } %call54, 1, !dbg !641
  br label %complex_mul_cont.55, !dbg !641

complex_mul_cont.55:                              ; preds = %complex_mul_libcall.53, %complex_mul_imag_nan.51, %complex_mul_cont.37
  %real_mul_phi56 = phi double [ %mul_r48, %complex_mul_cont.37 ], [ %mul_r48, %complex_mul_imag_nan.51 ], [ %47, %complex_mul_libcall.53 ], !dbg !639
  %imag_mul_phi57 = phi double [ %mul_i49, %complex_mul_cont.37 ], [ %mul_i49, %complex_mul_imag_nan.51 ], [ %48, %complex_mul_libcall.53 ], !dbg !639
  %49 = load double, double* %sigA, align 8, !dbg !642
  %add58 = fadd double %49, %real_mul_phi56, !dbg !642
  store double %add58, double* %sigA, align 8, !dbg !642
  %MP_RF = getelementptr inbounds %struct.Pole, %struct.Pole* %pole, i32 0, i32 3, !dbg !643
  %MP_RF.realp = getelementptr inbounds { double, double }, { double, double }* %MP_RF, i32 0, i32 0, !dbg !643
  %MP_RF.real = load double, double* %MP_RF.realp, align 8, !dbg !643
  %MP_RF.imagp = getelementptr inbounds { double, double }, { double, double }* %MP_RF, i32 0, i32 1, !dbg !643
  %MP_RF.imag = load double, double* %MP_RF.imagp, align 8, !dbg !643
  %CDUM.realp59 = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 0, !dbg !644
  %CDUM.real60 = load double, double* %CDUM.realp59, align 8, !dbg !644
  %CDUM.imagp61 = getelementptr inbounds { double, double }, { double, double }* %CDUM, i32 0, i32 1, !dbg !644
  %CDUM.imag62 = load double, double* %CDUM.imagp61, align 8, !dbg !644
  %mul_ac63 = fmul double %MP_RF.real, %CDUM.real60, !dbg !645
  %mul_bd64 = fmul double %MP_RF.imag, %CDUM.imag62, !dbg !645
  %mul_ad65 = fmul double %MP_RF.real, %CDUM.imag62, !dbg !645
  %mul_bc66 = fmul double %MP_RF.imag, %CDUM.real60, !dbg !645
  %mul_r67 = fsub double %mul_ac63, %mul_bd64, !dbg !645
  %mul_i68 = fadd double %mul_ad65, %mul_bc66, !dbg !645
  %isnan_cmp69 = fcmp uno double %mul_r67, %mul_r67, !dbg !645
  br i1 %isnan_cmp69, label %complex_mul_imag_nan.70, label %complex_mul_cont.74, !dbg !645, !prof !112

complex_mul_imag_nan.70:                          ; preds = %complex_mul_cont.55
  %isnan_cmp71 = fcmp uno double %mul_i68, %mul_i68, !dbg !646
  br i1 %isnan_cmp71, label %complex_mul_libcall.72, label %complex_mul_cont.74, !dbg !646, !prof !112

complex_mul_libcall.72:                           ; preds = %complex_mul_imag_nan.70
  %call73 = call { double, double } @__muldc3(double %MP_RF.real, double %MP_RF.imag, double %CDUM.real60, double %CDUM.imag62) #3, !dbg !647
  %50 = extractvalue { double, double } %call73, 0, !dbg !647
  %51 = extractvalue { double, double } %call73, 1, !dbg !647
  br label %complex_mul_cont.74, !dbg !647

complex_mul_cont.74:                              ; preds = %complex_mul_libcall.72, %complex_mul_imag_nan.70, %complex_mul_cont.55
  %real_mul_phi75 = phi double [ %mul_r67, %complex_mul_cont.55 ], [ %mul_r67, %complex_mul_imag_nan.70 ], [ %50, %complex_mul_libcall.72 ], !dbg !645
  %imag_mul_phi76 = phi double [ %mul_i68, %complex_mul_cont.55 ], [ %mul_i68, %complex_mul_imag_nan.70 ], [ %51, %complex_mul_libcall.72 ], !dbg !645
  %52 = load double, double* %sigF, align 8, !dbg !648
  %add77 = fadd double %52, %real_mul_phi75, !dbg !648
  store double %add77, double* %sigF, align 8, !dbg !648
  br label %for.inc, !dbg !649

for.inc:                                          ; preds = %complex_mul_cont.74
  %53 = load i32, i32* %i, align 4, !dbg !650
  %inc = add nsw i32 %53, 1, !dbg !650
  store i32 %inc, i32* %i, align 4, !dbg !650
  br label %for.cond, !dbg !651

for.end:                                          ; preds = %for.cond
  %54 = load double, double* %sigT, align 8, !dbg !652
  %55 = load double, double* %sigA, align 8, !dbg !653
  %sub = fsub double %54, %55, !dbg !654
  store double %sub, double* %sigE, align 8, !dbg !655
  %56 = load double, double* %sigT, align 8, !dbg !656
  %57 = load double*, double** %micro_xs.addr, align 8, !dbg !657
  %arrayidx78 = getelementptr inbounds double, double* %57, i64 0, !dbg !657
  store double %56, double* %arrayidx78, align 8, !dbg !658
  %58 = load double, double* %sigA, align 8, !dbg !659
  %59 = load double*, double** %micro_xs.addr, align 8, !dbg !660
  %arrayidx79 = getelementptr inbounds double, double* %59, i64 1, !dbg !660
  store double %58, double* %arrayidx79, align 8, !dbg !661
  %60 = load double, double* %sigF, align 8, !dbg !662
  %61 = load double*, double** %micro_xs.addr, align 8, !dbg !663
  %arrayidx80 = getelementptr inbounds double, double* %61, i64 2, !dbg !663
  store double %60, double* %arrayidx80, align 8, !dbg !664
  %62 = load double, double* %sigE, align 8, !dbg !665
  %63 = load double*, double** %micro_xs.addr, align 8, !dbg !666
  %arrayidx81 = getelementptr inbounds double, double* %63, i64 3, !dbg !666
  store double %62, double* %arrayidx81, align 8, !dbg !667
  ret void, !dbg !668
}

; Function Attrs: nounwind uwtable
define void @calculate_sig_T(i32 %nuc, double %E, %struct.Input* byval align 8 %input, %struct.CalcDataPtrs* byval align 8 %data, { double, double }* %sigTfactors) #0 {
entry:
  %nuc.addr = alloca i32, align 4
  %E.addr = alloca double, align 8
  %sigTfactors.addr = alloca { double, double }*, align 8
  %phi = alloca double, align 8
  %i = alloca i32, align 4
  store i32 %nuc, i32* %nuc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nuc.addr, metadata !669, metadata !89), !dbg !670
  store double %E, double* %E.addr, align 8
  call void @llvm.dbg.declare(metadata double* %E.addr, metadata !671, metadata !89), !dbg !672
  call void @llvm.dbg.declare(metadata %struct.Input* %input, metadata !673, metadata !89), !dbg !674
  call void @llvm.dbg.declare(metadata %struct.CalcDataPtrs* %data, metadata !675, metadata !89), !dbg !676
  store { double, double }* %sigTfactors, { double, double }** %sigTfactors.addr, align 8
  call void @llvm.dbg.declare(metadata { double, double }** %sigTfactors.addr, metadata !677, metadata !89), !dbg !678
  call void @llvm.dbg.declare(metadata double* %phi, metadata !679, metadata !89), !dbg !680
  call void @llvm.dbg.declare(metadata i32* %i, metadata !681, metadata !89), !dbg !683
  store i32 0, i32* %i, align 4, !dbg !683
  br label %for.cond, !dbg !684

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !685
  %numL = getelementptr inbounds %struct.Input, %struct.Input* %input, i32 0, i32 6, !dbg !689
  %1 = load i32, i32* %numL, align 4, !dbg !689
  %cmp = icmp slt i32 %0, %1, !dbg !690
  br i1 %cmp, label %for.body, label %for.end, !dbg !691

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !692
  %idxprom = sext i32 %2 to i64, !dbg !694
  %3 = load i32, i32* %nuc.addr, align 4, !dbg !695
  %idxprom1 = sext i32 %3 to i64, !dbg !694
  %pseudo_K0RS = getelementptr inbounds %struct.CalcDataPtrs, %struct.CalcDataPtrs* %data, i32 0, i32 5, !dbg !696
  %4 = load double**, double*** %pseudo_K0RS, align 8, !dbg !696
  %arrayidx = getelementptr inbounds double*, double** %4, i64 %idxprom1, !dbg !694
  %5 = load double*, double** %arrayidx, align 8, !dbg !694
  %arrayidx2 = getelementptr inbounds double, double* %5, i64 %idxprom, !dbg !694
  %6 = load double, double* %arrayidx2, align 8, !dbg !694
  %7 = load double, double* %E.addr, align 8, !dbg !697
  %call = call double @sqrt(double %7) #3, !dbg !698
  %mul = fmul double %6, %call, !dbg !699
  store double %mul, double* %phi, align 8, !dbg !700
  %8 = load i32, i32* %i, align 4, !dbg !701
  %cmp3 = icmp eq i32 %8, 1, !dbg !703
  br i1 %cmp3, label %if.then, label %if.else, !dbg !704

if.then:                                          ; preds = %for.body
  %9 = load double, double* %phi, align 8, !dbg !705
  %call4 = call double @atan(double %9) #3, !dbg !706
  %sub = fsub double -0.000000e+00, %call4, !dbg !707
  %10 = load double, double* %phi, align 8, !dbg !708
  %sub5 = fsub double %10, %sub, !dbg !708
  store double %sub5, double* %phi, align 8, !dbg !708
  br label %if.end.26, !dbg !709

if.else:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !710
  %cmp6 = icmp eq i32 %11, 2, !dbg !712
  br i1 %cmp6, label %if.then.7, label %if.else.13, !dbg !713

if.then.7:                                        ; preds = %if.else
  %12 = load double, double* %phi, align 8, !dbg !714
  %mul8 = fmul double 3.000000e+00, %12, !dbg !715
  %13 = load double, double* %phi, align 8, !dbg !716
  %14 = load double, double* %phi, align 8, !dbg !717
  %mul9 = fmul double %13, %14, !dbg !718
  %sub10 = fsub double 3.000000e+00, %mul9, !dbg !719
  %div = fdiv double %mul8, %sub10, !dbg !720
  %call11 = call double @atan(double %div) #3, !dbg !721
  %15 = load double, double* %phi, align 8, !dbg !722
  %sub12 = fsub double %15, %call11, !dbg !722
  store double %sub12, double* %phi, align 8, !dbg !722
  br label %if.end.25, !dbg !723

if.else.13:                                       ; preds = %if.else
  %16 = load i32, i32* %i, align 4, !dbg !724
  %cmp14 = icmp eq i32 %16, 3, !dbg !726
  br i1 %cmp14, label %if.then.15, label %if.end, !dbg !727

if.then.15:                                       ; preds = %if.else.13
  %17 = load double, double* %phi, align 8, !dbg !728
  %18 = load double, double* %phi, align 8, !dbg !729
  %19 = load double, double* %phi, align 8, !dbg !730
  %mul16 = fmul double %18, %19, !dbg !731
  %sub17 = fsub double 1.500000e+01, %mul16, !dbg !732
  %mul18 = fmul double %17, %sub17, !dbg !733
  %20 = load double, double* %phi, align 8, !dbg !734
  %mul19 = fmul double 6.000000e+00, %20, !dbg !735
  %21 = load double, double* %phi, align 8, !dbg !736
  %mul20 = fmul double %mul19, %21, !dbg !737
  %sub21 = fsub double 1.500000e+01, %mul20, !dbg !738
  %div22 = fdiv double %mul18, %sub21, !dbg !739
  %call23 = call double @atan(double %div22) #3, !dbg !740
  %22 = load double, double* %phi, align 8, !dbg !741
  %sub24 = fsub double %22, %call23, !dbg !741
  store double %sub24, double* %phi, align 8, !dbg !741
  br label %if.end, !dbg !742

if.end:                                           ; preds = %if.then.15, %if.else.13
  br label %if.end.25

if.end.25:                                        ; preds = %if.end, %if.then.7
  br label %if.end.26

if.end.26:                                        ; preds = %if.end.25, %if.then
  %23 = load double, double* %phi, align 8, !dbg !743
  %mul27 = fmul double %23, 2.000000e+00, !dbg !743
  store double %mul27, double* %phi, align 8, !dbg !743
  %24 = load double, double* %phi, align 8, !dbg !744
  %call28 = call double @cos(double %24) #3, !dbg !745
  %25 = load double, double* %phi, align 8, !dbg !746
  %call29 = call double @sin(double %25) #3, !dbg !747
  %mul.rl = fmul double %call29, 0.000000e+00, !dbg !748
  %mul.ir = fmul double %call29, 1.000000e+00, !dbg !748
  %sub.r = fsub double %call28, %mul.rl, !dbg !749
  %sub.i = fsub double -0.000000e+00, %mul.ir, !dbg !749
  %26 = load i32, i32* %i, align 4, !dbg !750
  %idxprom30 = sext i32 %26 to i64, !dbg !751
  %27 = load { double, double }*, { double, double }** %sigTfactors.addr, align 8, !dbg !751
  %arrayidx31 = getelementptr inbounds { double, double }, { double, double }* %27, i64 %idxprom30, !dbg !751
  %real = getelementptr inbounds { double, double }, { double, double }* %arrayidx31, i32 0, i32 0, !dbg !752
  %imag = getelementptr inbounds { double, double }, { double, double }* %arrayidx31, i32 0, i32 1, !dbg !752
  store double %sub.r, double* %real, align 8, !dbg !752
  store double %sub.i, double* %imag, align 8, !dbg !752
  br label %for.inc, !dbg !753

for.inc:                                          ; preds = %if.end.26
  %28 = load i32, i32* %i, align 4, !dbg !754
  %inc = add nsw i32 %28, 1, !dbg !754
  store i32 %inc, i32* %i, align 4, !dbg !754
  br label %for.cond, !dbg !755

for.end:                                          ; preds = %for.cond
  ret void, !dbg !756
}

; Function Attrs: nounwind
declare double @sqrt(double) #4

; Function Attrs: nounwind
declare double @atan(double) #4

; Function Attrs: nounwind
declare double @cos(double) #4

; Function Attrs: nounwind
declare double @sin(double) #4

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readnone "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!85, !86}
!llvm.ident = !{!87}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !10, subprograms: !12)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/DOE_ProxyApps_C/RSBench")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__hm", file: !4, line: 24, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "./rsbench.h", directory: "/home/gleison/tf/Benchmarks/DOE_ProxyApps_C/RSBench")
!5 = !{!6, !7, !8, !9}
!6 = !DIEnumerator(name: "SMALL", value: 0)
!7 = !DIEnumerator(name: "LARGE", value: 1)
!8 = !DIEnumerator(name: "XL", value: 2)
!9 = !DIEnumerator(name: "XXL", value: 3)
!10 = !{!11}
!11 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!12 = !{!13, !19, !78, !81, !82}
!13 = !DISubprogram(name: "fast_nuclear_W", scope: !14, file: !14, line: 6, type: !15, isLocal: false, isDefinition: true, scopeLine: 6, flags: DIFlagPrototyped, isOptimized: false, function: { double, double } (double, double)* @fast_nuclear_W, variables: !18)
!14 = !DIFile(filename: "/home/gleison/tf/Benchmarks/DOE_ProxyApps_C/RSBench/tmp.c", directory: "/home/gleison/tf/Benchmarks/DOE_ProxyApps_C/RSBench")
!15 = !DISubroutineType(types: !16)
!16 = !{!17, !17}
!17 = !DIBasicType(name: "complex", size: 128, align: 64, encoding: DW_ATE_complex_float)
!18 = !{}
!19 = !DISubprogram(name: "calculate_macro_xs", scope: !14, file: !14, line: 71, type: !20, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, function: void (double*, i32, double, %struct.Input*, %struct.CalcDataPtrs*, { double, double }*, i64*, i64*)* @calculate_macro_xs, variables: !18)
!20 = !DISubroutineType(types: !21)
!21 = !{null, !22, !11, !23, !24, !36, !75, !76, !76}
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!23 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "Input", file: !4, line: 35, baseType: !25)
!25 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 26, size: 256, align: 32, elements: !26)
!26 = !{!27, !28, !29, !30, !32, !33, !34, !35}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "nthreads", scope: !25, file: !4, line: 27, baseType: !11, size: 32, align: 32)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "n_nuclides", scope: !25, file: !4, line: 28, baseType: !11, size: 32, align: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !25, file: !4, line: 29, baseType: !11, size: 32, align: 32, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "HM", scope: !25, file: !4, line: 30, baseType: !31, size: 32, align: 32, offset: 96)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "HM_size", file: !4, line: 24, baseType: !3)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "avg_n_poles", scope: !25, file: !4, line: 31, baseType: !11, size: 32, align: 32, offset: 128)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "avg_n_windows", scope: !25, file: !4, line: 32, baseType: !11, size: 32, align: 32, offset: 160)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "numL", scope: !25, file: !4, line: 33, baseType: !11, size: 32, align: 32, offset: 192)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "doppler", scope: !25, file: !4, line: 34, baseType: !11, size: 32, align: 32, offset: 224)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "CalcDataPtrs", file: !4, line: 66, baseType: !37)
!37 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 59, size: 512, align: 64, elements: !38)
!38 = !{!39, !41, !42, !51, !63, !74}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "n_poles", scope: !37, file: !4, line: 60, baseType: !40, size: 64, align: 64)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "n_windows", scope: !37, file: !4, line: 61, baseType: !40, size: 64, align: 64, offset: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "materials", scope: !37, file: !4, line: 62, baseType: !43, size: 192, align: 64, offset: 128)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "Materials", file: !4, line: 41, baseType: !44)
!44 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 37, size: 192, align: 64, elements: !45)
!45 = !{!46, !47, !49}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "num_nucs", scope: !44, file: !4, line: 38, baseType: !40, size: 64, align: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "mats", scope: !44, file: !4, line: 39, baseType: !48, size: 64, align: 64, offset: 64)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "concs", scope: !44, file: !4, line: 40, baseType: !50, size: 64, align: 64, offset: 128)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "poles", scope: !37, file: !4, line: 63, baseType: !52, size: 64, align: 64, offset: 320)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64, align: 64)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "Pole", file: !4, line: 49, baseType: !55)
!55 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 43, size: 576, align: 64, elements: !56)
!56 = !{!57, !58, !59, !60, !61}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "MP_EA", scope: !55, file: !4, line: 44, baseType: !17, size: 128, align: 64)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "MP_RT", scope: !55, file: !4, line: 45, baseType: !17, size: 128, align: 64, offset: 128)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "MP_RA", scope: !55, file: !4, line: 46, baseType: !17, size: 128, align: 64, offset: 256)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "MP_RF", scope: !55, file: !4, line: 47, baseType: !17, size: 128, align: 64, offset: 384)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "l_value", scope: !55, file: !4, line: 48, baseType: !62, size: 16, align: 16, offset: 512)
!62 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !37, file: !4, line: 64, baseType: !64, size: 64, align: 64, offset: 384)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64, align: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "Window", file: !4, line: 57, baseType: !67)
!67 = !DICompositeType(tag: DW_TAG_structure_type, file: !4, line: 51, size: 256, align: 64, elements: !68)
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIDerivedType(tag: DW_TAG_member, name: "T", scope: !67, file: !4, line: 52, baseType: !23, size: 64, align: 64)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !67, file: !4, line: 53, baseType: !23, size: 64, align: 64, offset: 64)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "F", scope: !67, file: !4, line: 54, baseType: !23, size: 64, align: 64, offset: 128)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !67, file: !4, line: 55, baseType: !11, size: 32, align: 32, offset: 192)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !67, file: !4, line: 56, baseType: !11, size: 32, align: 32, offset: 224)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "pseudo_K0RS", scope: !37, file: !4, line: 65, baseType: !50, size: 64, align: 64, offset: 448)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64, align: 64)
!77 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!78 = !DISubprogram(name: "calculate_micro_xs", scope: !14, file: !14, line: 98, type: !79, isLocal: false, isDefinition: true, scopeLine: 98, flags: DIFlagPrototyped, isOptimized: false, function: void (double*, i32, double, %struct.Input*, %struct.CalcDataPtrs*, { double, double }*)* @calculate_micro_xs, variables: !18)
!79 = !DISubroutineType(types: !80)
!80 = !{null, !22, !11, !23, !24, !36, !75}
!81 = !DISubprogram(name: "calculate_micro_xs_doppler", scope: !14, file: !14, line: 143, type: !20, isLocal: false, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: false, function: void (double*, i32, double, %struct.Input*, %struct.CalcDataPtrs*, { double, double }*, i64*, i64*)* @calculate_micro_xs_doppler, variables: !18)
!82 = !DISubprogram(name: "calculate_sig_T", scope: !14, file: !14, line: 194, type: !83, isLocal: false, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, double, %struct.Input*, %struct.CalcDataPtrs*, { double, double }*)* @calculate_sig_T, variables: !18)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !11, !23, !24, !36, !75}
!85 = !{i32 2, !"Dwarf Version", i32 4}
!86 = !{i32 2, !"Debug Info Version", i32 3}
!87 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!88 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Z", arg: 1, scope: !13, file: !14, line: 6, type: !17)
!89 = !DIExpression()
!90 = !DILocation(line: 6, column: 46, scope: !13)
!91 = !DILocation(line: 8, column: 12, scope: !92)
!92 = distinct !DILexicalBlock(scope: !13, file: !14, line: 8, column: 7)
!93 = !DILocation(line: 8, column: 7, scope: !92)
!94 = !DILocation(line: 8, column: 15, scope: !92)
!95 = !DILocation(line: 8, column: 7, scope: !13)
!96 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prefactor", scope: !97, file: !14, line: 11, type: !17)
!97 = distinct !DILexicalBlock(scope: !92, file: !14, line: 8, column: 22)
!98 = !DILocation(line: 11, column: 20, scope: !97)
!99 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "an", scope: !97, file: !14, line: 12, type: !100)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 640, align: 64, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 10)
!103 = !DILocation(line: 12, column: 12, scope: !97)
!104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "neg_1n", scope: !97, file: !14, line: 23, type: !100)
!105 = !DILocation(line: 23, column: 12, scope: !97)
!106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "denominator_left", scope: !97, file: !14, line: 35, type: !100)
!107 = !DILocation(line: 35, column: 12, scope: !97)
!108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "W", scope: !97, file: !14, line: 47, type: !17)
!109 = !DILocation(line: 47, column: 20, scope: !97)
!110 = !DILocation(line: 47, column: 48, scope: !97)
!111 = !DILocation(line: 47, column: 46, scope: !97)
!112 = !{!"branch_weights", i32 1, i32 1048575}
!113 = !DILocation(line: 47, column: 46, scope: !114)
!114 = !DILexicalBlockFile(scope: !97, file: !14, discriminator: 1)
!115 = !DILocation(line: 47, column: 46, scope: !116)
!116 = !DILexicalBlockFile(scope: !97, file: !14, discriminator: 3)
!117 = !DILocation(line: 47, column: 33, scope: !118)
!118 = !DILexicalBlockFile(scope: !119, file: !14, discriminator: 5)
!119 = !DILexicalBlockFile(scope: !120, file: !14, discriminator: 4)
!120 = !DILexicalBlockFile(scope: !97, file: !14, discriminator: 2)
!121 = !DILocation(line: 47, column: 31, scope: !97)
!122 = !DILocation(line: 47, column: 26, scope: !97)
!123 = !DILocation(line: 47, column: 26, scope: !124)
!124 = !DILexicalBlockFile(scope: !97, file: !14, discriminator: 6)
!125 = !DILocation(line: 47, column: 26, scope: !126)
!126 = !DILexicalBlockFile(scope: !97, file: !14, discriminator: 8)
!127 = !DILocation(line: 47, column: 61, scope: !128)
!128 = !DILexicalBlockFile(scope: !129, file: !14, discriminator: 10)
!129 = !DILexicalBlockFile(scope: !130, file: !14, discriminator: 9)
!130 = !DILexicalBlockFile(scope: !97, file: !14, discriminator: 7)
!131 = !DILocation(line: 47, column: 59, scope: !97)
!132 = !DILocation(line: 47, column: 52, scope: !97)
!133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !97, file: !14, line: 48, type: !17)
!134 = !DILocation(line: 48, column: 20, scope: !97)
!135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !136, file: !14, line: 49, type: !11)
!136 = distinct !DILexicalBlock(scope: !97, file: !14, line: 49, column: 5)
!137 = !DILocation(line: 49, column: 14, scope: !136)
!138 = !DILocation(line: 49, column: 10, scope: !136)
!139 = !DILocation(line: 49, column: 21, scope: !140)
!140 = !DILexicalBlockFile(scope: !141, file: !14, discriminator: 2)
!141 = !DILexicalBlockFile(scope: !142, file: !14, discriminator: 1)
!142 = distinct !DILexicalBlock(scope: !136, file: !14, line: 49, column: 5)
!143 = !DILocation(line: 49, column: 23, scope: !142)
!144 = !DILocation(line: 49, column: 5, scope: !136)
!145 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "top", scope: !146, file: !14, line: 50, type: !17)
!146 = distinct !DILexicalBlock(scope: !142, file: !14, line: 49, column: 34)
!147 = !DILocation(line: 50, column: 22, scope: !146)
!148 = !DILocation(line: 50, column: 35, scope: !146)
!149 = !DILocation(line: 50, column: 28, scope: !146)
!150 = !DILocation(line: 50, column: 55, scope: !146)
!151 = !DILocation(line: 50, column: 53, scope: !146)
!152 = !DILocation(line: 50, column: 53, scope: !153)
!153 = !DILexicalBlockFile(scope: !146, file: !14, discriminator: 1)
!154 = !DILocation(line: 50, column: 53, scope: !155)
!155 = !DILexicalBlockFile(scope: !146, file: !14, discriminator: 3)
!156 = !DILocation(line: 50, column: 40, scope: !157)
!157 = !DILexicalBlockFile(scope: !158, file: !14, discriminator: 5)
!158 = !DILexicalBlockFile(scope: !159, file: !14, discriminator: 4)
!159 = !DILexicalBlockFile(scope: !146, file: !14, discriminator: 2)
!160 = !DILocation(line: 50, column: 38, scope: !146)
!161 = !DILocation(line: 50, column: 58, scope: !146)
!162 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "bot", scope: !146, file: !14, line: 51, type: !17)
!163 = !DILocation(line: 51, column: 22, scope: !146)
!164 = !DILocation(line: 51, column: 45, scope: !146)
!165 = !DILocation(line: 51, column: 28, scope: !146)
!166 = !DILocation(line: 51, column: 57, scope: !146)
!167 = !DILocation(line: 51, column: 55, scope: !146)
!168 = !DILocation(line: 51, column: 61, scope: !146)
!169 = !DILocation(line: 51, column: 59, scope: !146)
!170 = !DILocation(line: 51, column: 59, scope: !153)
!171 = !DILocation(line: 51, column: 59, scope: !155)
!172 = !DILocation(line: 51, column: 48, scope: !157)
!173 = !DILocation(line: 52, column: 17, scope: !146)
!174 = !DILocation(line: 52, column: 14, scope: !146)
!175 = !DILocation(line: 52, column: 23, scope: !146)
!176 = !DILocation(line: 52, column: 29, scope: !146)
!177 = !DILocation(line: 52, column: 27, scope: !146)
!178 = !DILocation(line: 52, column: 20, scope: !146)
!179 = !DILocation(line: 52, column: 11, scope: !146)
!180 = !DILocation(line: 53, column: 5, scope: !146)
!181 = !DILocation(line: 49, column: 30, scope: !142)
!182 = !DILocation(line: 49, column: 5, scope: !142)
!183 = !DILocation(line: 54, column: 10, scope: !97)
!184 = !DILocation(line: 54, column: 22, scope: !97)
!185 = !DILocation(line: 54, column: 20, scope: !97)
!186 = !DILocation(line: 54, column: 20, scope: !114)
!187 = !DILocation(line: 54, column: 20, scope: !116)
!188 = !DILocation(line: 54, column: 26, scope: !118)
!189 = !DILocation(line: 54, column: 24, scope: !97)
!190 = !DILocation(line: 54, column: 24, scope: !124)
!191 = !DILocation(line: 54, column: 24, scope: !126)
!192 = !DILocation(line: 54, column: 7, scope: !128)
!193 = !DILocation(line: 55, column: 12, scope: !97)
!194 = !DILocation(line: 55, column: 5, scope: !97)
!195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !13, file: !14, line: 60, type: !23)
!196 = !DILocation(line: 60, column: 10, scope: !13)
!197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !13, file: !14, line: 61, type: !23)
!198 = !DILocation(line: 61, column: 10, scope: !13)
!199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !13, file: !14, line: 62, type: !23)
!200 = !DILocation(line: 62, column: 10, scope: !13)
!201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "d", scope: !13, file: !14, line: 63, type: !23)
!202 = !DILocation(line: 63, column: 10, scope: !13)
!203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "W", scope: !13, file: !14, line: 66, type: !17)
!204 = !DILocation(line: 66, column: 18, scope: !13)
!205 = !DILocation(line: 66, column: 26, scope: !13)
!206 = !DILocation(line: 66, column: 24, scope: !13)
!207 = !DILocation(line: 66, column: 24, scope: !208)
!208 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 1)
!209 = !DILocation(line: 66, column: 24, scope: !210)
!210 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 3)
!211 = !DILocation(line: 66, column: 31, scope: !212)
!212 = !DILexicalBlockFile(scope: !213, file: !14, discriminator: 5)
!213 = !DILexicalBlockFile(scope: !214, file: !14, discriminator: 4)
!214 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 2)
!215 = !DILocation(line: 66, column: 36, scope: !13)
!216 = !DILocation(line: 66, column: 40, scope: !13)
!217 = !DILocation(line: 66, column: 38, scope: !13)
!218 = !DILocation(line: 66, column: 38, scope: !219)
!219 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 6)
!220 = !DILocation(line: 66, column: 38, scope: !221)
!221 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 8)
!222 = !DILocation(line: 66, column: 44, scope: !223)
!223 = !DILexicalBlockFile(scope: !224, file: !14, discriminator: 10)
!224 = !DILexicalBlockFile(scope: !225, file: !14, discriminator: 9)
!225 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 7)
!226 = !DILocation(line: 66, column: 42, scope: !13)
!227 = !DILocation(line: 66, column: 33, scope: !13)
!228 = !DILocation(line: 66, column: 49, scope: !13)
!229 = !DILocation(line: 66, column: 54, scope: !13)
!230 = !DILocation(line: 66, column: 58, scope: !13)
!231 = !DILocation(line: 66, column: 56, scope: !13)
!232 = !DILocation(line: 66, column: 56, scope: !233)
!233 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 11)
!234 = !DILocation(line: 66, column: 56, scope: !235)
!235 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 13)
!236 = !DILocation(line: 66, column: 62, scope: !237)
!237 = !DILexicalBlockFile(scope: !238, file: !14, discriminator: 15)
!238 = !DILexicalBlockFile(scope: !239, file: !14, discriminator: 14)
!239 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 12)
!240 = !DILocation(line: 66, column: 60, scope: !13)
!241 = !DILocation(line: 66, column: 51, scope: !13)
!242 = !DILocation(line: 66, column: 47, scope: !13)
!243 = !DILocation(line: 66, column: 28, scope: !13)
!244 = !DILocation(line: 66, column: 28, scope: !245)
!245 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 16)
!246 = !DILocation(line: 66, column: 28, scope: !247)
!247 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 18)
!248 = !DILocation(line: 66, column: 18, scope: !249)
!249 = !DILexicalBlockFile(scope: !250, file: !14, discriminator: 20)
!250 = !DILexicalBlockFile(scope: !251, file: !14, discriminator: 19)
!251 = !DILexicalBlockFile(scope: !13, file: !14, discriminator: 17)
!252 = !DILocation(line: 68, column: 10, scope: !13)
!253 = !DILocation(line: 68, column: 3, scope: !13)
!254 = !DILocation(line: 69, column: 1, scope: !13)
!255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "macro_xs", arg: 1, scope: !19, file: !14, line: 71, type: !22)
!256 = !DILocation(line: 71, column: 33, scope: !19)
!257 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mat", arg: 2, scope: !19, file: !14, line: 71, type: !11)
!258 = !DILocation(line: 71, column: 47, scope: !19)
!259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "E", arg: 3, scope: !19, file: !14, line: 71, type: !23)
!260 = !DILocation(line: 71, column: 59, scope: !19)
!261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "input", arg: 4, scope: !19, file: !14, line: 71, type: !24)
!262 = !DILocation(line: 71, column: 68, scope: !19)
!263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 5, scope: !19, file: !14, line: 71, type: !36)
!264 = !DILocation(line: 71, column: 88, scope: !19)
!265 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sigTfactors", arg: 6, scope: !19, file: !14, line: 71, type: !75)
!266 = !DILocation(line: 71, column: 110, scope: !19)
!267 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "abrarov", arg: 7, scope: !19, file: !14, line: 71, type: !76)
!268 = !DILocation(line: 71, column: 129, scope: !19)
!269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "alls", arg: 8, scope: !19, file: !14, line: 71, type: !76)
!270 = !DILocation(line: 71, column: 144, scope: !19)
!271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !272, file: !14, line: 73, type: !11)
!272 = distinct !DILexicalBlock(scope: !19, file: !14, line: 73, column: 3)
!273 = !DILocation(line: 73, column: 12, scope: !272)
!274 = !DILocation(line: 73, column: 8, scope: !272)
!275 = !DILocation(line: 73, column: 19, scope: !276)
!276 = !DILexicalBlockFile(scope: !277, file: !14, discriminator: 2)
!277 = !DILexicalBlockFile(scope: !278, file: !14, discriminator: 1)
!278 = distinct !DILexicalBlock(scope: !272, file: !14, line: 73, column: 3)
!279 = !DILocation(line: 73, column: 21, scope: !278)
!280 = !DILocation(line: 73, column: 3, scope: !272)
!281 = !DILocation(line: 74, column: 14, scope: !278)
!282 = !DILocation(line: 74, column: 5, scope: !278)
!283 = !DILocation(line: 74, column: 17, scope: !278)
!284 = !DILocation(line: 73, column: 27, scope: !278)
!285 = !DILocation(line: 73, column: 3, scope: !278)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !287, file: !14, line: 77, type: !11)
!287 = distinct !DILexicalBlock(scope: !19, file: !14, line: 77, column: 3)
!288 = !DILocation(line: 77, column: 12, scope: !287)
!289 = !DILocation(line: 77, column: 8, scope: !287)
!290 = !DILocation(line: 77, column: 19, scope: !291)
!291 = !DILexicalBlockFile(scope: !292, file: !14, discriminator: 2)
!292 = !DILexicalBlockFile(scope: !293, file: !14, discriminator: 1)
!293 = distinct !DILexicalBlock(scope: !287, file: !14, line: 77, column: 3)
!294 = !DILocation(line: 77, column: 49, scope: !293)
!295 = !DILocation(line: 77, column: 23, scope: !293)
!296 = !DILocation(line: 77, column: 29, scope: !293)
!297 = !DILocation(line: 77, column: 40, scope: !293)
!298 = !DILocation(line: 77, column: 21, scope: !293)
!299 = !DILocation(line: 77, column: 3, scope: !287)
!300 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "micro_xs", scope: !301, file: !14, line: 78, type: !302)
!301 = distinct !DILexicalBlock(scope: !293, file: !14, line: 77, column: 60)
!302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 256, align: 64, elements: !303)
!303 = !{!304}
!304 = !DISubrange(count: 4)
!305 = !DILocation(line: 78, column: 12, scope: !301)
!306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nuc", scope: !301, file: !14, line: 79, type: !11)
!307 = !DILocation(line: 79, column: 9, scope: !301)
!308 = !DILocation(line: 79, column: 42, scope: !301)
!309 = !DILocation(line: 79, column: 15, scope: !301)
!310 = !DILocation(line: 79, column: 37, scope: !301)
!311 = !DILocation(line: 79, column: 21, scope: !301)
!312 = !DILocation(line: 79, column: 32, scope: !301)
!313 = !DILocation(line: 81, column: 15, scope: !314)
!314 = distinct !DILexicalBlock(scope: !301, file: !14, line: 81, column: 9)
!315 = !DILocation(line: 81, column: 23, scope: !314)
!316 = !DILocation(line: 81, column: 9, scope: !301)
!317 = !DILocation(line: 82, column: 34, scope: !314)
!318 = !DILocation(line: 82, column: 44, scope: !314)
!319 = !DILocation(line: 82, column: 49, scope: !314)
!320 = !DILocation(line: 82, column: 65, scope: !314)
!321 = !DILocation(line: 82, column: 78, scope: !314)
!322 = !DILocation(line: 82, column: 87, scope: !314)
!323 = !DILocation(line: 82, column: 7, scope: !314)
!324 = !DILocation(line: 84, column: 26, scope: !314)
!325 = !DILocation(line: 84, column: 36, scope: !314)
!326 = !DILocation(line: 84, column: 41, scope: !314)
!327 = !DILocation(line: 84, column: 57, scope: !314)
!328 = !DILocation(line: 84, column: 7, scope: !314)
!329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !330, file: !14, line: 86, type: !11)
!330 = distinct !DILexicalBlock(scope: !301, file: !14, line: 86, column: 5)
!331 = !DILocation(line: 86, column: 14, scope: !330)
!332 = !DILocation(line: 86, column: 10, scope: !330)
!333 = !DILocation(line: 86, column: 21, scope: !334)
!334 = !DILexicalBlockFile(scope: !335, file: !14, discriminator: 2)
!335 = !DILexicalBlockFile(scope: !336, file: !14, discriminator: 1)
!336 = distinct !DILexicalBlock(scope: !330, file: !14, line: 86, column: 5)
!337 = !DILocation(line: 86, column: 23, scope: !336)
!338 = !DILocation(line: 86, column: 5, scope: !330)
!339 = !DILocation(line: 87, column: 31, scope: !340)
!340 = distinct !DILexicalBlock(scope: !336, file: !14, line: 86, column: 33)
!341 = !DILocation(line: 87, column: 22, scope: !340)
!342 = !DILocation(line: 87, column: 62, scope: !340)
!343 = !DILocation(line: 87, column: 36, scope: !340)
!344 = !DILocation(line: 87, column: 57, scope: !340)
!345 = !DILocation(line: 87, column: 41, scope: !340)
!346 = !DILocation(line: 87, column: 51, scope: !340)
!347 = !DILocation(line: 87, column: 34, scope: !340)
!348 = !DILocation(line: 87, column: 16, scope: !340)
!349 = !DILocation(line: 87, column: 7, scope: !340)
!350 = !DILocation(line: 87, column: 19, scope: !340)
!351 = !DILocation(line: 88, column: 5, scope: !340)
!352 = !DILocation(line: 86, column: 29, scope: !336)
!353 = !DILocation(line: 86, column: 5, scope: !336)
!354 = !DILocation(line: 89, column: 3, scope: !301)
!355 = !DILocation(line: 77, column: 56, scope: !293)
!356 = !DILocation(line: 77, column: 3, scope: !293)
!357 = !DILocation(line: 95, column: 1, scope: !19)
!358 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "micro_xs", arg: 1, scope: !81, file: !14, line: 143, type: !22)
!359 = !DILocation(line: 143, column: 41, scope: !81)
!360 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nuc", arg: 2, scope: !81, file: !14, line: 143, type: !11)
!361 = !DILocation(line: 143, column: 55, scope: !81)
!362 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "E", arg: 3, scope: !81, file: !14, line: 143, type: !23)
!363 = !DILocation(line: 143, column: 67, scope: !81)
!364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "input", arg: 4, scope: !81, file: !14, line: 143, type: !24)
!365 = !DILocation(line: 143, column: 76, scope: !81)
!366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 5, scope: !81, file: !14, line: 143, type: !36)
!367 = !DILocation(line: 143, column: 96, scope: !81)
!368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sigTfactors", arg: 6, scope: !81, file: !14, line: 143, type: !75)
!369 = !DILocation(line: 143, column: 118, scope: !81)
!370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "abrarov", arg: 7, scope: !81, file: !14, line: 143, type: !76)
!371 = !DILocation(line: 143, column: 137, scope: !81)
!372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "alls", arg: 8, scope: !81, file: !14, line: 143, type: !76)
!373 = !DILocation(line: 143, column: 152, scope: !81)
!374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigT", scope: !81, file: !14, line: 145, type: !23)
!375 = !DILocation(line: 145, column: 10, scope: !81)
!376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigA", scope: !81, file: !14, line: 146, type: !23)
!377 = !DILocation(line: 146, column: 10, scope: !81)
!378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigF", scope: !81, file: !14, line: 147, type: !23)
!379 = !DILocation(line: 147, column: 10, scope: !81)
!380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigE", scope: !81, file: !14, line: 148, type: !23)
!381 = !DILocation(line: 148, column: 10, scope: !81)
!382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "spacing", scope: !81, file: !14, line: 151, type: !23)
!383 = !DILocation(line: 151, column: 10, scope: !81)
!384 = !DILocation(line: 151, column: 41, scope: !81)
!385 = !DILocation(line: 151, column: 26, scope: !81)
!386 = !DILocation(line: 151, column: 31, scope: !81)
!387 = !DILocation(line: 151, column: 24, scope: !81)
!388 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "window", scope: !81, file: !14, line: 152, type: !11)
!389 = !DILocation(line: 152, column: 7, scope: !81)
!390 = !DILocation(line: 152, column: 22, scope: !81)
!391 = !DILocation(line: 152, column: 26, scope: !81)
!392 = !DILocation(line: 152, column: 24, scope: !81)
!393 = !DILocation(line: 152, column: 16, scope: !81)
!394 = !DILocation(line: 153, column: 7, scope: !395)
!395 = distinct !DILexicalBlock(scope: !81, file: !14, line: 153, column: 7)
!396 = !DILocation(line: 153, column: 32, scope: !395)
!397 = !DILocation(line: 153, column: 17, scope: !395)
!398 = !DILocation(line: 153, column: 22, scope: !395)
!399 = !DILocation(line: 153, column: 14, scope: !395)
!400 = !DILocation(line: 153, column: 7, scope: !81)
!401 = !DILocation(line: 154, column: 11, scope: !395)
!402 = !DILocation(line: 154, column: 5, scope: !395)
!403 = !DILocation(line: 157, column: 19, scope: !81)
!404 = !DILocation(line: 157, column: 24, scope: !81)
!405 = !DILocation(line: 157, column: 40, scope: !81)
!406 = !DILocation(line: 157, column: 3, scope: !81)
!407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !81, file: !14, line: 160, type: !66)
!408 = !DILocation(line: 160, column: 10, scope: !81)
!409 = !DILocation(line: 160, column: 32, scope: !81)
!410 = !DILocation(line: 160, column: 14, scope: !81)
!411 = !DILocation(line: 160, column: 27, scope: !81)
!412 = !DILocation(line: 160, column: 19, scope: !81)
!413 = !DILocation(line: 161, column: 10, scope: !81)
!414 = !DILocation(line: 161, column: 16, scope: !81)
!415 = !DILocation(line: 161, column: 12, scope: !81)
!416 = !DILocation(line: 161, column: 8, scope: !81)
!417 = !DILocation(line: 162, column: 10, scope: !81)
!418 = !DILocation(line: 162, column: 16, scope: !81)
!419 = !DILocation(line: 162, column: 12, scope: !81)
!420 = !DILocation(line: 162, column: 8, scope: !81)
!421 = !DILocation(line: 163, column: 10, scope: !81)
!422 = !DILocation(line: 163, column: 16, scope: !81)
!423 = !DILocation(line: 163, column: 12, scope: !81)
!424 = !DILocation(line: 163, column: 8, scope: !81)
!425 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dopp", scope: !81, file: !14, line: 165, type: !23)
!426 = !DILocation(line: 165, column: 10, scope: !81)
!427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !428, file: !14, line: 168, type: !11)
!428 = distinct !DILexicalBlock(scope: !81, file: !14, line: 168, column: 3)
!429 = !DILocation(line: 168, column: 12, scope: !428)
!430 = !DILocation(line: 168, column: 18, scope: !428)
!431 = !DILocation(line: 168, column: 8, scope: !428)
!432 = !DILocation(line: 168, column: 25, scope: !433)
!433 = !DILexicalBlockFile(scope: !434, file: !14, discriminator: 2)
!434 = !DILexicalBlockFile(scope: !435, file: !14, discriminator: 1)
!435 = distinct !DILexicalBlock(scope: !428, file: !14, line: 168, column: 3)
!436 = !DILocation(line: 168, column: 31, scope: !435)
!437 = !DILocation(line: 168, column: 27, scope: !435)
!438 = !DILocation(line: 168, column: 3, scope: !428)
!439 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pole", scope: !440, file: !14, line: 169, type: !54)
!440 = distinct !DILexicalBlock(scope: !435, file: !14, line: 168, column: 41)
!441 = !DILocation(line: 169, column: 10, scope: !440)
!442 = !DILocation(line: 169, column: 33, scope: !440)
!443 = !DILocation(line: 169, column: 17, scope: !440)
!444 = !DILocation(line: 169, column: 28, scope: !440)
!445 = !DILocation(line: 169, column: 22, scope: !440)
!446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Z", scope: !440, file: !14, line: 172, type: !17)
!447 = !DILocation(line: 172, column: 20, scope: !440)
!448 = !DILocation(line: 172, column: 25, scope: !440)
!449 = !DILocation(line: 172, column: 34, scope: !440)
!450 = !DILocation(line: 172, column: 27, scope: !440)
!451 = !DILocation(line: 172, column: 43, scope: !440)
!452 = !DILocation(line: 172, column: 41, scope: !440)
!453 = !DILocation(line: 173, column: 14, scope: !454)
!454 = distinct !DILexicalBlock(scope: !440, file: !14, line: 173, column: 9)
!455 = !DILocation(line: 173, column: 9, scope: !454)
!456 = !DILocation(line: 173, column: 17, scope: !454)
!457 = !DILocation(line: 173, column: 9, scope: !440)
!458 = !DILocation(line: 174, column: 9, scope: !454)
!459 = !DILocation(line: 174, column: 17, scope: !454)
!460 = !DILocation(line: 174, column: 7, scope: !454)
!461 = !DILocation(line: 175, column: 7, scope: !440)
!462 = !DILocation(line: 175, column: 12, scope: !440)
!463 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "faddeeva", scope: !440, file: !14, line: 178, type: !17)
!464 = !DILocation(line: 178, column: 20, scope: !440)
!465 = !DILocation(line: 178, column: 46, scope: !440)
!466 = !DILocation(line: 178, column: 31, scope: !440)
!467 = !DILocation(line: 181, column: 24, scope: !440)
!468 = !DILocation(line: 181, column: 32, scope: !440)
!469 = !DILocation(line: 181, column: 30, scope: !440)
!470 = !DILocation(line: 181, column: 30, scope: !471)
!471 = !DILexicalBlockFile(scope: !440, file: !14, discriminator: 1)
!472 = !DILocation(line: 181, column: 30, scope: !473)
!473 = !DILexicalBlockFile(scope: !440, file: !14, discriminator: 3)
!474 = !DILocation(line: 181, column: 60, scope: !475)
!475 = !DILexicalBlockFile(scope: !476, file: !14, discriminator: 5)
!476 = !DILexicalBlockFile(scope: !477, file: !14, discriminator: 4)
!477 = !DILexicalBlockFile(scope: !440, file: !14, discriminator: 2)
!478 = !DILocation(line: 181, column: 43, scope: !440)
!479 = !DILocation(line: 181, column: 41, scope: !440)
!480 = !DILocation(line: 181, column: 41, scope: !481)
!481 = !DILexicalBlockFile(scope: !440, file: !14, discriminator: 6)
!482 = !DILocation(line: 181, column: 41, scope: !483)
!483 = !DILexicalBlockFile(scope: !440, file: !14, discriminator: 8)
!484 = !DILocation(line: 181, column: 10, scope: !485)
!485 = !DILexicalBlockFile(scope: !486, file: !14, discriminator: 10)
!486 = !DILexicalBlockFile(scope: !487, file: !14, discriminator: 9)
!487 = !DILexicalBlockFile(scope: !440, file: !14, discriminator: 7)
!488 = !DILocation(line: 182, column: 24, scope: !440)
!489 = !DILocation(line: 182, column: 32, scope: !440)
!490 = !DILocation(line: 182, column: 30, scope: !440)
!491 = !DILocation(line: 182, column: 30, scope: !471)
!492 = !DILocation(line: 182, column: 30, scope: !473)
!493 = !DILocation(line: 182, column: 10, scope: !475)
!494 = !DILocation(line: 183, column: 24, scope: !440)
!495 = !DILocation(line: 183, column: 32, scope: !440)
!496 = !DILocation(line: 183, column: 30, scope: !440)
!497 = !DILocation(line: 183, column: 30, scope: !471)
!498 = !DILocation(line: 183, column: 30, scope: !473)
!499 = !DILocation(line: 183, column: 10, scope: !475)
!500 = !DILocation(line: 184, column: 3, scope: !440)
!501 = !DILocation(line: 168, column: 37, scope: !435)
!502 = !DILocation(line: 168, column: 3, scope: !435)
!503 = !DILocation(line: 186, column: 10, scope: !81)
!504 = !DILocation(line: 186, column: 17, scope: !81)
!505 = !DILocation(line: 186, column: 15, scope: !81)
!506 = !DILocation(line: 186, column: 8, scope: !81)
!507 = !DILocation(line: 188, column: 17, scope: !81)
!508 = !DILocation(line: 188, column: 3, scope: !81)
!509 = !DILocation(line: 188, column: 15, scope: !81)
!510 = !DILocation(line: 189, column: 17, scope: !81)
!511 = !DILocation(line: 189, column: 3, scope: !81)
!512 = !DILocation(line: 189, column: 15, scope: !81)
!513 = !DILocation(line: 190, column: 17, scope: !81)
!514 = !DILocation(line: 190, column: 3, scope: !81)
!515 = !DILocation(line: 190, column: 15, scope: !81)
!516 = !DILocation(line: 191, column: 17, scope: !81)
!517 = !DILocation(line: 191, column: 3, scope: !81)
!518 = !DILocation(line: 191, column: 15, scope: !81)
!519 = !DILocation(line: 192, column: 1, scope: !81)
!520 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "micro_xs", arg: 1, scope: !78, file: !14, line: 98, type: !22)
!521 = !DILocation(line: 98, column: 33, scope: !78)
!522 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nuc", arg: 2, scope: !78, file: !14, line: 98, type: !11)
!523 = !DILocation(line: 98, column: 47, scope: !78)
!524 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "E", arg: 3, scope: !78, file: !14, line: 98, type: !23)
!525 = !DILocation(line: 98, column: 59, scope: !78)
!526 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "input", arg: 4, scope: !78, file: !14, line: 98, type: !24)
!527 = !DILocation(line: 98, column: 68, scope: !78)
!528 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 5, scope: !78, file: !14, line: 98, type: !36)
!529 = !DILocation(line: 98, column: 88, scope: !78)
!530 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sigTfactors", arg: 6, scope: !78, file: !14, line: 98, type: !75)
!531 = !DILocation(line: 98, column: 110, scope: !78)
!532 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigT", scope: !78, file: !14, line: 100, type: !23)
!533 = !DILocation(line: 100, column: 10, scope: !78)
!534 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigA", scope: !78, file: !14, line: 101, type: !23)
!535 = !DILocation(line: 101, column: 10, scope: !78)
!536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigF", scope: !78, file: !14, line: 102, type: !23)
!537 = !DILocation(line: 102, column: 10, scope: !78)
!538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sigE", scope: !78, file: !14, line: 103, type: !23)
!539 = !DILocation(line: 103, column: 10, scope: !78)
!540 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "spacing", scope: !78, file: !14, line: 106, type: !23)
!541 = !DILocation(line: 106, column: 10, scope: !78)
!542 = !DILocation(line: 106, column: 41, scope: !78)
!543 = !DILocation(line: 106, column: 26, scope: !78)
!544 = !DILocation(line: 106, column: 31, scope: !78)
!545 = !DILocation(line: 106, column: 24, scope: !78)
!546 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "window", scope: !78, file: !14, line: 107, type: !11)
!547 = !DILocation(line: 107, column: 7, scope: !78)
!548 = !DILocation(line: 107, column: 22, scope: !78)
!549 = !DILocation(line: 107, column: 26, scope: !78)
!550 = !DILocation(line: 107, column: 24, scope: !78)
!551 = !DILocation(line: 107, column: 16, scope: !78)
!552 = !DILocation(line: 108, column: 7, scope: !553)
!553 = distinct !DILexicalBlock(scope: !78, file: !14, line: 108, column: 7)
!554 = !DILocation(line: 108, column: 32, scope: !553)
!555 = !DILocation(line: 108, column: 17, scope: !553)
!556 = !DILocation(line: 108, column: 22, scope: !553)
!557 = !DILocation(line: 108, column: 14, scope: !553)
!558 = !DILocation(line: 108, column: 7, scope: !78)
!559 = !DILocation(line: 109, column: 11, scope: !553)
!560 = !DILocation(line: 109, column: 5, scope: !553)
!561 = !DILocation(line: 112, column: 19, scope: !78)
!562 = !DILocation(line: 112, column: 24, scope: !78)
!563 = !DILocation(line: 112, column: 40, scope: !78)
!564 = !DILocation(line: 112, column: 3, scope: !78)
!565 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !78, file: !14, line: 115, type: !66)
!566 = !DILocation(line: 115, column: 10, scope: !78)
!567 = !DILocation(line: 115, column: 32, scope: !78)
!568 = !DILocation(line: 115, column: 14, scope: !78)
!569 = !DILocation(line: 115, column: 27, scope: !78)
!570 = !DILocation(line: 115, column: 19, scope: !78)
!571 = !DILocation(line: 116, column: 10, scope: !78)
!572 = !DILocation(line: 116, column: 16, scope: !78)
!573 = !DILocation(line: 116, column: 12, scope: !78)
!574 = !DILocation(line: 116, column: 8, scope: !78)
!575 = !DILocation(line: 117, column: 10, scope: !78)
!576 = !DILocation(line: 117, column: 16, scope: !78)
!577 = !DILocation(line: 117, column: 12, scope: !78)
!578 = !DILocation(line: 117, column: 8, scope: !78)
!579 = !DILocation(line: 118, column: 10, scope: !78)
!580 = !DILocation(line: 118, column: 16, scope: !78)
!581 = !DILocation(line: 118, column: 12, scope: !78)
!582 = !DILocation(line: 118, column: 8, scope: !78)
!583 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !584, file: !14, line: 121, type: !11)
!584 = distinct !DILexicalBlock(scope: !78, file: !14, line: 121, column: 3)
!585 = !DILocation(line: 121, column: 12, scope: !584)
!586 = !DILocation(line: 121, column: 18, scope: !584)
!587 = !DILocation(line: 121, column: 8, scope: !584)
!588 = !DILocation(line: 121, column: 25, scope: !589)
!589 = !DILexicalBlockFile(scope: !590, file: !14, discriminator: 2)
!590 = !DILexicalBlockFile(scope: !591, file: !14, discriminator: 1)
!591 = distinct !DILexicalBlock(scope: !584, file: !14, line: 121, column: 3)
!592 = !DILocation(line: 121, column: 31, scope: !591)
!593 = !DILocation(line: 121, column: 27, scope: !591)
!594 = !DILocation(line: 121, column: 3, scope: !584)
!595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "PSIIKI", scope: !596, file: !14, line: 122, type: !17)
!596 = distinct !DILexicalBlock(scope: !591, file: !14, line: 121, column: 41)
!597 = !DILocation(line: 122, column: 20, scope: !596)
!598 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "CDUM", scope: !596, file: !14, line: 123, type: !17)
!599 = !DILocation(line: 123, column: 20, scope: !596)
!600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pole", scope: !596, file: !14, line: 124, type: !54)
!601 = !DILocation(line: 124, column: 10, scope: !596)
!602 = !DILocation(line: 124, column: 33, scope: !596)
!603 = !DILocation(line: 124, column: 17, scope: !596)
!604 = !DILocation(line: 124, column: 28, scope: !596)
!605 = !DILocation(line: 124, column: 22, scope: !596)
!606 = !DILocation(line: 125, column: 48, scope: !596)
!607 = !DILocation(line: 125, column: 61, scope: !596)
!608 = !DILocation(line: 125, column: 56, scope: !596)
!609 = !DILocation(line: 125, column: 54, scope: !596)
!610 = !DILocation(line: 125, column: 40, scope: !596)
!611 = !DILocation(line: 125, column: 12, scope: !596)
!612 = !DILocation(line: 126, column: 12, scope: !596)
!613 = !DILocation(line: 126, column: 21, scope: !596)
!614 = !DILocation(line: 126, column: 19, scope: !596)
!615 = !DILocation(line: 126, column: 10, scope: !596)
!616 = !DILocation(line: 127, column: 24, scope: !596)
!617 = !DILocation(line: 127, column: 32, scope: !596)
!618 = !DILocation(line: 127, column: 30, scope: !596)
!619 = !DILocation(line: 127, column: 30, scope: !620)
!620 = !DILexicalBlockFile(scope: !596, file: !14, discriminator: 1)
!621 = !DILocation(line: 127, column: 30, scope: !622)
!622 = !DILexicalBlockFile(scope: !596, file: !14, discriminator: 3)
!623 = !DILocation(line: 127, column: 56, scope: !624)
!624 = !DILexicalBlockFile(scope: !625, file: !14, discriminator: 5)
!625 = !DILexicalBlockFile(scope: !626, file: !14, discriminator: 4)
!626 = !DILexicalBlockFile(scope: !596, file: !14, discriminator: 2)
!627 = !DILocation(line: 127, column: 39, scope: !596)
!628 = !DILocation(line: 127, column: 37, scope: !596)
!629 = !DILocation(line: 127, column: 37, scope: !630)
!630 = !DILexicalBlockFile(scope: !596, file: !14, discriminator: 6)
!631 = !DILocation(line: 127, column: 37, scope: !632)
!632 = !DILexicalBlockFile(scope: !596, file: !14, discriminator: 8)
!633 = !DILocation(line: 127, column: 10, scope: !634)
!634 = !DILexicalBlockFile(scope: !635, file: !14, discriminator: 10)
!635 = !DILexicalBlockFile(scope: !636, file: !14, discriminator: 9)
!636 = !DILexicalBlockFile(scope: !596, file: !14, discriminator: 7)
!637 = !DILocation(line: 128, column: 24, scope: !596)
!638 = !DILocation(line: 128, column: 32, scope: !596)
!639 = !DILocation(line: 128, column: 30, scope: !596)
!640 = !DILocation(line: 128, column: 30, scope: !620)
!641 = !DILocation(line: 128, column: 30, scope: !622)
!642 = !DILocation(line: 128, column: 10, scope: !624)
!643 = !DILocation(line: 129, column: 24, scope: !596)
!644 = !DILocation(line: 129, column: 32, scope: !596)
!645 = !DILocation(line: 129, column: 30, scope: !596)
!646 = !DILocation(line: 129, column: 30, scope: !620)
!647 = !DILocation(line: 129, column: 30, scope: !622)
!648 = !DILocation(line: 129, column: 10, scope: !624)
!649 = !DILocation(line: 130, column: 3, scope: !596)
!650 = !DILocation(line: 121, column: 37, scope: !591)
!651 = !DILocation(line: 121, column: 3, scope: !591)
!652 = !DILocation(line: 132, column: 10, scope: !78)
!653 = !DILocation(line: 132, column: 17, scope: !78)
!654 = !DILocation(line: 132, column: 15, scope: !78)
!655 = !DILocation(line: 132, column: 8, scope: !78)
!656 = !DILocation(line: 134, column: 17, scope: !78)
!657 = !DILocation(line: 134, column: 3, scope: !78)
!658 = !DILocation(line: 134, column: 15, scope: !78)
!659 = !DILocation(line: 135, column: 17, scope: !78)
!660 = !DILocation(line: 135, column: 3, scope: !78)
!661 = !DILocation(line: 135, column: 15, scope: !78)
!662 = !DILocation(line: 136, column: 17, scope: !78)
!663 = !DILocation(line: 136, column: 3, scope: !78)
!664 = !DILocation(line: 136, column: 15, scope: !78)
!665 = !DILocation(line: 137, column: 17, scope: !78)
!666 = !DILocation(line: 137, column: 3, scope: !78)
!667 = !DILocation(line: 137, column: 15, scope: !78)
!668 = !DILocation(line: 138, column: 1, scope: !78)
!669 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nuc", arg: 1, scope: !82, file: !14, line: 194, type: !11)
!670 = !DILocation(line: 194, column: 26, scope: !82)
!671 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "E", arg: 2, scope: !82, file: !14, line: 194, type: !23)
!672 = !DILocation(line: 194, column: 38, scope: !82)
!673 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "input", arg: 3, scope: !82, file: !14, line: 194, type: !24)
!674 = !DILocation(line: 194, column: 47, scope: !82)
!675 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 4, scope: !82, file: !14, line: 194, type: !36)
!676 = !DILocation(line: 194, column: 67, scope: !82)
!677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "sigTfactors", arg: 5, scope: !82, file: !14, line: 194, type: !75)
!678 = !DILocation(line: 194, column: 89, scope: !82)
!679 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "phi", scope: !82, file: !14, line: 195, type: !23)
!680 = !DILocation(line: 195, column: 10, scope: !82)
!681 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !682, file: !14, line: 197, type: !11)
!682 = distinct !DILexicalBlock(scope: !82, file: !14, line: 197, column: 3)
!683 = !DILocation(line: 197, column: 12, scope: !682)
!684 = !DILocation(line: 197, column: 8, scope: !682)
!685 = !DILocation(line: 197, column: 19, scope: !686)
!686 = !DILexicalBlockFile(scope: !687, file: !14, discriminator: 2)
!687 = !DILexicalBlockFile(scope: !688, file: !14, discriminator: 1)
!688 = distinct !DILexicalBlock(scope: !682, file: !14, line: 197, column: 3)
!689 = !DILocation(line: 197, column: 29, scope: !688)
!690 = !DILocation(line: 197, column: 21, scope: !688)
!691 = !DILocation(line: 197, column: 3, scope: !682)
!692 = !DILocation(line: 198, column: 33, scope: !693)
!693 = distinct !DILexicalBlock(scope: !688, file: !14, line: 197, column: 40)
!694 = !DILocation(line: 198, column: 11, scope: !693)
!695 = !DILocation(line: 198, column: 28, scope: !693)
!696 = !DILocation(line: 198, column: 16, scope: !693)
!697 = !DILocation(line: 198, column: 43, scope: !693)
!698 = !DILocation(line: 198, column: 38, scope: !693)
!699 = !DILocation(line: 198, column: 36, scope: !693)
!700 = !DILocation(line: 198, column: 9, scope: !693)
!701 = !DILocation(line: 200, column: 9, scope: !702)
!702 = distinct !DILexicalBlock(scope: !693, file: !14, line: 200, column: 9)
!703 = !DILocation(line: 200, column: 11, scope: !702)
!704 = !DILocation(line: 200, column: 9, scope: !693)
!705 = !DILocation(line: 201, column: 20, scope: !702)
!706 = !DILocation(line: 201, column: 15, scope: !702)
!707 = !DILocation(line: 201, column: 14, scope: !702)
!708 = !DILocation(line: 201, column: 11, scope: !702)
!709 = !DILocation(line: 201, column: 7, scope: !702)
!710 = !DILocation(line: 202, column: 14, scope: !711)
!711 = distinct !DILexicalBlock(scope: !702, file: !14, line: 202, column: 14)
!712 = !DILocation(line: 202, column: 16, scope: !711)
!713 = !DILocation(line: 202, column: 14, scope: !702)
!714 = !DILocation(line: 203, column: 25, scope: !711)
!715 = !DILocation(line: 203, column: 23, scope: !711)
!716 = !DILocation(line: 203, column: 38, scope: !711)
!717 = !DILocation(line: 203, column: 44, scope: !711)
!718 = !DILocation(line: 203, column: 42, scope: !711)
!719 = !DILocation(line: 203, column: 36, scope: !711)
!720 = !DILocation(line: 203, column: 29, scope: !711)
!721 = !DILocation(line: 203, column: 14, scope: !711)
!722 = !DILocation(line: 203, column: 11, scope: !711)
!723 = !DILocation(line: 203, column: 7, scope: !711)
!724 = !DILocation(line: 204, column: 14, scope: !725)
!725 = distinct !DILexicalBlock(scope: !711, file: !14, line: 204, column: 14)
!726 = !DILocation(line: 204, column: 16, scope: !725)
!727 = !DILocation(line: 204, column: 14, scope: !711)
!728 = !DILocation(line: 205, column: 19, scope: !725)
!729 = !DILocation(line: 205, column: 33, scope: !725)
!730 = !DILocation(line: 205, column: 39, scope: !725)
!731 = !DILocation(line: 205, column: 37, scope: !725)
!732 = !DILocation(line: 205, column: 31, scope: !725)
!733 = !DILocation(line: 205, column: 23, scope: !725)
!734 = !DILocation(line: 205, column: 60, scope: !725)
!735 = !DILocation(line: 205, column: 58, scope: !725)
!736 = !DILocation(line: 205, column: 66, scope: !725)
!737 = !DILocation(line: 205, column: 64, scope: !725)
!738 = !DILocation(line: 205, column: 52, scope: !725)
!739 = !DILocation(line: 205, column: 44, scope: !725)
!740 = !DILocation(line: 205, column: 14, scope: !725)
!741 = !DILocation(line: 205, column: 11, scope: !725)
!742 = !DILocation(line: 205, column: 7, scope: !725)
!743 = !DILocation(line: 207, column: 9, scope: !693)
!744 = !DILocation(line: 209, column: 26, scope: !693)
!745 = !DILocation(line: 209, column: 22, scope: !693)
!746 = !DILocation(line: 209, column: 37, scope: !693)
!747 = !DILocation(line: 209, column: 33, scope: !693)
!748 = !DILocation(line: 209, column: 42, scope: !693)
!749 = !DILocation(line: 209, column: 31, scope: !693)
!750 = !DILocation(line: 209, column: 17, scope: !693)
!751 = !DILocation(line: 209, column: 5, scope: !693)
!752 = !DILocation(line: 209, column: 20, scope: !693)
!753 = !DILocation(line: 210, column: 3, scope: !693)
!754 = !DILocation(line: 197, column: 36, scope: !688)
!755 = !DILocation(line: 197, column: 3, scope: !688)
!756 = !DILocation(line: 211, column: 1, scope: !82)
