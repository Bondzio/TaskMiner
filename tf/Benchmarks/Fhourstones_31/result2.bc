; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hashentry = type { i64 }

@nplies = common global i32 0, align 4
@color = common global [2 x i64] zeroinitializer, align 16
@height = common global [7 x i8] zeroinitializer, align 1
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@moves = common global [42 x i32] zeroinitializer, align 16
@ht = common global %struct.hashentry* null, align 8
@posed = common global i64 0, align 8
@lock = common global i32 0, align 4
@htindex = common global i32 0, align 4
@.str.1 = private unnamed_addr constant [45 x i8] c"- %5.3f  < %5.3f  = %5.3f  > %5.3f  + %5.3f\0A\00", align 1
@millisecs.Time = internal global i64 0, align 8
@history = common global [2 x [49 x i32]] zeroinitializer, align 16
@nodes = common global i64 0, align 8
@.str.2 = private unnamed_addr constant [6 x i8] c"%c%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"#-<=>+\00", align 1
@msecs = common global i64 0, align 8
@.str.4 = private unnamed_addr constant [20 x i8] c"Fhourstones 3.1 (C)\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"Boardsize = %dx%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"Using %d transposition table entries.\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"\0ASolving %d-ply position after \00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c" . . .\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"score = %d (%c)  work = %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @reset() #0 {
entry:
  store i32 0, i32* @nplies, align 4, !dbg !95
  store i64 0, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @color, i32 0, i64 1), align 8, !dbg !96
  store i64 0, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @color, i32 0, i64 0), align 8, !dbg !97
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !98, metadata !99), !dbg !100
  br label %for.cond, !dbg !101

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 7, !dbg !103
  %heightLD = load [7 x i8], [7 x i8]* @height
  %heightLD4 = load [7 x i8], [7 x i8]* @height
  br i1 %cmp, label %for.body, label %for.end, !dbg !105

for.body:                                         ; preds = %for.cond
  %mul = mul nsw i32 7, %i.0, !dbg !106
  %conv = trunc i32 %mul to i8, !dbg !107
  %idxprom = sext i32 %i.0 to i64, !dbg !108
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom, !dbg !108
  store i8 %conv, i8* %arrayidx, align 1, !dbg !109
  br label %for.inc, !dbg !108

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !110
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !98, metadata !99), !dbg !100
  br label %for.cond, !dbg !111

for.end:                                          ; preds = %for.cond
  ret void, !dbg !112
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i64 @positioncode() #0 {
entry:
  %tmp = load i32, i32* @nplies, align 4, !dbg !113
  %and = and i32 %tmp, 1, !dbg !114
  %idxprom = sext i32 %and to i64, !dbg !115
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom, !dbg !115
  %tmp1 = load i64, i64* %arrayidx, align 8, !dbg !115
  %tmp2 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @color, i32 0, i64 0), align 8, !dbg !116
  %add = add i64 %tmp1, %tmp2, !dbg !117
  %tmp3 = load i64, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @color, i32 0, i64 1), align 8, !dbg !118
  %add1 = add i64 %add, %tmp3, !dbg !119
  %add2 = add i64 %add1, 4432676798593, !dbg !120
  ret i64 %add2, !dbg !121
}

; Function Attrs: nounwind uwtable
define void @printMoves() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !122, metadata !99), !dbg !123
  br label %for.cond, !dbg !124

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %tmp1 = load i32, i32* @nplies, align 4, !dbg !126
  %cmp = icmp slt i32 %i.0, %tmp1, !dbg !128
  br i1 %cmp, label %for.body, label %for.end, !dbg !129

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !130
  %arrayidx = getelementptr inbounds [42 x i32], [42 x i32]* @moves, i32 0, i64 %idxprom, !dbg !130
  %tmp3 = load i32, i32* %arrayidx, align 4, !dbg !130
  %add = add nsw i32 1, %tmp3, !dbg !131
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %add), !dbg !132
  br label %for.inc, !dbg !132

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !133
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !122, metadata !99), !dbg !123
  br label %for.cond, !dbg !134

for.end:                                          ; preds = %for.cond
  ret void, !dbg !135
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @islegal(i64 %newboard) #0 {
entry:
  call void @llvm.dbg.value(metadata i64 %newboard, i64 0, metadata !136, metadata !99), !dbg !137
  %and = and i64 %newboard, 283691315109952, !dbg !138
  %cmp = icmp eq i64 %and, 0, !dbg !139
  %conv = zext i1 %cmp to i32, !dbg !139
  ret i32 %conv, !dbg !140
}

; Function Attrs: nounwind uwtable
define i32 @isplayable(i32 %col) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %col, i64 0, metadata !141, metadata !99), !dbg !142
  %tmp = load i32, i32* @nplies, align 4, !dbg !143
  %and = and i32 %tmp, 1, !dbg !144
  %idxprom = sext i32 %and to i64, !dbg !145
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom, !dbg !145
  %tmp1 = load i64, i64* %arrayidx, align 8, !dbg !145
  %idxprom1 = sext i32 %col to i64, !dbg !146
  %arrayidx2 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom1, !dbg !146
  %tmp3 = load i8, i8* %arrayidx2, align 1, !dbg !146
  %conv = sext i8 %tmp3 to i32, !dbg !146
  %sh_prom = zext i32 %conv to i64, !dbg !147
  %shl = shl i64 1, %sh_prom, !dbg !147
  %or = or i64 %tmp1, %shl, !dbg !148
  %call = call i32 @islegal(i64 %or), !dbg !149
  ret i32 %call, !dbg !150
}

; Function Attrs: nounwind uwtable
define i32 @haswon(i64 %newboard) #0 {
entry:
  call void @llvm.dbg.value(metadata i64 %newboard, i64 0, metadata !151, metadata !99), !dbg !152
  %shr = lshr i64 %newboard, 6, !dbg !153
  %and = and i64 %newboard, %shr, !dbg !154
  call void @llvm.dbg.value(metadata i64 %and, i64 0, metadata !155, metadata !99), !dbg !156
  %shr1 = lshr i64 %and, 12, !dbg !157
  %and2 = and i64 %and, %shr1, !dbg !159
  %cmp = icmp ne i64 %and2, 0, !dbg !160
  br i1 %cmp, label %if.then, label %if.end, !dbg !161

if.then:                                          ; preds = %entry
  br label %return, !dbg !162

if.end:                                           ; preds = %entry
  %shr3 = lshr i64 %newboard, 7, !dbg !163
  %and4 = and i64 %newboard, %shr3, !dbg !164
  call void @llvm.dbg.value(metadata i64 %and4, i64 0, metadata !155, metadata !99), !dbg !156
  %shr5 = lshr i64 %and4, 14, !dbg !165
  %and6 = and i64 %and4, %shr5, !dbg !167
  %cmp7 = icmp ne i64 %and6, 0, !dbg !168
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !169

if.then.8:                                        ; preds = %if.end
  br label %return, !dbg !170

if.end.9:                                         ; preds = %if.end
  %shr10 = lshr i64 %newboard, 8, !dbg !171
  %and11 = and i64 %newboard, %shr10, !dbg !172
  call void @llvm.dbg.value(metadata i64 %and11, i64 0, metadata !155, metadata !99), !dbg !156
  %shr12 = lshr i64 %and11, 16, !dbg !173
  %and13 = and i64 %and11, %shr12, !dbg !175
  %cmp14 = icmp ne i64 %and13, 0, !dbg !176
  br i1 %cmp14, label %if.then.15, label %if.end.16, !dbg !177

if.then.15:                                       ; preds = %if.end.9
  br label %return, !dbg !178

if.end.16:                                        ; preds = %if.end.9
  %shr17 = lshr i64 %newboard, 1, !dbg !179
  %and18 = and i64 %newboard, %shr17, !dbg !180
  call void @llvm.dbg.value(metadata i64 %and18, i64 0, metadata !155, metadata !99), !dbg !156
  %shr19 = lshr i64 %and18, 2, !dbg !181
  %and20 = and i64 %and18, %shr19, !dbg !182
  %cmp21 = icmp ne i64 %and20, 0, !dbg !183
  %conv = zext i1 %cmp21 to i32, !dbg !183
  br label %return, !dbg !184

return:                                           ; preds = %if.end.16, %if.then.15, %if.then.8, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 1, %if.then.8 ], [ 1, %if.then.15 ], [ %conv, %if.end.16 ]
  ret i32 %retval.0, !dbg !185
}

; Function Attrs: nounwind uwtable
define i32 @islegalhaswon(i64 %newboard) #0 {
entry:
  call void @llvm.dbg.value(metadata i64 %newboard, i64 0, metadata !186, metadata !99), !dbg !187
  %call = call i32 @islegal(i64 %newboard), !dbg !188
  %tobool = icmp ne i32 %call, 0, !dbg !188
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !189

land.rhs:                                         ; preds = %entry
  %call1 = call i32 @haswon(i64 %newboard), !dbg !190
  %tobool2 = icmp ne i32 %call1, 0, !dbg !189
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %tmp2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %tmp2 to i32, !dbg !191
  ret i32 %land.ext, !dbg !193
}

; Function Attrs: nounwind uwtable
define void @backmove() #0 {
entry:
  %tmp = load i32, i32* @nplies, align 4, !dbg !194
  %dec = add nsw i32 %tmp, -1, !dbg !194
  store i32 %dec, i32* @nplies, align 4, !dbg !194
  %idxprom = sext i32 %dec to i64, !dbg !195
  %arrayidx = getelementptr inbounds [42 x i32], [42 x i32]* @moves, i32 0, i64 %idxprom, !dbg !195
  %tmp1 = load i32, i32* %arrayidx, align 4, !dbg !195
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !196, metadata !99), !dbg !197
  %idxprom1 = sext i32 %tmp1 to i64, !dbg !198
  %arrayidx2 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom1, !dbg !198
  %tmp3 = load i8, i8* %arrayidx2, align 1, !dbg !199
  %dec3 = add i8 %tmp3, -1, !dbg !199
  store i8 %dec3, i8* %arrayidx2, align 1, !dbg !199
  %conv = sext i8 %dec3 to i32, !dbg !199
  %sh_prom = zext i32 %conv to i64, !dbg !200
  %shl = shl i64 1, %sh_prom, !dbg !200
  %tmp4 = load i32, i32* @nplies, align 4, !dbg !201
  %and = and i32 %tmp4, 1, !dbg !202
  %idxprom4 = sext i32 %and to i64, !dbg !203
  %arrayidx5 = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom4, !dbg !203
  %tmp5 = load i64, i64* %arrayidx5, align 8, !dbg !204
  %xor = xor i64 %tmp5, %shl, !dbg !204
  store i64 %xor, i64* %arrayidx5, align 8, !dbg !204
  ret void, !dbg !205
}

; Function Attrs: nounwind uwtable
define void @makemove(i32 %n) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !206, metadata !99), !dbg !207
  %idxprom = sext i32 %n to i64, !dbg !208
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom, !dbg !208
  %tmp1 = load i8, i8* %arrayidx, align 1, !dbg !209
  %inc = add i8 %tmp1, 1, !dbg !209
  store i8 %inc, i8* %arrayidx, align 1, !dbg !209
  %conv = sext i8 %tmp1 to i32, !dbg !208
  %sh_prom = zext i32 %conv to i64, !dbg !210
  %shl = shl i64 1, %sh_prom, !dbg !210
  %tmp2 = load i32, i32* @nplies, align 4, !dbg !211
  %and = and i32 %tmp2, 1, !dbg !212
  %idxprom1 = sext i32 %and to i64, !dbg !213
  %arrayidx2 = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom1, !dbg !213
  %tmp3 = load i64, i64* %arrayidx2, align 8, !dbg !214
  %xor = xor i64 %tmp3, %shl, !dbg !214
  store i64 %xor, i64* %arrayidx2, align 8, !dbg !214
  %tmp5 = load i32, i32* @nplies, align 4, !dbg !215
  %inc3 = add nsw i32 %tmp5, 1, !dbg !215
  store i32 %inc3, i32* @nplies, align 4, !dbg !215
  %idxprom4 = sext i32 %tmp5 to i64, !dbg !216
  %arrayidx5 = getelementptr inbounds [42 x i32], [42 x i32]* @moves, i32 0, i64 %idxprom4, !dbg !216
  store i32 %n, i32* %arrayidx5, align 4, !dbg !217
  ret void, !dbg !218
}

; Function Attrs: nounwind uwtable
define void @trans_init() #0 {
entry:
  %call = call noalias i8* @calloc(i64 8306069, i64 8) #4, !dbg !219
  %tmp = bitcast i8* %call to %struct.hashentry*, !dbg !220
  store %struct.hashentry* %tmp, %struct.hashentry** @ht, align 8, !dbg !221
  ret void, !dbg !222
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

; Function Attrs: nounwind uwtable
define void @emptyTT() #0 {
entry:
  %.compoundliteral = alloca %struct.hashentry, align 4
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !223, metadata !99), !dbg !224
  br label %for.cond, !dbg !225

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8306069, !dbg !227
  %0 = icmp ult %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umin = select i1 %0, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %1 = icmp ult %struct.hashentry* %.compoundliteral, %umin, !dbg !229
  %umin11 = select i1 %1, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin, !dbg !229
  %2 = icmp ult %struct.hashentry* %.compoundliteral, %umin11, !dbg !229
  %umin12 = select i1 %2, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin11, !dbg !229
  %3 = icmp ult %struct.hashentry* %.compoundliteral, %umin12, !dbg !229
  %umin13 = select i1 %3, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin12, !dbg !229
  %4 = icmp ult %struct.hashentry* %.compoundliteral, %umin13, !dbg !229
  %umin14 = select i1 %4, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin13, !dbg !229
  %5 = icmp ult %struct.hashentry* %.compoundliteral, %umin14, !dbg !229
  %umin15 = select i1 %5, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin14, !dbg !229
  %6 = icmp ult %struct.hashentry* %.compoundliteral, %umin15, !dbg !229
  %umin16 = select i1 %6, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin15, !dbg !229
  %7 = icmp ult %struct.hashentry* %.compoundliteral, %umin16, !dbg !229
  %umin17 = select i1 %7, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin16, !dbg !229
  %8 = icmp ult %struct.hashentry* %.compoundliteral, %umin17, !dbg !229
  %umin18 = select i1 %8, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin17, !dbg !229
  %9 = icmp ugt %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umax = select i1 %9, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %10 = icmp ugt %struct.hashentry* %.compoundliteral, %umax, !dbg !229
  %umax19 = select i1 %10, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax, !dbg !229
  %11 = icmp ugt %struct.hashentry* %.compoundliteral, %umax19, !dbg !229
  %umax20 = select i1 %11, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax19, !dbg !229
  %12 = icmp ugt %struct.hashentry* %.compoundliteral, %umax20, !dbg !229
  %umax21 = select i1 %12, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax20, !dbg !229
  %13 = icmp ugt %struct.hashentry* %.compoundliteral, %umax21, !dbg !229
  %umax22 = select i1 %13, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax21, !dbg !229
  %14 = icmp ugt %struct.hashentry* %.compoundliteral, %umax22, !dbg !229
  %umax23 = select i1 %14, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax22, !dbg !229
  %15 = icmp ugt %struct.hashentry* %.compoundliteral, %umax23, !dbg !229
  %umax24 = select i1 %15, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax23, !dbg !229
  %16 = icmp ugt %struct.hashentry* %.compoundliteral, %umax24, !dbg !229
  %umax25 = select i1 %16, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax24, !dbg !229
  %17 = icmp ugt %struct.hashentry* %.compoundliteral, %umax25, !dbg !229
  %umax26 = select i1 %17, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax25, !dbg !229
  %umax2627 = ptrtoint %struct.hashentry* %umax26 to i64
  %18 = add i64 %umax2627, 8, !dbg !229
  %19 = icmp ult %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umin28 = select i1 %19, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %20 = icmp ult %struct.hashentry* %.compoundliteral, %umin28, !dbg !229
  %umin29 = select i1 %20, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin28, !dbg !229
  %21 = icmp ult %struct.hashentry* %.compoundliteral, %umin29, !dbg !229
  %umin30 = select i1 %21, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin29, !dbg !229
  %22 = icmp ult %struct.hashentry* %.compoundliteral, %umin30, !dbg !229
  %umin31 = select i1 %22, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin30, !dbg !229
  %23 = icmp ult %struct.hashentry* %.compoundliteral, %umin31, !dbg !229
  %umin32 = select i1 %23, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin31, !dbg !229
  %24 = icmp ult %struct.hashentry* %.compoundliteral, %umin32, !dbg !229
  %umin33 = select i1 %24, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin32, !dbg !229
  %25 = icmp ult %struct.hashentry* %.compoundliteral, %umin33, !dbg !229
  %umin34 = select i1 %25, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin33, !dbg !229
  %26 = icmp ult %struct.hashentry* %.compoundliteral, %umin34, !dbg !229
  %umin35 = select i1 %26, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin34, !dbg !229
  %27 = icmp ult %struct.hashentry* %.compoundliteral, %umin35, !dbg !229
  %umin36 = select i1 %27, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin35, !dbg !229
  %28 = icmp ugt %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umax37 = select i1 %28, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %29 = icmp ugt %struct.hashentry* %.compoundliteral, %umax37, !dbg !229
  %umax38 = select i1 %29, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax37, !dbg !229
  %30 = icmp ugt %struct.hashentry* %.compoundliteral, %umax38, !dbg !229
  %umax39 = select i1 %30, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax38, !dbg !229
  %31 = icmp ugt %struct.hashentry* %.compoundliteral, %umax39, !dbg !229
  %umax40 = select i1 %31, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax39, !dbg !229
  %32 = icmp ugt %struct.hashentry* %.compoundliteral, %umax40, !dbg !229
  %umax41 = select i1 %32, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax40, !dbg !229
  %33 = icmp ugt %struct.hashentry* %.compoundliteral, %umax41, !dbg !229
  %umax42 = select i1 %33, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax41, !dbg !229
  %34 = icmp ugt %struct.hashentry* %.compoundliteral, %umax42, !dbg !229
  %umax43 = select i1 %34, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax42, !dbg !229
  %35 = icmp ugt %struct.hashentry* %.compoundliteral, %umax43, !dbg !229
  %umax44 = select i1 %35, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax43, !dbg !229
  %36 = icmp ugt %struct.hashentry* %.compoundliteral, %umax44, !dbg !229
  %umax45 = select i1 %36, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax44, !dbg !229
  %umax4546 = ptrtoint %struct.hashentry* %umax45 to i64
  %37 = add i64 %umax4546, 8, !dbg !229
  %38 = icmp ult %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umin47 = select i1 %38, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %39 = icmp ult %struct.hashentry* %.compoundliteral, %umin47, !dbg !229
  %umin48 = select i1 %39, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin47, !dbg !229
  %40 = icmp ult %struct.hashentry* %.compoundliteral, %umin48, !dbg !229
  %umin49 = select i1 %40, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin48, !dbg !229
  %41 = icmp ult %struct.hashentry* %.compoundliteral, %umin49, !dbg !229
  %umin50 = select i1 %41, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin49, !dbg !229
  %42 = icmp ult %struct.hashentry* %.compoundliteral, %umin50, !dbg !229
  %umin51 = select i1 %42, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin50, !dbg !229
  %43 = icmp ult %struct.hashentry* %.compoundliteral, %umin51, !dbg !229
  %umin52 = select i1 %43, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin51, !dbg !229
  %44 = icmp ult %struct.hashentry* %.compoundliteral, %umin52, !dbg !229
  %umin53 = select i1 %44, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin52, !dbg !229
  %45 = icmp ult %struct.hashentry* %.compoundliteral, %umin53, !dbg !229
  %umin54 = select i1 %45, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin53, !dbg !229
  %46 = icmp ult %struct.hashentry* %.compoundliteral, %umin54, !dbg !229
  %umin55 = select i1 %46, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin54, !dbg !229
  %47 = icmp ugt %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umax56 = select i1 %47, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %48 = icmp ugt %struct.hashentry* %.compoundliteral, %umax56, !dbg !229
  %umax57 = select i1 %48, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax56, !dbg !229
  %49 = icmp ugt %struct.hashentry* %.compoundliteral, %umax57, !dbg !229
  %umax58 = select i1 %49, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax57, !dbg !229
  %50 = icmp ugt %struct.hashentry* %.compoundliteral, %umax58, !dbg !229
  %umax59 = select i1 %50, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax58, !dbg !229
  %51 = icmp ugt %struct.hashentry* %.compoundliteral, %umax59, !dbg !229
  %umax60 = select i1 %51, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax59, !dbg !229
  %52 = icmp ugt %struct.hashentry* %.compoundliteral, %umax60, !dbg !229
  %umax61 = select i1 %52, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax60, !dbg !229
  %53 = icmp ugt %struct.hashentry* %.compoundliteral, %umax61, !dbg !229
  %umax62 = select i1 %53, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax61, !dbg !229
  %54 = icmp ugt %struct.hashentry* %.compoundliteral, %umax62, !dbg !229
  %umax63 = select i1 %54, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax62, !dbg !229
  %55 = icmp ugt %struct.hashentry* %.compoundliteral, %umax63, !dbg !229
  %umax64 = select i1 %55, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax63, !dbg !229
  %umax6465 = ptrtoint %struct.hashentry* %umax64 to i64
  %56 = add i64 %umax6465, 8, !dbg !229
  %57 = icmp ult %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umin66 = select i1 %57, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %58 = icmp ult %struct.hashentry* %.compoundliteral, %umin66, !dbg !229
  %umin67 = select i1 %58, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin66, !dbg !229
  %59 = icmp ult %struct.hashentry* %.compoundliteral, %umin67, !dbg !229
  %umin68 = select i1 %59, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin67, !dbg !229
  %60 = icmp ult %struct.hashentry* %.compoundliteral, %umin68, !dbg !229
  %umin69 = select i1 %60, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin68, !dbg !229
  %61 = icmp ult %struct.hashentry* %.compoundliteral, %umin69, !dbg !229
  %umin70 = select i1 %61, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin69, !dbg !229
  %62 = icmp ult %struct.hashentry* %.compoundliteral, %umin70, !dbg !229
  %umin71 = select i1 %62, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin70, !dbg !229
  %63 = icmp ult %struct.hashentry* %.compoundliteral, %umin71, !dbg !229
  %umin72 = select i1 %63, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin71, !dbg !229
  %64 = icmp ult %struct.hashentry* %.compoundliteral, %umin72, !dbg !229
  %umin73 = select i1 %64, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin72, !dbg !229
  %65 = icmp ult %struct.hashentry* %.compoundliteral, %umin73, !dbg !229
  %umin74 = select i1 %65, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umin73, !dbg !229
  %66 = icmp ugt %struct.hashentry* %.compoundliteral, %.compoundliteral, !dbg !229
  %umax75 = select i1 %66, %struct.hashentry* %.compoundliteral, %struct.hashentry* %.compoundliteral, !dbg !229
  %67 = icmp ugt %struct.hashentry* %.compoundliteral, %umax75, !dbg !229
  %umax76 = select i1 %67, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax75, !dbg !229
  %68 = icmp ugt %struct.hashentry* %.compoundliteral, %umax76, !dbg !229
  %umax77 = select i1 %68, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax76, !dbg !229
  %69 = icmp ugt %struct.hashentry* %.compoundliteral, %umax77, !dbg !229
  %umax78 = select i1 %69, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax77, !dbg !229
  %70 = icmp ugt %struct.hashentry* %.compoundliteral, %umax78, !dbg !229
  %umax79 = select i1 %70, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax78, !dbg !229
  %71 = icmp ugt %struct.hashentry* %.compoundliteral, %umax79, !dbg !229
  %umax80 = select i1 %71, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax79, !dbg !229
  %72 = icmp ugt %struct.hashentry* %.compoundliteral, %umax80, !dbg !229
  %umax81 = select i1 %72, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax80, !dbg !229
  %73 = icmp ugt %struct.hashentry* %.compoundliteral, %umax81, !dbg !229
  %umax82 = select i1 %73, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax81, !dbg !229
  %74 = icmp ugt %struct.hashentry* %.compoundliteral, %umax82, !dbg !229
  %umax83 = select i1 %74, %struct.hashentry* %.compoundliteral, %struct.hashentry* %umax82, !dbg !229
  %umax8384 = ptrtoint %struct.hashentry* %umax83 to i64
  %75 = add i64 %umax8384, 8, !dbg !229
  br i1 %cmp, label %for.body, label %for.end, !dbg !229

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !230
  %tmp2 = load %struct.hashentry*, %struct.hashentry** @ht, align 8, !dbg !230
  %arrayidx = getelementptr inbounds %struct.hashentry, %struct.hashentry* %tmp2, i64 %idxprom, !dbg !230
  %tmp3 = bitcast %struct.hashentry* %.compoundliteral to i64*, !dbg !232
  %bf.load = load i64, i64* %tmp3, align 4, !dbg !232
  %bf.clear = and i64 %bf.load, -67108864, !dbg !232
  store i64 %bf.clear, i64* %tmp3, align 4, !dbg !232
  %tmp4 = bitcast %struct.hashentry* %.compoundliteral to i64*, !dbg !232
  %bf.load1 = load i64, i64* %tmp4, align 4, !dbg !232
  %bf.clear2 = and i64 %bf.load1, -4227858433, !dbg !232
  store i64 %bf.clear2, i64* %tmp4, align 4, !dbg !232
  %tmp5 = bitcast %struct.hashentry* %.compoundliteral to i64*, !dbg !232
  %bf.load3 = load i64, i64* %tmp5, align 4, !dbg !232
  %bf.clear4 = and i64 %bf.load3, -288230371856744449, !dbg !232
  store i64 %bf.clear4, i64* %tmp5, align 4, !dbg !232
  %tmp6 = bitcast %struct.hashentry* %.compoundliteral to i64*, !dbg !232
  %bf.load5 = load i64, i64* %tmp6, align 4, !dbg !232
  %bf.clear6 = and i64 %bf.load5, -2017612633061982209, !dbg !232
  store i64 %bf.clear6, i64* %tmp6, align 4, !dbg !232
  %tmp7 = bitcast %struct.hashentry* %.compoundliteral to i64*, !dbg !232
  %bf.load7 = load i64, i64* %tmp7, align 4, !dbg !232
  %bf.clear8 = and i64 %bf.load7, 2305843009213693951, !dbg !232
  store i64 %bf.clear8, i64* %tmp7, align 4, !dbg !232
  %tmp8 = bitcast %struct.hashentry* %arrayidx to i8*, !dbg !233
  %tmp9 = bitcast %struct.hashentry* %.compoundliteral to i8*, !dbg !233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp8, i8* %tmp9, i64 8, i32 4, i1 false), !dbg !233
  br label %for.inc, !dbg !234

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !235
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !223, metadata !99), !dbg !224
  br label %for.cond, !dbg !236

for.end:                                          ; preds = %for.cond
  store i64 0, i64* @posed, align 8, !dbg !237
  ret void, !dbg !238
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define void @hash() #0 {
entry:
  %call = call i64 @positioncode(), !dbg !239
  call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !240, metadata !99), !dbg !241
  %tmp = load i32, i32* @nplies, align 4, !dbg !242
  %cmp = icmp slt i32 %tmp, 10, !dbg !244
  br i1 %cmp, label %if.then, label %if.end.4, !dbg !245

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !246, metadata !99), !dbg !248
  call void @llvm.dbg.value(metadata i64 %call, i64 0, metadata !249, metadata !99), !dbg !250
  br label %for.cond, !dbg !251

for.cond:                                         ; preds = %for.inc, %if.then
  %htemp2.0 = phi i64 [ 0, %if.then ], [ %or, %for.inc ]
  %htmp.0 = phi i64 [ %call, %if.then ], [ %shr, %for.inc ]
  %cmp1 = icmp ne i64 %htmp.0, 0, !dbg !253
  br i1 %cmp1, label %for.body, label %for.end, !dbg !255

for.body:                                         ; preds = %for.cond
  %shl = shl i64 %htemp2.0, 7, !dbg !256
  %and = and i64 %htmp.0, 127, !dbg !257
  %or = or i64 %shl, %and, !dbg !258
  call void @llvm.dbg.value(metadata i64 %or, i64 0, metadata !246, metadata !99), !dbg !248
  br label %for.inc, !dbg !259

for.inc:                                          ; preds = %for.body
  %shr = lshr i64 %htmp.0, 7, !dbg !260
  call void @llvm.dbg.value(metadata i64 %shr, i64 0, metadata !249, metadata !99), !dbg !250
  br label %for.cond, !dbg !261

for.end:                                          ; preds = %for.cond
  %htemp2.0.lcssa = phi i64 [ %htemp2.0, %for.cond ]
  %cmp2 = icmp ult i64 %htemp2.0.lcssa, %call, !dbg !262
  br i1 %cmp2, label %if.then.3, label %if.end, !dbg !264

if.then.3:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata i64 %htemp2.0, i64 0, metadata !240, metadata !99), !dbg !241
  br label %if.end, !dbg !265

if.end:                                           ; preds = %if.then.3, %for.end
  %htemp.0 = phi i64 [ %htemp2.0.lcssa, %if.then.3 ], [ %call, %for.end ]
  br label %if.end.4, !dbg !266

if.end.4:                                         ; preds = %if.end, %entry
  %htemp.1 = phi i64 [ %htemp.0, %if.end ], [ %call, %entry ]
  %shr5 = lshr i64 %htemp.1, 23, !dbg !267
  %conv = trunc i64 %shr5 to i32, !dbg !268
  store i32 %conv, i32* @lock, align 4, !dbg !269
  %rem = urem i64 %htemp.1, 8306069, !dbg !270
  %conv6 = trunc i64 %rem to i32, !dbg !271
  store i32 %conv6, i32* @htindex, align 4, !dbg !272
  ret void, !dbg !273
}

; Function Attrs: nounwind uwtable
define i32 @transpose() #0 {
entry:
  %he = alloca %struct.hashentry, align 4
  call void @llvm.dbg.declare(metadata %struct.hashentry* %he, metadata !274, metadata !99), !dbg !275
  call void @llvm.dbg.declare(metadata !2, metadata !276, metadata !99), !dbg !277
  call void @llvm.dbg.declare(metadata !2, metadata !278, metadata !99), !dbg !279
  call void @hash(), !dbg !280
  %tmp = load i32, i32* @htindex, align 4, !dbg !281
  %idxprom = zext i32 %tmp to i64, !dbg !282
  %tmp1 = load %struct.hashentry*, %struct.hashentry** @ht, align 8, !dbg !282
  %arrayidx = getelementptr inbounds %struct.hashentry, %struct.hashentry* %tmp1, i64 %idxprom, !dbg !282
  %tmp2 = bitcast %struct.hashentry* %he to i8*, !dbg !282
  %tmp3 = bitcast %struct.hashentry* %arrayidx to i8*, !dbg !282
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp2, i8* %tmp3, i64 8, i32 4, i1 false), !dbg !282
  %tmp4 = bitcast %struct.hashentry* %he to i64*, !dbg !283
  %bf.load = load i64, i64* %tmp4, align 4, !dbg !283
  %bf.clear = and i64 %bf.load, 67108863, !dbg !283
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !283
  %tmp5 = load i32, i32* @lock, align 4, !dbg !285
  %cmp = icmp eq i32 %bf.cast, %tmp5, !dbg !286
  br i1 %cmp, label %if.then, label %if.end, !dbg !287

if.then:                                          ; preds = %entry
  %tmp6 = bitcast %struct.hashentry* %he to i64*, !dbg !288
  %bf.load1 = load i64, i64* %tmp6, align 4, !dbg !288
  %bf.lshr = lshr i64 %bf.load1, 61, !dbg !288
  %bf.cast2 = trunc i64 %bf.lshr to i32, !dbg !288
  br label %return, !dbg !289

if.end:                                           ; preds = %entry
  %tmp7 = bitcast %struct.hashentry* %he to i64*, !dbg !290
  %bf.load3 = load i64, i64* %tmp7, align 4, !dbg !290
  %bf.lshr4 = lshr i64 %bf.load3, 32, !dbg !290
  %bf.clear5 = and i64 %bf.lshr4, 67108863, !dbg !290
  %bf.cast6 = trunc i64 %bf.clear5 to i32, !dbg !290
  %tmp8 = load i32, i32* @lock, align 4, !dbg !292
  %cmp7 = icmp eq i32 %bf.cast6, %tmp8, !dbg !293
  br i1 %cmp7, label %if.then.8, label %if.end.13, !dbg !294

if.then.8:                                        ; preds = %if.end
  %tmp9 = bitcast %struct.hashentry* %he to i64*, !dbg !295
  %bf.load9 = load i64, i64* %tmp9, align 4, !dbg !295
  %bf.lshr10 = lshr i64 %bf.load9, 58, !dbg !295
  %bf.clear11 = and i64 %bf.lshr10, 7, !dbg !295
  %bf.cast12 = trunc i64 %bf.clear11 to i32, !dbg !295
  br label %return, !dbg !296

if.end.13:                                        ; preds = %if.end
  br label %return, !dbg !297

return:                                           ; preds = %if.end.13, %if.then.8, %if.then
  %retval.0 = phi i32 [ %bf.cast2, %if.then ], [ %bf.cast12, %if.then.8 ], [ 0, %if.end.13 ]
  ret i32 %retval.0, !dbg !298
}

; Function Attrs: nounwind uwtable
define void @transtore(i32 %x, i32 %lock, i32 %score, i32 %work) #0 {
entry:
  %he = alloca %struct.hashentry, align 4
  call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !299, metadata !99), !dbg !300
  call void @llvm.dbg.value(metadata i32 %lock, i64 0, metadata !301, metadata !99), !dbg !302
  call void @llvm.dbg.value(metadata i32 %score, i64 0, metadata !303, metadata !99), !dbg !304
  call void @llvm.dbg.value(metadata i32 %work, i64 0, metadata !305, metadata !99), !dbg !306
  call void @llvm.dbg.declare(metadata %struct.hashentry* %he, metadata !307, metadata !99), !dbg !308
  %tmp = load i64, i64* @posed, align 8, !dbg !309
  %inc = add i64 %tmp, 1, !dbg !309
  store i64 %inc, i64* @posed, align 8, !dbg !309
  %idxprom = sext i32 %x to i64, !dbg !310
  %tmp2 = load %struct.hashentry*, %struct.hashentry** @ht, align 8, !dbg !310
  %arrayidx = getelementptr inbounds %struct.hashentry, %struct.hashentry* %tmp2, i64 %idxprom, !dbg !310
  %tmp3 = bitcast %struct.hashentry* %he to i8*, !dbg !310
  %tmp4 = bitcast %struct.hashentry* %arrayidx to i8*, !dbg !310
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp3, i8* %tmp4, i64 8, i32 4, i1 false), !dbg !310
  %tmp5 = bitcast %struct.hashentry* %he to i64*, !dbg !311
  %bf.load = load i64, i64* %tmp5, align 4, !dbg !311
  %bf.clear = and i64 %bf.load, 67108863, !dbg !311
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !311
  %cmp = icmp eq i32 %bf.cast, %lock, !dbg !313
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !314

lor.lhs.false:                                    ; preds = %entry
  %tmp8 = bitcast %struct.hashentry* %he to i64*, !dbg !315
  %bf.load1 = load i64, i64* %tmp8, align 4, !dbg !315
  %bf.lshr = lshr i64 %bf.load1, 26, !dbg !315
  %bf.clear2 = and i64 %bf.lshr, 63, !dbg !315
  %bf.cast3 = trunc i64 %bf.clear2 to i32, !dbg !315
  %cmp4 = icmp sge i32 %work, %bf.cast3, !dbg !316
  br i1 %cmp4, label %if.then, label %if.else, !dbg !317

if.then:                                          ; preds = %lor.lhs.false, %entry
  %tmp10 = bitcast %struct.hashentry* %he to i64*, !dbg !318
  %tmp11 = zext i32 %lock to i64, !dbg !320
  %bf.load5 = load i64, i64* %tmp10, align 4, !dbg !320
  %bf.value = and i64 %tmp11, 67108863, !dbg !320
  %bf.clear6 = and i64 %bf.load5, -67108864, !dbg !320
  %bf.set = or i64 %bf.clear6, %bf.value, !dbg !320
  store i64 %bf.set, i64* %tmp10, align 4, !dbg !320
  %bf.result.cast = trunc i64 %bf.value to i32, !dbg !320
  %tmp13 = bitcast %struct.hashentry* %he to i64*, !dbg !321
  %tmp14 = zext i32 %score to i64, !dbg !322
  %bf.load7 = load i64, i64* %tmp13, align 4, !dbg !322
  %bf.value8 = and i64 %tmp14, 7, !dbg !322
  %bf.shl = shl i64 %bf.value8, 61, !dbg !322
  %bf.clear9 = and i64 %bf.load7, 2305843009213693951, !dbg !322
  %bf.set10 = or i64 %bf.clear9, %bf.shl, !dbg !322
  store i64 %bf.set10, i64* %tmp13, align 4, !dbg !322
  %bf.result.cast11 = trunc i64 %bf.value8 to i32, !dbg !322
  %tmp16 = bitcast %struct.hashentry* %he to i64*, !dbg !323
  %tmp17 = zext i32 %work to i64, !dbg !324
  %bf.load12 = load i64, i64* %tmp16, align 4, !dbg !324
  %bf.value13 = and i64 %tmp17, 63, !dbg !324
  %bf.shl14 = shl i64 %bf.value13, 26, !dbg !324
  %bf.clear15 = and i64 %bf.load12, -4227858433, !dbg !324
  %bf.set16 = or i64 %bf.clear15, %bf.shl14, !dbg !324
  store i64 %bf.set16, i64* %tmp16, align 4, !dbg !324
  %bf.result.cast17 = trunc i64 %bf.value13 to i32, !dbg !324
  br label %if.end, !dbg !325

if.else:                                          ; preds = %lor.lhs.false
  %tmp19 = bitcast %struct.hashentry* %he to i64*, !dbg !326
  %tmp20 = zext i32 %lock to i64, !dbg !328
  %bf.load18 = load i64, i64* %tmp19, align 4, !dbg !328
  %bf.value19 = and i64 %tmp20, 67108863, !dbg !328
  %bf.shl20 = shl i64 %bf.value19, 32, !dbg !328
  %bf.clear21 = and i64 %bf.load18, -288230371856744449, !dbg !328
  %bf.set22 = or i64 %bf.clear21, %bf.shl20, !dbg !328
  store i64 %bf.set22, i64* %tmp19, align 4, !dbg !328
  %bf.result.cast23 = trunc i64 %bf.value19 to i32, !dbg !328
  %tmp22 = bitcast %struct.hashentry* %he to i64*, !dbg !329
  %tmp23 = zext i32 %score to i64, !dbg !330
  %bf.load24 = load i64, i64* %tmp22, align 4, !dbg !330
  %bf.value25 = and i64 %tmp23, 7, !dbg !330
  %bf.shl26 = shl i64 %bf.value25, 58, !dbg !330
  %bf.clear27 = and i64 %bf.load24, -2017612633061982209, !dbg !330
  %bf.set28 = or i64 %bf.clear27, %bf.shl26, !dbg !330
  store i64 %bf.set28, i64* %tmp22, align 4, !dbg !330
  %bf.result.cast29 = trunc i64 %bf.value25 to i32, !dbg !330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %idxprom30 = sext i32 %x to i64, !dbg !331
  %tmp25 = load %struct.hashentry*, %struct.hashentry** @ht, align 8, !dbg !331
  %arrayidx31 = getelementptr inbounds %struct.hashentry, %struct.hashentry* %tmp25, i64 %idxprom30, !dbg !331
  %tmp26 = bitcast %struct.hashentry* %arrayidx31 to i8*, !dbg !332
  %tmp27 = bitcast %struct.hashentry* %he to i8*, !dbg !332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp26, i8* %tmp27, i64 8, i32 4, i1 false), !dbg !332
  ret void, !dbg !333
}

; Function Attrs: nounwind uwtable
define void @htstat() #0 {
entry:
  %typecnt = alloca [8 x i32], align 16
  %0 = ptrtoint [8 x i32]* %typecnt to i64
  %typecnt31 = ptrtoint [8 x i32]* %typecnt to i64
  %he = alloca %struct.hashentry, align 4
  call void @llvm.dbg.declare(metadata [8 x i32]* %typecnt, metadata !334, metadata !99), !dbg !338
  call void @llvm.dbg.declare(metadata %struct.hashentry* %he, metadata !339, metadata !99), !dbg !340
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !341, metadata !99), !dbg !342
  %1 = add i64 %typecnt31, 4, !dbg !343
  %2 = add i64 %typecnt31, 4, !dbg !343
  %3 = add i64 %0, 4, !dbg !343
  %4 = add i64 %0, 4, !dbg !343
  br label %for.cond, !dbg !345

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8, !dbg !346
  %5 = ptrtoint [8 x i32]* undef to i64, !dbg !343
  %6 = sub i64 %1, %0, !dbg !343
  %7 = ptrtoint [8 x i32]* %typecnt to i64, !dbg !343
  %8 = sub i64 %3, %7, !dbg !343
  br i1 %cmp, label %for.body, label %for.end, !dbg !343

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !348
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 %idxprom, !dbg !348
  store i32 0, i32* %arrayidx, align 4, !dbg !349
  br label %for.inc, !dbg !348

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !350
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !341, metadata !99), !dbg !342
  br label %for.cond, !dbg !351

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !341, metadata !99), !dbg !342
  br label %for.cond.1, !dbg !352

for.cond.1:                                       ; preds = %for.inc.26, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc27, %for.inc.26 ]
  %cmp2 = icmp slt i32 %i.1, 8306069, !dbg !354
  br i1 %cmp2, label %for.body.3, label %for.end.28, !dbg !356

for.body.3:                                       ; preds = %for.cond.1
  %idxprom4 = sext i32 %i.1 to i64, !dbg !357
  %tmp5 = load %struct.hashentry*, %struct.hashentry** @ht, align 8, !dbg !357
  %arrayidx5 = getelementptr inbounds %struct.hashentry, %struct.hashentry* %tmp5, i64 %idxprom4, !dbg !357
  %tmp6 = bitcast %struct.hashentry* %he to i8*, !dbg !357
  %tmp7 = bitcast %struct.hashentry* %arrayidx5 to i8*, !dbg !357
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp6, i8* %tmp7, i64 8, i32 4, i1 false), !dbg !357
  %tmp8 = bitcast %struct.hashentry* %he to i64*, !dbg !359
  %bf.load = load i64, i64* %tmp8, align 4, !dbg !359
  %bf.clear = and i64 %bf.load, 67108863, !dbg !359
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !359
  %cmp6 = icmp ne i32 %bf.cast, 0, !dbg !361
  br i1 %cmp6, label %if.then, label %if.end, !dbg !362

if.then:                                          ; preds = %for.body.3
  %tmp9 = bitcast %struct.hashentry* %he to i64*, !dbg !363
  %bf.load7 = load i64, i64* %tmp9, align 4, !dbg !363
  %bf.lshr = lshr i64 %bf.load7, 61, !dbg !363
  %bf.cast8 = trunc i64 %bf.lshr to i32, !dbg !363
  %idxprom9 = zext i32 %bf.cast8 to i64, !dbg !364
  %arrayidx10 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 %idxprom9, !dbg !364
  %tmp10 = load i32, i32* %arrayidx10, align 4, !dbg !365
  %inc11 = add nsw i32 %tmp10, 1, !dbg !365
  store i32 %inc11, i32* %arrayidx10, align 4, !dbg !365
  br label %if.end, !dbg !364

if.end:                                           ; preds = %if.then, %for.body.3
  %tmp11 = bitcast %struct.hashentry* %he to i64*, !dbg !366
  %bf.load12 = load i64, i64* %tmp11, align 4, !dbg !366
  %bf.lshr13 = lshr i64 %bf.load12, 32, !dbg !366
  %bf.clear14 = and i64 %bf.lshr13, 67108863, !dbg !366
  %bf.cast15 = trunc i64 %bf.clear14 to i32, !dbg !366
  %cmp16 = icmp ne i32 %bf.cast15, 0, !dbg !368
  br i1 %cmp16, label %if.then.17, label %if.end.25, !dbg !369

if.then.17:                                       ; preds = %if.end
  %tmp12 = bitcast %struct.hashentry* %he to i64*, !dbg !370
  %bf.load18 = load i64, i64* %tmp12, align 4, !dbg !370
  %bf.lshr19 = lshr i64 %bf.load18, 58, !dbg !370
  %bf.clear20 = and i64 %bf.lshr19, 7, !dbg !370
  %bf.cast21 = trunc i64 %bf.clear20 to i32, !dbg !370
  %idxprom22 = zext i32 %bf.cast21 to i64, !dbg !371
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 %idxprom22, !dbg !371
  %tmp13 = load i32, i32* %arrayidx23, align 4, !dbg !372
  %inc24 = add nsw i32 %tmp13, 1, !dbg !372
  store i32 %inc24, i32* %arrayidx23, align 4, !dbg !372
  br label %if.end.25, !dbg !371

if.end.25:                                        ; preds = %if.then.17, %if.end
  br label %for.inc.26, !dbg !373

for.inc.26:                                       ; preds = %if.end.25
  %inc27 = add nsw i32 %i.1, 1, !dbg !374
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !341, metadata !99), !dbg !342
  br label %for.cond.1, !dbg !375

for.end.28:                                       ; preds = %for.cond.1
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !376, metadata !99), !dbg !377
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !341, metadata !99), !dbg !342
  %scevgep = getelementptr [8 x i32], [8 x i32]* %typecnt, i64 0, i64 1, !dbg !378
  %scevgep34 = ptrtoint i32* %scevgep to i64
  %scevgep32 = getelementptr [8 x i32], [8 x i32]* %typecnt, i64 0, i64 1, !dbg !378
  %scevgep3233 = ptrtoint i32* %scevgep32 to i64
  %9 = add i64 %scevgep3233, 4, !dbg !380
  %10 = add i64 %scevgep3233, 4, !dbg !380
  %scevgep35 = getelementptr [8 x i32], [8 x i32]* %typecnt, i64 0, i64 1, !dbg !378
  %scevgep3538 = ptrtoint i32* %scevgep35 to i64
  %scevgep36 = getelementptr [8 x i32], [8 x i32]* %typecnt, i64 0, i64 1, !dbg !378
  %scevgep3637 = ptrtoint i32* %scevgep36 to i64
  %11 = add i64 %scevgep3637, 4, !dbg !380
  %12 = add i64 %scevgep3637, 4, !dbg !380
  br label %for.cond.29, !dbg !378

for.cond.29:                                      ; preds = %for.inc.34, %for.end.28
  %i.2 = phi i32 [ 1, %for.end.28 ], [ %inc35, %for.inc.34 ]
  %total.0 = phi i32 [ 0, %for.end.28 ], [ %add, %for.inc.34 ]
  %cmp30 = icmp sle i32 %i.2, 5, !dbg !381
  %13 = ptrtoint i32* %scevgep to i64, !dbg !380
  %14 = sub i64 %9, %13, !dbg !380
  %15 = ptrtoint i32* %scevgep35 to i64, !dbg !380
  %16 = sub i64 %11, %15, !dbg !380
  br i1 %cmp30, label %for.body.31, label %for.end.36, !dbg !380

for.body.31:                                      ; preds = %for.cond.29
  %idxprom32 = sext i32 %i.2 to i64, !dbg !383
  %arrayidx33 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 %idxprom32, !dbg !383
  %tmp17 = load i32, i32* %arrayidx33, align 4, !dbg !383
  %add = add nsw i32 %total.0, %tmp17, !dbg !384
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !376, metadata !99), !dbg !377
  br label %for.inc.34, !dbg !385

for.inc.34:                                       ; preds = %for.body.31
  %inc35 = add nsw i32 %i.2, 1, !dbg !386
  call void @llvm.dbg.value(metadata i32 %inc35, i64 0, metadata !341, metadata !99), !dbg !342
  br label %for.cond.29, !dbg !387

for.end.36:                                       ; preds = %for.cond.29
  %total.0.lcssa = phi i32 [ %total.0, %for.cond.29 ]
  %cmp37 = icmp sgt i32 %total.0.lcssa, 0, !dbg !388
  br i1 %cmp37, label %if.then.38, label %if.end.57, !dbg !390

if.then.38:                                       ; preds = %for.end.36
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 1, !dbg !391
  %tmp21 = load i32, i32* %arrayidx39, align 4, !dbg !391
  %conv = sitofp i32 %tmp21 to double, !dbg !391
  %conv40 = sitofp i32 %total.0.lcssa to double, !dbg !393
  %div = fdiv double %conv, %conv40, !dbg !394
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 2, !dbg !395
  %tmp23 = load i32, i32* %arrayidx41, align 4, !dbg !395
  %conv42 = sitofp i32 %tmp23 to double, !dbg !395
  %conv43 = sitofp i32 %total.0.lcssa to double, !dbg !396
  %div44 = fdiv double %conv42, %conv43, !dbg !397
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 3, !dbg !398
  %tmp25 = load i32, i32* %arrayidx45, align 4, !dbg !398
  %conv46 = sitofp i32 %tmp25 to double, !dbg !398
  %conv47 = sitofp i32 %total.0.lcssa to double, !dbg !399
  %div48 = fdiv double %conv46, %conv47, !dbg !400
  %arrayidx49 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 4, !dbg !401
  %tmp27 = load i32, i32* %arrayidx49, align 4, !dbg !401
  %conv50 = sitofp i32 %tmp27 to double, !dbg !401
  %conv51 = sitofp i32 %total.0.lcssa to double, !dbg !402
  %div52 = fdiv double %conv50, %conv51, !dbg !403
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %typecnt, i32 0, i64 5, !dbg !404
  %tmp29 = load i32, i32* %arrayidx53, align 4, !dbg !404
  %conv54 = sitofp i32 %tmp29 to double, !dbg !404
  %conv55 = sitofp i32 %total.0.lcssa to double, !dbg !405
  %div56 = fdiv double %conv54, %conv55, !dbg !406
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i32 0, i32 0), double %div, double %div44, double %div48, double %div52, double %div56), !dbg !407
  br label %if.end.57, !dbg !408

if.end.57:                                        ; preds = %if.then.38, %for.end.36
  ret void, !dbg !409
}

; Function Attrs: nounwind uwtable
define i64 @millisecs() #0 {
entry:
  %tmp = load i64, i64* @millisecs.Time, align 8, !dbg !410
  %inc = add nsw i64 %tmp, 1, !dbg !410
  store i64 %inc, i64* @millisecs.Time, align 8, !dbg !410
  ret i64 %tmp, !dbg !411
}

; Function Attrs: nounwind uwtable
define i32 @min(i32 %x, i32 %y) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !412, metadata !99), !dbg !413
  call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !414, metadata !99), !dbg !415
  %cmp = icmp slt i32 %x, %y, !dbg !416
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !417

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !417

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !417

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %x, %cond.true ], [ %y, %cond.false ], !dbg !417
  ret i32 %cond, !dbg !418
}

; Function Attrs: nounwind uwtable
define i32 @max(i32 %x, i32 %y) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %x, i64 0, metadata !421, metadata !99), !dbg !422
  call void @llvm.dbg.value(metadata i32 %y, i64 0, metadata !423, metadata !99), !dbg !424
  %cmp = icmp sgt i32 %x, %y, !dbg !425
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !426

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !426

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !426

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %x, %cond.true ], [ %y, %cond.false ], !dbg !426
  ret i32 %cond, !dbg !427
}

; Function Attrs: nounwind uwtable
define void @inithistory() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !430, metadata !99), !dbg !431
  br label %for.cond, !dbg !432

for.cond:                                         ; preds = %for.inc.47, %entry
  %side.0 = phi i32 [ 0, %entry ], [ %inc48, %for.inc.47 ]
  %cmp = icmp slt i32 %side.0, 2, !dbg !434
  %historyLD = load [2 x [49 x i32]], [2 x [49 x i32]]* @history
  %historyLD26 = load [2 x [49 x i32]], [2 x [49 x i32]]* @history
  br i1 %cmp, label %for.body, label %for.end.49, !dbg !436

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !437, metadata !99), !dbg !438
  br label %for.cond.1, !dbg !439

for.cond.1:                                       ; preds = %for.inc.44, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc45, %for.inc.44 ]
  %cmp2 = icmp slt i32 %i.0, 4, !dbg !441
  %historyLD24 = load [2 x [49 x i32]], [2 x [49 x i32]]* @history
  %historyLD27 = load [2 x [49 x i32]], [2 x [49 x i32]]* @history
  br i1 %cmp2, label %for.body.3, label %for.end.46, !dbg !443

for.body.3:                                       ; preds = %for.cond.1
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !444, metadata !99), !dbg !445
  br label %for.cond.4, !dbg !446

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %h.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %cmp5 = icmp slt i32 %h.0, 3, !dbg !448
  %historyLD25 = load [2 x [49 x i32]], [2 x [49 x i32]]* @history
  %historyLD28 = load [2 x [49 x i32]], [2 x [49 x i32]]* @history
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !450

for.body.6:                                       ; preds = %for.cond.4
  %call = call i32 @min(i32 3, i32 %i.0), !dbg !451
  %add = add nsw i32 4, %call, !dbg !452
  %call7 = call i32 @min(i32 3, i32 %h.0), !dbg !453
  %sub = sub nsw i32 3, %i.0, !dbg !454
  %call8 = call i32 @max(i32 0, i32 %sub), !dbg !455
  %sub9 = sub nsw i32 %call7, %call8, !dbg !456
  %call10 = call i32 @max(i32 -1, i32 %sub9), !dbg !457
  %add11 = add nsw i32 %add, %call10, !dbg !458
  %call12 = call i32 @min(i32 %i.0, i32 %h.0), !dbg !459
  %call13 = call i32 @min(i32 3, i32 %call12), !dbg !460
  %add14 = add nsw i32 %add11, %call13, !dbg !461
  %call15 = call i32 @min(i32 3, i32 %h.0), !dbg !462
  %add16 = add nsw i32 %add14, %call15, !dbg !463
  %sub17 = sub nsw i32 6, %i.0, !dbg !464
  %mul = mul nsw i32 7, %sub17, !dbg !465
  %add18 = add nsw i32 %mul, %h.0, !dbg !466
  %idxprom = sext i32 %add18 to i64, !dbg !467
  %idxprom19 = sext i32 %side.0 to i64, !dbg !467
  %arrayidx = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom19, !dbg !467
  %arrayidx20 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx, i32 0, i64 %idxprom, !dbg !467
  store i32 %add16, i32* %arrayidx20, align 4, !dbg !468
  %mul21 = mul nsw i32 7, %i.0, !dbg !469
  %add22 = add nsw i32 %mul21, 6, !dbg !470
  %sub23 = sub nsw i32 %add22, 1, !dbg !471
  %sub24 = sub nsw i32 %sub23, %h.0, !dbg !472
  %idxprom25 = sext i32 %sub24 to i64, !dbg !473
  %idxprom26 = sext i32 %side.0 to i64, !dbg !473
  %arrayidx27 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom26, !dbg !473
  %arrayidx28 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx27, i32 0, i64 %idxprom25, !dbg !473
  store i32 %add16, i32* %arrayidx28, align 4, !dbg !474
  %sub29 = sub nsw i32 6, %i.0, !dbg !475
  %mul30 = mul nsw i32 7, %sub29, !dbg !476
  %add31 = add nsw i32 %mul30, 6, !dbg !477
  %sub32 = sub nsw i32 %add31, 1, !dbg !478
  %sub33 = sub nsw i32 %sub32, %h.0, !dbg !479
  %idxprom34 = sext i32 %sub33 to i64, !dbg !480
  %idxprom35 = sext i32 %side.0 to i64, !dbg !480
  %arrayidx36 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom35, !dbg !480
  %arrayidx37 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx36, i32 0, i64 %idxprom34, !dbg !480
  store i32 %add16, i32* %arrayidx37, align 4, !dbg !481
  %mul38 = mul nsw i32 7, %i.0, !dbg !482
  %add39 = add nsw i32 %mul38, %h.0, !dbg !483
  %idxprom40 = sext i32 %add39 to i64, !dbg !484
  %idxprom41 = sext i32 %side.0 to i64, !dbg !484
  %arrayidx42 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom41, !dbg !484
  %arrayidx43 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx42, i32 0, i64 %idxprom40, !dbg !484
  store i32 %add16, i32* %arrayidx43, align 4, !dbg !485
  br label %for.inc, !dbg !484

for.inc:                                          ; preds = %for.body.6
  %inc = add nsw i32 %h.0, 1, !dbg !486
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !444, metadata !99), !dbg !445
  br label %for.cond.4, !dbg !487

for.end:                                          ; preds = %for.cond.4
  br label %for.inc.44, !dbg !488

for.inc.44:                                       ; preds = %for.end
  %inc45 = add nsw i32 %i.0, 1, !dbg !489
  call void @llvm.dbg.value(metadata i32 %inc45, i64 0, metadata !437, metadata !99), !dbg !438
  br label %for.cond.1, !dbg !490

for.end.46:                                       ; preds = %for.cond.1
  br label %for.inc.47, !dbg !491

for.inc.47:                                       ; preds = %for.end.46
  %inc48 = add nsw i32 %side.0, 1, !dbg !492
  call void @llvm.dbg.value(metadata i32 %inc48, i64 0, metadata !430, metadata !99), !dbg !431
  br label %for.cond, !dbg !493

for.end.49:                                       ; preds = %for.cond
  ret void, !dbg !494
}

; Function Attrs: nounwind uwtable
define i32 @ab(i32 %alpha, i32 %beta) #0 {
entry:
  %av = alloca [7 x i32], align 16
  call void @llvm.dbg.value(metadata i32 %alpha, i64 0, metadata !495, metadata !99), !dbg !496
  call void @llvm.dbg.value(metadata i32 %beta, i64 0, metadata !497, metadata !99), !dbg !498
  call void @llvm.dbg.declare(metadata [7 x i32]* %av, metadata !499, metadata !99), !dbg !501
  %tmp = load i64, i64* @nodes, align 8, !dbg !502
  %inc = add i64 %tmp, 1, !dbg !502
  store i64 %inc, i64* @nodes, align 8, !dbg !502
  %tmp1 = load i32, i32* @nplies, align 4, !dbg !503
  %cmp = icmp eq i32 %tmp1, 41, !dbg !505
  br i1 %cmp, label %if.then, label %if.end, !dbg !506

if.then:                                          ; preds = %entry
  br label %return, !dbg !507

if.end:                                           ; preds = %entry
  %tmp2 = load i32, i32* @nplies, align 4, !dbg !508
  %and = and i32 %tmp2, 1, !dbg !509
  call void @llvm.dbg.value(metadata i32 %and, i64 0, metadata !510, metadata !99), !dbg !511
  %xor = xor i32 %and, 1, !dbg !512
  call void @llvm.dbg.value(metadata i32 %xor, i64 0, metadata !513, metadata !99), !dbg !514
  %idxprom = sext i32 %xor to i64, !dbg !515
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom, !dbg !515
  %tmp4 = load i64, i64* %arrayidx, align 8, !dbg !515
  call void @llvm.dbg.value(metadata i64 %tmp4, i64 0, metadata !516, metadata !99), !dbg !517
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !518, metadata !99), !dbg !519
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !520, metadata !99), !dbg !521
  br label %for.cond, !dbg !522

for.cond:                                         ; preds = %for.inc, %if.end
  %nav.0 = phi i32 [ 0, %if.end ], [ %nav.2, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end ], [ %inc42, %for.inc ]
  %cmp1 = icmp slt i32 %i.0, 7, !dbg !524
  br i1 %cmp1, label %for.body, label %for.end.loopexit, !dbg !526

for.body:                                         ; preds = %for.cond
  %idxprom2 = sext i32 %i.0 to i64, !dbg !527
  %arrayidx3 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom2, !dbg !527
  %tmp8 = load i8, i8* %arrayidx3, align 1, !dbg !527
  %conv = sext i8 %tmp8 to i32, !dbg !527
  %sh_prom = zext i32 %conv to i64, !dbg !529
  %shl = shl i64 1, %sh_prom, !dbg !529
  %or = or i64 %tmp4, %shl, !dbg !530
  call void @llvm.dbg.value(metadata i64 %or, i64 0, metadata !531, metadata !99), !dbg !532
  %call = call i32 @islegal(i64 %or), !dbg !533
  %tobool = icmp ne i32 %call, 0, !dbg !533
  br i1 %tobool, label %if.end.5, label %if.then.4, !dbg !535

if.then.4:                                        ; preds = %for.body
  br label %for.inc, !dbg !536

if.end.5:                                         ; preds = %for.body
  %idxprom6 = sext i32 %i.0 to i64, !dbg !537
  %arrayidx7 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom6, !dbg !537
  %tmp12 = load i8, i8* %arrayidx7, align 1, !dbg !537
  %conv8 = sext i8 %tmp12 to i32, !dbg !537
  %sh_prom9 = zext i32 %conv8 to i64, !dbg !538
  %shl10 = shl i64 2, %sh_prom9, !dbg !538
  %or11 = or i64 %tmp4, %shl10, !dbg !539
  %call12 = call i32 @islegalhaswon(i64 %or11), !dbg !540
  call void @llvm.dbg.value(metadata i32 %call12, i64 0, metadata !541, metadata !99), !dbg !542
  %call13 = call i32 @haswon(i64 %or), !dbg !543
  %tobool14 = icmp ne i32 %call13, 0, !dbg !543
  br i1 %tobool14, label %if.then.15, label %if.end.35, !dbg !545

if.then.15:                                       ; preds = %if.end.5
  %call12.lcssa = phi i32 [ %call12, %if.end.5 ]
  %i.0.lcssa121 = phi i32 [ %i.0, %if.end.5 ]
  %tobool16 = icmp ne i32 %call12.lcssa, 0, !dbg !546
  br i1 %tobool16, label %if.then.17, label %if.end.18, !dbg !549

if.then.17:                                       ; preds = %if.then.15
  br label %return, !dbg !550

if.end.18:                                        ; preds = %if.then.15
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !518, metadata !99), !dbg !519
  %inc19 = add nsw i32 0, 1, !dbg !551
  call void @llvm.dbg.value(metadata i32 %inc19, i64 0, metadata !518, metadata !99), !dbg !519
  %idxprom20 = sext i32 0 to i64, !dbg !552
  %arrayidx21 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom20, !dbg !552
  store i32 %i.0.lcssa121, i32* %arrayidx21, align 4, !dbg !553
  br label %while.cond, !dbg !554

while.cond:                                       ; preds = %if.end.34, %if.end.18
  %i.1 = phi i32 [ %i.0.lcssa121, %if.end.18 ], [ %inc22, %if.end.34 ]
  %inc22 = add nsw i32 %i.1, 1, !dbg !555
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !520, metadata !99), !dbg !521
  %cmp23 = icmp slt i32 %inc22, 7, !dbg !558
  br i1 %cmp23, label %while.body, label %while.end, !dbg !554

while.body:                                       ; preds = %while.cond
  %idxprom25 = sext i32 %inc22 to i64, !dbg !559
  %arrayidx26 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom25, !dbg !559
  %tmp20 = load i8, i8* %arrayidx26, align 1, !dbg !559
  %conv27 = sext i8 %tmp20 to i32, !dbg !559
  %sh_prom28 = zext i32 %conv27 to i64, !dbg !561
  %shl29 = shl i64 1, %sh_prom28, !dbg !561
  %or30 = or i64 %tmp4, %shl29, !dbg !562
  %call31 = call i32 @islegalhaswon(i64 %or30), !dbg !563
  %tobool32 = icmp ne i32 %call31, 0, !dbg !563
  br i1 %tobool32, label %if.then.33, label %if.end.34, !dbg !564

if.then.33:                                       ; preds = %while.body
  br label %return, !dbg !565

if.end.34:                                        ; preds = %while.body
  br label %while.cond, !dbg !554

while.end:                                        ; preds = %while.cond
  br label %for.end, !dbg !566

if.end.35:                                        ; preds = %if.end.5
  %tobool36 = icmp ne i32 %call12, 0, !dbg !567
  br i1 %tobool36, label %if.end.41, label %if.then.37, !dbg !569

if.then.37:                                       ; preds = %if.end.35
  %inc38 = add nsw i32 %nav.0, 1, !dbg !570
  call void @llvm.dbg.value(metadata i32 %inc38, i64 0, metadata !518, metadata !99), !dbg !519
  %idxprom39 = sext i32 %nav.0 to i64, !dbg !571
  %arrayidx40 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom39, !dbg !571
  store i32 %i.0, i32* %arrayidx40, align 4, !dbg !572
  br label %if.end.41, !dbg !571

if.end.41:                                        ; preds = %if.then.37, %if.end.35
  %nav.1 = phi i32 [ %nav.0, %if.end.35 ], [ %inc38, %if.then.37 ]
  br label %for.inc, !dbg !573

for.inc:                                          ; preds = %if.end.41, %if.then.4
  %nav.2 = phi i32 [ %nav.1, %if.end.41 ], [ %nav.0, %if.then.4 ]
  %inc42 = add nsw i32 %i.0, 1, !dbg !574
  call void @llvm.dbg.value(metadata i32 %inc42, i64 0, metadata !520, metadata !99), !dbg !521
  br label %for.cond, !dbg !575

for.end.loopexit:                                 ; preds = %for.cond
  %nav.0.lcssa = phi i32 [ %nav.0, %for.cond ]
  br label %for.end, !dbg !576

for.end:                                          ; preds = %for.end.loopexit, %while.end
  %nav.3 = phi i32 [ %inc19, %while.end ], [ %nav.0.lcssa, %for.end.loopexit ]
  %cmp43 = icmp eq i32 %nav.3, 0, !dbg !576
  br i1 %cmp43, label %if.then.45, label %if.end.46, !dbg !578

if.then.45:                                       ; preds = %for.end
  br label %return, !dbg !579

if.end.46:                                        ; preds = %for.end
  %tmp26 = load i32, i32* @nplies, align 4, !dbg !580
  %cmp47 = icmp eq i32 %tmp26, 40, !dbg !582
  br i1 %cmp47, label %if.then.49, label %if.end.50, !dbg !583

if.then.49:                                       ; preds = %if.end.46
  br label %return, !dbg !584

if.end.50:                                        ; preds = %if.end.46
  %cmp51 = icmp eq i32 %nav.3, 1, !dbg !585
  br i1 %cmp51, label %if.then.53, label %if.end.58, !dbg !587

if.then.53:                                       ; preds = %if.end.50
  %arrayidx54 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 0, !dbg !588
  %tmp28 = load i32, i32* %arrayidx54, align 4, !dbg !588
  call void @makemove(i32 %tmp28), !dbg !590
  %sub = sub nsw i32 6, %beta, !dbg !591
  %sub55 = sub nsw i32 6, %alpha, !dbg !592
  %call56 = call i32 @ab(i32 %sub, i32 %sub55), !dbg !593
  %sub57 = sub nsw i32 6, %call56, !dbg !594
  call void @llvm.dbg.value(metadata i32 %sub57, i64 0, metadata !595, metadata !99), !dbg !596
  call void @backmove(), !dbg !597
  br label %return, !dbg !598

if.end.58:                                        ; preds = %if.end.50
  %call59 = call i32 @transpose(), !dbg !599
  call void @llvm.dbg.value(metadata i32 %call59, i64 0, metadata !600, metadata !99), !dbg !601
  %cmp60 = icmp ne i32 %call59, 0, !dbg !602
  br i1 %cmp60, label %if.then.62, label %if.end.80, !dbg !604

if.then.62:                                       ; preds = %if.end.58
  %cmp63 = icmp eq i32 %call59, 2, !dbg !605
  br i1 %cmp63, label %if.then.65, label %if.else, !dbg !608

if.then.65:                                       ; preds = %if.then.62
  call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !497, metadata !99), !dbg !498
  %cmp66 = icmp sle i32 3, %alpha, !dbg !609
  br i1 %cmp66, label %if.then.68, label %if.end.69, !dbg !612

if.then.68:                                       ; preds = %if.then.65
  br label %return, !dbg !613

if.end.69:                                        ; preds = %if.then.65
  br label %if.end.79, !dbg !614

if.else:                                          ; preds = %if.then.62
  %cmp70 = icmp eq i32 %call59, 4, !dbg !615
  br i1 %cmp70, label %if.then.72, label %if.else.77, !dbg !617

if.then.72:                                       ; preds = %if.else
  call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !495, metadata !99), !dbg !496
  %cmp73 = icmp sge i32 3, %beta, !dbg !618
  br i1 %cmp73, label %if.then.75, label %if.end.76, !dbg !621

if.then.75:                                       ; preds = %if.then.72
  br label %return, !dbg !622

if.end.76:                                        ; preds = %if.then.72
  br label %if.end.78, !dbg !623

if.else.77:                                       ; preds = %if.else
  br label %return, !dbg !624

if.end.78:                                        ; preds = %if.end.76
  br label %if.end.79

if.end.79:                                        ; preds = %if.end.78, %if.end.69
  %beta.addr.0 = phi i32 [ 3, %if.end.69 ], [ %beta, %if.end.78 ]
  %alpha.addr.0 = phi i32 [ %alpha, %if.end.69 ], [ 3, %if.end.78 ]
  br label %if.end.80, !dbg !625

if.end.80:                                        ; preds = %if.end.79, %if.end.58
  %beta.addr.1 = phi i32 [ %beta.addr.0, %if.end.79 ], [ %beta, %if.end.58 ]
  %alpha.addr.1 = phi i32 [ %alpha.addr.0, %if.end.79 ], [ %alpha, %if.end.58 ]
  %tmp40 = load i32, i32* @htindex, align 4, !dbg !626
  call void @llvm.dbg.value(metadata i32 %tmp40, i64 0, metadata !627, metadata !99), !dbg !628
  %tmp41 = load i32, i32* @lock, align 4, !dbg !629
  call void @llvm.dbg.value(metadata i32 %tmp41, i64 0, metadata !630, metadata !99), !dbg !631
  %tmp42 = load i64, i64* @posed, align 8, !dbg !632
  call void @llvm.dbg.value(metadata i64 %tmp42, i64 0, metadata !633, metadata !99), !dbg !634
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !635, metadata !99), !dbg !636
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !595, metadata !99), !dbg !596
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !520, metadata !99), !dbg !521
  br label %for.cond.81, !dbg !637

for.cond.81:                                      ; preds = %for.inc.185, %if.end.80
  %score.0 = phi i32 [ 1, %if.end.80 ], [ %score.2, %for.inc.185 ]
  %i.2 = phi i32 [ 0, %if.end.80 ], [ %inc186, %for.inc.185 ]
  %alpha.addr.2 = phi i32 [ %alpha.addr.1, %if.end.80 ], [ %alpha.addr.4, %for.inc.185 ]
  %cmp82 = icmp slt i32 %i.2, %nav.3, !dbg !639
  br i1 %cmp82, label %for.body.84, label %for.end.187.loopexit, !dbg !641

for.body.84:                                      ; preds = %for.cond.81
  call void @llvm.dbg.value(metadata i32 %i.2, i64 0, metadata !642, metadata !99), !dbg !643
  %idxprom85 = sext i32 %i.2 to i64, !dbg !644
  %arrayidx86 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom85, !dbg !644
  %tmp46 = load i32, i32* %arrayidx86, align 4, !dbg !644
  %idxprom87 = sext i32 %tmp46 to i64, !dbg !646
  %arrayidx88 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom87, !dbg !646
  %tmp47 = load i8, i8* %arrayidx88, align 1, !dbg !646
  %conv89 = sext i8 %tmp47 to i32, !dbg !647
  %idxprom90 = sext i32 %conv89 to i64, !dbg !648
  %idxprom91 = sext i32 %and to i64, !dbg !648
  %arrayidx92 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom91, !dbg !648
  %arrayidx93 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx92, i32 0, i64 %idxprom90, !dbg !648
  %tmp49 = load i32, i32* %arrayidx93, align 4, !dbg !648
  call void @llvm.dbg.value(metadata i32 %tmp49, i64 0, metadata !649, metadata !99), !dbg !650
  %add = add nsw i32 %i.2, 1, !dbg !651
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !653, metadata !99), !dbg !654
  br label %for.cond.94, !dbg !655

for.cond.94:                                      ; preds = %for.inc.111, %for.body.84
  %val.0 = phi i32 [ %tmp49, %for.body.84 ], [ %val.1, %for.inc.111 ]
  %l.0 = phi i32 [ %i.2, %for.body.84 ], [ %l.1, %for.inc.111 ]
  %j.0 = phi i32 [ %add, %for.body.84 ], [ %inc112, %for.inc.111 ]
  %cmp95 = icmp slt i32 %j.0, %nav.3, !dbg !656
  br i1 %cmp95, label %for.body.97, label %for.end.113, !dbg !658

for.body.97:                                      ; preds = %for.cond.94
  %idxprom98 = sext i32 %j.0 to i64, !dbg !659
  %arrayidx99 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom98, !dbg !659
  %tmp54 = load i32, i32* %arrayidx99, align 4, !dbg !659
  %idxprom100 = sext i32 %tmp54 to i64, !dbg !661
  %arrayidx101 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom100, !dbg !661
  %tmp55 = load i8, i8* %arrayidx101, align 1, !dbg !661
  %conv102 = sext i8 %tmp55 to i32, !dbg !662
  %idxprom103 = sext i32 %conv102 to i64, !dbg !663
  %idxprom104 = sext i32 %and to i64, !dbg !663
  %arrayidx105 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom104, !dbg !663
  %arrayidx106 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx105, i32 0, i64 %idxprom103, !dbg !663
  %tmp57 = load i32, i32* %arrayidx106, align 4, !dbg !663
  call void @llvm.dbg.value(metadata i32 %tmp57, i64 0, metadata !664, metadata !99), !dbg !665
  %cmp107 = icmp sgt i32 %tmp57, %val.0, !dbg !666
  br i1 %cmp107, label %if.then.109, label %if.end.110, !dbg !668

if.then.109:                                      ; preds = %for.body.97
  call void @llvm.dbg.value(metadata i32 %tmp57, i64 0, metadata !649, metadata !99), !dbg !650
  call void @llvm.dbg.value(metadata i32 %j.0, i64 0, metadata !642, metadata !99), !dbg !643
  br label %if.end.110, !dbg !669

if.end.110:                                       ; preds = %if.then.109, %for.body.97
  %val.1 = phi i32 [ %tmp57, %if.then.109 ], [ %val.0, %for.body.97 ]
  %l.1 = phi i32 [ %j.0, %if.then.109 ], [ %l.0, %for.body.97 ]
  br label %for.inc.111, !dbg !671

for.inc.111:                                      ; preds = %if.end.110
  %inc112 = add nsw i32 %j.0, 1, !dbg !672
  call void @llvm.dbg.value(metadata i32 %inc112, i64 0, metadata !653, metadata !99), !dbg !654
  br label %for.cond.94, !dbg !673

for.end.113:                                      ; preds = %for.cond.94
  %l.0.lcssa = phi i32 [ %l.0, %for.cond.94 ]
  %idxprom114 = sext i32 %l.0.lcssa to i64, !dbg !674
  %arrayidx115 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom114, !dbg !674
  %tmp64 = load i32, i32* %arrayidx115, align 4, !dbg !674
  call void @llvm.dbg.value(metadata i32 %tmp64, i64 0, metadata !653, metadata !99), !dbg !654
  br label %for.cond.116, !dbg !676

for.cond.116:                                     ; preds = %for.inc.125, %for.end.113
  %l.2 = phi i32 [ %l.0.lcssa, %for.end.113 ], [ %dec, %for.inc.125 ]
  %cmp117 = icmp sgt i32 %l.2, %i.2, !dbg !677
  br i1 %cmp117, label %for.body.119, label %for.end.126, !dbg !679

for.body.119:                                     ; preds = %for.cond.116
  %sub120 = sub nsw i32 %l.2, 1, !dbg !680
  %idxprom121 = sext i32 %sub120 to i64, !dbg !681
  %arrayidx122 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom121, !dbg !681
  %tmp68 = load i32, i32* %arrayidx122, align 4, !dbg !681
  %idxprom123 = sext i32 %l.2 to i64, !dbg !682
  %arrayidx124 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom123, !dbg !682
  store i32 %tmp68, i32* %arrayidx124, align 4, !dbg !683
  br label %for.inc.125, !dbg !682

for.inc.125:                                      ; preds = %for.body.119
  %dec = add nsw i32 %l.2, -1, !dbg !684
  call void @llvm.dbg.value(metadata i32 %dec, i64 0, metadata !642, metadata !99), !dbg !643
  br label %for.cond.116, !dbg !685

for.end.126:                                      ; preds = %for.cond.116
  %idxprom127 = sext i32 %i.2 to i64, !dbg !686
  %arrayidx128 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom127, !dbg !686
  store i32 %tmp64, i32* %arrayidx128, align 4, !dbg !687
  call void @makemove(i32 %tmp64), !dbg !688
  %sub129 = sub nsw i32 6, %beta.addr.1, !dbg !689
  %sub130 = sub nsw i32 6, %alpha.addr.2, !dbg !690
  %call131 = call i32 @ab(i32 %sub129, i32 %sub130), !dbg !691
  %sub132 = sub nsw i32 6, %call131, !dbg !692
  call void @llvm.dbg.value(metadata i32 %sub132, i64 0, metadata !649, metadata !99), !dbg !650
  call void @backmove(), !dbg !693
  %cmp133 = icmp sgt i32 %sub132, %score.0, !dbg !694
  br i1 %cmp133, label %if.then.135, label %if.end.184, !dbg !696

if.then.135:                                      ; preds = %for.end.126
  call void @llvm.dbg.value(metadata i32 %i.2, i64 0, metadata !635, metadata !99), !dbg !636
  call void @llvm.dbg.value(metadata i32 %sub132, i64 0, metadata !595, metadata !99), !dbg !596
  %cmp136 = icmp sgt i32 %sub132, %alpha.addr.2, !dbg !697
  br i1 %cmp136, label %land.lhs.true, label %if.end.183, !dbg !700

land.lhs.true:                                    ; preds = %if.then.135
  %tmp80 = load i32, i32* @nplies, align 4, !dbg !701
  %cmp138 = icmp sge i32 %tmp80, 0, !dbg !703
  br i1 %cmp138, label %land.lhs.true.140, label %if.end.183, !dbg !704

land.lhs.true.140:                                ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i32 %sub132, i64 0, metadata !495, metadata !99), !dbg !496
  %cmp141 = icmp sge i32 %sub132, %beta.addr.1, !dbg !705
  br i1 %cmp141, label %if.then.143, label %if.end.183, !dbg !706

if.then.143:                                      ; preds = %land.lhs.true.140
  %sub132.lcssa = phi i32 [ %sub132, %land.lhs.true.140 ]
  %i.2.lcssa119 = phi i32 [ %i.2, %land.lhs.true.140 ]
  %cmp144 = icmp eq i32 %sub132.lcssa, 3, !dbg !707
  br i1 %cmp144, label %land.lhs.true.146, label %if.end.151, !dbg !710

land.lhs.true.146:                                ; preds = %if.then.143
  %sub147 = sub nsw i32 %nav.3, 1, !dbg !711
  %cmp148 = icmp slt i32 %i.2.lcssa119, %sub147, !dbg !712
  br i1 %cmp148, label %if.then.150, label %if.end.151, !dbg !713

if.then.150:                                      ; preds = %land.lhs.true.146
  call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !595, metadata !99), !dbg !596
  br label %if.end.151, !dbg !714

if.end.151:                                       ; preds = %if.then.150, %land.lhs.true.146, %if.then.143
  %score.1 = phi i32 [ 4, %if.then.150 ], [ %sub132.lcssa, %land.lhs.true.146 ], [ %sub132.lcssa, %if.then.143 ]
  %cmp152 = icmp sgt i32 %i.2.lcssa119, 0, !dbg !715
  br i1 %cmp152, label %if.then.154, label %if.end.182, !dbg !717

if.then.154:                                      ; preds = %if.end.151
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !520, metadata !99), !dbg !521
  br label %for.cond.155, !dbg !718

for.cond.155:                                     ; preds = %for.inc.169, %if.then.154
  %i.3 = phi i32 [ 0, %if.then.154 ], [ %inc170, %for.inc.169 ]
  %cmp156 = icmp slt i32 %i.3, %i.2.lcssa119, !dbg !721
  br i1 %cmp156, label %for.body.158, label %for.end.171, !dbg !723

for.body.158:                                     ; preds = %for.cond.155
  %idxprom159 = sext i32 %i.3 to i64, !dbg !724
  %arrayidx160 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom159, !dbg !724
  %tmp90 = load i32, i32* %arrayidx160, align 4, !dbg !724
  %idxprom161 = sext i32 %tmp90 to i64, !dbg !725
  %arrayidx162 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom161, !dbg !725
  %tmp91 = load i8, i8* %arrayidx162, align 1, !dbg !725
  %conv163 = sext i8 %tmp91 to i32, !dbg !726
  %idxprom164 = sext i32 %conv163 to i64, !dbg !727
  %idxprom165 = sext i32 %and to i64, !dbg !727
  %arrayidx166 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom165, !dbg !727
  %arrayidx167 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx166, i32 0, i64 %idxprom164, !dbg !727
  %tmp93 = load i32, i32* %arrayidx167, align 4, !dbg !728
  %dec168 = add nsw i32 %tmp93, -1, !dbg !728
  store i32 %dec168, i32* %arrayidx167, align 4, !dbg !728
  br label %for.inc.169, !dbg !727

for.inc.169:                                      ; preds = %for.body.158
  %inc170 = add nsw i32 %i.3, 1, !dbg !729
  call void @llvm.dbg.value(metadata i32 %inc170, i64 0, metadata !520, metadata !99), !dbg !521
  br label %for.cond.155, !dbg !730

for.end.171:                                      ; preds = %for.cond.155
  %idxprom172 = sext i32 %i.2.lcssa119 to i64, !dbg !731
  %arrayidx173 = getelementptr inbounds [7 x i32], [7 x i32]* %av, i32 0, i64 %idxprom172, !dbg !731
  %tmp97 = load i32, i32* %arrayidx173, align 4, !dbg !731
  %idxprom174 = sext i32 %tmp97 to i64, !dbg !732
  %arrayidx175 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom174, !dbg !732
  %tmp98 = load i8, i8* %arrayidx175, align 1, !dbg !732
  %conv176 = sext i8 %tmp98 to i32, !dbg !733
  %idxprom177 = sext i32 %conv176 to i64, !dbg !734
  %idxprom178 = sext i32 %and to i64, !dbg !734
  %arrayidx179 = getelementptr inbounds [2 x [49 x i32]], [2 x [49 x i32]]* @history, i32 0, i64 %idxprom178, !dbg !734
  %arrayidx180 = getelementptr inbounds [49 x i32], [49 x i32]* %arrayidx179, i32 0, i64 %idxprom177, !dbg !734
  %tmp100 = load i32, i32* %arrayidx180, align 4, !dbg !735
  %add181 = add nsw i32 %tmp100, %i.2.lcssa119, !dbg !735
  store i32 %add181, i32* %arrayidx180, align 4, !dbg !735
  br label %if.end.182, !dbg !736

if.end.182:                                       ; preds = %for.end.171, %if.end.151
  br label %for.end.187, !dbg !737

if.end.183:                                       ; preds = %land.lhs.true.140, %land.lhs.true, %if.then.135
  %alpha.addr.3 = phi i32 [ %sub132, %land.lhs.true.140 ], [ %alpha.addr.2, %land.lhs.true ], [ %alpha.addr.2, %if.then.135 ]
  br label %if.end.184, !dbg !738

if.end.184:                                       ; preds = %if.end.183, %for.end.126
  %score.2 = phi i32 [ %sub132, %if.end.183 ], [ %score.0, %for.end.126 ]
  %alpha.addr.4 = phi i32 [ %alpha.addr.3, %if.end.183 ], [ %alpha.addr.2, %for.end.126 ]
  br label %for.inc.185, !dbg !739

for.inc.185:                                      ; preds = %if.end.184
  %inc186 = add nsw i32 %i.2, 1, !dbg !740
  call void @llvm.dbg.value(metadata i32 %inc186, i64 0, metadata !520, metadata !99), !dbg !521
  br label %for.cond.81, !dbg !741

for.end.187.loopexit:                             ; preds = %for.cond.81
  %score.0.lcssa = phi i32 [ %score.0, %for.cond.81 ]
  br label %for.end.187, !dbg !742

for.end.187:                                      ; preds = %for.end.187.loopexit, %if.end.182
  %score.3 = phi i32 [ %score.1, %if.end.182 ], [ %score.0.lcssa, %for.end.187.loopexit ]
  %sub188 = sub nsw i32 6, %call59, !dbg !742
  %cmp189 = icmp eq i32 %score.3, %sub188, !dbg !744
  br i1 %cmp189, label %if.then.191, label %if.end.192, !dbg !745

if.then.191:                                      ; preds = %for.end.187
  call void @llvm.dbg.value(metadata i32 3, i64 0, metadata !595, metadata !99), !dbg !596
  br label %if.end.192, !dbg !746

if.end.192:                                       ; preds = %if.then.191, %for.end.187
  %score.4 = phi i32 [ 3, %if.then.191 ], [ %score.3, %for.end.187 ]
  %tmp104 = load i64, i64* @posed, align 8, !dbg !747
  %sub193 = sub i64 %tmp104, %tmp42, !dbg !748
  call void @llvm.dbg.value(metadata i64 %sub193, i64 0, metadata !633, metadata !99), !dbg !634
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !749, metadata !99), !dbg !750
  br label %for.cond.194, !dbg !751

for.cond.194:                                     ; preds = %for.inc.198, %if.end.192
  %work.0 = phi i32 [ 0, %if.end.192 ], [ %inc199, %for.inc.198 ]
  %poscnt.0 = phi i64 [ %sub193, %if.end.192 ], [ %shr, %for.inc.198 ]
  %shr = lshr i64 %poscnt.0, 1, !dbg !753
  call void @llvm.dbg.value(metadata i64 %shr, i64 0, metadata !633, metadata !99), !dbg !634
  %cmp195 = icmp ne i64 %shr, 0, !dbg !757
  br i1 %cmp195, label %for.body.197, label %for.end.200, !dbg !758

for.body.197:                                     ; preds = %for.cond.194
  br label %for.inc.198, !dbg !759

for.inc.198:                                      ; preds = %for.body.197
  %inc199 = add nsw i32 %work.0, 1, !dbg !761
  call void @llvm.dbg.value(metadata i32 %inc199, i64 0, metadata !749, metadata !99), !dbg !750
  br label %for.cond.194, !dbg !763

for.end.200:                                      ; preds = %for.cond.194
  %work.0.lcssa = phi i32 [ %work.0, %for.cond.194 ]
  call void @transtore(i32 %tmp40, i32 %tmp41, i32 %score.4, i32 %work.0.lcssa), !dbg !764
  %tmp112 = load i32, i32* @nplies, align 4, !dbg !765
  %cmp201 = icmp sle i32 %tmp112, -1, !dbg !767
  br i1 %cmp201, label %if.then.203, label %if.end.208, !dbg !768

if.then.203:                                      ; preds = %for.end.200
  call void @printMoves(), !dbg !769
  %idxprom204 = sext i32 %score.4 to i64, !dbg !771
  %arrayidx205 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.3, i32 0, i64 %idxprom204, !dbg !771
  %tmp114 = load i8, i8* %arrayidx205, align 1, !dbg !771
  %conv206 = sext i8 %tmp114 to i32, !dbg !771
  %call207 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i32 %conv206, i32 %work.0.lcssa), !dbg !772
  br label %if.end.208, !dbg !773

if.end.208:                                       ; preds = %if.then.203, %for.end.200
  br label %return, !dbg !774

return:                                           ; preds = %if.end.208, %if.else.77, %if.then.75, %if.then.68, %if.then.53, %if.then.49, %if.then.45, %if.then.33, %if.then.17, %if.then
  %retval.0 = phi i32 [ 3, %if.then ], [ 1, %if.then.17 ], [ 1, %if.then.33 ], [ 1, %if.then.45 ], [ 3, %if.then.49 ], [ %sub57, %if.then.53 ], [ %call59, %if.then.68 ], [ %score.4, %if.end.208 ], [ %call59, %if.then.75 ], [ %call59, %if.else.77 ]
  ret i32 %retval.0, !dbg !775
}

; Function Attrs: nounwind uwtable
define i32 @solve() #0 {
entry:
  %tmp = load i32, i32* @nplies, align 4, !dbg !776
  %and = and i32 %tmp, 1, !dbg !777
  call void @llvm.dbg.value(metadata i32 %and, i64 0, metadata !778, metadata !99), !dbg !779
  %xor = xor i32 %and, 1, !dbg !780
  call void @llvm.dbg.value(metadata i32 %xor, i64 0, metadata !781, metadata !99), !dbg !782
  store i64 0, i64* @nodes, align 8, !dbg !783
  store i64 1, i64* @msecs, align 8, !dbg !784
  %idxprom = sext i32 %xor to i64, !dbg !785
  %arrayidx = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom, !dbg !785
  %tmp3 = load i64, i64* %arrayidx, align 8, !dbg !785
  %call = call i32 @haswon(i64 %tmp3), !dbg !787
  %tobool = icmp ne i32 %call, 0, !dbg !787
  br i1 %tobool, label %if.then, label %if.end, !dbg !788

if.then:                                          ; preds = %entry
  br label %return, !dbg !789

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !790, metadata !99), !dbg !791
  br label %for.cond, !dbg !792

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 7, !dbg !794
  br i1 %cmp, label %for.body, label %for.end, !dbg !796

for.body:                                         ; preds = %for.cond
  %idxprom1 = sext i32 %and to i64, !dbg !797
  %arrayidx2 = getelementptr inbounds [2 x i64], [2 x i64]* @color, i32 0, i64 %idxprom1, !dbg !797
  %tmp6 = load i64, i64* %arrayidx2, align 8, !dbg !797
  %idxprom3 = sext i32 %i.0 to i64, !dbg !799
  %arrayidx4 = getelementptr inbounds [7 x i8], [7 x i8]* @height, i32 0, i64 %idxprom3, !dbg !799
  %tmp8 = load i8, i8* %arrayidx4, align 1, !dbg !799
  %conv = sext i8 %tmp8 to i32, !dbg !799
  %sh_prom = zext i32 %conv to i64, !dbg !800
  %shl = shl i64 1, %sh_prom, !dbg !800
  %or = or i64 %tmp6, %shl, !dbg !801
  %call5 = call i32 @islegalhaswon(i64 %or), !dbg !802
  %tobool6 = icmp ne i32 %call5, 0, !dbg !802
  br i1 %tobool6, label %if.then.7, label %if.end.8, !dbg !803

if.then.7:                                        ; preds = %for.body
  br label %return, !dbg !804

if.end.8:                                         ; preds = %for.body
  br label %for.inc, !dbg !805

for.inc:                                          ; preds = %if.end.8
  %inc = add nsw i32 %i.0, 1, !dbg !807
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !790, metadata !99), !dbg !791
  br label %for.cond, !dbg !808

for.end:                                          ; preds = %for.cond
  call void @inithistory(), !dbg !809
  %call9 = call i64 @millisecs(), !dbg !810
  store i64 %call9, i64* @msecs, align 8, !dbg !811
  %call10 = call i32 @ab(i32 1, i32 5), !dbg !812
  call void @llvm.dbg.value(metadata i32 %call10, i64 0, metadata !813, metadata !99), !dbg !814
  %call11 = call i64 @millisecs(), !dbg !815
  %add = add i64 1, %call11, !dbg !816
  %tmp10 = load i64, i64* @msecs, align 8, !dbg !817
  %sub = sub i64 %add, %tmp10, !dbg !818
  store i64 %sub, i64* @msecs, align 8, !dbg !819
  br label %return, !dbg !820

return:                                           ; preds = %for.end, %if.then.7, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 5, %if.then.7 ], [ %call10, %for.end ]
  ret i32 %retval.0, !dbg !821
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @trans_init(), !dbg !822
  %call = call i32 @puts(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i32 0, i32 0)), !dbg !823
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i32 0, i32 0), i32 7, i32 6), !dbg !824
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i32 0, i32 0), i32 8306069), !dbg !825
  br label %for.cond, !dbg !826

for.cond:                                         ; preds = %for.end, %entry
  call void @reset(), !dbg !827
  br label %while.cond, !dbg !831

while.cond:                                       ; preds = %if.end.8, %for.cond
  %call3 = call i32 @getchar(), !dbg !832
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !835, metadata !99), !dbg !836
  %cmp = icmp ne i32 %call3, -1, !dbg !837
  br i1 %cmp, label %while.body, label %while.end.loopexit, !dbg !831

while.body:                                       ; preds = %while.cond
  %cmp4 = icmp sge i32 %call3, 49, !dbg !838
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !841

land.lhs.true:                                    ; preds = %while.body
  %cmp5 = icmp sle i32 %call3, 55, !dbg !842
  br i1 %cmp5, label %if.then, label %if.else, !dbg !843

if.then:                                          ; preds = %land.lhs.true
  %sub = sub nsw i32 %call3, 49, !dbg !844
  call void @makemove(i32 %sub), !dbg !845
  br label %if.end.8, !dbg !845

if.else:                                          ; preds = %land.lhs.true, %while.body
  %cmp6 = icmp eq i32 %call3, 10, !dbg !846
  br i1 %cmp6, label %if.then.7, label %if.end, !dbg !848

if.then.7:                                        ; preds = %if.else
  %call3.lcssa13 = phi i32 [ %call3, %if.else ]
  br label %while.end, !dbg !849

if.end:                                           ; preds = %if.else
  br label %if.end.8

if.end.8:                                         ; preds = %if.end, %if.then
  br label %while.cond, !dbg !831

while.end.loopexit:                               ; preds = %while.cond
  %call3.lcssa = phi i32 [ %call3, %while.cond ]
  br label %while.end, !dbg !850

while.end:                                        ; preds = %while.end.loopexit, %if.then.7
  %call314 = phi i32 [ %call3.lcssa, %while.end.loopexit ], [ %call3.lcssa13, %if.then.7 ]
  %cmp9 = icmp eq i32 %call314, -1, !dbg !850
  br i1 %cmp9, label %if.then.10, label %if.end.11, !dbg !852

if.then.10:                                       ; preds = %while.end
  br label %for.end.18, !dbg !853

if.end.11:                                        ; preds = %while.end
  %tmp5 = load i32, i32* @nplies, align 4, !dbg !854
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i32 %tmp5), !dbg !855
  call void @printMoves(), !dbg !856
  %call13 = call i32 @puts(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0)), !dbg !857
  call void @emptyTT(), !dbg !858
  %call14 = call i32 @solve(), !dbg !859
  call void @llvm.dbg.value(metadata i32 %call14, i64 0, metadata !860, metadata !99), !dbg !861
  %tmp6 = load i64, i64* @posed, align 8, !dbg !862
  call void @llvm.dbg.value(metadata i64 %tmp6, i64 0, metadata !863, metadata !99), !dbg !864
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !865, metadata !99), !dbg !866
  br label %for.cond.15, !dbg !867

for.cond.15:                                      ; preds = %for.inc, %if.end.11
  %work.0 = phi i32 [ 0, %if.end.11 ], [ %inc, %for.inc ]
  %poscnt.0 = phi i64 [ %tmp6, %if.end.11 ], [ %shr, %for.inc ]
  %shr = lshr i64 %poscnt.0, 1, !dbg !869
  call void @llvm.dbg.value(metadata i64 %shr, i64 0, metadata !863, metadata !99), !dbg !864
  %cmp16 = icmp ne i64 %shr, 0, !dbg !873
  br i1 %cmp16, label %for.body, label %for.end, !dbg !874

for.body:                                         ; preds = %for.cond.15
  br label %for.inc, !dbg !875

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %work.0, 1, !dbg !877
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !865, metadata !99), !dbg !866
  br label %for.cond.15, !dbg !879

for.end:                                          ; preds = %for.cond.15
  %work.0.lcssa = phi i32 [ %work.0, %for.cond.15 ]
  %idxprom = sext i32 %call14 to i64, !dbg !880
  %arrayidx = getelementptr inbounds [7 x i8], [7 x i8]* @.str.3, i32 0, i64 %idxprom, !dbg !880
  %tmp11 = load i8, i8* %arrayidx, align 1, !dbg !880
  %conv = sext i8 %tmp11 to i32, !dbg !880
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i32 0, i32 0), i32 %call14, i32 %conv, i32 %work.0.lcssa), !dbg !881
  call void @htstat(), !dbg !882
  br label %for.cond, !dbg !883

for.end.18:                                       ; preds = %if.then.10
  ret i32 0, !dbg !884
}

declare i32 @puts(i8*) #2

declare i32 @getchar() #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!92, !93}
!llvm.ident = !{!94}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !23, globals: !63)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Fhourstones_31")
!2 = !{}
!3 = !{!4, !5, !10, !16, !21, !22}
!4 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64", file: !6, line: 46, baseType: !7)
!6 = !DIFile(filename: "./Game.h", directory: "/home/gleison/tf/Benchmarks/Fhourstones_31")
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !8, line: 55, baseType: !9)
!8 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gleison/tf/Benchmarks/Fhourstones_31")
!9 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashentry", file: !12, line: 43, baseType: !13)
!12 = !DIFile(filename: "./TransGame.h", directory: "/home/gleison/tf/Benchmarks/Fhourstones_31")
!13 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 37, size: 64, align: 32, elements: !14)
!14 = !{!15, !17, !18, !19, !20}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "biglock", scope: !13, file: !12, line: 38, baseType: !16, size: 26, align: 32)
!16 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "bigwork", scope: !13, file: !12, line: 39, baseType: !16, size: 6, align: 32, offset: 26)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "newlock", scope: !13, file: !12, line: 40, baseType: !16, size: 26, align: 32, offset: 32)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "newscore", scope: !13, file: !12, line: 41, baseType: !16, size: 3, align: 32, offset: 58)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "bigscore", scope: !13, file: !12, line: 42, baseType: !16, size: 3, align: 32, offset: 61)
!21 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!22 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!23 = !{!24, !27, !30, !31, !34, !37, !38, !39, !40, !43, !44, !45, !46, !49, !52, !53, !55, !58, !59, !60, !61, !62}
!24 = !DISubprogram(name: "reset", scope: !6, file: !6, line: 53, type: !25, isLocal: false, isDefinition: true, scopeLine: 54, isOptimized: false, function: void ()* @reset, variables: !2)
!25 = !DISubroutineType(types: !26)
!26 = !{null}
!27 = !DISubprogram(name: "positioncode", scope: !6, file: !6, line: 62, type: !28, isLocal: false, isDefinition: true, scopeLine: 63, isOptimized: false, function: i64 ()* @positioncode, variables: !2)
!28 = !DISubroutineType(types: !29)
!29 = !{!5}
!30 = !DISubprogram(name: "printMoves", scope: !6, file: !6, line: 69, type: !25, isLocal: false, isDefinition: true, scopeLine: 70, isOptimized: false, function: void ()* @printMoves, variables: !2)
!31 = !DISubprogram(name: "islegal", scope: !6, file: !6, line: 78, type: !32, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i64)* @islegal, variables: !2)
!32 = !DISubroutineType(types: !33)
!33 = !{!22, !5}
!34 = !DISubprogram(name: "isplayable", scope: !6, file: !6, line: 84, type: !35, isLocal: false, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32)* @isplayable, variables: !2)
!35 = !DISubroutineType(types: !36)
!36 = !{!22, !22}
!37 = !DISubprogram(name: "haswon", scope: !6, file: !6, line: 90, type: !32, isLocal: false, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i64)* @haswon, variables: !2)
!38 = !DISubprogram(name: "islegalhaswon", scope: !6, file: !6, line: 106, type: !32, isLocal: false, isDefinition: true, scopeLine: 107, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i64)* @islegalhaswon, variables: !2)
!39 = !DISubprogram(name: "backmove", scope: !6, file: !6, line: 111, type: !25, isLocal: false, isDefinition: true, scopeLine: 112, isOptimized: false, function: void ()* @backmove, variables: !2)
!40 = !DISubprogram(name: "makemove", scope: !6, file: !6, line: 119, type: !41, isLocal: false, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: false, function: void (i32)* @makemove, variables: !2)
!41 = !DISubroutineType(types: !42)
!42 = !{null, !22}
!43 = !DISubprogram(name: "trans_init", scope: !12, file: !12, line: 50, type: !25, isLocal: false, isDefinition: true, scopeLine: 51, isOptimized: false, function: void ()* @trans_init, variables: !2)
!44 = !DISubprogram(name: "emptyTT", scope: !12, file: !12, line: 55, type: !25, isLocal: false, isDefinition: true, scopeLine: 56, isOptimized: false, function: void ()* @emptyTT, variables: !2)
!45 = !DISubprogram(name: "hash", scope: !12, file: !12, line: 65, type: !25, isLocal: false, isDefinition: true, scopeLine: 66, isOptimized: false, function: void ()* @hash, variables: !2)
!46 = !DISubprogram(name: "transpose", scope: !12, file: !12, line: 79, type: !47, isLocal: false, isDefinition: true, scopeLine: 80, isOptimized: false, function: i32 ()* @transpose, variables: !2)
!47 = !DISubroutineType(types: !48)
!48 = !{!22}
!49 = !DISubprogram(name: "transtore", scope: !12, file: !12, line: 93, type: !50, isLocal: false, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32, i32, i32)* @transtore, variables: !2)
!50 = !DISubroutineType(types: !51)
!51 = !{null, !22, !16, !22, !22}
!52 = !DISubprogram(name: "htstat", scope: !12, file: !12, line: 110, type: !25, isLocal: false, isDefinition: true, scopeLine: 111, isOptimized: false, function: void ()* @htstat, variables: !2)
!53 = !DISubprogram(name: "millisecs", scope: !54, file: !54, line: 19, type: !28, isLocal: false, isDefinition: true, scopeLine: 19, isOptimized: false, function: i64 ()* @millisecs, variables: !2)
!54 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Fhourstones_31/tmp.c", directory: "/home/gleison/tf/Benchmarks/Fhourstones_31")
!55 = !DISubprogram(name: "min", scope: !54, file: !54, line: 27, type: !56, isLocal: false, isDefinition: true, scopeLine: 27, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @min, variables: !2)
!56 = !DISubroutineType(types: !57)
!57 = !{!22, !22, !22}
!58 = !DISubprogram(name: "max", scope: !54, file: !54, line: 28, type: !56, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @max, variables: !2)
!59 = !DISubprogram(name: "inithistory", scope: !54, file: !54, line: 30, type: !25, isLocal: false, isDefinition: true, scopeLine: 30, isOptimized: false, function: void ()* @inithistory, variables: !2)
!60 = !DISubprogram(name: "ab", scope: !54, file: !54, line: 40, type: !56, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @ab, variables: !2)
!61 = !DISubprogram(name: "solve", scope: !54, file: !54, line: 138, type: !47, isLocal: false, isDefinition: true, scopeLine: 138, isOptimized: false, function: i32 ()* @solve, variables: !2)
!62 = !DISubprogram(name: "main", scope: !54, file: !54, line: 155, type: !47, isLocal: false, isDefinition: true, scopeLine: 155, isOptimized: false, function: i32 ()* @main, variables: !2)
!63 = !{!64, !69, !73, !77, !78, !82, !83, !84, !85, !86, !90, !91}
!64 = !DIGlobalVariable(name: "Time", scope: !53, file: !54, line: 20, type: !65, isLocal: true, isDefinition: true, variable: i64* @millisecs.Time)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64", file: !6, line: 47, baseType: !66)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !67, line: 197, baseType: !68)
!67 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "/home/gleison/tf/Benchmarks/Fhourstones_31")
!68 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!69 = !DIGlobalVariable(name: "color", scope: !0, file: !6, line: 49, type: !70, isLocal: false, isDefinition: true, variable: [2 x i64]* @color)
!70 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, align: 64, elements: !71)
!71 = !{!72}
!72 = !DISubrange(count: 2)
!73 = !DIGlobalVariable(name: "moves", scope: !0, file: !6, line: 50, type: !74, isLocal: false, isDefinition: true, variable: [42 x i32]* @moves)
!74 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1344, align: 32, elements: !75)
!75 = !{!76}
!76 = !DISubrange(count: 42)
!77 = !DIGlobalVariable(name: "nplies", scope: !0, file: !6, line: 50, type: !22, isLocal: false, isDefinition: true, variable: i32* @nplies)
!78 = !DIGlobalVariable(name: "height", scope: !0, file: !6, line: 51, type: !79, isLocal: false, isDefinition: true, variable: [7 x i8]* @height)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, align: 8, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 7)
!82 = !DIGlobalVariable(name: "htindex", scope: !0, file: !12, line: 45, type: !16, isLocal: false, isDefinition: true, variable: i32* @htindex)
!83 = !DIGlobalVariable(name: "lock", scope: !0, file: !12, line: 45, type: !16, isLocal: false, isDefinition: true, variable: i32* @lock)
!84 = !DIGlobalVariable(name: "ht", scope: !0, file: !12, line: 46, type: !10, isLocal: false, isDefinition: true, variable: %struct.hashentry** @ht)
!85 = !DIGlobalVariable(name: "posed", scope: !0, file: !12, line: 48, type: !5, isLocal: false, isDefinition: true, variable: i64* @posed)
!86 = !DIGlobalVariable(name: "history", scope: !0, file: !54, line: 24, type: !87, isLocal: false, isDefinition: true, variable: [2 x [49 x i32]]* @history)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3136, align: 32, elements: !88)
!88 = !{!72, !89}
!89 = !DISubrange(count: 49)
!90 = !DIGlobalVariable(name: "nodes", scope: !0, file: !54, line: 25, type: !5, isLocal: false, isDefinition: true, variable: i64* @nodes)
!91 = !DIGlobalVariable(name: "msecs", scope: !0, file: !54, line: 25, type: !5, isLocal: false, isDefinition: true, variable: i64* @msecs)
!92 = !{i32 2, !"Dwarf Version", i32 4}
!93 = !{i32 2, !"Debug Info Version", i32 3}
!94 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!95 = !DILocation(line: 56, column: 10, scope: !24)
!96 = !DILocation(line: 57, column: 23, scope: !24)
!97 = !DILocation(line: 57, column: 12, scope: !24)
!98 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !24, file: !6, line: 55, type: !22)
!99 = !DIExpression()
!100 = !DILocation(line: 55, column: 7, scope: !24)
!101 = !DILocation(line: 58, column: 8, scope: !102)
!102 = distinct !DILexicalBlock(scope: !24, file: !6, line: 58, column: 3)
!103 = !DILocation(line: 58, column: 14, scope: !104)
!104 = distinct !DILexicalBlock(scope: !102, file: !6, line: 58, column: 3)
!105 = !DILocation(line: 58, column: 3, scope: !102)
!106 = !DILocation(line: 59, column: 26, scope: !104)
!107 = !DILocation(line: 59, column: 17, scope: !104)
!108 = !DILocation(line: 59, column: 5, scope: !104)
!109 = !DILocation(line: 59, column: 15, scope: !104)
!110 = !DILocation(line: 58, column: 23, scope: !104)
!111 = !DILocation(line: 58, column: 3, scope: !104)
!112 = !DILocation(line: 60, column: 1, scope: !24)
!113 = !DILocation(line: 64, column: 16, scope: !27)
!114 = !DILocation(line: 64, column: 22, scope: !27)
!115 = !DILocation(line: 64, column: 10, scope: !27)
!116 = !DILocation(line: 64, column: 28, scope: !27)
!117 = !DILocation(line: 64, column: 26, scope: !27)
!118 = !DILocation(line: 64, column: 39, scope: !27)
!119 = !DILocation(line: 64, column: 37, scope: !27)
!120 = !DILocation(line: 64, column: 48, scope: !27)
!121 = !DILocation(line: 64, column: 3, scope: !27)
!122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !30, file: !6, line: 71, type: !22)
!123 = !DILocation(line: 71, column: 7, scope: !30)
!124 = !DILocation(line: 73, column: 8, scope: !125)
!125 = distinct !DILexicalBlock(scope: !30, file: !6, line: 73, column: 3)
!126 = !DILocation(line: 73, column: 15, scope: !127)
!127 = distinct !DILexicalBlock(scope: !125, file: !6, line: 73, column: 3)
!128 = !DILocation(line: 73, column: 14, scope: !127)
!129 = !DILocation(line: 73, column: 3, scope: !125)
!130 = !DILocation(line: 74, column: 20, scope: !127)
!131 = !DILocation(line: 74, column: 19, scope: !127)
!132 = !DILocation(line: 74, column: 5, scope: !127)
!133 = !DILocation(line: 73, column: 24, scope: !127)
!134 = !DILocation(line: 73, column: 3, scope: !127)
!135 = !DILocation(line: 75, column: 1, scope: !30)
!136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newboard", arg: 1, scope: !31, file: !6, line: 78, type: !5)
!137 = !DILocation(line: 78, column: 20, scope: !31)
!138 = !DILocation(line: 80, column: 20, scope: !31)
!139 = !DILocation(line: 80, column: 27, scope: !31)
!140 = !DILocation(line: 80, column: 3, scope: !31)
!141 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "col", arg: 1, scope: !34, file: !6, line: 84, type: !22)
!142 = !DILocation(line: 84, column: 20, scope: !34)
!143 = !DILocation(line: 86, column: 24, scope: !34)
!144 = !DILocation(line: 86, column: 30, scope: !34)
!145 = !DILocation(line: 86, column: 18, scope: !34)
!146 = !DILocation(line: 86, column: 50, scope: !34)
!147 = !DILocation(line: 86, column: 47, scope: !34)
!148 = !DILocation(line: 86, column: 34, scope: !34)
!149 = !DILocation(line: 86, column: 10, scope: !34)
!150 = !DILocation(line: 86, column: 3, scope: !34)
!151 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newboard", arg: 1, scope: !37, file: !6, line: 90, type: !5)
!152 = !DILocation(line: 90, column: 19, scope: !37)
!153 = !DILocation(line: 92, column: 34, scope: !37)
!154 = !DILocation(line: 92, column: 23, scope: !37)
!155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !37, file: !6, line: 92, type: !5)
!156 = !DILocation(line: 92, column: 10, scope: !37)
!157 = !DILocation(line: 93, column: 15, scope: !158)
!158 = distinct !DILexicalBlock(scope: !37, file: !6, line: 93, column: 7)
!159 = !DILocation(line: 93, column: 10, scope: !158)
!160 = !DILocation(line: 93, column: 29, scope: !158)
!161 = !DILocation(line: 93, column: 7, scope: !37)
!162 = !DILocation(line: 94, column: 5, scope: !158)
!163 = !DILocation(line: 95, column: 27, scope: !37)
!164 = !DILocation(line: 95, column: 16, scope: !37)
!165 = !DILocation(line: 96, column: 15, scope: !166)
!166 = distinct !DILexicalBlock(scope: !37, file: !6, line: 96, column: 7)
!167 = !DILocation(line: 96, column: 10, scope: !166)
!168 = !DILocation(line: 96, column: 25, scope: !166)
!169 = !DILocation(line: 96, column: 7, scope: !37)
!170 = !DILocation(line: 97, column: 5, scope: !166)
!171 = !DILocation(line: 98, column: 27, scope: !37)
!172 = !DILocation(line: 98, column: 16, scope: !37)
!173 = !DILocation(line: 99, column: 15, scope: !174)
!174 = distinct !DILexicalBlock(scope: !37, file: !6, line: 99, column: 7)
!175 = !DILocation(line: 99, column: 10, scope: !174)
!176 = !DILocation(line: 99, column: 25, scope: !174)
!177 = !DILocation(line: 99, column: 7, scope: !37)
!178 = !DILocation(line: 100, column: 5, scope: !174)
!179 = !DILocation(line: 101, column: 27, scope: !37)
!180 = !DILocation(line: 101, column: 16, scope: !37)
!181 = !DILocation(line: 102, column: 18, scope: !37)
!182 = !DILocation(line: 102, column: 13, scope: !37)
!183 = !DILocation(line: 102, column: 25, scope: !37)
!184 = !DILocation(line: 102, column: 3, scope: !37)
!185 = !DILocation(line: 103, column: 1, scope: !37)
!186 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "newboard", arg: 1, scope: !38, file: !6, line: 106, type: !5)
!187 = !DILocation(line: 106, column: 26, scope: !38)
!188 = !DILocation(line: 108, column: 10, scope: !38)
!189 = !DILocation(line: 108, column: 28, scope: !38)
!190 = !DILocation(line: 108, column: 31, scope: !38)
!191 = !DILocation(line: 108, column: 28, scope: !192)
!192 = !DILexicalBlockFile(scope: !38, file: !6, discriminator: 2)
!193 = !DILocation(line: 108, column: 3, scope: !38)
!194 = !DILocation(line: 115, column: 13, scope: !39)
!195 = !DILocation(line: 115, column: 7, scope: !39)
!196 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !39, file: !6, line: 113, type: !22)
!197 = !DILocation(line: 113, column: 7, scope: !39)
!198 = !DILocation(line: 116, column: 35, scope: !39)
!199 = !DILocation(line: 116, column: 33, scope: !39)
!200 = !DILocation(line: 116, column: 31, scope: !39)
!201 = !DILocation(line: 116, column: 9, scope: !39)
!202 = !DILocation(line: 116, column: 15, scope: !39)
!203 = !DILocation(line: 116, column: 3, scope: !39)
!204 = !DILocation(line: 116, column: 19, scope: !39)
!205 = !DILocation(line: 117, column: 1, scope: !39)
!206 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !40, file: !6, line: 119, type: !22)
!207 = !DILocation(line: 119, column: 19, scope: !40)
!208 = !DILocation(line: 121, column: 33, scope: !40)
!209 = !DILocation(line: 121, column: 42, scope: !40)
!210 = !DILocation(line: 121, column: 31, scope: !40)
!211 = !DILocation(line: 121, column: 9, scope: !40)
!212 = !DILocation(line: 121, column: 15, scope: !40)
!213 = !DILocation(line: 121, column: 3, scope: !40)
!214 = !DILocation(line: 121, column: 19, scope: !40)
!215 = !DILocation(line: 122, column: 15, scope: !40)
!216 = !DILocation(line: 122, column: 3, scope: !40)
!217 = !DILocation(line: 122, column: 19, scope: !40)
!218 = !DILocation(line: 123, column: 1, scope: !40)
!219 = !DILocation(line: 52, column: 21, scope: !43)
!220 = !DILocation(line: 52, column: 8, scope: !43)
!221 = !DILocation(line: 52, column: 6, scope: !43)
!222 = !DILocation(line: 53, column: 1, scope: !43)
!223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !44, file: !12, line: 57, type: !22)
!224 = !DILocation(line: 57, column: 7, scope: !44)
!225 = !DILocation(line: 59, column: 8, scope: !226)
!226 = distinct !DILexicalBlock(scope: !44, file: !12, line: 59, column: 3)
!227 = !DILocation(line: 59, column: 14, scope: !228)
!228 = distinct !DILexicalBlock(scope: !226, file: !12, line: 59, column: 3)
!229 = !DILocation(line: 59, column: 3, scope: !226)
!230 = !DILocation(line: 60, column: 5, scope: !231)
!231 = distinct !DILexicalBlock(scope: !228, file: !12, line: 59, column: 30)
!232 = !DILocation(line: 60, column: 24, scope: !231)
!233 = !DILocation(line: 60, column: 13, scope: !231)
!234 = !DILocation(line: 61, column: 3, scope: !231)
!235 = !DILocation(line: 59, column: 26, scope: !228)
!236 = !DILocation(line: 59, column: 3, scope: !228)
!237 = !DILocation(line: 62, column: 9, scope: !44)
!238 = !DILocation(line: 63, column: 1, scope: !44)
!239 = !DILocation(line: 67, column: 24, scope: !45)
!240 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "htemp", scope: !45, file: !12, line: 67, type: !5)
!241 = !DILocation(line: 67, column: 16, scope: !45)
!242 = !DILocation(line: 68, column: 7, scope: !243)
!243 = distinct !DILexicalBlock(scope: !45, file: !12, line: 68, column: 7)
!244 = !DILocation(line: 68, column: 14, scope: !243)
!245 = !DILocation(line: 68, column: 7, scope: !45)
!246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "htemp2", scope: !247, file: !12, line: 69, type: !5)
!247 = distinct !DILexicalBlock(scope: !243, file: !12, line: 68, column: 25)
!248 = !DILocation(line: 69, column: 12, scope: !247)
!249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "htmp", scope: !45, file: !12, line: 67, type: !5)
!250 = !DILocation(line: 67, column: 10, scope: !45)
!251 = !DILocation(line: 70, column: 10, scope: !252)
!252 = distinct !DILexicalBlock(scope: !247, file: !12, line: 70, column: 5)
!253 = !DILocation(line: 70, column: 26, scope: !254)
!254 = distinct !DILexicalBlock(scope: !252, file: !12, line: 70, column: 5)
!255 = !DILocation(line: 70, column: 5, scope: !252)
!256 = !DILocation(line: 71, column: 22, scope: !254)
!257 = !DILocation(line: 71, column: 35, scope: !254)
!258 = !DILocation(line: 71, column: 27, scope: !254)
!259 = !DILocation(line: 71, column: 7, scope: !254)
!260 = !DILocation(line: 70, column: 35, scope: !254)
!261 = !DILocation(line: 70, column: 5, scope: !254)
!262 = !DILocation(line: 72, column: 16, scope: !263)
!263 = distinct !DILexicalBlock(scope: !247, file: !12, line: 72, column: 9)
!264 = !DILocation(line: 72, column: 9, scope: !247)
!265 = !DILocation(line: 73, column: 7, scope: !263)
!266 = !DILocation(line: 74, column: 3, scope: !247)
!267 = !DILocation(line: 75, column: 31, scope: !45)
!268 = !DILocation(line: 75, column: 10, scope: !45)
!269 = !DILocation(line: 75, column: 8, scope: !45)
!270 = !DILocation(line: 76, column: 34, scope: !45)
!271 = !DILocation(line: 76, column: 13, scope: !45)
!272 = !DILocation(line: 76, column: 11, scope: !45)
!273 = !DILocation(line: 77, column: 1, scope: !45)
!274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "he", scope: !46, file: !12, line: 81, type: !11)
!275 = !DILocation(line: 81, column: 13, scope: !46)
!276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "biglock", scope: !46, file: !12, line: 82, type: !22)
!277 = !DILocation(line: 82, column: 7, scope: !46)
!278 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newlock", scope: !46, file: !12, line: 82, type: !22)
!279 = !DILocation(line: 82, column: 15, scope: !46)
!280 = !DILocation(line: 84, column: 3, scope: !46)
!281 = !DILocation(line: 85, column: 11, scope: !46)
!282 = !DILocation(line: 85, column: 8, scope: !46)
!283 = !DILocation(line: 86, column: 10, scope: !284)
!284 = distinct !DILexicalBlock(scope: !46, file: !12, line: 86, column: 7)
!285 = !DILocation(line: 86, column: 21, scope: !284)
!286 = !DILocation(line: 86, column: 18, scope: !284)
!287 = !DILocation(line: 86, column: 7, scope: !46)
!288 = !DILocation(line: 87, column: 15, scope: !284)
!289 = !DILocation(line: 87, column: 5, scope: !284)
!290 = !DILocation(line: 88, column: 10, scope: !291)
!291 = distinct !DILexicalBlock(scope: !46, file: !12, line: 88, column: 7)
!292 = !DILocation(line: 88, column: 21, scope: !291)
!293 = !DILocation(line: 88, column: 18, scope: !291)
!294 = !DILocation(line: 88, column: 7, scope: !46)
!295 = !DILocation(line: 89, column: 15, scope: !291)
!296 = !DILocation(line: 89, column: 5, scope: !291)
!297 = !DILocation(line: 90, column: 3, scope: !46)
!298 = !DILocation(line: 91, column: 1, scope: !46)
!299 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !49, file: !12, line: 93, type: !22)
!300 = !DILocation(line: 93, column: 20, scope: !49)
!301 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "lock", arg: 2, scope: !49, file: !12, line: 93, type: !16)
!302 = !DILocation(line: 93, column: 36, scope: !49)
!303 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "score", arg: 3, scope: !49, file: !12, line: 93, type: !22)
!304 = !DILocation(line: 93, column: 46, scope: !49)
!305 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "work", arg: 4, scope: !49, file: !12, line: 93, type: !22)
!306 = !DILocation(line: 93, column: 57, scope: !49)
!307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "he", scope: !49, file: !12, line: 95, type: !11)
!308 = !DILocation(line: 95, column: 13, scope: !49)
!309 = !DILocation(line: 97, column: 8, scope: !49)
!310 = !DILocation(line: 98, column: 8, scope: !49)
!311 = !DILocation(line: 99, column: 10, scope: !312)
!312 = distinct !DILexicalBlock(scope: !49, file: !12, line: 99, column: 7)
!313 = !DILocation(line: 99, column: 18, scope: !312)
!314 = !DILocation(line: 99, column: 26, scope: !312)
!315 = !DILocation(line: 99, column: 40, scope: !312)
!316 = !DILocation(line: 99, column: 34, scope: !312)
!317 = !DILocation(line: 99, column: 7, scope: !49)
!318 = !DILocation(line: 100, column: 8, scope: !319)
!319 = distinct !DILexicalBlock(scope: !312, file: !12, line: 99, column: 49)
!320 = !DILocation(line: 100, column: 16, scope: !319)
!321 = !DILocation(line: 101, column: 8, scope: !319)
!322 = !DILocation(line: 101, column: 17, scope: !319)
!323 = !DILocation(line: 102, column: 8, scope: !319)
!324 = !DILocation(line: 102, column: 16, scope: !319)
!325 = !DILocation(line: 103, column: 3, scope: !319)
!326 = !DILocation(line: 104, column: 8, scope: !327)
!327 = distinct !DILexicalBlock(scope: !312, file: !12, line: 103, column: 10)
!328 = !DILocation(line: 104, column: 16, scope: !327)
!329 = !DILocation(line: 105, column: 8, scope: !327)
!330 = !DILocation(line: 105, column: 17, scope: !327)
!331 = !DILocation(line: 107, column: 3, scope: !49)
!332 = !DILocation(line: 107, column: 11, scope: !49)
!333 = !DILocation(line: 108, column: 1, scope: !49)
!334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "typecnt", scope: !52, file: !12, line: 113, type: !335)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 256, align: 32, elements: !336)
!336 = !{!337}
!337 = !DISubrange(count: 8)
!338 = !DILocation(line: 113, column: 7, scope: !52)
!339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "he", scope: !52, file: !12, line: 114, type: !11)
!340 = !DILocation(line: 114, column: 13, scope: !52)
!341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !52, file: !12, line: 112, type: !22)
!342 = !DILocation(line: 112, column: 14, scope: !52)
!343 = !DILocation(line: 116, column: 3, scope: !344)
!344 = distinct !DILexicalBlock(scope: !52, file: !12, line: 116, column: 3)
!345 = !DILocation(line: 116, column: 8, scope: !344)
!346 = !DILocation(line: 116, column: 14, scope: !347)
!347 = distinct !DILexicalBlock(scope: !344, file: !12, line: 116, column: 3)
!348 = !DILocation(line: 117, column: 5, scope: !347)
!349 = !DILocation(line: 117, column: 16, scope: !347)
!350 = !DILocation(line: 116, column: 19, scope: !347)
!351 = !DILocation(line: 116, column: 3, scope: !347)
!352 = !DILocation(line: 118, column: 8, scope: !353)
!353 = distinct !DILexicalBlock(scope: !52, file: !12, line: 118, column: 3)
!354 = !DILocation(line: 118, column: 14, scope: !355)
!355 = distinct !DILexicalBlock(scope: !353, file: !12, line: 118, column: 3)
!356 = !DILocation(line: 118, column: 3, scope: !353)
!357 = !DILocation(line: 119, column: 10, scope: !358)
!358 = distinct !DILexicalBlock(scope: !355, file: !12, line: 118, column: 30)
!359 = !DILocation(line: 120, column: 12, scope: !360)
!360 = distinct !DILexicalBlock(scope: !358, file: !12, line: 120, column: 9)
!361 = !DILocation(line: 120, column: 20, scope: !360)
!362 = !DILocation(line: 120, column: 9, scope: !358)
!363 = !DILocation(line: 121, column: 18, scope: !360)
!364 = !DILocation(line: 121, column: 7, scope: !360)
!365 = !DILocation(line: 121, column: 27, scope: !360)
!366 = !DILocation(line: 122, column: 12, scope: !367)
!367 = distinct !DILexicalBlock(scope: !358, file: !12, line: 122, column: 9)
!368 = !DILocation(line: 122, column: 20, scope: !367)
!369 = !DILocation(line: 122, column: 9, scope: !358)
!370 = !DILocation(line: 123, column: 18, scope: !367)
!371 = !DILocation(line: 123, column: 7, scope: !367)
!372 = !DILocation(line: 123, column: 27, scope: !367)
!373 = !DILocation(line: 124, column: 3, scope: !358)
!374 = !DILocation(line: 118, column: 26, scope: !355)
!375 = !DILocation(line: 118, column: 3, scope: !355)
!376 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "total", scope: !52, file: !12, line: 112, type: !22)
!377 = !DILocation(line: 112, column: 7, scope: !52)
!378 = !DILocation(line: 125, column: 8, scope: !379)
!379 = distinct !DILexicalBlock(scope: !52, file: !12, line: 125, column: 3)
!380 = !DILocation(line: 125, column: 3, scope: !379)
!381 = !DILocation(line: 125, column: 25, scope: !382)
!382 = distinct !DILexicalBlock(scope: !379, file: !12, line: 125, column: 3)
!383 = !DILocation(line: 126, column: 14, scope: !382)
!384 = !DILocation(line: 126, column: 11, scope: !382)
!385 = !DILocation(line: 126, column: 5, scope: !382)
!386 = !DILocation(line: 125, column: 33, scope: !382)
!387 = !DILocation(line: 125, column: 3, scope: !382)
!388 = !DILocation(line: 127, column: 13, scope: !389)
!389 = distinct !DILexicalBlock(scope: !52, file: !12, line: 127, column: 7)
!390 = !DILocation(line: 127, column: 7, scope: !52)
!391 = !DILocation(line: 129, column: 7, scope: !392)
!392 = distinct !DILexicalBlock(scope: !389, file: !12, line: 127, column: 18)
!393 = !DILocation(line: 129, column: 21, scope: !392)
!394 = !DILocation(line: 129, column: 20, scope: !392)
!395 = !DILocation(line: 129, column: 36, scope: !392)
!396 = !DILocation(line: 129, column: 54, scope: !392)
!397 = !DILocation(line: 129, column: 53, scope: !392)
!398 = !DILocation(line: 130, column: 7, scope: !392)
!399 = !DILocation(line: 130, column: 21, scope: !392)
!400 = !DILocation(line: 130, column: 20, scope: !392)
!401 = !DILocation(line: 130, column: 36, scope: !392)
!402 = !DILocation(line: 130, column: 53, scope: !392)
!403 = !DILocation(line: 130, column: 52, scope: !392)
!404 = !DILocation(line: 131, column: 7, scope: !392)
!405 = !DILocation(line: 131, column: 20, scope: !392)
!406 = !DILocation(line: 131, column: 19, scope: !392)
!407 = !DILocation(line: 128, column: 5, scope: !392)
!408 = !DILocation(line: 132, column: 3, scope: !392)
!409 = !DILocation(line: 133, column: 1, scope: !52)
!410 = !DILocation(line: 21, column: 14, scope: !53)
!411 = !DILocation(line: 21, column: 3, scope: !53)
!412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !55, file: !54, line: 27, type: !22)
!413 = !DILocation(line: 27, column: 13, scope: !55)
!414 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !55, file: !54, line: 27, type: !22)
!415 = !DILocation(line: 27, column: 20, scope: !55)
!416 = !DILocation(line: 27, column: 34, scope: !55)
!417 = !DILocation(line: 27, column: 32, scope: !55)
!418 = !DILocation(line: 27, column: 25, scope: !419)
!419 = !DILexicalBlockFile(scope: !420, file: !54, discriminator: 4)
!420 = !DILexicalBlockFile(scope: !55, file: !54, discriminator: 3)
!421 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !58, file: !54, line: 28, type: !22)
!422 = !DILocation(line: 28, column: 13, scope: !58)
!423 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !58, file: !54, line: 28, type: !22)
!424 = !DILocation(line: 28, column: 20, scope: !58)
!425 = !DILocation(line: 28, column: 34, scope: !58)
!426 = !DILocation(line: 28, column: 32, scope: !58)
!427 = !DILocation(line: 28, column: 25, scope: !428)
!428 = !DILexicalBlockFile(scope: !429, file: !54, discriminator: 4)
!429 = !DILexicalBlockFile(scope: !58, file: !54, discriminator: 3)
!430 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "side", scope: !59, file: !54, line: 31, type: !22)
!431 = !DILocation(line: 31, column: 7, scope: !59)
!432 = !DILocation(line: 32, column: 8, scope: !433)
!433 = distinct !DILexicalBlock(scope: !59, file: !54, line: 32, column: 3)
!434 = !DILocation(line: 32, column: 23, scope: !435)
!435 = distinct !DILexicalBlock(scope: !433, file: !54, line: 32, column: 3)
!436 = !DILocation(line: 32, column: 3, scope: !433)
!437 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !59, file: !54, line: 31, type: !22)
!438 = !DILocation(line: 31, column: 13, scope: !59)
!439 = !DILocation(line: 33, column: 10, scope: !440)
!440 = distinct !DILexicalBlock(scope: !435, file: !54, line: 33, column: 5)
!441 = !DILocation(line: 33, column: 19, scope: !442)
!442 = distinct !DILexicalBlock(scope: !440, file: !54, line: 33, column: 5)
!443 = !DILocation(line: 33, column: 5, scope: !440)
!444 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !59, file: !54, line: 31, type: !22)
!445 = !DILocation(line: 31, column: 16, scope: !59)
!446 = !DILocation(line: 34, column: 12, scope: !447)
!447 = distinct !DILexicalBlock(scope: !442, file: !54, line: 34, column: 7)
!448 = !DILocation(line: 34, column: 21, scope: !449)
!449 = distinct !DILexicalBlock(scope: !447, file: !54, line: 34, column: 7)
!450 = !DILocation(line: 34, column: 7, scope: !447)
!451 = !DILocation(line: 37, column: 21, scope: !449)
!452 = !DILocation(line: 37, column: 19, scope: !449)
!453 = !DILocation(line: 37, column: 41, scope: !449)
!454 = !DILocation(line: 37, column: 62, scope: !449)
!455 = !DILocation(line: 37, column: 53, scope: !449)
!456 = !DILocation(line: 37, column: 51, scope: !449)
!457 = !DILocation(line: 37, column: 33, scope: !449)
!458 = !DILocation(line: 37, column: 31, scope: !449)
!459 = !DILocation(line: 37, column: 77, scope: !449)
!460 = !DILocation(line: 37, column: 70, scope: !449)
!461 = !DILocation(line: 37, column: 68, scope: !449)
!462 = !DILocation(line: 37, column: 90, scope: !449)
!463 = !DILocation(line: 37, column: 88, scope: !449)
!464 = !DILocation(line: 36, column: 84, scope: !449)
!465 = !DILocation(line: 36, column: 71, scope: !449)
!466 = !DILocation(line: 36, column: 89, scope: !449)
!467 = !DILocation(line: 36, column: 54, scope: !449)
!468 = !DILocation(line: 36, column: 94, scope: !449)
!469 = !DILocation(line: 36, column: 30, scope: !449)
!470 = !DILocation(line: 36, column: 34, scope: !449)
!471 = !DILocation(line: 36, column: 43, scope: !449)
!472 = !DILocation(line: 36, column: 47, scope: !449)
!473 = !DILocation(line: 36, column: 13, scope: !449)
!474 = !DILocation(line: 36, column: 52, scope: !449)
!475 = !DILocation(line: 35, column: 67, scope: !449)
!476 = !DILocation(line: 35, column: 54, scope: !449)
!477 = !DILocation(line: 35, column: 72, scope: !449)
!478 = !DILocation(line: 35, column: 81, scope: !449)
!479 = !DILocation(line: 35, column: 85, scope: !449)
!480 = !DILocation(line: 35, column: 37, scope: !449)
!481 = !DILocation(line: 35, column: 90, scope: !449)
!482 = !DILocation(line: 35, column: 26, scope: !449)
!483 = !DILocation(line: 35, column: 30, scope: !449)
!484 = !DILocation(line: 35, column: 9, scope: !449)
!485 = !DILocation(line: 35, column: 35, scope: !449)
!486 = !DILocation(line: 34, column: 32, scope: !449)
!487 = !DILocation(line: 34, column: 7, scope: !449)
!488 = !DILocation(line: 37, column: 98, scope: !447)
!489 = !DILocation(line: 33, column: 39, scope: !442)
!490 = !DILocation(line: 33, column: 5, scope: !442)
!491 = !DILocation(line: 37, column: 98, scope: !440)
!492 = !DILocation(line: 32, column: 32, scope: !435)
!493 = !DILocation(line: 32, column: 3, scope: !435)
!494 = !DILocation(line: 38, column: 1, scope: !59)
!495 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "alpha", arg: 1, scope: !60, file: !54, line: 40, type: !22)
!496 = !DILocation(line: 40, column: 12, scope: !60)
!497 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "beta", arg: 2, scope: !60, file: !54, line: 40, type: !22)
!498 = !DILocation(line: 40, column: 23, scope: !60)
!499 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "av", scope: !60, file: !54, line: 43, type: !500)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 224, align: 32, elements: !80)
!501 = !DILocation(line: 43, column: 12, scope: !60)
!502 = !DILocation(line: 48, column: 8, scope: !60)
!503 = !DILocation(line: 49, column: 7, scope: !504)
!504 = distinct !DILexicalBlock(scope: !60, file: !54, line: 49, column: 7)
!505 = !DILocation(line: 49, column: 14, scope: !504)
!506 = !DILocation(line: 49, column: 7, scope: !60)
!507 = !DILocation(line: 50, column: 5, scope: !504)
!508 = !DILocation(line: 51, column: 23, scope: !60)
!509 = !DILocation(line: 51, column: 30, scope: !60)
!510 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "side", scope: !60, file: !54, line: 45, type: !22)
!511 = !DILocation(line: 45, column: 7, scope: !60)
!512 = !DILocation(line: 51, column: 35, scope: !60)
!513 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "otherside", scope: !60, file: !54, line: 45, type: !22)
!514 = !DILocation(line: 45, column: 13, scope: !60)
!515 = !DILocation(line: 52, column: 11, scope: !60)
!516 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "other", scope: !60, file: !54, line: 44, type: !5)
!517 = !DILocation(line: 44, column: 26, scope: !60)
!518 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nav", scope: !60, file: !54, line: 43, type: !22)
!519 = !DILocation(line: 43, column: 7, scope: !60)
!520 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !60, file: !54, line: 41, type: !22)
!521 = !DILocation(line: 41, column: 14, scope: !60)
!522 = !DILocation(line: 53, column: 8, scope: !523)
!523 = distinct !DILexicalBlock(scope: !60, file: !54, line: 53, column: 3)
!524 = !DILocation(line: 53, column: 23, scope: !525)
!525 = distinct !DILexicalBlock(scope: !523, file: !54, line: 53, column: 3)
!526 = !DILocation(line: 53, column: 3, scope: !523)
!527 = !DILocation(line: 54, column: 36, scope: !528)
!528 = distinct !DILexicalBlock(scope: !525, file: !54, line: 53, column: 37)
!529 = !DILocation(line: 54, column: 33, scope: !528)
!530 = !DILocation(line: 54, column: 20, scope: !528)
!531 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newbrd", scope: !60, file: !54, line: 44, type: !5)
!532 = !DILocation(line: 44, column: 18, scope: !60)
!533 = !DILocation(line: 55, column: 10, scope: !534)
!534 = distinct !DILexicalBlock(scope: !528, file: !54, line: 55, column: 9)
!535 = !DILocation(line: 55, column: 9, scope: !528)
!536 = !DILocation(line: 56, column: 7, scope: !534)
!537 = !DILocation(line: 57, column: 52, scope: !528)
!538 = !DILocation(line: 57, column: 49, scope: !528)
!539 = !DILocation(line: 57, column: 36, scope: !528)
!540 = !DILocation(line: 57, column: 16, scope: !528)
!541 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "winontop", scope: !60, file: !54, line: 42, type: !22)
!542 = !DILocation(line: 42, column: 7, scope: !60)
!543 = !DILocation(line: 58, column: 9, scope: !544)
!544 = distinct !DILexicalBlock(scope: !528, file: !54, line: 58, column: 9)
!545 = !DILocation(line: 58, column: 9, scope: !528)
!546 = !DILocation(line: 59, column: 11, scope: !547)
!547 = distinct !DILexicalBlock(scope: !548, file: !54, line: 59, column: 11)
!548 = distinct !DILexicalBlock(scope: !544, file: !54, line: 58, column: 25)
!549 = !DILocation(line: 59, column: 11, scope: !548)
!550 = !DILocation(line: 60, column: 9, scope: !547)
!551 = !DILocation(line: 62, column: 13, scope: !548)
!552 = !DILocation(line: 62, column: 7, scope: !548)
!553 = !DILocation(line: 62, column: 17, scope: !548)
!554 = !DILocation(line: 63, column: 7, scope: !548)
!555 = !DILocation(line: 63, column: 14, scope: !556)
!556 = !DILexicalBlockFile(scope: !557, file: !54, discriminator: 2)
!557 = !DILexicalBlockFile(scope: !548, file: !54, discriminator: 1)
!558 = !DILocation(line: 63, column: 18, scope: !548)
!559 = !DILocation(line: 64, column: 49, scope: !560)
!560 = distinct !DILexicalBlock(scope: !548, file: !54, line: 64, column: 13)
!561 = !DILocation(line: 64, column: 46, scope: !560)
!562 = !DILocation(line: 64, column: 33, scope: !560)
!563 = !DILocation(line: 64, column: 13, scope: !560)
!564 = !DILocation(line: 64, column: 13, scope: !548)
!565 = !DILocation(line: 65, column: 11, scope: !560)
!566 = !DILocation(line: 66, column: 7, scope: !548)
!567 = !DILocation(line: 68, column: 10, scope: !568)
!568 = distinct !DILexicalBlock(scope: !528, file: !54, line: 68, column: 9)
!569 = !DILocation(line: 68, column: 9, scope: !528)
!570 = !DILocation(line: 69, column: 13, scope: !568)
!571 = !DILocation(line: 69, column: 7, scope: !568)
!572 = !DILocation(line: 69, column: 17, scope: !568)
!573 = !DILocation(line: 70, column: 3, scope: !528)
!574 = !DILocation(line: 53, column: 33, scope: !525)
!575 = !DILocation(line: 53, column: 3, scope: !525)
!576 = !DILocation(line: 71, column: 11, scope: !577)
!577 = distinct !DILexicalBlock(scope: !60, file: !54, line: 71, column: 7)
!578 = !DILocation(line: 71, column: 7, scope: !60)
!579 = !DILocation(line: 72, column: 5, scope: !577)
!580 = !DILocation(line: 73, column: 7, scope: !581)
!581 = distinct !DILexicalBlock(scope: !60, file: !54, line: 73, column: 7)
!582 = !DILocation(line: 73, column: 14, scope: !581)
!583 = !DILocation(line: 73, column: 7, scope: !60)
!584 = !DILocation(line: 74, column: 5, scope: !581)
!585 = !DILocation(line: 75, column: 11, scope: !586)
!586 = distinct !DILexicalBlock(scope: !60, file: !54, line: 75, column: 7)
!587 = !DILocation(line: 75, column: 7, scope: !60)
!588 = !DILocation(line: 76, column: 14, scope: !589)
!589 = distinct !DILexicalBlock(scope: !586, file: !54, line: 75, column: 17)
!590 = !DILocation(line: 76, column: 5, scope: !589)
!591 = !DILocation(line: 77, column: 34, scope: !589)
!592 = !DILocation(line: 77, column: 50, scope: !589)
!593 = !DILocation(line: 77, column: 23, scope: !589)
!594 = !DILocation(line: 77, column: 21, scope: !589)
!595 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "score", scope: !60, file: !54, line: 41, type: !22)
!596 = !DILocation(line: 41, column: 31, scope: !60)
!597 = !DILocation(line: 78, column: 5, scope: !589)
!598 = !DILocation(line: 79, column: 5, scope: !589)
!599 = !DILocation(line: 81, column: 13, scope: !60)
!600 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ttscore", scope: !60, file: !54, line: 41, type: !22)
!601 = !DILocation(line: 41, column: 38, scope: !60)
!602 = !DILocation(line: 82, column: 15, scope: !603)
!603 = distinct !DILexicalBlock(scope: !60, file: !54, line: 82, column: 7)
!604 = !DILocation(line: 82, column: 7, scope: !60)
!605 = !DILocation(line: 83, column: 17, scope: !606)
!606 = distinct !DILexicalBlock(scope: !607, file: !54, line: 83, column: 9)
!607 = distinct !DILexicalBlock(scope: !603, file: !54, line: 82, column: 27)
!608 = !DILocation(line: 83, column: 9, scope: !607)
!609 = !DILocation(line: 84, column: 25, scope: !610)
!610 = distinct !DILexicalBlock(scope: !611, file: !54, line: 84, column: 11)
!611 = distinct !DILexicalBlock(scope: !606, file: !54, line: 83, column: 30)
!612 = !DILocation(line: 84, column: 11, scope: !611)
!613 = !DILocation(line: 85, column: 9, scope: !610)
!614 = !DILocation(line: 86, column: 5, scope: !611)
!615 = !DILocation(line: 86, column: 24, scope: !616)
!616 = distinct !DILexicalBlock(scope: !606, file: !54, line: 86, column: 16)
!617 = !DILocation(line: 86, column: 16, scope: !606)
!618 = !DILocation(line: 87, column: 26, scope: !619)
!619 = distinct !DILexicalBlock(scope: !620, file: !54, line: 87, column: 11)
!620 = distinct !DILexicalBlock(scope: !616, file: !54, line: 86, column: 36)
!621 = !DILocation(line: 87, column: 11, scope: !620)
!622 = !DILocation(line: 88, column: 9, scope: !619)
!623 = !DILocation(line: 89, column: 5, scope: !620)
!624 = !DILocation(line: 90, column: 7, scope: !616)
!625 = !DILocation(line: 91, column: 3, scope: !607)
!626 = !DILocation(line: 92, column: 14, scope: !60)
!627 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hashindx", scope: !60, file: !54, line: 46, type: !16)
!628 = !DILocation(line: 46, column: 16, scope: !60)
!629 = !DILocation(line: 93, column: 14, scope: !60)
!630 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hashlock", scope: !60, file: !54, line: 46, type: !16)
!631 = !DILocation(line: 46, column: 26, scope: !60)
!632 = !DILocation(line: 94, column: 12, scope: !60)
!633 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "poscnt", scope: !60, file: !54, line: 44, type: !5)
!634 = !DILocation(line: 44, column: 10, scope: !60)
!635 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "besti", scope: !60, file: !54, line: 41, type: !22)
!636 = !DILocation(line: 41, column: 7, scope: !60)
!637 = !DILocation(line: 97, column: 8, scope: !638)
!638 = distinct !DILexicalBlock(scope: !60, file: !54, line: 97, column: 3)
!639 = !DILocation(line: 97, column: 17, scope: !640)
!640 = distinct !DILexicalBlock(scope: !638, file: !54, line: 97, column: 3)
!641 = !DILocation(line: 97, column: 3, scope: !638)
!642 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !60, file: !54, line: 41, type: !22)
!643 = !DILocation(line: 41, column: 20, scope: !60)
!644 = !DILocation(line: 98, column: 37, scope: !645)
!645 = distinct !DILexicalBlock(scope: !640, file: !54, line: 97, column: 29)
!646 = !DILocation(line: 98, column: 30, scope: !645)
!647 = !DILocation(line: 98, column: 25, scope: !645)
!648 = !DILocation(line: 98, column: 11, scope: !645)
!649 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !60, file: !54, line: 41, type: !22)
!650 = !DILocation(line: 41, column: 26, scope: !60)
!651 = !DILocation(line: 99, column: 16, scope: !652)
!652 = distinct !DILexicalBlock(scope: !645, file: !54, line: 99, column: 5)
!653 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !60, file: !54, line: 41, type: !22)
!654 = !DILocation(line: 41, column: 17, scope: !60)
!655 = !DILocation(line: 99, column: 10, scope: !652)
!656 = !DILocation(line: 99, column: 23, scope: !657)
!657 = distinct !DILexicalBlock(scope: !652, file: !54, line: 99, column: 5)
!658 = !DILocation(line: 99, column: 5, scope: !652)
!659 = !DILocation(line: 100, column: 37, scope: !660)
!660 = distinct !DILexicalBlock(scope: !657, file: !54, line: 99, column: 35)
!661 = !DILocation(line: 100, column: 30, scope: !660)
!662 = !DILocation(line: 100, column: 25, scope: !660)
!663 = !DILocation(line: 100, column: 11, scope: !660)
!664 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !60, file: !54, line: 41, type: !22)
!665 = !DILocation(line: 41, column: 23, scope: !60)
!666 = !DILocation(line: 101, column: 13, scope: !667)
!667 = distinct !DILexicalBlock(scope: !660, file: !54, line: 101, column: 11)
!668 = !DILocation(line: 101, column: 11, scope: !660)
!669 = !DILocation(line: 104, column: 7, scope: !670)
!670 = distinct !DILexicalBlock(scope: !667, file: !54, line: 101, column: 20)
!671 = !DILocation(line: 105, column: 5, scope: !660)
!672 = !DILocation(line: 99, column: 31, scope: !657)
!673 = !DILocation(line: 99, column: 5, scope: !657)
!674 = !DILocation(line: 106, column: 14, scope: !675)
!675 = distinct !DILexicalBlock(scope: !645, file: !54, line: 106, column: 5)
!676 = !DILocation(line: 106, column: 10, scope: !675)
!677 = !DILocation(line: 106, column: 23, scope: !678)
!678 = distinct !DILexicalBlock(scope: !675, file: !54, line: 106, column: 5)
!679 = !DILocation(line: 106, column: 5, scope: !675)
!680 = !DILocation(line: 107, column: 20, scope: !678)
!681 = !DILocation(line: 107, column: 15, scope: !678)
!682 = !DILocation(line: 107, column: 7, scope: !678)
!683 = !DILocation(line: 107, column: 13, scope: !678)
!684 = !DILocation(line: 106, column: 29, scope: !678)
!685 = !DILocation(line: 106, column: 5, scope: !678)
!686 = !DILocation(line: 108, column: 14, scope: !645)
!687 = !DILocation(line: 108, column: 20, scope: !645)
!688 = !DILocation(line: 108, column: 5, scope: !645)
!689 = !DILocation(line: 109, column: 32, scope: !645)
!690 = !DILocation(line: 109, column: 48, scope: !645)
!691 = !DILocation(line: 109, column: 21, scope: !645)
!692 = !DILocation(line: 109, column: 19, scope: !645)
!693 = !DILocation(line: 110, column: 5, scope: !645)
!694 = !DILocation(line: 111, column: 13, scope: !695)
!695 = distinct !DILexicalBlock(scope: !645, file: !54, line: 111, column: 9)
!696 = !DILocation(line: 111, column: 9, scope: !645)
!697 = !DILocation(line: 113, column: 25, scope: !698)
!698 = distinct !DILexicalBlock(scope: !699, file: !54, line: 113, column: 11)
!699 = distinct !DILexicalBlock(scope: !695, file: !54, line: 111, column: 22)
!700 = !DILocation(line: 113, column: 33, scope: !698)
!701 = !DILocation(line: 113, column: 36, scope: !702)
!702 = !DILexicalBlockFile(scope: !698, file: !54, discriminator: 1)
!703 = !DILocation(line: 113, column: 43, scope: !698)
!704 = !DILocation(line: 113, column: 54, scope: !698)
!705 = !DILocation(line: 113, column: 71, scope: !698)
!706 = !DILocation(line: 113, column: 11, scope: !699)
!707 = !DILocation(line: 114, column: 19, scope: !708)
!708 = distinct !DILexicalBlock(scope: !709, file: !54, line: 114, column: 13)
!709 = distinct !DILexicalBlock(scope: !698, file: !54, line: 113, column: 80)
!710 = !DILocation(line: 114, column: 27, scope: !708)
!711 = !DILocation(line: 114, column: 38, scope: !708)
!712 = !DILocation(line: 114, column: 32, scope: !708)
!713 = !DILocation(line: 114, column: 13, scope: !709)
!714 = !DILocation(line: 115, column: 11, scope: !708)
!715 = !DILocation(line: 116, column: 19, scope: !716)
!716 = distinct !DILexicalBlock(scope: !709, file: !54, line: 116, column: 13)
!717 = !DILocation(line: 116, column: 13, scope: !709)
!718 = !DILocation(line: 117, column: 16, scope: !719)
!719 = distinct !DILexicalBlock(scope: !720, file: !54, line: 117, column: 11)
!720 = distinct !DILexicalBlock(scope: !716, file: !54, line: 116, column: 24)
!721 = !DILocation(line: 117, column: 25, scope: !722)
!722 = distinct !DILexicalBlock(scope: !719, file: !54, line: 117, column: 11)
!723 = !DILocation(line: 117, column: 11, scope: !719)
!724 = !DILocation(line: 118, column: 39, scope: !722)
!725 = !DILocation(line: 118, column: 32, scope: !722)
!726 = !DILocation(line: 118, column: 27, scope: !722)
!727 = !DILocation(line: 118, column: 13, scope: !722)
!728 = !DILocation(line: 118, column: 46, scope: !722)
!729 = !DILocation(line: 117, column: 35, scope: !722)
!730 = !DILocation(line: 117, column: 11, scope: !722)
!731 = !DILocation(line: 119, column: 37, scope: !720)
!732 = !DILocation(line: 119, column: 30, scope: !720)
!733 = !DILocation(line: 119, column: 25, scope: !720)
!734 = !DILocation(line: 119, column: 11, scope: !720)
!735 = !DILocation(line: 119, column: 49, scope: !720)
!736 = !DILocation(line: 120, column: 9, scope: !720)
!737 = !DILocation(line: 121, column: 9, scope: !709)
!738 = !DILocation(line: 123, column: 5, scope: !699)
!739 = !DILocation(line: 124, column: 3, scope: !645)
!740 = !DILocation(line: 97, column: 25, scope: !640)
!741 = !DILocation(line: 97, column: 3, scope: !640)
!742 = !DILocation(line: 125, column: 24, scope: !743)
!743 = distinct !DILexicalBlock(scope: !60, file: !54, line: 125, column: 7)
!744 = !DILocation(line: 125, column: 13, scope: !743)
!745 = !DILocation(line: 125, column: 7, scope: !60)
!746 = !DILocation(line: 126, column: 5, scope: !743)
!747 = !DILocation(line: 127, column: 12, scope: !60)
!748 = !DILocation(line: 127, column: 18, scope: !60)
!749 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "work", scope: !60, file: !54, line: 42, type: !22)
!750 = !DILocation(line: 42, column: 17, scope: !60)
!751 = !DILocation(line: 128, column: 8, scope: !752)
!752 = distinct !DILexicalBlock(scope: !60, file: !54, line: 128, column: 3)
!753 = !DILocation(line: 128, column: 26, scope: !754)
!754 = !DILexicalBlockFile(scope: !755, file: !54, discriminator: 4)
!755 = !DILexicalBlockFile(scope: !756, file: !54, discriminator: 1)
!756 = distinct !DILexicalBlock(scope: !752, file: !54, line: 128, column: 3)
!757 = !DILocation(line: 128, column: 33, scope: !756)
!758 = !DILocation(line: 128, column: 3, scope: !752)
!759 = !DILocation(line: 128, column: 3, scope: !760)
!760 = !DILexicalBlockFile(scope: !752, file: !54, discriminator: 2)
!761 = !DILocation(line: 128, column: 43, scope: !762)
!762 = !DILexicalBlockFile(scope: !756, file: !54, discriminator: 3)
!763 = !DILocation(line: 128, column: 3, scope: !756)
!764 = !DILocation(line: 130, column: 3, scope: !60)
!765 = !DILocation(line: 131, column: 7, scope: !766)
!766 = distinct !DILexicalBlock(scope: !60, file: !54, line: 131, column: 7)
!767 = !DILocation(line: 131, column: 14, scope: !766)
!768 = !DILocation(line: 131, column: 7, scope: !60)
!769 = !DILocation(line: 132, column: 5, scope: !770)
!770 = distinct !DILexicalBlock(scope: !766, file: !54, line: 131, column: 28)
!771 = !DILocation(line: 133, column: 22, scope: !770)
!772 = !DILocation(line: 133, column: 5, scope: !770)
!773 = !DILocation(line: 134, column: 3, scope: !770)
!774 = !DILocation(line: 135, column: 3, scope: !60)
!775 = !DILocation(line: 136, column: 1, scope: !60)
!776 = !DILocation(line: 139, column: 17, scope: !61)
!777 = !DILocation(line: 139, column: 24, scope: !61)
!778 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "side", scope: !61, file: !54, line: 139, type: !22)
!779 = !DILocation(line: 139, column: 10, scope: !61)
!780 = !DILocation(line: 139, column: 46, scope: !61)
!781 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "otherside", scope: !61, file: !54, line: 139, type: !22)
!782 = !DILocation(line: 139, column: 29, scope: !61)
!783 = !DILocation(line: 141, column: 9, scope: !61)
!784 = !DILocation(line: 142, column: 9, scope: !61)
!785 = !DILocation(line: 143, column: 14, scope: !786)
!786 = distinct !DILexicalBlock(scope: !61, file: !54, line: 143, column: 7)
!787 = !DILocation(line: 143, column: 7, scope: !786)
!788 = !DILocation(line: 143, column: 7, scope: !61)
!789 = !DILocation(line: 144, column: 5, scope: !786)
!790 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !61, file: !54, line: 139, type: !22)
!791 = !DILocation(line: 139, column: 7, scope: !61)
!792 = !DILocation(line: 145, column: 8, scope: !793)
!793 = distinct !DILexicalBlock(scope: !61, file: !54, line: 145, column: 3)
!794 = !DILocation(line: 145, column: 17, scope: !795)
!795 = distinct !DILexicalBlock(scope: !793, file: !54, line: 145, column: 3)
!796 = !DILocation(line: 145, column: 3, scope: !793)
!797 = !DILocation(line: 146, column: 23, scope: !798)
!798 = distinct !DILexicalBlock(scope: !795, file: !54, line: 146, column: 9)
!799 = !DILocation(line: 146, column: 51, scope: !798)
!800 = !DILocation(line: 146, column: 48, scope: !798)
!801 = !DILocation(line: 146, column: 35, scope: !798)
!802 = !DILocation(line: 146, column: 9, scope: !798)
!803 = !DILocation(line: 146, column: 9, scope: !795)
!804 = !DILocation(line: 147, column: 7, scope: !798)
!805 = !DILocation(line: 146, column: 61, scope: !806)
!806 = !DILexicalBlockFile(scope: !798, file: !54, discriminator: 1)
!807 = !DILocation(line: 145, column: 27, scope: !795)
!808 = !DILocation(line: 145, column: 3, scope: !795)
!809 = !DILocation(line: 148, column: 3, scope: !61)
!810 = !DILocation(line: 149, column: 11, scope: !61)
!811 = !DILocation(line: 149, column: 9, scope: !61)
!812 = !DILocation(line: 150, column: 11, scope: !61)
!813 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "score", scope: !61, file: !54, line: 139, type: !22)
!814 = !DILocation(line: 139, column: 51, scope: !61)
!815 = !DILocation(line: 151, column: 16, scope: !61)
!816 = !DILocation(line: 151, column: 14, scope: !61)
!817 = !DILocation(line: 151, column: 30, scope: !61)
!818 = !DILocation(line: 151, column: 28, scope: !61)
!819 = !DILocation(line: 151, column: 9, scope: !61)
!820 = !DILocation(line: 152, column: 3, scope: !61)
!821 = !DILocation(line: 153, column: 1, scope: !61)
!822 = !DILocation(line: 163, column: 3, scope: !62)
!823 = !DILocation(line: 164, column: 3, scope: !62)
!824 = !DILocation(line: 165, column: 3, scope: !62)
!825 = !DILocation(line: 166, column: 3, scope: !62)
!826 = !DILocation(line: 168, column: 3, scope: !62)
!827 = !DILocation(line: 169, column: 5, scope: !828)
!828 = distinct !DILexicalBlock(scope: !829, file: !54, line: 168, column: 12)
!829 = distinct !DILexicalBlock(scope: !830, file: !54, line: 168, column: 3)
!830 = distinct !DILexicalBlock(scope: !62, file: !54, line: 168, column: 3)
!831 = !DILocation(line: 170, column: 5, scope: !828)
!832 = !DILocation(line: 170, column: 17, scope: !833)
!833 = !DILexicalBlockFile(scope: !834, file: !54, discriminator: 2)
!834 = !DILexicalBlockFile(scope: !828, file: !54, discriminator: 1)
!835 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !62, file: !54, line: 156, type: !22)
!836 = !DILocation(line: 156, column: 7, scope: !62)
!837 = !DILocation(line: 170, column: 28, scope: !828)
!838 = !DILocation(line: 171, column: 13, scope: !839)
!839 = distinct !DILexicalBlock(scope: !840, file: !54, line: 171, column: 11)
!840 = distinct !DILexicalBlock(scope: !828, file: !54, line: 170, column: 35)
!841 = !DILocation(line: 171, column: 20, scope: !839)
!842 = !DILocation(line: 171, column: 25, scope: !839)
!843 = !DILocation(line: 171, column: 11, scope: !840)
!844 = !DILocation(line: 172, column: 20, scope: !839)
!845 = !DILocation(line: 172, column: 9, scope: !839)
!846 = !DILocation(line: 173, column: 18, scope: !847)
!847 = distinct !DILexicalBlock(scope: !839, file: !54, line: 173, column: 16)
!848 = !DILocation(line: 173, column: 16, scope: !839)
!849 = !DILocation(line: 174, column: 9, scope: !847)
!850 = !DILocation(line: 176, column: 11, scope: !851)
!851 = distinct !DILexicalBlock(scope: !828, file: !54, line: 176, column: 9)
!852 = !DILocation(line: 176, column: 9, scope: !828)
!853 = !DILocation(line: 177, column: 7, scope: !851)
!854 = !DILocation(line: 178, column: 48, scope: !828)
!855 = !DILocation(line: 178, column: 5, scope: !828)
!856 = !DILocation(line: 179, column: 5, scope: !828)
!857 = !DILocation(line: 180, column: 5, scope: !828)
!858 = !DILocation(line: 182, column: 5, scope: !828)
!859 = !DILocation(line: 183, column: 14, scope: !828)
!860 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "result", scope: !62, file: !54, line: 156, type: !22)
!861 = !DILocation(line: 156, column: 10, scope: !62)
!862 = !DILocation(line: 184, column: 14, scope: !828)
!863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "poscnt", scope: !62, file: !54, line: 157, type: !5)
!864 = !DILocation(line: 157, column: 10, scope: !62)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "work", scope: !62, file: !54, line: 156, type: !22)
!866 = !DILocation(line: 156, column: 18, scope: !62)
!867 = !DILocation(line: 185, column: 10, scope: !868)
!868 = distinct !DILexicalBlock(scope: !828, file: !54, line: 185, column: 5)
!869 = !DILocation(line: 185, column: 28, scope: !870)
!870 = !DILexicalBlockFile(scope: !871, file: !54, discriminator: 4)
!871 = !DILexicalBlockFile(scope: !872, file: !54, discriminator: 1)
!872 = distinct !DILexicalBlock(scope: !868, file: !54, line: 185, column: 5)
!873 = !DILocation(line: 185, column: 35, scope: !872)
!874 = !DILocation(line: 185, column: 5, scope: !868)
!875 = !DILocation(line: 185, column: 5, scope: !876)
!876 = !DILexicalBlockFile(scope: !868, file: !54, discriminator: 2)
!877 = !DILocation(line: 185, column: 45, scope: !878)
!878 = !DILexicalBlockFile(scope: !872, file: !54, discriminator: 3)
!879 = !DILocation(line: 185, column: 5, scope: !872)
!880 = !DILocation(line: 188, column: 20, scope: !828)
!881 = !DILocation(line: 187, column: 5, scope: !828)
!882 = !DILocation(line: 191, column: 5, scope: !828)
!883 = !DILocation(line: 168, column: 3, scope: !829)
!884 = !DILocation(line: 193, column: 3, scope: !62)
