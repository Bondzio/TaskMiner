; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rc4_state = type { i32, i32, [256 x i32] }

@.str = private unnamed_addr constant [26 x i8] c"\0A RC4 Validation Tests:\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c" Test %d \00", align 1
@data = internal global [7 x [30 x i8]] [[30 x i8] c"\01#Eg\89\AB\CD\EF\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\00\00\00\00\00\00\00\00\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\00\00\00\00\00\00\00\00\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\FF\00\00\00\00\00\00\00\00\00", [30 x i8] c"\124Vx\9A\BC\DE\F0\124Vx\9A\BC\DE\F0\124Vx\9A\BC\DE\F0\124Vx\FF\00", [30 x i8] c"\00\00\00\00\00\00\00\00\00\00\FF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] zeroinitializer], align 16
@data_len = internal global [7 x i8] c"\08\08\08\14\1C\0A\00", align 1
@keys = internal global [7 x [30 x i8]] [[30 x i8] c"\08\01#Eg\89\AB\CD\EF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\08\01#Eg\89\AB\CD\EF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\08\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\04\EF\01#E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\08\01#Eg\89\AB\CD\EF\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\04\EF\01#E\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] zeroinitializer], align 16
@output = internal global [7 x [30 x i8]] [[30 x i8] c"u\B7\87\80\99\E0\C5\96\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"t\94\C2\E7\10K\08y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\DE\18\89A\A37]:\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"\D6\A1A\A7\EC<8\DF\BDaZ\11b\E1\C7\BA6\B6xX\00\00\00\00\00\00\00\00\00\00", [30 x i8] c"f\A0\94\9F\8A\F7\D6\89\1F\7F\83+\A83\C0\0C\89.\BE0\14<\E2\87@\01\1E\CF\00\00", [30 x i8] c"\D6\A1A\A7\EC<8\DF\BDa\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [30 x i8] zeroinitializer], align 16
@.str.2 = private unnamed_addr constant [9 x i8] c"failed!\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"passed.\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @rc4_setup(%struct.rc4_state* %s, i8* %key, i32 %length) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.rc4_state* %s, i64 0, metadata !44, metadata !45), !dbg !46
  call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !47, metadata !45), !dbg !48
  call void @llvm.dbg.value(metadata i32 %length, i64 0, metadata !49, metadata !45), !dbg !50
  %x = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 0, !dbg !51
  store i32 0, i32* %x, align 4, !dbg !52
  %y = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 1, !dbg !53
  store i32 0, i32* %y, align 4, !dbg !54
  %m1 = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 2, !dbg !55
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %m1, i32 0, i32 0, !dbg !56
  call void @llvm.dbg.value(metadata i32* %arraydecay, i64 0, metadata !57, metadata !45), !dbg !59
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !60, metadata !45), !dbg !61
  %scevgep = getelementptr %struct.rc4_state, %struct.rc4_state* %s, i64 0, i32 2, i64 0, !dbg !62
  %scevgep30 = ptrtoint i32* %scevgep to i64
  %scevgep28 = getelementptr %struct.rc4_state, %struct.rc4_state* %s, i64 0, i32 2, i64 0, !dbg !62
  %scevgep2829 = ptrtoint i32* %scevgep28 to i64
  %0 = add i64 %scevgep2829, 1032, !dbg !64
  %1 = add i64 %scevgep2829, 1032, !dbg !64
  %scevgep31 = getelementptr %struct.rc4_state, %struct.rc4_state* %s, i64 0, i32 2, i64 0, !dbg !62
  %scevgep3134 = ptrtoint i32* %scevgep31 to i64
  %scevgep32 = getelementptr %struct.rc4_state, %struct.rc4_state* %s, i64 0, i32 2, i64 0, !dbg !62
  %scevgep3233 = ptrtoint i32* %scevgep32 to i64
  %2 = add i64 %scevgep3233, 1032, !dbg !64
  %3 = add i64 %scevgep3233, 1032, !dbg !64
  br label %for.cond, !dbg !62

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 256, !dbg !65
  %4 = ptrtoint i32* %scevgep to i64, !dbg !64
  %5 = sub i64 %0, %4, !dbg !64
  %6 = ptrtoint i32* %scevgep31 to i64, !dbg !64
  %7 = sub i64 %2, %6, !dbg !64
  br i1 %cmp, label %for.body, label %for.end, !dbg !64

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !67
  %arrayidx = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom, !dbg !67
  store i32 %i.0, i32* %arrayidx, align 4, !dbg !69
  br label %for.inc, !dbg !70

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !71
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !60, metadata !45), !dbg !61
  br label %for.cond, !dbg !72

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !73, metadata !45), !dbg !74
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !75, metadata !45), !dbg !76
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !60, metadata !45), !dbg !61
  br label %for.cond.2, !dbg !77

for.cond.2:                                       ; preds = %for.inc.21, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc22, %for.inc.21 ]
  %j.0 = phi i32 [ 0, %for.end ], [ %conv11, %for.inc.21 ]
  %k.0 = phi i32 [ 0, %for.end ], [ %k.1, %for.inc.21 ]
  %cmp3 = icmp slt i32 %i.1, 256, !dbg !79
  br i1 %cmp3, label %for.body.4, label %for.end.23, !dbg !81

for.body.4:                                       ; preds = %for.cond.2
  %idxprom5 = sext i32 %i.1 to i64, !dbg !82
  %arrayidx6 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom5, !dbg !82
  %tmp11 = load i32, i32* %arrayidx6, align 4, !dbg !82
  call void @llvm.dbg.value(metadata i32 %tmp11, i64 0, metadata !84, metadata !45), !dbg !85
  %add = add nsw i32 %j.0, %tmp11, !dbg !86
  %idxprom7 = sext i32 %k.0 to i64, !dbg !87
  %arrayidx8 = getelementptr inbounds i8, i8* %key, i64 %idxprom7, !dbg !87
  %tmp16 = load i8, i8* %arrayidx8, align 1, !dbg !87
  %conv = zext i8 %tmp16 to i32, !dbg !87
  %add9 = add nsw i32 %add, %conv, !dbg !88
  %conv10 = trunc i32 %add9 to i8, !dbg !89
  %conv11 = zext i8 %conv10 to i32, !dbg !89
  call void @llvm.dbg.value(metadata i32 %conv11, i64 0, metadata !75, metadata !45), !dbg !76
  %idxprom12 = sext i32 %conv11 to i64, !dbg !90
  %arrayidx13 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom12, !dbg !90
  %tmp19 = load i32, i32* %arrayidx13, align 4, !dbg !90
  %idxprom14 = sext i32 %i.1 to i64, !dbg !91
  %arrayidx15 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom14, !dbg !91
  store i32 %tmp19, i32* %arrayidx15, align 4, !dbg !92
  %idxprom16 = sext i32 %conv11 to i64, !dbg !93
  %arrayidx17 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom16, !dbg !93
  store i32 %tmp11, i32* %arrayidx17, align 4, !dbg !94
  %inc18 = add nsw i32 %k.0, 1, !dbg !95
  call void @llvm.dbg.value(metadata i32 %inc18, i64 0, metadata !73, metadata !45), !dbg !74
  %cmp19 = icmp sge i32 %inc18, %length, !dbg !97
  br i1 %cmp19, label %if.then, label %if.end, !dbg !98

if.then:                                          ; preds = %for.body.4
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !73, metadata !45), !dbg !74
  br label %if.end, !dbg !99

if.end:                                           ; preds = %if.then, %for.body.4
  %k.1 = phi i32 [ 0, %if.then ], [ %inc18, %for.body.4 ]
  br label %for.inc.21, !dbg !100

for.inc.21:                                       ; preds = %if.end
  %inc22 = add nsw i32 %i.1, 1, !dbg !101
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !60, metadata !45), !dbg !61
  br label %for.cond.2, !dbg !102

for.end.23:                                       ; preds = %for.cond.2
  ret void, !dbg !103
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @rc4_crypt(%struct.rc4_state* %s, i8* %data, i32 %length) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.rc4_state* %s, i64 0, metadata !104, metadata !45), !dbg !105
  call void @llvm.dbg.value(metadata i8* %data, i64 0, metadata !106, metadata !45), !dbg !107
  call void @llvm.dbg.value(metadata i32 %length, i64 0, metadata !108, metadata !45), !dbg !109
  %x1 = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 0, !dbg !110
  %tmp1 = load i32, i32* %x1, align 4, !dbg !110
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !111, metadata !45), !dbg !112
  %y2 = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 1, !dbg !113
  %tmp3 = load i32, i32* %y2, align 4, !dbg !113
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !114, metadata !45), !dbg !115
  %m3 = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 2, !dbg !116
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %m3, i32 0, i32 0, !dbg !117
  call void @llvm.dbg.value(metadata i32* %arraydecay, i64 0, metadata !118, metadata !45), !dbg !119
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !120, metadata !45), !dbg !121
  br label %for.cond, !dbg !122

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %x.0 = phi i32 [ %tmp1, %entry ], [ %conv4, %for.inc ]
  %y.0 = phi i32 [ %tmp3, %entry ], [ %conv7, %for.inc ]
  %cmp = icmp slt i32 %i.0, %length, !dbg !124
  br i1 %cmp, label %for.body, label %for.end, !dbg !126

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %x.0, 1, !dbg !127
  %conv = trunc i32 %add to i8, !dbg !129
  %conv4 = zext i8 %conv to i32, !dbg !129
  call void @llvm.dbg.value(metadata i32 %conv4, i64 0, metadata !111, metadata !45), !dbg !112
  %idxprom = sext i32 %conv4 to i64, !dbg !130
  %arrayidx = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom, !dbg !130
  %tmp10 = load i32, i32* %arrayidx, align 4, !dbg !130
  call void @llvm.dbg.value(metadata i32 %tmp10, i64 0, metadata !131, metadata !45), !dbg !132
  %add5 = add nsw i32 %y.0, %tmp10, !dbg !133
  %conv6 = trunc i32 %add5 to i8, !dbg !134
  %conv7 = zext i8 %conv6 to i32, !dbg !134
  call void @llvm.dbg.value(metadata i32 %conv7, i64 0, metadata !114, metadata !45), !dbg !115
  %idxprom8 = sext i32 %conv7 to i64, !dbg !135
  %arrayidx9 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom8, !dbg !135
  %tmp15 = load i32, i32* %arrayidx9, align 4, !dbg !135
  call void @llvm.dbg.value(metadata i32 %tmp15, i64 0, metadata !136, metadata !45), !dbg !137
  %idxprom10 = sext i32 %conv4 to i64, !dbg !138
  %arrayidx11 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom10, !dbg !138
  store i32 %tmp15, i32* %arrayidx11, align 4, !dbg !139
  %idxprom12 = sext i32 %conv7 to i64, !dbg !140
  %arrayidx13 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom12, !dbg !140
  store i32 %tmp10, i32* %arrayidx13, align 4, !dbg !141
  %add14 = add nsw i32 %tmp10, %tmp15, !dbg !142
  %conv15 = trunc i32 %add14 to i8, !dbg !143
  %idxprom16 = zext i8 %conv15 to i64, !dbg !144
  %arrayidx17 = getelementptr inbounds i32, i32* %arraydecay, i64 %idxprom16, !dbg !144
  %tmp24 = load i32, i32* %arrayidx17, align 4, !dbg !144
  %idxprom18 = sext i32 %i.0 to i64, !dbg !145
  %arrayidx19 = getelementptr inbounds i8, i8* %data, i64 %idxprom18, !dbg !145
  %tmp27 = load i8, i8* %arrayidx19, align 1, !dbg !146
  %conv20 = zext i8 %tmp27 to i32, !dbg !146
  %xor = xor i32 %conv20, %tmp24, !dbg !146
  %conv21 = trunc i32 %xor to i8, !dbg !146
  store i8 %conv21, i8* %arrayidx19, align 1, !dbg !146
  br label %for.inc, !dbg !147

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !148
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !120, metadata !45), !dbg !121
  br label %for.cond, !dbg !149

for.end:                                          ; preds = %for.cond
  %y.0.lcssa = phi i32 [ %y.0, %for.cond ]
  %x.0.lcssa = phi i32 [ %x.0, %for.cond ]
  %x22 = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 0, !dbg !150
  store i32 %x.0.lcssa, i32* %x22, align 4, !dbg !151
  %y23 = getelementptr inbounds %struct.rc4_state, %struct.rc4_state* %s, i32 0, i32 1, !dbg !152
  store i32 %y.0.lcssa, i32* %y23, align 4, !dbg !153
  ret void, !dbg !154
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %s = alloca %struct.rc4_state, align 4
  %buffer = alloca [30 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !155, metadata !45), !dbg !156
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !157, metadata !45), !dbg !158
  call void @llvm.dbg.declare(metadata %struct.rc4_state* %s, metadata !159, metadata !45), !dbg !160
  call void @llvm.dbg.declare(metadata [30 x i8]* %buffer, metadata !161, metadata !45), !dbg !164
  call void @llvm.dbg.value(metadata i32 200000, i64 0, metadata !165, metadata !45), !dbg !166
  %cmp = icmp eq i32 %argc, 2, !dbg !167
  br i1 %cmp, label %if.then, label %if.end, !dbg !169

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !170
  %tmp2 = load i8*, i8** %arrayidx, align 8, !dbg !170
  %call = call i32 @atoi(i8* %tmp2) #5, !dbg !171
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !165, metadata !45), !dbg !166
  br label %if.end, !dbg !172

if.end:                                           ; preds = %if.then, %entry
  %count.0 = phi i32 [ %call, %if.then ], [ 200000, %entry ]
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0)), !dbg !173
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !174, metadata !45), !dbg !175
  br label %for.cond, !dbg !176

for.cond:                                         ; preds = %for.inc.32, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc33, %for.inc.32 ]
  %cmp2 = icmp slt i32 %i.0, 6, !dbg !178
  br i1 %cmp2, label %for.body, label %for.end.34, !dbg !180

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, 1, !dbg !181
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i32 %add), !dbg !183
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !184, metadata !45), !dbg !185
  br label %for.cond.4, !dbg !186

for.cond.4:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp5 = icmp slt i32 %j.0, %count.0, !dbg !188
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !190

for.body.6:                                       ; preds = %for.cond.4
  %tmp7 = bitcast [30 x i8]* %buffer to i8*, !dbg !191
  %idxprom = sext i32 %i.0 to i64, !dbg !193
  %arrayidx7 = getelementptr inbounds [7 x [30 x i8]], [7 x [30 x i8]]* @data, i32 0, i64 %idxprom, !dbg !193
  %tmp9 = bitcast [30 x i8]* %arrayidx7 to i8*, !dbg !191
  %idxprom8 = sext i32 %i.0 to i64, !dbg !194
  %arrayidx9 = getelementptr inbounds [7 x i8], [7 x i8]* @data_len, i32 0, i64 %idxprom8, !dbg !194
  %tmp11 = load i8, i8* %arrayidx9, align 1, !dbg !194
  %conv = zext i8 %tmp11 to i64, !dbg !194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp7, i8* %tmp9, i64 %conv, i32 1, i1 false), !dbg !191
  %idxprom10 = sext i32 %i.0 to i64, !dbg !195
  %arrayidx11 = getelementptr inbounds [7 x [30 x i8]], [7 x [30 x i8]]* @keys, i32 0, i64 %idxprom10, !dbg !195
  %arrayidx12 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx11, i32 0, i64 1, !dbg !195
  %idxprom13 = sext i32 %i.0 to i64, !dbg !196
  %arrayidx14 = getelementptr inbounds [7 x [30 x i8]], [7 x [30 x i8]]* @keys, i32 0, i64 %idxprom13, !dbg !196
  %arrayidx15 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx14, i32 0, i64 0, !dbg !196
  %tmp14 = load i8, i8* %arrayidx15, align 1, !dbg !196
  %conv16 = zext i8 %tmp14 to i32, !dbg !196
  call void @rc4_setup(%struct.rc4_state* %s, i8* %arrayidx12, i32 %conv16), !dbg !197
  %arraydecay = getelementptr inbounds [30 x i8], [30 x i8]* %buffer, i32 0, i32 0, !dbg !198
  %idxprom17 = sext i32 %i.0 to i64, !dbg !199
  %arrayidx18 = getelementptr inbounds [7 x i8], [7 x i8]* @data_len, i32 0, i64 %idxprom17, !dbg !199
  %tmp16 = load i8, i8* %arrayidx18, align 1, !dbg !199
  %conv19 = zext i8 %tmp16 to i32, !dbg !199
  call void @rc4_crypt(%struct.rc4_state* %s, i8* %arraydecay, i32 %conv19), !dbg !200
  br label %for.inc, !dbg !201

for.inc:                                          ; preds = %for.body.6
  %inc = add nsw i32 %j.0, 1, !dbg !202
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !184, metadata !45), !dbg !185
  br label %for.cond.4, !dbg !203

for.end:                                          ; preds = %for.cond.4
  %arraydecay20 = getelementptr inbounds [30 x i8], [30 x i8]* %buffer, i32 0, i32 0, !dbg !204
  %idxprom21 = sext i32 %i.0 to i64, !dbg !206
  %arrayidx22 = getelementptr inbounds [7 x [30 x i8]], [7 x [30 x i8]]* @output, i32 0, i64 %idxprom21, !dbg !206
  %arraydecay23 = getelementptr inbounds [30 x i8], [30 x i8]* %arrayidx22, i32 0, i32 0, !dbg !206
  %idxprom24 = sext i32 %i.0 to i64, !dbg !207
  %arrayidx25 = getelementptr inbounds [7 x i8], [7 x i8]* @data_len, i32 0, i64 %idxprom24, !dbg !207
  %tmp20 = load i8, i8* %arrayidx25, align 1, !dbg !207
  %conv26 = zext i8 %tmp20 to i64, !dbg !207
  %call27 = call i32 @memcmp(i8* %arraydecay20, i8* %arraydecay23, i64 %conv26) #5, !dbg !208
  %tobool = icmp ne i32 %call27, 0, !dbg !208
  br i1 %tobool, label %if.then.28, label %if.end.30, !dbg !209

if.then.28:                                       ; preds = %for.end
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0)), !dbg !210
  br label %return, !dbg !212

if.end.30:                                        ; preds = %for.end
  %call31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0)), !dbg !213
  br label %for.inc.32, !dbg !214

for.inc.32:                                       ; preds = %if.end.30
  %inc33 = add nsw i32 %i.0, 1, !dbg !215
  call void @llvm.dbg.value(metadata i32 %inc33, i64 0, metadata !174, metadata !45), !dbg !175
  br label %for.cond, !dbg !216

for.end.34:                                       ; preds = %for.cond
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0)), !dbg !217
  br label %return, !dbg !218

return:                                           ; preds = %for.end.34, %if.then.28
  %retval.0 = phi i32 [ 1, %if.then.28 ], [ 0, %for.end.34 ]
  ret i32 %retval.0, !dbg !219
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!41, !42}
!llvm.ident = !{!43}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5, globals: !30)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Trimaran/enc-rc4")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "unsigned char", size: 8, align: 8, encoding: DW_ATE_unsigned_char)
!5 = !{!6, !22, !23}
!6 = !DISubprogram(name: "rc4_setup", scope: !7, file: !7, line: 24, type: !8, isLocal: false, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.rc4_state*, i8*, i32)* @rc4_setup, variables: !2)
!7 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Trimaran/enc-rc4/tmp.c", directory: "/home/gleison/tf/Benchmarks/Trimaran/enc-rc4")
!8 = !DISubroutineType(types: !9)
!9 = !{null, !10, !21, !15}
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DICompositeType(tag: DW_TAG_structure_type, name: "rc4_state", file: !12, line: 4, size: 8256, align: 32, elements: !13)
!12 = !DIFile(filename: "./rc4.h", directory: "/home/gleison/tf/Benchmarks/Trimaran/enc-rc4")
!13 = !{!14, !16, !17}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !11, file: !12, line: 6, baseType: !15, size: 32, align: 32)
!15 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !11, file: !12, line: 6, baseType: !15, size: 32, align: 32, offset: 32)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !11, file: !12, line: 6, baseType: !18, size: 8192, align: 32, offset: 64)
!18 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 8192, align: 32, elements: !19)
!19 = !{!20}
!20 = !DISubrange(count: 256)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!22 = !DISubprogram(name: "rc4_crypt", scope: !7, file: !7, line: 47, type: !8, isLocal: false, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.rc4_state*, i8*, i32)* @rc4_crypt, variables: !2)
!23 = !DISubprogram(name: "main", scope: !7, file: !7, line: 114, type: !24, isLocal: false, isDefinition: true, scopeLine: 114, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{!15, !15, !26}
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !29)
!29 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!30 = !{!31, !36, !39, !40}
!31 = !DIGlobalVariable(name: "data", scope: !0, file: !7, line: 84, type: !32, isLocal: true, isDefinition: true, variable: [7 x [30 x i8]]* @data)
!32 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 1680, align: 8, elements: !33)
!33 = !{!34, !35}
!34 = !DISubrange(count: 7)
!35 = !DISubrange(count: 30)
!36 = !DIGlobalVariable(name: "data_len", scope: !0, file: !7, line: 83, type: !37, isLocal: true, isDefinition: true, variable: [7 x i8]* @data_len)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 56, align: 8, elements: !38)
!38 = !{!34}
!39 = !DIGlobalVariable(name: "keys", scope: !0, file: !7, line: 74, type: !32, isLocal: true, isDefinition: true, variable: [7 x [30 x i8]]* @keys)
!40 = !DIGlobalVariable(name: "output", scope: !0, file: !7, line: 99, type: !32, isLocal: true, isDefinition: true, variable: [7 x [30 x i8]]* @output)
!41 = !{i32 2, !"Dwarf Version", i32 4}
!42 = !{i32 2, !"Debug Info Version", i32 3}
!43 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!44 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !6, file: !7, line: 24, type: !10)
!45 = !DIExpression()
!46 = !DILocation(line: 24, column: 34, scope: !6)
!47 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !6, file: !7, line: 24, type: !21)
!48 = !DILocation(line: 24, column: 52, scope: !6)
!49 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !6, file: !7, line: 24, type: !15)
!50 = !DILocation(line: 24, column: 61, scope: !6)
!51 = !DILocation(line: 27, column: 6, scope: !6)
!52 = !DILocation(line: 27, column: 8, scope: !6)
!53 = !DILocation(line: 28, column: 6, scope: !6)
!54 = !DILocation(line: 28, column: 8, scope: !6)
!55 = !DILocation(line: 29, column: 10, scope: !6)
!56 = !DILocation(line: 29, column: 7, scope: !6)
!57 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !6, file: !7, line: 25, type: !58)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64, align: 64)
!59 = !DILocation(line: 25, column: 17, scope: !6)
!60 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !6, file: !7, line: 25, type: !15)
!61 = !DILocation(line: 25, column: 7, scope: !6)
!62 = !DILocation(line: 31, column: 8, scope: !63)
!63 = distinct !DILexicalBlock(scope: !6, file: !7, line: 31, column: 3)
!64 = !DILocation(line: 31, column: 3, scope: !63)
!65 = !DILocation(line: 31, column: 17, scope: !66)
!66 = distinct !DILexicalBlock(scope: !63, file: !7, line: 31, column: 3)
!67 = !DILocation(line: 32, column: 5, scope: !68)
!68 = distinct !DILexicalBlock(scope: !66, file: !7, line: 31, column: 29)
!69 = !DILocation(line: 32, column: 10, scope: !68)
!70 = !DILocation(line: 33, column: 3, scope: !68)
!71 = !DILocation(line: 31, column: 25, scope: !66)
!72 = !DILocation(line: 31, column: 3, scope: !66)
!73 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !6, file: !7, line: 25, type: !15)
!74 = !DILocation(line: 25, column: 13, scope: !6)
!75 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !6, file: !7, line: 25, type: !15)
!76 = !DILocation(line: 25, column: 10, scope: !6)
!77 = !DILocation(line: 37, column: 8, scope: !78)
!78 = distinct !DILexicalBlock(scope: !6, file: !7, line: 37, column: 3)
!79 = !DILocation(line: 37, column: 17, scope: !80)
!80 = distinct !DILexicalBlock(scope: !78, file: !7, line: 37, column: 3)
!81 = !DILocation(line: 37, column: 3, scope: !78)
!82 = !DILocation(line: 38, column: 9, scope: !83)
!83 = distinct !DILexicalBlock(scope: !80, file: !7, line: 37, column: 29)
!84 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !6, file: !7, line: 25, type: !15)
!85 = !DILocation(line: 25, column: 20, scope: !6)
!86 = !DILocation(line: 39, column: 27, scope: !83)
!87 = !DILocation(line: 39, column: 33, scope: !83)
!88 = !DILocation(line: 39, column: 31, scope: !83)
!89 = !DILocation(line: 39, column: 9, scope: !83)
!90 = !DILocation(line: 40, column: 12, scope: !83)
!91 = !DILocation(line: 40, column: 5, scope: !83)
!92 = !DILocation(line: 40, column: 10, scope: !83)
!93 = !DILocation(line: 41, column: 5, scope: !83)
!94 = !DILocation(line: 41, column: 10, scope: !83)
!95 = !DILocation(line: 42, column: 9, scope: !96)
!96 = distinct !DILexicalBlock(scope: !83, file: !7, line: 42, column: 9)
!97 = !DILocation(line: 42, column: 13, scope: !96)
!98 = !DILocation(line: 42, column: 9, scope: !83)
!99 = !DILocation(line: 43, column: 7, scope: !96)
!100 = !DILocation(line: 44, column: 3, scope: !83)
!101 = !DILocation(line: 37, column: 25, scope: !80)
!102 = !DILocation(line: 37, column: 3, scope: !80)
!103 = !DILocation(line: 45, column: 1, scope: !6)
!104 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !22, file: !7, line: 47, type: !10)
!105 = !DILocation(line: 47, column: 34, scope: !22)
!106 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "data", arg: 2, scope: !22, file: !7, line: 47, type: !21)
!107 = !DILocation(line: 47, column: 52, scope: !22)
!108 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "length", arg: 3, scope: !22, file: !7, line: 47, type: !15)
!109 = !DILocation(line: 47, column: 62, scope: !22)
!110 = !DILocation(line: 50, column: 10, scope: !22)
!111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !22, file: !7, line: 48, type: !15)
!112 = !DILocation(line: 48, column: 10, scope: !22)
!113 = !DILocation(line: 51, column: 10, scope: !22)
!114 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !22, file: !7, line: 48, type: !15)
!115 = !DILocation(line: 48, column: 13, scope: !22)
!116 = !DILocation(line: 52, column: 10, scope: !22)
!117 = !DILocation(line: 52, column: 7, scope: !22)
!118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !22, file: !7, line: 48, type: !58)
!119 = !DILocation(line: 48, column: 17, scope: !22)
!120 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !22, file: !7, line: 48, type: !15)
!121 = !DILocation(line: 48, column: 7, scope: !22)
!122 = !DILocation(line: 54, column: 8, scope: !123)
!123 = distinct !DILexicalBlock(scope: !22, file: !7, line: 54, column: 3)
!124 = !DILocation(line: 54, column: 17, scope: !125)
!125 = distinct !DILexicalBlock(scope: !123, file: !7, line: 54, column: 3)
!126 = !DILocation(line: 54, column: 3, scope: !123)
!127 = !DILocation(line: 55, column: 27, scope: !128)
!128 = distinct !DILexicalBlock(scope: !125, file: !7, line: 54, column: 32)
!129 = !DILocation(line: 55, column: 9, scope: !128)
!130 = !DILocation(line: 56, column: 9, scope: !128)
!131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !22, file: !7, line: 48, type: !15)
!132 = !DILocation(line: 48, column: 20, scope: !22)
!133 = !DILocation(line: 57, column: 27, scope: !128)
!134 = !DILocation(line: 57, column: 9, scope: !128)
!135 = !DILocation(line: 58, column: 16, scope: !128)
!136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !22, file: !7, line: 48, type: !15)
!137 = !DILocation(line: 48, column: 23, scope: !22)
!138 = !DILocation(line: 58, column: 5, scope: !128)
!139 = !DILocation(line: 58, column: 10, scope: !128)
!140 = !DILocation(line: 59, column: 5, scope: !128)
!141 = !DILocation(line: 59, column: 10, scope: !128)
!142 = !DILocation(line: 60, column: 36, scope: !128)
!143 = !DILocation(line: 60, column: 18, scope: !128)
!144 = !DILocation(line: 60, column: 16, scope: !128)
!145 = !DILocation(line: 60, column: 5, scope: !128)
!146 = !DILocation(line: 60, column: 13, scope: !128)
!147 = !DILocation(line: 61, column: 3, scope: !128)
!148 = !DILocation(line: 54, column: 28, scope: !125)
!149 = !DILocation(line: 54, column: 3, scope: !125)
!150 = !DILocation(line: 63, column: 6, scope: !22)
!151 = !DILocation(line: 63, column: 8, scope: !22)
!152 = !DILocation(line: 64, column: 6, scope: !22)
!153 = !DILocation(line: 64, column: 8, scope: !22)
!154 = !DILocation(line: 65, column: 1, scope: !22)
!155 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !23, file: !7, line: 114, type: !15)
!156 = !DILocation(line: 114, column: 14, scope: !23)
!157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !23, file: !7, line: 114, type: !26)
!158 = !DILocation(line: 114, column: 33, scope: !23)
!159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !23, file: !7, line: 116, type: !11)
!160 = !DILocation(line: 116, column: 20, scope: !23)
!161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buffer", scope: !23, file: !7, line: 117, type: !162)
!162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 240, align: 8, elements: !163)
!163 = !{!35}
!164 = !DILocation(line: 117, column: 17, scope: !23)
!165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !23, file: !7, line: 119, type: !15)
!166 = !DILocation(line: 119, column: 7, scope: !23)
!167 = !DILocation(line: 120, column: 12, scope: !168)
!168 = distinct !DILexicalBlock(scope: !23, file: !7, line: 120, column: 7)
!169 = !DILocation(line: 120, column: 7, scope: !23)
!170 = !DILocation(line: 121, column: 18, scope: !168)
!171 = !DILocation(line: 121, column: 13, scope: !168)
!172 = !DILocation(line: 121, column: 5, scope: !168)
!173 = !DILocation(line: 123, column: 3, scope: !23)
!174 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !7, line: 115, type: !15)
!175 = !DILocation(line: 115, column: 7, scope: !23)
!176 = !DILocation(line: 125, column: 8, scope: !177)
!177 = distinct !DILexicalBlock(scope: !23, file: !7, line: 125, column: 3)
!178 = !DILocation(line: 125, column: 17, scope: !179)
!179 = distinct !DILexicalBlock(scope: !177, file: !7, line: 125, column: 3)
!180 = !DILocation(line: 125, column: 3, scope: !177)
!181 = !DILocation(line: 126, column: 27, scope: !182)
!182 = distinct !DILexicalBlock(scope: !179, file: !7, line: 125, column: 27)
!183 = !DILocation(line: 126, column: 5, scope: !182)
!184 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !7, line: 115, type: !15)
!185 = !DILocation(line: 115, column: 10, scope: !23)
!186 = !DILocation(line: 128, column: 10, scope: !187)
!187 = distinct !DILexicalBlock(scope: !182, file: !7, line: 128, column: 5)
!188 = !DILocation(line: 128, column: 19, scope: !189)
!189 = distinct !DILexicalBlock(scope: !187, file: !7, line: 128, column: 5)
!190 = !DILocation(line: 128, column: 5, scope: !187)
!191 = !DILocation(line: 130, column: 7, scope: !192)
!192 = distinct !DILexicalBlock(scope: !189, file: !7, line: 128, column: 33)
!193 = !DILocation(line: 130, column: 22, scope: !192)
!194 = !DILocation(line: 130, column: 31, scope: !192)
!195 = !DILocation(line: 132, column: 22, scope: !192)
!196 = !DILocation(line: 132, column: 34, scope: !192)
!197 = !DILocation(line: 132, column: 7, scope: !192)
!198 = !DILocation(line: 133, column: 21, scope: !192)
!199 = !DILocation(line: 133, column: 29, scope: !192)
!200 = !DILocation(line: 133, column: 7, scope: !192)
!201 = !DILocation(line: 134, column: 5, scope: !192)
!202 = !DILocation(line: 128, column: 29, scope: !189)
!203 = !DILocation(line: 128, column: 5, scope: !189)
!204 = !DILocation(line: 136, column: 16, scope: !205)
!205 = distinct !DILexicalBlock(scope: !182, file: !7, line: 136, column: 9)
!206 = !DILocation(line: 136, column: 24, scope: !205)
!207 = !DILocation(line: 136, column: 35, scope: !205)
!208 = !DILocation(line: 136, column: 9, scope: !205)
!209 = !DILocation(line: 136, column: 9, scope: !182)
!210 = !DILocation(line: 137, column: 7, scope: !211)
!211 = distinct !DILexicalBlock(scope: !205, file: !7, line: 136, column: 49)
!212 = !DILocation(line: 138, column: 7, scope: !211)
!213 = !DILocation(line: 141, column: 5, scope: !182)
!214 = !DILocation(line: 142, column: 3, scope: !182)
!215 = !DILocation(line: 125, column: 23, scope: !179)
!216 = !DILocation(line: 125, column: 3, scope: !179)
!217 = !DILocation(line: 144, column: 3, scope: !23)
!218 = !DILocation(line: 146, column: 3, scope: !23)
!219 = !DILocation(line: 147, column: 1, scope: !23)
