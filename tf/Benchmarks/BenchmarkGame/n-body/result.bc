; ModuleID = '/home/gleison/tf/Benchmarks/BenchmarkGame/n-body/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.planet = type { double, double, double, double, double, double, double }

@bodies = global [5 x %struct.planet] [%struct.planet { double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0x4043BD3CC9BE45DE }, %struct.planet { double 0x40135DA0343CD92C, double 0xBFF290ABC01FDB7C, double 0xBFBA86F96C25EBF0, double 0x3FE367069B93CCBC, double 0x40067EF2F57D949B, double 0xBF99D2D79A5A0715, double 0x3FA34C95D9AB33D8 }, %struct.planet { double 0x4020AFCDC332CA67, double 0x40107FCB31DE01B0, double 0xBFD9D353E1EB467C, double 0xBFF02C21B8879442, double 0x3FFD35E9BF1F8F13, double 0x3F813C485F1123B4, double 0x3F871D490D07C637 }, %struct.planet { double 0x4029C9EACEA7D9CF, double 0xC02E38E8D626667E, double 0xBFCC9557BE257DA0, double 0x3FF1531CA9911BEF, double 0x3FEBCC7F3E54BBC5, double 0xBF862F6BFAF23E7C, double 0x3F5C3DD29CF41EB3 }, %struct.planet { double 0x402EC267A905572A, double 0xC039EB5833C8A220, double 0x3FC6F1F393ABE540, double 0x3FEF54B61659BC4A, double 0x3FE307C631C4FBA3, double 0xBFA1CB88587665F6, double 0x3F60A8F3531799AC }], align 16
@.str = private unnamed_addr constant [6 x i8] c"%.9f\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @advance(i32 %nbodies, %struct.planet* %bodies, double %dt) #0 {
entry:
  %nbodies.addr = alloca i32, align 4
  %bodies.addr = alloca %struct.planet*, align 8
  %dt.addr = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %b = alloca %struct.planet*, align 8
  %b2 = alloca %struct.planet*, align 8
  %dx = alloca double, align 8
  %dy = alloca double, align 8
  %dz = alloca double, align 8
  %distance = alloca double, align 8
  %mag = alloca double, align 8
  %b49 = alloca %struct.planet*, align 8
  store i32 %nbodies, i32* %nbodies.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbodies.addr, metadata !40, metadata !41), !dbg !42
  store %struct.planet* %bodies, %struct.planet** %bodies.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.planet** %bodies.addr, metadata !43, metadata !41), !dbg !44
  store double %dt, double* %dt.addr, align 8
  call void @llvm.dbg.declare(metadata double* %dt.addr, metadata !45, metadata !41), !dbg !46
  call void @llvm.dbg.declare(metadata i32* %i, metadata !47, metadata !41), !dbg !48
  call void @llvm.dbg.declare(metadata i32* %j, metadata !49, metadata !41), !dbg !50
  store i32 0, i32* %i, align 4, !dbg !51
  br label %for.cond, !dbg !53

for.cond:                                         ; preds = %for.inc.43, %entry
  %0 = load i32, i32* %i, align 4, !dbg !54
  %1 = load i32, i32* %nbodies.addr, align 4, !dbg !58
  %cmp = icmp slt i32 %0, %1, !dbg !59
  br i1 %cmp, label %for.body, label %for.end.45, !dbg !60

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.planet** %b, metadata !61, metadata !41), !dbg !63
  %2 = load i32, i32* %i, align 4, !dbg !64
  %idxprom = sext i32 %2 to i64, !dbg !65
  %3 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !65
  %arrayidx = getelementptr inbounds %struct.planet, %struct.planet* %3, i64 %idxprom, !dbg !65
  store %struct.planet* %arrayidx, %struct.planet** %b, align 8, !dbg !63
  %4 = load i32, i32* %i, align 4, !dbg !66
  %add = add nsw i32 %4, 1, !dbg !68
  store i32 %add, i32* %j, align 4, !dbg !69
  br label %for.cond.1, !dbg !70

for.cond.1:                                       ; preds = %for.inc, %for.body
  %5 = load i32, i32* %j, align 4, !dbg !71
  %6 = load i32, i32* %nbodies.addr, align 4, !dbg !75
  %cmp2 = icmp slt i32 %5, %6, !dbg !76
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !77

for.body.3:                                       ; preds = %for.cond.1
  call void @llvm.dbg.declare(metadata %struct.planet** %b2, metadata !78, metadata !41), !dbg !80
  %7 = load i32, i32* %j, align 4, !dbg !81
  %idxprom4 = sext i32 %7 to i64, !dbg !82
  %8 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !82
  %arrayidx5 = getelementptr inbounds %struct.planet, %struct.planet* %8, i64 %idxprom4, !dbg !82
  store %struct.planet* %arrayidx5, %struct.planet** %b2, align 8, !dbg !80
  call void @llvm.dbg.declare(metadata double* %dx, metadata !83, metadata !41), !dbg !84
  %9 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !85
  %x = getelementptr inbounds %struct.planet, %struct.planet* %9, i32 0, i32 0, !dbg !86
  %10 = load double, double* %x, align 8, !dbg !86
  %11 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !87
  %x6 = getelementptr inbounds %struct.planet, %struct.planet* %11, i32 0, i32 0, !dbg !88
  %12 = load double, double* %x6, align 8, !dbg !88
  %sub = fsub double %10, %12, !dbg !89
  store double %sub, double* %dx, align 8, !dbg !84
  call void @llvm.dbg.declare(metadata double* %dy, metadata !90, metadata !41), !dbg !91
  %13 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !92
  %y = getelementptr inbounds %struct.planet, %struct.planet* %13, i32 0, i32 1, !dbg !93
  %14 = load double, double* %y, align 8, !dbg !93
  %15 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !94
  %y7 = getelementptr inbounds %struct.planet, %struct.planet* %15, i32 0, i32 1, !dbg !95
  %16 = load double, double* %y7, align 8, !dbg !95
  %sub8 = fsub double %14, %16, !dbg !96
  store double %sub8, double* %dy, align 8, !dbg !91
  call void @llvm.dbg.declare(metadata double* %dz, metadata !97, metadata !41), !dbg !98
  %17 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !99
  %z = getelementptr inbounds %struct.planet, %struct.planet* %17, i32 0, i32 2, !dbg !100
  %18 = load double, double* %z, align 8, !dbg !100
  %19 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !101
  %z9 = getelementptr inbounds %struct.planet, %struct.planet* %19, i32 0, i32 2, !dbg !102
  %20 = load double, double* %z9, align 8, !dbg !102
  %sub10 = fsub double %18, %20, !dbg !103
  store double %sub10, double* %dz, align 8, !dbg !98
  call void @llvm.dbg.declare(metadata double* %distance, metadata !104, metadata !41), !dbg !105
  %21 = load double, double* %dx, align 8, !dbg !106
  %22 = load double, double* %dx, align 8, !dbg !107
  %mul = fmul double %21, %22, !dbg !108
  %23 = load double, double* %dy, align 8, !dbg !109
  %24 = load double, double* %dy, align 8, !dbg !110
  %mul11 = fmul double %23, %24, !dbg !111
  %add12 = fadd double %mul, %mul11, !dbg !112
  %25 = load double, double* %dz, align 8, !dbg !113
  %26 = load double, double* %dz, align 8, !dbg !114
  %mul13 = fmul double %25, %26, !dbg !115
  %add14 = fadd double %add12, %mul13, !dbg !116
  %call = call double @sqrt(double %add14) #4, !dbg !117
  store double %call, double* %distance, align 8, !dbg !105
  call void @llvm.dbg.declare(metadata double* %mag, metadata !118, metadata !41), !dbg !119
  %27 = load double, double* %dt.addr, align 8, !dbg !120
  %28 = load double, double* %distance, align 8, !dbg !121
  %29 = load double, double* %distance, align 8, !dbg !122
  %mul15 = fmul double %28, %29, !dbg !123
  %30 = load double, double* %distance, align 8, !dbg !124
  %mul16 = fmul double %mul15, %30, !dbg !125
  %div = fdiv double %27, %mul16, !dbg !126
  store double %div, double* %mag, align 8, !dbg !119
  %31 = load double, double* %dx, align 8, !dbg !127
  %32 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !128
  %mass = getelementptr inbounds %struct.planet, %struct.planet* %32, i32 0, i32 6, !dbg !129
  %33 = load double, double* %mass, align 8, !dbg !129
  %mul17 = fmul double %31, %33, !dbg !130
  %34 = load double, double* %mag, align 8, !dbg !131
  %mul18 = fmul double %mul17, %34, !dbg !132
  %35 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !133
  %vx = getelementptr inbounds %struct.planet, %struct.planet* %35, i32 0, i32 3, !dbg !134
  %36 = load double, double* %vx, align 8, !dbg !135
  %sub19 = fsub double %36, %mul18, !dbg !135
  store double %sub19, double* %vx, align 8, !dbg !135
  %37 = load double, double* %dy, align 8, !dbg !136
  %38 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !137
  %mass20 = getelementptr inbounds %struct.planet, %struct.planet* %38, i32 0, i32 6, !dbg !138
  %39 = load double, double* %mass20, align 8, !dbg !138
  %mul21 = fmul double %37, %39, !dbg !139
  %40 = load double, double* %mag, align 8, !dbg !140
  %mul22 = fmul double %mul21, %40, !dbg !141
  %41 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !142
  %vy = getelementptr inbounds %struct.planet, %struct.planet* %41, i32 0, i32 4, !dbg !143
  %42 = load double, double* %vy, align 8, !dbg !144
  %sub23 = fsub double %42, %mul22, !dbg !144
  store double %sub23, double* %vy, align 8, !dbg !144
  %43 = load double, double* %dz, align 8, !dbg !145
  %44 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !146
  %mass24 = getelementptr inbounds %struct.planet, %struct.planet* %44, i32 0, i32 6, !dbg !147
  %45 = load double, double* %mass24, align 8, !dbg !147
  %mul25 = fmul double %43, %45, !dbg !148
  %46 = load double, double* %mag, align 8, !dbg !149
  %mul26 = fmul double %mul25, %46, !dbg !150
  %47 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !151
  %vz = getelementptr inbounds %struct.planet, %struct.planet* %47, i32 0, i32 5, !dbg !152
  %48 = load double, double* %vz, align 8, !dbg !153
  %sub27 = fsub double %48, %mul26, !dbg !153
  store double %sub27, double* %vz, align 8, !dbg !153
  %49 = load double, double* %dx, align 8, !dbg !154
  %50 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !155
  %mass28 = getelementptr inbounds %struct.planet, %struct.planet* %50, i32 0, i32 6, !dbg !156
  %51 = load double, double* %mass28, align 8, !dbg !156
  %mul29 = fmul double %49, %51, !dbg !157
  %52 = load double, double* %mag, align 8, !dbg !158
  %mul30 = fmul double %mul29, %52, !dbg !159
  %53 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !160
  %vx31 = getelementptr inbounds %struct.planet, %struct.planet* %53, i32 0, i32 3, !dbg !161
  %54 = load double, double* %vx31, align 8, !dbg !162
  %add32 = fadd double %54, %mul30, !dbg !162
  store double %add32, double* %vx31, align 8, !dbg !162
  %55 = load double, double* %dy, align 8, !dbg !163
  %56 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !164
  %mass33 = getelementptr inbounds %struct.planet, %struct.planet* %56, i32 0, i32 6, !dbg !165
  %57 = load double, double* %mass33, align 8, !dbg !165
  %mul34 = fmul double %55, %57, !dbg !166
  %58 = load double, double* %mag, align 8, !dbg !167
  %mul35 = fmul double %mul34, %58, !dbg !168
  %59 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !169
  %vy36 = getelementptr inbounds %struct.planet, %struct.planet* %59, i32 0, i32 4, !dbg !170
  %60 = load double, double* %vy36, align 8, !dbg !171
  %add37 = fadd double %60, %mul35, !dbg !171
  store double %add37, double* %vy36, align 8, !dbg !171
  %61 = load double, double* %dz, align 8, !dbg !172
  %62 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !173
  %mass38 = getelementptr inbounds %struct.planet, %struct.planet* %62, i32 0, i32 6, !dbg !174
  %63 = load double, double* %mass38, align 8, !dbg !174
  %mul39 = fmul double %61, %63, !dbg !175
  %64 = load double, double* %mag, align 8, !dbg !176
  %mul40 = fmul double %mul39, %64, !dbg !177
  %65 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !178
  %vz41 = getelementptr inbounds %struct.planet, %struct.planet* %65, i32 0, i32 5, !dbg !179
  %66 = load double, double* %vz41, align 8, !dbg !180
  %add42 = fadd double %66, %mul40, !dbg !180
  store double %add42, double* %vz41, align 8, !dbg !180
  br label %for.inc, !dbg !181

for.inc:                                          ; preds = %for.body.3
  %67 = load i32, i32* %j, align 4, !dbg !182
  %inc = add nsw i32 %67, 1, !dbg !182
  store i32 %inc, i32* %j, align 4, !dbg !182
  br label %for.cond.1, !dbg !183

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.43, !dbg !184

for.inc.43:                                       ; preds = %for.end
  %68 = load i32, i32* %i, align 4, !dbg !185
  %inc44 = add nsw i32 %68, 1, !dbg !185
  store i32 %inc44, i32* %i, align 4, !dbg !185
  br label %for.cond, !dbg !186

for.end.45:                                       ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !187
  br label %for.cond.46, !dbg !189

for.cond.46:                                      ; preds = %for.inc.64, %for.end.45
  %69 = load i32, i32* %i, align 4, !dbg !190
  %70 = load i32, i32* %nbodies.addr, align 4, !dbg !194
  %cmp47 = icmp slt i32 %69, %70, !dbg !195
  br i1 %cmp47, label %for.body.48, label %for.end.66, !dbg !196

for.body.48:                                      ; preds = %for.cond.46
  call void @llvm.dbg.declare(metadata %struct.planet** %b49, metadata !197, metadata !41), !dbg !199
  %71 = load i32, i32* %i, align 4, !dbg !200
  %idxprom50 = sext i32 %71 to i64, !dbg !201
  %72 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !201
  %arrayidx51 = getelementptr inbounds %struct.planet, %struct.planet* %72, i64 %idxprom50, !dbg !201
  store %struct.planet* %arrayidx51, %struct.planet** %b49, align 8, !dbg !199
  %73 = load double, double* %dt.addr, align 8, !dbg !202
  %74 = load %struct.planet*, %struct.planet** %b49, align 8, !dbg !203
  %vx52 = getelementptr inbounds %struct.planet, %struct.planet* %74, i32 0, i32 3, !dbg !204
  %75 = load double, double* %vx52, align 8, !dbg !204
  %mul53 = fmul double %73, %75, !dbg !205
  %76 = load %struct.planet*, %struct.planet** %b49, align 8, !dbg !206
  %x54 = getelementptr inbounds %struct.planet, %struct.planet* %76, i32 0, i32 0, !dbg !207
  %77 = load double, double* %x54, align 8, !dbg !208
  %add55 = fadd double %77, %mul53, !dbg !208
  store double %add55, double* %x54, align 8, !dbg !208
  %78 = load double, double* %dt.addr, align 8, !dbg !209
  %79 = load %struct.planet*, %struct.planet** %b49, align 8, !dbg !210
  %vy56 = getelementptr inbounds %struct.planet, %struct.planet* %79, i32 0, i32 4, !dbg !211
  %80 = load double, double* %vy56, align 8, !dbg !211
  %mul57 = fmul double %78, %80, !dbg !212
  %81 = load %struct.planet*, %struct.planet** %b49, align 8, !dbg !213
  %y58 = getelementptr inbounds %struct.planet, %struct.planet* %81, i32 0, i32 1, !dbg !214
  %82 = load double, double* %y58, align 8, !dbg !215
  %add59 = fadd double %82, %mul57, !dbg !215
  store double %add59, double* %y58, align 8, !dbg !215
  %83 = load double, double* %dt.addr, align 8, !dbg !216
  %84 = load %struct.planet*, %struct.planet** %b49, align 8, !dbg !217
  %vz60 = getelementptr inbounds %struct.planet, %struct.planet* %84, i32 0, i32 5, !dbg !218
  %85 = load double, double* %vz60, align 8, !dbg !218
  %mul61 = fmul double %83, %85, !dbg !219
  %86 = load %struct.planet*, %struct.planet** %b49, align 8, !dbg !220
  %z62 = getelementptr inbounds %struct.planet, %struct.planet* %86, i32 0, i32 2, !dbg !221
  %87 = load double, double* %z62, align 8, !dbg !222
  %add63 = fadd double %87, %mul61, !dbg !222
  store double %add63, double* %z62, align 8, !dbg !222
  br label %for.inc.64, !dbg !223

for.inc.64:                                       ; preds = %for.body.48
  %88 = load i32, i32* %i, align 4, !dbg !224
  %inc65 = add nsw i32 %88, 1, !dbg !224
  store i32 %inc65, i32* %i, align 4, !dbg !224
  br label %for.cond.46, !dbg !225

for.end.66:                                       ; preds = %for.cond.46
  ret void, !dbg !226
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare double @sqrt(double) #2

; Function Attrs: nounwind uwtable
define double @energy(i32 %nbodies, %struct.planet* %bodies) #0 {
entry:
  %nbodies.addr = alloca i32, align 4
  %bodies.addr = alloca %struct.planet*, align 8
  %e = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %b = alloca %struct.planet*, align 8
  %b2 = alloca %struct.planet*, align 8
  %dx = alloca double, align 8
  %dy = alloca double, align 8
  %dz = alloca double, align 8
  %distance = alloca double, align 8
  store i32 %nbodies, i32* %nbodies.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbodies.addr, metadata !227, metadata !41), !dbg !228
  store %struct.planet* %bodies, %struct.planet** %bodies.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.planet** %bodies.addr, metadata !229, metadata !41), !dbg !230
  call void @llvm.dbg.declare(metadata double* %e, metadata !231, metadata !41), !dbg !232
  call void @llvm.dbg.declare(metadata i32* %i, metadata !233, metadata !41), !dbg !234
  call void @llvm.dbg.declare(metadata i32* %j, metadata !235, metadata !41), !dbg !236
  store double 0.000000e+00, double* %e, align 8, !dbg !237
  store i32 0, i32* %i, align 4, !dbg !238
  br label %for.cond, !dbg !240

for.cond:                                         ; preds = %for.inc.30, %entry
  %0 = load i32, i32* %i, align 4, !dbg !241
  %1 = load i32, i32* %nbodies.addr, align 4, !dbg !245
  %cmp = icmp slt i32 %0, %1, !dbg !246
  br i1 %cmp, label %for.body, label %for.end.32, !dbg !247

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.planet** %b, metadata !248, metadata !41), !dbg !250
  %2 = load i32, i32* %i, align 4, !dbg !251
  %idxprom = sext i32 %2 to i64, !dbg !252
  %3 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !252
  %arrayidx = getelementptr inbounds %struct.planet, %struct.planet* %3, i64 %idxprom, !dbg !252
  store %struct.planet* %arrayidx, %struct.planet** %b, align 8, !dbg !250
  %4 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !253
  %mass = getelementptr inbounds %struct.planet, %struct.planet* %4, i32 0, i32 6, !dbg !254
  %5 = load double, double* %mass, align 8, !dbg !254
  %mul = fmul double 5.000000e-01, %5, !dbg !255
  %6 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !256
  %vx = getelementptr inbounds %struct.planet, %struct.planet* %6, i32 0, i32 3, !dbg !257
  %7 = load double, double* %vx, align 8, !dbg !257
  %8 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !258
  %vx1 = getelementptr inbounds %struct.planet, %struct.planet* %8, i32 0, i32 3, !dbg !259
  %9 = load double, double* %vx1, align 8, !dbg !259
  %mul2 = fmul double %7, %9, !dbg !260
  %10 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !261
  %vy = getelementptr inbounds %struct.planet, %struct.planet* %10, i32 0, i32 4, !dbg !262
  %11 = load double, double* %vy, align 8, !dbg !262
  %12 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !263
  %vy3 = getelementptr inbounds %struct.planet, %struct.planet* %12, i32 0, i32 4, !dbg !264
  %13 = load double, double* %vy3, align 8, !dbg !264
  %mul4 = fmul double %11, %13, !dbg !265
  %add = fadd double %mul2, %mul4, !dbg !266
  %14 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !267
  %vz = getelementptr inbounds %struct.planet, %struct.planet* %14, i32 0, i32 5, !dbg !268
  %15 = load double, double* %vz, align 8, !dbg !268
  %16 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !269
  %vz5 = getelementptr inbounds %struct.planet, %struct.planet* %16, i32 0, i32 5, !dbg !270
  %17 = load double, double* %vz5, align 8, !dbg !270
  %mul6 = fmul double %15, %17, !dbg !271
  %add7 = fadd double %add, %mul6, !dbg !272
  %mul8 = fmul double %mul, %add7, !dbg !273
  %18 = load double, double* %e, align 8, !dbg !274
  %add9 = fadd double %18, %mul8, !dbg !274
  store double %add9, double* %e, align 8, !dbg !274
  %19 = load i32, i32* %i, align 4, !dbg !275
  %add10 = add nsw i32 %19, 1, !dbg !277
  store i32 %add10, i32* %j, align 4, !dbg !278
  br label %for.cond.11, !dbg !279

for.cond.11:                                      ; preds = %for.inc, %for.body
  %20 = load i32, i32* %j, align 4, !dbg !280
  %21 = load i32, i32* %nbodies.addr, align 4, !dbg !284
  %cmp12 = icmp slt i32 %20, %21, !dbg !285
  br i1 %cmp12, label %for.body.13, label %for.end, !dbg !286

for.body.13:                                      ; preds = %for.cond.11
  call void @llvm.dbg.declare(metadata %struct.planet** %b2, metadata !287, metadata !41), !dbg !289
  %22 = load i32, i32* %j, align 4, !dbg !290
  %idxprom14 = sext i32 %22 to i64, !dbg !291
  %23 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !291
  %arrayidx15 = getelementptr inbounds %struct.planet, %struct.planet* %23, i64 %idxprom14, !dbg !291
  store %struct.planet* %arrayidx15, %struct.planet** %b2, align 8, !dbg !289
  call void @llvm.dbg.declare(metadata double* %dx, metadata !292, metadata !41), !dbg !293
  %24 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !294
  %x = getelementptr inbounds %struct.planet, %struct.planet* %24, i32 0, i32 0, !dbg !295
  %25 = load double, double* %x, align 8, !dbg !295
  %26 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !296
  %x16 = getelementptr inbounds %struct.planet, %struct.planet* %26, i32 0, i32 0, !dbg !297
  %27 = load double, double* %x16, align 8, !dbg !297
  %sub = fsub double %25, %27, !dbg !298
  store double %sub, double* %dx, align 8, !dbg !293
  call void @llvm.dbg.declare(metadata double* %dy, metadata !299, metadata !41), !dbg !300
  %28 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !301
  %y = getelementptr inbounds %struct.planet, %struct.planet* %28, i32 0, i32 1, !dbg !302
  %29 = load double, double* %y, align 8, !dbg !302
  %30 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !303
  %y17 = getelementptr inbounds %struct.planet, %struct.planet* %30, i32 0, i32 1, !dbg !304
  %31 = load double, double* %y17, align 8, !dbg !304
  %sub18 = fsub double %29, %31, !dbg !305
  store double %sub18, double* %dy, align 8, !dbg !300
  call void @llvm.dbg.declare(metadata double* %dz, metadata !306, metadata !41), !dbg !307
  %32 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !308
  %z = getelementptr inbounds %struct.planet, %struct.planet* %32, i32 0, i32 2, !dbg !309
  %33 = load double, double* %z, align 8, !dbg !309
  %34 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !310
  %z19 = getelementptr inbounds %struct.planet, %struct.planet* %34, i32 0, i32 2, !dbg !311
  %35 = load double, double* %z19, align 8, !dbg !311
  %sub20 = fsub double %33, %35, !dbg !312
  store double %sub20, double* %dz, align 8, !dbg !307
  call void @llvm.dbg.declare(metadata double* %distance, metadata !313, metadata !41), !dbg !314
  %36 = load double, double* %dx, align 8, !dbg !315
  %37 = load double, double* %dx, align 8, !dbg !316
  %mul21 = fmul double %36, %37, !dbg !317
  %38 = load double, double* %dy, align 8, !dbg !318
  %39 = load double, double* %dy, align 8, !dbg !319
  %mul22 = fmul double %38, %39, !dbg !320
  %add23 = fadd double %mul21, %mul22, !dbg !321
  %40 = load double, double* %dz, align 8, !dbg !322
  %41 = load double, double* %dz, align 8, !dbg !323
  %mul24 = fmul double %40, %41, !dbg !324
  %add25 = fadd double %add23, %mul24, !dbg !325
  %call = call double @sqrt(double %add25) #4, !dbg !326
  store double %call, double* %distance, align 8, !dbg !314
  %42 = load %struct.planet*, %struct.planet** %b, align 8, !dbg !327
  %mass26 = getelementptr inbounds %struct.planet, %struct.planet* %42, i32 0, i32 6, !dbg !328
  %43 = load double, double* %mass26, align 8, !dbg !328
  %44 = load %struct.planet*, %struct.planet** %b2, align 8, !dbg !329
  %mass27 = getelementptr inbounds %struct.planet, %struct.planet* %44, i32 0, i32 6, !dbg !330
  %45 = load double, double* %mass27, align 8, !dbg !330
  %mul28 = fmul double %43, %45, !dbg !331
  %46 = load double, double* %distance, align 8, !dbg !332
  %div = fdiv double %mul28, %46, !dbg !333
  %47 = load double, double* %e, align 8, !dbg !334
  %sub29 = fsub double %47, %div, !dbg !334
  store double %sub29, double* %e, align 8, !dbg !334
  br label %for.inc, !dbg !335

for.inc:                                          ; preds = %for.body.13
  %48 = load i32, i32* %j, align 4, !dbg !336
  %inc = add nsw i32 %48, 1, !dbg !336
  store i32 %inc, i32* %j, align 4, !dbg !336
  br label %for.cond.11, !dbg !337

for.end:                                          ; preds = %for.cond.11
  br label %for.inc.30, !dbg !338

for.inc.30:                                       ; preds = %for.end
  %49 = load i32, i32* %i, align 4, !dbg !339
  %inc31 = add nsw i32 %49, 1, !dbg !339
  store i32 %inc31, i32* %i, align 4, !dbg !339
  br label %for.cond, !dbg !340

for.end.32:                                       ; preds = %for.cond
  %50 = load double, double* %e, align 8, !dbg !341
  ret double %50, !dbg !342
}

; Function Attrs: nounwind uwtable
define void @offset_momentum(i32 %nbodies, %struct.planet* %bodies) #0 {
entry:
  %nbodies.addr = alloca i32, align 4
  %bodies.addr = alloca %struct.planet*, align 8
  %px = alloca double, align 8
  %py = alloca double, align 8
  %pz = alloca double, align 8
  %i = alloca i32, align 4
  store i32 %nbodies, i32* %nbodies.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbodies.addr, metadata !343, metadata !41), !dbg !344
  store %struct.planet* %bodies, %struct.planet** %bodies.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.planet** %bodies.addr, metadata !345, metadata !41), !dbg !346
  call void @llvm.dbg.declare(metadata double* %px, metadata !347, metadata !41), !dbg !348
  store double 0.000000e+00, double* %px, align 8, !dbg !348
  call void @llvm.dbg.declare(metadata double* %py, metadata !349, metadata !41), !dbg !350
  store double 0.000000e+00, double* %py, align 8, !dbg !350
  call void @llvm.dbg.declare(metadata double* %pz, metadata !351, metadata !41), !dbg !352
  store double 0.000000e+00, double* %pz, align 8, !dbg !352
  call void @llvm.dbg.declare(metadata i32* %i, metadata !353, metadata !41), !dbg !354
  store i32 0, i32* %i, align 4, !dbg !355
  br label %for.cond, !dbg !357

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !358
  %1 = load i32, i32* %nbodies.addr, align 4, !dbg !362
  %cmp = icmp slt i32 %0, %1, !dbg !363
  br i1 %cmp, label %for.body, label %for.end, !dbg !364

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !365
  %idxprom = sext i32 %2 to i64, !dbg !367
  %3 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !367
  %arrayidx = getelementptr inbounds %struct.planet, %struct.planet* %3, i64 %idxprom, !dbg !367
  %vx = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx, i32 0, i32 3, !dbg !368
  %4 = load double, double* %vx, align 8, !dbg !368
  %5 = load i32, i32* %i, align 4, !dbg !369
  %idxprom1 = sext i32 %5 to i64, !dbg !370
  %6 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !370
  %arrayidx2 = getelementptr inbounds %struct.planet, %struct.planet* %6, i64 %idxprom1, !dbg !370
  %mass = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx2, i32 0, i32 6, !dbg !371
  %7 = load double, double* %mass, align 8, !dbg !371
  %mul = fmul double %4, %7, !dbg !372
  %8 = load double, double* %px, align 8, !dbg !373
  %add = fadd double %8, %mul, !dbg !373
  store double %add, double* %px, align 8, !dbg !373
  %9 = load i32, i32* %i, align 4, !dbg !374
  %idxprom3 = sext i32 %9 to i64, !dbg !375
  %10 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !375
  %arrayidx4 = getelementptr inbounds %struct.planet, %struct.planet* %10, i64 %idxprom3, !dbg !375
  %vy = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx4, i32 0, i32 4, !dbg !376
  %11 = load double, double* %vy, align 8, !dbg !376
  %12 = load i32, i32* %i, align 4, !dbg !377
  %idxprom5 = sext i32 %12 to i64, !dbg !378
  %13 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !378
  %arrayidx6 = getelementptr inbounds %struct.planet, %struct.planet* %13, i64 %idxprom5, !dbg !378
  %mass7 = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx6, i32 0, i32 6, !dbg !379
  %14 = load double, double* %mass7, align 8, !dbg !379
  %mul8 = fmul double %11, %14, !dbg !380
  %15 = load double, double* %py, align 8, !dbg !381
  %add9 = fadd double %15, %mul8, !dbg !381
  store double %add9, double* %py, align 8, !dbg !381
  %16 = load i32, i32* %i, align 4, !dbg !382
  %idxprom10 = sext i32 %16 to i64, !dbg !383
  %17 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !383
  %arrayidx11 = getelementptr inbounds %struct.planet, %struct.planet* %17, i64 %idxprom10, !dbg !383
  %vz = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx11, i32 0, i32 5, !dbg !384
  %18 = load double, double* %vz, align 8, !dbg !384
  %19 = load i32, i32* %i, align 4, !dbg !385
  %idxprom12 = sext i32 %19 to i64, !dbg !386
  %20 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !386
  %arrayidx13 = getelementptr inbounds %struct.planet, %struct.planet* %20, i64 %idxprom12, !dbg !386
  %mass14 = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx13, i32 0, i32 6, !dbg !387
  %21 = load double, double* %mass14, align 8, !dbg !387
  %mul15 = fmul double %18, %21, !dbg !388
  %22 = load double, double* %pz, align 8, !dbg !389
  %add16 = fadd double %22, %mul15, !dbg !389
  store double %add16, double* %pz, align 8, !dbg !389
  br label %for.inc, !dbg !390

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !391
  %inc = add nsw i32 %23, 1, !dbg !391
  store i32 %inc, i32* %i, align 4, !dbg !391
  br label %for.cond, !dbg !392

for.end:                                          ; preds = %for.cond
  %24 = load double, double* %px, align 8, !dbg !393
  %sub = fsub double -0.000000e+00, %24, !dbg !394
  %div = fdiv double %sub, 0x4043BD3CC9BE45DE, !dbg !395
  %25 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !396
  %arrayidx17 = getelementptr inbounds %struct.planet, %struct.planet* %25, i64 0, !dbg !396
  %vx18 = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx17, i32 0, i32 3, !dbg !397
  store double %div, double* %vx18, align 8, !dbg !398
  %26 = load double, double* %py, align 8, !dbg !399
  %sub19 = fsub double -0.000000e+00, %26, !dbg !400
  %div20 = fdiv double %sub19, 0x4043BD3CC9BE45DE, !dbg !401
  %27 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !402
  %arrayidx21 = getelementptr inbounds %struct.planet, %struct.planet* %27, i64 0, !dbg !402
  %vy22 = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx21, i32 0, i32 4, !dbg !403
  store double %div20, double* %vy22, align 8, !dbg !404
  %28 = load double, double* %pz, align 8, !dbg !405
  %sub23 = fsub double -0.000000e+00, %28, !dbg !406
  %div24 = fdiv double %sub23, 0x4043BD3CC9BE45DE, !dbg !407
  %29 = load %struct.planet*, %struct.planet** %bodies.addr, align 8, !dbg !408
  %arrayidx25 = getelementptr inbounds %struct.planet, %struct.planet* %29, i64 0, !dbg !408
  %vz26 = getelementptr inbounds %struct.planet, %struct.planet* %arrayidx25, i32 0, i32 5, !dbg !409
  store double %div24, double* %vz26, align 8, !dbg !410
  ret void, !dbg !411
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !412, metadata !41), !dbg !413
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !414, metadata !41), !dbg !415
  call void @llvm.dbg.declare(metadata i32* %n, metadata !416, metadata !41), !dbg !417
  store i32 5000000, i32* %n, align 4, !dbg !417
  call void @llvm.dbg.declare(metadata i32* %i, metadata !418, metadata !41), !dbg !419
  call void @offset_momentum(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i32 0, i32 0)), !dbg !420
  %call = call double @energy(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i32 0, i32 0)), !dbg !421
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), double %call), !dbg !422
  store i32 1, i32* %i, align 4, !dbg !423
  br label %for.cond, !dbg !425

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !426
  %1 = load i32, i32* %n, align 4, !dbg !430
  %cmp = icmp sle i32 %0, %1, !dbg !431
  br i1 %cmp, label %for.body, label %for.end, !dbg !432

for.body:                                         ; preds = %for.cond
  call void @advance(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i32 0, i32 0), double 1.000000e-02), !dbg !433
  br label %for.inc, !dbg !433

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !434
  %inc = add nsw i32 %2, 1, !dbg !434
  store i32 %inc, i32* %i, align 4, !dbg !434
  br label %for.cond, !dbg !435

for.end:                                          ; preds = %for.cond
  %call2 = call double @energy(i32 5, %struct.planet* getelementptr inbounds ([5 x %struct.planet], [5 x %struct.planet]* @bodies, i32 0, i32 0)), !dbg !436
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), double %call2), !dbg !437
  ret i32 0, !dbg !438
}

declare i32 @printf(i8*, ...) #3

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!37, !38}
!llvm.ident = !{!39}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3, globals: !32)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/BenchmarkGame/n-body")
!2 = !{}
!3 = !{!4, !20, !23, !26}
!4 = !DISubprogram(name: "advance", scope: !5, file: !5, line: 23, type: !6, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, %struct.planet*, double)* @advance, variables: !2)
!5 = !DIFile(filename: "/home/gleison/tf/Benchmarks/BenchmarkGame/n-body/tmp.c", directory: "/home/gleison/tf/Benchmarks/BenchmarkGame/n-body")
!6 = !DISubroutineType(types: !7)
!7 = !{null, !8, !9, !13}
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DICompositeType(tag: DW_TAG_structure_type, name: "planet", file: !5, line: 17, size: 448, align: 64, elements: !11)
!11 = !{!12, !14, !15, !16, !17, !18, !19}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !10, file: !5, line: 18, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !10, file: !5, line: 18, baseType: !13, size: 64, align: 64, offset: 64)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !10, file: !5, line: 18, baseType: !13, size: 64, align: 64, offset: 128)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "vx", scope: !10, file: !5, line: 19, baseType: !13, size: 64, align: 64, offset: 192)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "vy", scope: !10, file: !5, line: 19, baseType: !13, size: 64, align: 64, offset: 256)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "vz", scope: !10, file: !5, line: 19, baseType: !13, size: 64, align: 64, offset: 320)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !10, file: !5, line: 20, baseType: !13, size: 64, align: 64, offset: 384)
!20 = !DISubprogram(name: "energy", scope: !5, file: !5, line: 51, type: !21, isLocal: false, isDefinition: true, scopeLine: 51, flags: DIFlagPrototyped, isOptimized: false, function: double (i32, %struct.planet*)* @energy, variables: !2)
!21 = !DISubroutineType(types: !22)
!22 = !{!13, !8, !9}
!23 = !DISubprogram(name: "offset_momentum", scope: !5, file: !5, line: 71, type: !24, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, %struct.planet*)* @offset_momentum, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{null, !8, !9}
!26 = !DISubprogram(name: "main", scope: !5, file: !5, line: 121, type: !27, isLocal: false, isDefinition: true, scopeLine: 121, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!27 = !DISubroutineType(types: !28)
!28 = !{!8, !8, !29}
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!32 = !{!33}
!33 = !DIGlobalVariable(name: "bodies", scope: !0, file: !5, line: 85, type: !34, isLocal: false, isDefinition: true, variable: [5 x %struct.planet]* @bodies)
!34 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2240, align: 64, elements: !35)
!35 = !{!36}
!36 = !DISubrange(count: 5)
!37 = !{i32 2, !"Dwarf Version", i32 4}
!38 = !{i32 2, !"Debug Info Version", i32 3}
!39 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!40 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nbodies", arg: 1, scope: !4, file: !5, line: 23, type: !8)
!41 = !DIExpression()
!42 = !DILocation(line: 23, column: 18, scope: !4)
!43 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bodies", arg: 2, scope: !4, file: !5, line: 23, type: !9)
!44 = !DILocation(line: 23, column: 42, scope: !4)
!45 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dt", arg: 3, scope: !4, file: !5, line: 23, type: !13)
!46 = !DILocation(line: 23, column: 57, scope: !4)
!47 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !4, file: !5, line: 24, type: !8)
!48 = !DILocation(line: 24, column: 7, scope: !4)
!49 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !4, file: !5, line: 24, type: !8)
!50 = !DILocation(line: 24, column: 10, scope: !4)
!51 = !DILocation(line: 26, column: 10, scope: !52)
!52 = distinct !DILexicalBlock(scope: !4, file: !5, line: 26, column: 3)
!53 = !DILocation(line: 26, column: 8, scope: !52)
!54 = !DILocation(line: 26, column: 15, scope: !55)
!55 = !DILexicalBlockFile(scope: !56, file: !5, discriminator: 2)
!56 = !DILexicalBlockFile(scope: !57, file: !5, discriminator: 1)
!57 = distinct !DILexicalBlock(scope: !52, file: !5, line: 26, column: 3)
!58 = !DILocation(line: 26, column: 19, scope: !57)
!59 = !DILocation(line: 26, column: 17, scope: !57)
!60 = !DILocation(line: 26, column: 3, scope: !52)
!61 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !62, file: !5, line: 27, type: !9)
!62 = distinct !DILexicalBlock(scope: !57, file: !5, line: 26, column: 33)
!63 = !DILocation(line: 27, column: 20, scope: !62)
!64 = !DILocation(line: 27, column: 33, scope: !62)
!65 = !DILocation(line: 27, column: 26, scope: !62)
!66 = !DILocation(line: 28, column: 14, scope: !67)
!67 = distinct !DILexicalBlock(scope: !62, file: !5, line: 28, column: 5)
!68 = !DILocation(line: 28, column: 16, scope: !67)
!69 = !DILocation(line: 28, column: 12, scope: !67)
!70 = !DILocation(line: 28, column: 10, scope: !67)
!71 = !DILocation(line: 28, column: 21, scope: !72)
!72 = !DILexicalBlockFile(scope: !73, file: !5, discriminator: 2)
!73 = !DILexicalBlockFile(scope: !74, file: !5, discriminator: 1)
!74 = distinct !DILexicalBlock(scope: !67, file: !5, line: 28, column: 5)
!75 = !DILocation(line: 28, column: 25, scope: !74)
!76 = !DILocation(line: 28, column: 23, scope: !74)
!77 = !DILocation(line: 28, column: 5, scope: !67)
!78 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b2", scope: !79, file: !5, line: 29, type: !9)
!79 = distinct !DILexicalBlock(scope: !74, file: !5, line: 28, column: 39)
!80 = !DILocation(line: 29, column: 22, scope: !79)
!81 = !DILocation(line: 29, column: 36, scope: !79)
!82 = !DILocation(line: 29, column: 29, scope: !79)
!83 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dx", scope: !79, file: !5, line: 30, type: !13)
!84 = !DILocation(line: 30, column: 14, scope: !79)
!85 = !DILocation(line: 30, column: 19, scope: !79)
!86 = !DILocation(line: 30, column: 22, scope: !79)
!87 = !DILocation(line: 30, column: 26, scope: !79)
!88 = !DILocation(line: 30, column: 30, scope: !79)
!89 = !DILocation(line: 30, column: 24, scope: !79)
!90 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dy", scope: !79, file: !5, line: 31, type: !13)
!91 = !DILocation(line: 31, column: 14, scope: !79)
!92 = !DILocation(line: 31, column: 19, scope: !79)
!93 = !DILocation(line: 31, column: 22, scope: !79)
!94 = !DILocation(line: 31, column: 26, scope: !79)
!95 = !DILocation(line: 31, column: 30, scope: !79)
!96 = !DILocation(line: 31, column: 24, scope: !79)
!97 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dz", scope: !79, file: !5, line: 32, type: !13)
!98 = !DILocation(line: 32, column: 14, scope: !79)
!99 = !DILocation(line: 32, column: 19, scope: !79)
!100 = !DILocation(line: 32, column: 22, scope: !79)
!101 = !DILocation(line: 32, column: 26, scope: !79)
!102 = !DILocation(line: 32, column: 30, scope: !79)
!103 = !DILocation(line: 32, column: 24, scope: !79)
!104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "distance", scope: !79, file: !5, line: 33, type: !13)
!105 = !DILocation(line: 33, column: 14, scope: !79)
!106 = !DILocation(line: 33, column: 30, scope: !79)
!107 = !DILocation(line: 33, column: 35, scope: !79)
!108 = !DILocation(line: 33, column: 33, scope: !79)
!109 = !DILocation(line: 33, column: 40, scope: !79)
!110 = !DILocation(line: 33, column: 45, scope: !79)
!111 = !DILocation(line: 33, column: 43, scope: !79)
!112 = !DILocation(line: 33, column: 38, scope: !79)
!113 = !DILocation(line: 33, column: 50, scope: !79)
!114 = !DILocation(line: 33, column: 55, scope: !79)
!115 = !DILocation(line: 33, column: 53, scope: !79)
!116 = !DILocation(line: 33, column: 48, scope: !79)
!117 = !DILocation(line: 33, column: 25, scope: !79)
!118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mag", scope: !79, file: !5, line: 34, type: !13)
!119 = !DILocation(line: 34, column: 14, scope: !79)
!120 = !DILocation(line: 34, column: 20, scope: !79)
!121 = !DILocation(line: 34, column: 26, scope: !79)
!122 = !DILocation(line: 34, column: 37, scope: !79)
!123 = !DILocation(line: 34, column: 35, scope: !79)
!124 = !DILocation(line: 34, column: 48, scope: !79)
!125 = !DILocation(line: 34, column: 46, scope: !79)
!126 = !DILocation(line: 34, column: 23, scope: !79)
!127 = !DILocation(line: 35, column: 16, scope: !79)
!128 = !DILocation(line: 35, column: 21, scope: !79)
!129 = !DILocation(line: 35, column: 25, scope: !79)
!130 = !DILocation(line: 35, column: 19, scope: !79)
!131 = !DILocation(line: 35, column: 32, scope: !79)
!132 = !DILocation(line: 35, column: 30, scope: !79)
!133 = !DILocation(line: 35, column: 7, scope: !79)
!134 = !DILocation(line: 35, column: 10, scope: !79)
!135 = !DILocation(line: 35, column: 13, scope: !79)
!136 = !DILocation(line: 36, column: 16, scope: !79)
!137 = !DILocation(line: 36, column: 21, scope: !79)
!138 = !DILocation(line: 36, column: 25, scope: !79)
!139 = !DILocation(line: 36, column: 19, scope: !79)
!140 = !DILocation(line: 36, column: 32, scope: !79)
!141 = !DILocation(line: 36, column: 30, scope: !79)
!142 = !DILocation(line: 36, column: 7, scope: !79)
!143 = !DILocation(line: 36, column: 10, scope: !79)
!144 = !DILocation(line: 36, column: 13, scope: !79)
!145 = !DILocation(line: 37, column: 16, scope: !79)
!146 = !DILocation(line: 37, column: 21, scope: !79)
!147 = !DILocation(line: 37, column: 25, scope: !79)
!148 = !DILocation(line: 37, column: 19, scope: !79)
!149 = !DILocation(line: 37, column: 32, scope: !79)
!150 = !DILocation(line: 37, column: 30, scope: !79)
!151 = !DILocation(line: 37, column: 7, scope: !79)
!152 = !DILocation(line: 37, column: 10, scope: !79)
!153 = !DILocation(line: 37, column: 13, scope: !79)
!154 = !DILocation(line: 38, column: 17, scope: !79)
!155 = !DILocation(line: 38, column: 22, scope: !79)
!156 = !DILocation(line: 38, column: 25, scope: !79)
!157 = !DILocation(line: 38, column: 20, scope: !79)
!158 = !DILocation(line: 38, column: 32, scope: !79)
!159 = !DILocation(line: 38, column: 30, scope: !79)
!160 = !DILocation(line: 38, column: 7, scope: !79)
!161 = !DILocation(line: 38, column: 11, scope: !79)
!162 = !DILocation(line: 38, column: 14, scope: !79)
!163 = !DILocation(line: 39, column: 17, scope: !79)
!164 = !DILocation(line: 39, column: 22, scope: !79)
!165 = !DILocation(line: 39, column: 25, scope: !79)
!166 = !DILocation(line: 39, column: 20, scope: !79)
!167 = !DILocation(line: 39, column: 32, scope: !79)
!168 = !DILocation(line: 39, column: 30, scope: !79)
!169 = !DILocation(line: 39, column: 7, scope: !79)
!170 = !DILocation(line: 39, column: 11, scope: !79)
!171 = !DILocation(line: 39, column: 14, scope: !79)
!172 = !DILocation(line: 40, column: 17, scope: !79)
!173 = !DILocation(line: 40, column: 22, scope: !79)
!174 = !DILocation(line: 40, column: 25, scope: !79)
!175 = !DILocation(line: 40, column: 20, scope: !79)
!176 = !DILocation(line: 40, column: 32, scope: !79)
!177 = !DILocation(line: 40, column: 30, scope: !79)
!178 = !DILocation(line: 40, column: 7, scope: !79)
!179 = !DILocation(line: 40, column: 11, scope: !79)
!180 = !DILocation(line: 40, column: 14, scope: !79)
!181 = !DILocation(line: 41, column: 5, scope: !79)
!182 = !DILocation(line: 28, column: 35, scope: !74)
!183 = !DILocation(line: 28, column: 5, scope: !74)
!184 = !DILocation(line: 42, column: 3, scope: !62)
!185 = !DILocation(line: 26, column: 29, scope: !57)
!186 = !DILocation(line: 26, column: 3, scope: !57)
!187 = !DILocation(line: 43, column: 10, scope: !188)
!188 = distinct !DILexicalBlock(scope: !4, file: !5, line: 43, column: 3)
!189 = !DILocation(line: 43, column: 8, scope: !188)
!190 = !DILocation(line: 43, column: 15, scope: !191)
!191 = !DILexicalBlockFile(scope: !192, file: !5, discriminator: 2)
!192 = !DILexicalBlockFile(scope: !193, file: !5, discriminator: 1)
!193 = distinct !DILexicalBlock(scope: !188, file: !5, line: 43, column: 3)
!194 = !DILocation(line: 43, column: 19, scope: !193)
!195 = !DILocation(line: 43, column: 17, scope: !193)
!196 = !DILocation(line: 43, column: 3, scope: !188)
!197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !198, file: !5, line: 44, type: !9)
!198 = distinct !DILexicalBlock(scope: !193, file: !5, line: 43, column: 33)
!199 = !DILocation(line: 44, column: 20, scope: !198)
!200 = !DILocation(line: 44, column: 33, scope: !198)
!201 = !DILocation(line: 44, column: 26, scope: !198)
!202 = !DILocation(line: 45, column: 13, scope: !198)
!203 = !DILocation(line: 45, column: 18, scope: !198)
!204 = !DILocation(line: 45, column: 21, scope: !198)
!205 = !DILocation(line: 45, column: 16, scope: !198)
!206 = !DILocation(line: 45, column: 5, scope: !198)
!207 = !DILocation(line: 45, column: 8, scope: !198)
!208 = !DILocation(line: 45, column: 10, scope: !198)
!209 = !DILocation(line: 46, column: 13, scope: !198)
!210 = !DILocation(line: 46, column: 18, scope: !198)
!211 = !DILocation(line: 46, column: 21, scope: !198)
!212 = !DILocation(line: 46, column: 16, scope: !198)
!213 = !DILocation(line: 46, column: 5, scope: !198)
!214 = !DILocation(line: 46, column: 8, scope: !198)
!215 = !DILocation(line: 46, column: 10, scope: !198)
!216 = !DILocation(line: 47, column: 13, scope: !198)
!217 = !DILocation(line: 47, column: 18, scope: !198)
!218 = !DILocation(line: 47, column: 21, scope: !198)
!219 = !DILocation(line: 47, column: 16, scope: !198)
!220 = !DILocation(line: 47, column: 5, scope: !198)
!221 = !DILocation(line: 47, column: 8, scope: !198)
!222 = !DILocation(line: 47, column: 10, scope: !198)
!223 = !DILocation(line: 48, column: 3, scope: !198)
!224 = !DILocation(line: 43, column: 29, scope: !193)
!225 = !DILocation(line: 43, column: 3, scope: !193)
!226 = !DILocation(line: 49, column: 1, scope: !4)
!227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nbodies", arg: 1, scope: !20, file: !5, line: 51, type: !8)
!228 = !DILocation(line: 51, column: 19, scope: !20)
!229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bodies", arg: 2, scope: !20, file: !5, line: 51, type: !9)
!230 = !DILocation(line: 51, column: 43, scope: !20)
!231 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "e", scope: !20, file: !5, line: 52, type: !13)
!232 = !DILocation(line: 52, column: 10, scope: !20)
!233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !20, file: !5, line: 53, type: !8)
!234 = !DILocation(line: 53, column: 7, scope: !20)
!235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !20, file: !5, line: 53, type: !8)
!236 = !DILocation(line: 53, column: 10, scope: !20)
!237 = !DILocation(line: 55, column: 5, scope: !20)
!238 = !DILocation(line: 56, column: 10, scope: !239)
!239 = distinct !DILexicalBlock(scope: !20, file: !5, line: 56, column: 3)
!240 = !DILocation(line: 56, column: 8, scope: !239)
!241 = !DILocation(line: 56, column: 15, scope: !242)
!242 = !DILexicalBlockFile(scope: !243, file: !5, discriminator: 2)
!243 = !DILexicalBlockFile(scope: !244, file: !5, discriminator: 1)
!244 = distinct !DILexicalBlock(scope: !239, file: !5, line: 56, column: 3)
!245 = !DILocation(line: 56, column: 19, scope: !244)
!246 = !DILocation(line: 56, column: 17, scope: !244)
!247 = !DILocation(line: 56, column: 3, scope: !239)
!248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !249, file: !5, line: 57, type: !9)
!249 = distinct !DILexicalBlock(scope: !244, file: !5, line: 56, column: 33)
!250 = !DILocation(line: 57, column: 20, scope: !249)
!251 = !DILocation(line: 57, column: 33, scope: !249)
!252 = !DILocation(line: 57, column: 26, scope: !249)
!253 = !DILocation(line: 58, column: 16, scope: !249)
!254 = !DILocation(line: 58, column: 19, scope: !249)
!255 = !DILocation(line: 58, column: 14, scope: !249)
!256 = !DILocation(line: 58, column: 27, scope: !249)
!257 = !DILocation(line: 58, column: 30, scope: !249)
!258 = !DILocation(line: 58, column: 35, scope: !249)
!259 = !DILocation(line: 58, column: 38, scope: !249)
!260 = !DILocation(line: 58, column: 33, scope: !249)
!261 = !DILocation(line: 58, column: 43, scope: !249)
!262 = !DILocation(line: 58, column: 46, scope: !249)
!263 = !DILocation(line: 58, column: 51, scope: !249)
!264 = !DILocation(line: 58, column: 54, scope: !249)
!265 = !DILocation(line: 58, column: 49, scope: !249)
!266 = !DILocation(line: 58, column: 41, scope: !249)
!267 = !DILocation(line: 58, column: 59, scope: !249)
!268 = !DILocation(line: 58, column: 62, scope: !249)
!269 = !DILocation(line: 58, column: 67, scope: !249)
!270 = !DILocation(line: 58, column: 70, scope: !249)
!271 = !DILocation(line: 58, column: 65, scope: !249)
!272 = !DILocation(line: 58, column: 57, scope: !249)
!273 = !DILocation(line: 58, column: 24, scope: !249)
!274 = !DILocation(line: 58, column: 7, scope: !249)
!275 = !DILocation(line: 59, column: 14, scope: !276)
!276 = distinct !DILexicalBlock(scope: !249, file: !5, line: 59, column: 5)
!277 = !DILocation(line: 59, column: 16, scope: !276)
!278 = !DILocation(line: 59, column: 12, scope: !276)
!279 = !DILocation(line: 59, column: 10, scope: !276)
!280 = !DILocation(line: 59, column: 21, scope: !281)
!281 = !DILexicalBlockFile(scope: !282, file: !5, discriminator: 2)
!282 = !DILexicalBlockFile(scope: !283, file: !5, discriminator: 1)
!283 = distinct !DILexicalBlock(scope: !276, file: !5, line: 59, column: 5)
!284 = !DILocation(line: 59, column: 25, scope: !283)
!285 = !DILocation(line: 59, column: 23, scope: !283)
!286 = !DILocation(line: 59, column: 5, scope: !276)
!287 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b2", scope: !288, file: !5, line: 60, type: !9)
!288 = distinct !DILexicalBlock(scope: !283, file: !5, line: 59, column: 39)
!289 = !DILocation(line: 60, column: 22, scope: !288)
!290 = !DILocation(line: 60, column: 36, scope: !288)
!291 = !DILocation(line: 60, column: 29, scope: !288)
!292 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dx", scope: !288, file: !5, line: 61, type: !13)
!293 = !DILocation(line: 61, column: 14, scope: !288)
!294 = !DILocation(line: 61, column: 19, scope: !288)
!295 = !DILocation(line: 61, column: 22, scope: !288)
!296 = !DILocation(line: 61, column: 26, scope: !288)
!297 = !DILocation(line: 61, column: 30, scope: !288)
!298 = !DILocation(line: 61, column: 24, scope: !288)
!299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dy", scope: !288, file: !5, line: 62, type: !13)
!300 = !DILocation(line: 62, column: 14, scope: !288)
!301 = !DILocation(line: 62, column: 19, scope: !288)
!302 = !DILocation(line: 62, column: 22, scope: !288)
!303 = !DILocation(line: 62, column: 26, scope: !288)
!304 = !DILocation(line: 62, column: 30, scope: !288)
!305 = !DILocation(line: 62, column: 24, scope: !288)
!306 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dz", scope: !288, file: !5, line: 63, type: !13)
!307 = !DILocation(line: 63, column: 14, scope: !288)
!308 = !DILocation(line: 63, column: 19, scope: !288)
!309 = !DILocation(line: 63, column: 22, scope: !288)
!310 = !DILocation(line: 63, column: 26, scope: !288)
!311 = !DILocation(line: 63, column: 30, scope: !288)
!312 = !DILocation(line: 63, column: 24, scope: !288)
!313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "distance", scope: !288, file: !5, line: 64, type: !13)
!314 = !DILocation(line: 64, column: 14, scope: !288)
!315 = !DILocation(line: 64, column: 30, scope: !288)
!316 = !DILocation(line: 64, column: 35, scope: !288)
!317 = !DILocation(line: 64, column: 33, scope: !288)
!318 = !DILocation(line: 64, column: 40, scope: !288)
!319 = !DILocation(line: 64, column: 45, scope: !288)
!320 = !DILocation(line: 64, column: 43, scope: !288)
!321 = !DILocation(line: 64, column: 38, scope: !288)
!322 = !DILocation(line: 64, column: 50, scope: !288)
!323 = !DILocation(line: 64, column: 55, scope: !288)
!324 = !DILocation(line: 64, column: 53, scope: !288)
!325 = !DILocation(line: 64, column: 48, scope: !288)
!326 = !DILocation(line: 64, column: 25, scope: !288)
!327 = !DILocation(line: 65, column: 13, scope: !288)
!328 = !DILocation(line: 65, column: 16, scope: !288)
!329 = !DILocation(line: 65, column: 23, scope: !288)
!330 = !DILocation(line: 65, column: 27, scope: !288)
!331 = !DILocation(line: 65, column: 21, scope: !288)
!332 = !DILocation(line: 65, column: 35, scope: !288)
!333 = !DILocation(line: 65, column: 33, scope: !288)
!334 = !DILocation(line: 65, column: 9, scope: !288)
!335 = !DILocation(line: 66, column: 5, scope: !288)
!336 = !DILocation(line: 59, column: 35, scope: !283)
!337 = !DILocation(line: 59, column: 5, scope: !283)
!338 = !DILocation(line: 67, column: 3, scope: !249)
!339 = !DILocation(line: 56, column: 29, scope: !244)
!340 = !DILocation(line: 56, column: 3, scope: !244)
!341 = !DILocation(line: 68, column: 10, scope: !20)
!342 = !DILocation(line: 68, column: 3, scope: !20)
!343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nbodies", arg: 1, scope: !23, file: !5, line: 71, type: !8)
!344 = !DILocation(line: 71, column: 26, scope: !23)
!345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bodies", arg: 2, scope: !23, file: !5, line: 71, type: !9)
!346 = !DILocation(line: 71, column: 50, scope: !23)
!347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "px", scope: !23, file: !5, line: 72, type: !13)
!348 = !DILocation(line: 72, column: 10, scope: !23)
!349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "py", scope: !23, file: !5, line: 72, type: !13)
!350 = !DILocation(line: 72, column: 20, scope: !23)
!351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pz", scope: !23, file: !5, line: 72, type: !13)
!352 = !DILocation(line: 72, column: 30, scope: !23)
!353 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !5, line: 73, type: !8)
!354 = !DILocation(line: 73, column: 7, scope: !23)
!355 = !DILocation(line: 74, column: 10, scope: !356)
!356 = distinct !DILexicalBlock(scope: !23, file: !5, line: 74, column: 3)
!357 = !DILocation(line: 74, column: 8, scope: !356)
!358 = !DILocation(line: 74, column: 15, scope: !359)
!359 = !DILexicalBlockFile(scope: !360, file: !5, discriminator: 2)
!360 = !DILexicalBlockFile(scope: !361, file: !5, discriminator: 1)
!361 = distinct !DILexicalBlock(scope: !356, file: !5, line: 74, column: 3)
!362 = !DILocation(line: 74, column: 19, scope: !361)
!363 = !DILocation(line: 74, column: 17, scope: !361)
!364 = !DILocation(line: 74, column: 3, scope: !356)
!365 = !DILocation(line: 75, column: 18, scope: !366)
!366 = distinct !DILexicalBlock(scope: !361, file: !5, line: 74, column: 33)
!367 = !DILocation(line: 75, column: 11, scope: !366)
!368 = !DILocation(line: 75, column: 21, scope: !366)
!369 = !DILocation(line: 75, column: 33, scope: !366)
!370 = !DILocation(line: 75, column: 26, scope: !366)
!371 = !DILocation(line: 75, column: 36, scope: !366)
!372 = !DILocation(line: 75, column: 24, scope: !366)
!373 = !DILocation(line: 75, column: 8, scope: !366)
!374 = !DILocation(line: 76, column: 18, scope: !366)
!375 = !DILocation(line: 76, column: 11, scope: !366)
!376 = !DILocation(line: 76, column: 21, scope: !366)
!377 = !DILocation(line: 76, column: 33, scope: !366)
!378 = !DILocation(line: 76, column: 26, scope: !366)
!379 = !DILocation(line: 76, column: 36, scope: !366)
!380 = !DILocation(line: 76, column: 24, scope: !366)
!381 = !DILocation(line: 76, column: 8, scope: !366)
!382 = !DILocation(line: 77, column: 18, scope: !366)
!383 = !DILocation(line: 77, column: 11, scope: !366)
!384 = !DILocation(line: 77, column: 21, scope: !366)
!385 = !DILocation(line: 77, column: 33, scope: !366)
!386 = !DILocation(line: 77, column: 26, scope: !366)
!387 = !DILocation(line: 77, column: 36, scope: !366)
!388 = !DILocation(line: 77, column: 24, scope: !366)
!389 = !DILocation(line: 77, column: 8, scope: !366)
!390 = !DILocation(line: 78, column: 3, scope: !366)
!391 = !DILocation(line: 74, column: 29, scope: !361)
!392 = !DILocation(line: 74, column: 3, scope: !361)
!393 = !DILocation(line: 79, column: 19, scope: !23)
!394 = !DILocation(line: 79, column: 18, scope: !23)
!395 = !DILocation(line: 79, column: 22, scope: !23)
!396 = !DILocation(line: 79, column: 3, scope: !23)
!397 = !DILocation(line: 79, column: 13, scope: !23)
!398 = !DILocation(line: 79, column: 16, scope: !23)
!399 = !DILocation(line: 80, column: 19, scope: !23)
!400 = !DILocation(line: 80, column: 18, scope: !23)
!401 = !DILocation(line: 80, column: 22, scope: !23)
!402 = !DILocation(line: 80, column: 3, scope: !23)
!403 = !DILocation(line: 80, column: 13, scope: !23)
!404 = !DILocation(line: 80, column: 16, scope: !23)
!405 = !DILocation(line: 81, column: 19, scope: !23)
!406 = !DILocation(line: 81, column: 18, scope: !23)
!407 = !DILocation(line: 81, column: 22, scope: !23)
!408 = !DILocation(line: 81, column: 3, scope: !23)
!409 = !DILocation(line: 81, column: 13, scope: !23)
!410 = !DILocation(line: 81, column: 16, scope: !23)
!411 = !DILocation(line: 82, column: 1, scope: !23)
!412 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !26, file: !5, line: 121, type: !8)
!413 = !DILocation(line: 121, column: 14, scope: !26)
!414 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !26, file: !5, line: 121, type: !29)
!415 = !DILocation(line: 121, column: 27, scope: !26)
!416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !26, file: !5, line: 122, type: !8)
!417 = !DILocation(line: 122, column: 7, scope: !26)
!418 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !26, file: !5, line: 123, type: !8)
!419 = !DILocation(line: 123, column: 7, scope: !26)
!420 = !DILocation(line: 125, column: 3, scope: !26)
!421 = !DILocation(line: 126, column: 20, scope: !26)
!422 = !DILocation(line: 126, column: 3, scope: !26)
!423 = !DILocation(line: 127, column: 10, scope: !424)
!424 = distinct !DILexicalBlock(scope: !26, file: !5, line: 127, column: 3)
!425 = !DILocation(line: 127, column: 8, scope: !424)
!426 = !DILocation(line: 127, column: 15, scope: !427)
!427 = !DILexicalBlockFile(scope: !428, file: !5, discriminator: 2)
!428 = !DILexicalBlockFile(scope: !429, file: !5, discriminator: 1)
!429 = distinct !DILexicalBlock(scope: !424, file: !5, line: 127, column: 3)
!430 = !DILocation(line: 127, column: 20, scope: !429)
!431 = !DILocation(line: 127, column: 17, scope: !429)
!432 = !DILocation(line: 127, column: 3, scope: !424)
!433 = !DILocation(line: 128, column: 5, scope: !429)
!434 = !DILocation(line: 127, column: 24, scope: !429)
!435 = !DILocation(line: 127, column: 3, scope: !429)
!436 = !DILocation(line: 129, column: 20, scope: !26)
!437 = !DILocation(line: 129, column: 3, scope: !26)
!438 = !DILocation(line: 130, column: 3, scope: !26)
