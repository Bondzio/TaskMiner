; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ht_node = type { i8*, i32, %struct.ht_node* }
%struct.ht_ht = type { i32, %struct.ht_node**, i32, %struct.ht_node*, i32 }

@.str = private unnamed_addr constant [15 x i8] c"malloc ht_node\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"strdup newkey\00", align 1
@ht_prime_list = internal global [28 x i64] [i64 53, i64 97, i64 193, i64 389, i64 769, i64 1543, i64 3079, i64 6151, i64 12289, i64 24593, i64 49157, i64 98317, i64 196613, i64 393241, i64 786433, i64 1572869, i64 3145739, i64 6291469, i64 12582917, i64 25165843, i64 50331653, i64 100663319, i64 201326611, i64 402653189, i64 805306457, i64 1610612741, i64 3221225473, i64 4294967291], align 16
@.str.2 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1

; Function Attrs: nounwind uwtable
define %struct.ht_node* @ht_node_create(i8* %key) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !55, metadata !56), !dbg !57
  %call = call noalias i8* @malloc(i64 24) #6, !dbg !58
  %tmp = bitcast i8* %call to %struct.ht_node*, !dbg !60
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp, i64 0, metadata !61, metadata !56), !dbg !62
  %cmp = icmp eq %struct.ht_node* %tmp, null, !dbg !63
  br i1 %cmp, label %if.then, label %if.end, !dbg !64

if.then:                                          ; preds = %entry
  call void @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i32 0, i32 0)), !dbg !65
  call void @exit(i32 1) #7, !dbg !67
  unreachable, !dbg !67

if.end:                                           ; preds = %entry
  %call1 = call noalias i8* @strdup(i8* %key) #6, !dbg !68
  call void @llvm.dbg.value(metadata i8* %call1, i64 0, metadata !70, metadata !56), !dbg !71
  %cmp2 = icmp eq i8* %call1, null, !dbg !72
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !73

if.then.3:                                        ; preds = %if.end
  call void @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0)), !dbg !74
  call void @exit(i32 1) #7, !dbg !76
  unreachable, !dbg !76

if.end.4:                                         ; preds = %if.end
  %key5 = getelementptr inbounds %struct.ht_node, %struct.ht_node* %tmp, i32 0, i32 0, !dbg !77
  store i8* %call1, i8** %key5, align 8, !dbg !78
  %val = getelementptr inbounds %struct.ht_node, %struct.ht_node* %tmp, i32 0, i32 1, !dbg !79
  store i32 0, i32* %val, align 4, !dbg !80
  %next = getelementptr inbounds %struct.ht_node, %struct.ht_node* %tmp, i32 0, i32 2, !dbg !81
  store %struct.ht_node* null, %struct.ht_node** %next, align 8, !dbg !82
  ret %struct.ht_node* %tmp, !dbg !83
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare void @perror(i8*) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind
declare noalias i8* @strdup(i8*) #2

; Function Attrs: nounwind uwtable
define %struct.ht_ht* @ht_create(i32 %size) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %size, i64 0, metadata !84, metadata !56), !dbg !85
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !86, metadata !56), !dbg !87
  %call = call noalias i8* @malloc(i64 40) #6, !dbg !88
  %tmp = bitcast i8* %call to %struct.ht_ht*, !dbg !89
  call void @llvm.dbg.value(metadata %struct.ht_ht* %tmp, i64 0, metadata !90, metadata !56), !dbg !91
  br label %while.cond, !dbg !92

while.cond:                                       ; preds = %while.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %while.body ]
  %idxprom = sext i32 %i.0 to i64, !dbg !93
  %arrayidx = getelementptr inbounds [28 x i64], [28 x i64]* @ht_prime_list, i32 0, i64 %idxprom, !dbg !93
  %tmp2 = load i64, i64* %arrayidx, align 8, !dbg !93
  %conv = sext i32 %size to i64, !dbg !94
  %cmp = icmp ult i64 %tmp2, %conv, !dbg !95
  br i1 %cmp, label %while.body, label %while.end, !dbg !92

while.body:                                       ; preds = %while.cond
  %inc = add nsw i32 %i.0, 1, !dbg !96
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !86, metadata !56), !dbg !87
  br label %while.cond, !dbg !92

while.end:                                        ; preds = %while.cond
  %i.0.lcssa = phi i32 [ %i.0, %while.cond ]
  %idxprom2 = sext i32 %i.0.lcssa to i64, !dbg !99
  %arrayidx3 = getelementptr inbounds [28 x i64], [28 x i64]* @ht_prime_list, i32 0, i64 %idxprom2, !dbg !99
  %tmp6 = load i64, i64* %arrayidx3, align 8, !dbg !99
  %conv4 = trunc i64 %tmp6 to i32, !dbg !99
  %size5 = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %tmp, i32 0, i32 0, !dbg !100
  store i32 %conv4, i32* %size5, align 4, !dbg !101
  %size6 = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %tmp, i32 0, i32 0, !dbg !102
  %tmp9 = load i32, i32* %size6, align 4, !dbg !102
  %conv7 = sext i32 %tmp9 to i64, !dbg !103
  %call8 = call noalias i8* @calloc(i64 %conv7, i64 8) #6, !dbg !104
  %tmp10 = bitcast i8* %call8 to %struct.ht_node**, !dbg !105
  %tbl = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %tmp, i32 0, i32 1, !dbg !106
  store %struct.ht_node** %tmp10, %struct.ht_node*** %tbl, align 8, !dbg !107
  %iter_index = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %tmp, i32 0, i32 2, !dbg !108
  store i32 0, i32* %iter_index, align 4, !dbg !109
  %iter_next = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %tmp, i32 0, i32 3, !dbg !110
  store %struct.ht_node* null, %struct.ht_node** %iter_next, align 8, !dbg !111
  %items = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %tmp, i32 0, i32 4, !dbg !112
  store i32 0, i32* %items, align 4, !dbg !113
  ret %struct.ht_ht* %tmp, !dbg !114
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind uwtable
define void @ht_destroy(%struct.ht_ht* %ht) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.ht_ht* %ht, i64 0, metadata !115, metadata !56), !dbg !116
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !117, metadata !56), !dbg !118
  br label %for.cond, !dbg !119

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %size = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 0, !dbg !121
  %tmp2 = load i32, i32* %size, align 4, !dbg !121
  %cmp = icmp slt i32 %i.0, %tmp2, !dbg !123
  br i1 %cmp, label %for.body, label %for.end, !dbg !124

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !125
  %tbl = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 1, !dbg !127
  %tmp5 = load %struct.ht_node**, %struct.ht_node*** %tbl, align 8, !dbg !127
  %arrayidx = getelementptr inbounds %struct.ht_node*, %struct.ht_node** %tmp5, i64 %idxprom, !dbg !125
  %tmp6 = load %struct.ht_node*, %struct.ht_node** %arrayidx, align 8, !dbg !125
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp6, i64 0, metadata !128, metadata !56), !dbg !129
  br label %while.cond, !dbg !130

while.cond:                                       ; preds = %while.body, %for.body
  %next.0 = phi %struct.ht_node* [ %tmp6, %for.body ], [ %tmp10, %while.body ]
  %tobool = icmp ne %struct.ht_node* %next.0, null, !dbg !130
  br i1 %tobool, label %while.body, label %while.end, !dbg !130

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.ht_node* %next.0, i64 0, metadata !131, metadata !56), !dbg !132
  %next1 = getelementptr inbounds %struct.ht_node, %struct.ht_node* %next.0, i32 0, i32 2, !dbg !133
  %tmp10 = load %struct.ht_node*, %struct.ht_node** %next1, align 8, !dbg !133
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp10, i64 0, metadata !128, metadata !56), !dbg !129
  %key = getelementptr inbounds %struct.ht_node, %struct.ht_node* %next.0, i32 0, i32 0, !dbg !135
  %tmp12 = load i8*, i8** %key, align 8, !dbg !135
  call void @free(i8* %tmp12) #6, !dbg !136
  %tmp14 = bitcast %struct.ht_node* %next.0 to i8*, !dbg !137
  call void @free(i8* %tmp14) #6, !dbg !138
  br label %while.cond, !dbg !130

while.end:                                        ; preds = %while.cond
  br label %for.inc, !dbg !139

for.inc:                                          ; preds = %while.end
  %inc = add nsw i32 %i.0, 1, !dbg !140
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !117, metadata !56), !dbg !118
  br label %for.cond, !dbg !141

for.end:                                          ; preds = %for.cond
  %tbl2 = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 1, !dbg !142
  %tmp17 = load %struct.ht_node**, %struct.ht_node*** %tbl2, align 8, !dbg !142
  %tmp18 = bitcast %struct.ht_node** %tmp17 to i8*, !dbg !143
  call void @free(i8* %tmp18) #6, !dbg !144
  %tmp20 = bitcast %struct.ht_ht* %ht to i8*, !dbg !145
  call void @free(i8* %tmp20) #6, !dbg !146
  ret void, !dbg !147
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %buf = alloca [32 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !148, metadata !56), !dbg !149
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !150, metadata !56), !dbg !151
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !152, metadata !56), !dbg !153
  %cmp = icmp eq i32 %argc, 2, !dbg !154
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !155

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !156
  %tmp2 = load i8*, i8** %arrayidx, align 8, !dbg !156
  %call = call i32 @atoi(i8* %tmp2) #8, !dbg !158
  br label %cond.end, !dbg !155

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !159

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 3500000, %cond.false ], !dbg !155
  call void @llvm.dbg.value(metadata i32 %cond, i64 0, metadata !161, metadata !56), !dbg !162
  call void @llvm.dbg.declare(metadata [32 x i8]* %buf, metadata !163, metadata !56), !dbg !167
  %call1 = call %struct.ht_ht* @ht_create(i32 %cond), !dbg !168
  call void @llvm.dbg.value(metadata %struct.ht_ht* %call1, i64 0, metadata !169, metadata !56), !dbg !170
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !171, metadata !56), !dbg !172
  br label %for.cond, !dbg !173

for.cond:                                         ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ 1, %cond.end ], [ %inc, %for.inc ]
  %cmp2 = icmp sle i32 %i.0, %cond, !dbg !175
  br i1 %cmp2, label %for.body, label %for.end, !dbg !177

for.body:                                         ; preds = %for.cond
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !178
  %call3 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i32 %i.0) #6, !dbg !180
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !181
  %call5 = call %struct.ht_node* @ht_find_new(%struct.ht_ht* %call1, i8* %arraydecay4), !dbg !182
  %val = getelementptr inbounds %struct.ht_node, %struct.ht_node* %call5, i32 0, i32 1, !dbg !183
  store i32 %i.0, i32* %val, align 4, !dbg !184
  br label %for.inc, !dbg !185

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !186
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !171, metadata !56), !dbg !172
  br label %for.cond, !dbg !187

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %cond, i64 0, metadata !171, metadata !56), !dbg !172
  br label %for.cond.6, !dbg !188

for.cond.6:                                       ; preds = %for.inc.14, %for.end
  %i.1 = phi i32 [ %cond, %for.end ], [ %dec, %for.inc.14 ]
  %c.0 = phi i32 [ 0, %for.end ], [ %c.1, %for.inc.14 ]
  %cmp7 = icmp sgt i32 %i.1, 0, !dbg !190
  br i1 %cmp7, label %for.body.8, label %for.end.15, !dbg !192

for.body.8:                                       ; preds = %for.cond.6
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !193
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0), i32 %i.1) #6, !dbg !195
  %arraydecay11 = getelementptr inbounds [32 x i8], [32 x i8]* %buf, i32 0, i32 0, !dbg !196
  %call12 = call %struct.ht_node* @ht_find(%struct.ht_ht* %call1, i8* %arraydecay11), !dbg !198
  %tobool = icmp ne %struct.ht_node* %call12, null, !dbg !198
  br i1 %tobool, label %if.then, label %if.end, !dbg !199

if.then:                                          ; preds = %for.body.8
  %inc13 = add nsw i32 %c.0, 1, !dbg !200
  call void @llvm.dbg.value(metadata i32 %inc13, i64 0, metadata !152, metadata !56), !dbg !153
  br label %if.end, !dbg !201

if.end:                                           ; preds = %if.then, %for.body.8
  %c.1 = phi i32 [ %inc13, %if.then ], [ %c.0, %for.body.8 ]
  br label %for.inc.14, !dbg !202

for.inc.14:                                       ; preds = %if.end
  %dec = add nsw i32 %i.1, -1, !dbg !203
  call void @llvm.dbg.value(metadata i32 %dec, i64 0, metadata !171, metadata !56), !dbg !172
  br label %for.cond.6, !dbg !204

for.end.15:                                       ; preds = %for.cond.6
  %c.0.lcssa = phi i32 [ %c.0, %for.cond.6 ]
  call void @ht_destroy(%struct.ht_ht* %call1), !dbg !205
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i32 0, i32 0), i32 %c.0.lcssa), !dbg !206
  ret i32 0, !dbg !207
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal %struct.ht_node* @ht_find_new(%struct.ht_ht* %ht, i8* %key) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.ht_ht* %ht, i64 0, metadata !208, metadata !56), !dbg !209
  call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !210, metadata !56), !dbg !211
  %call = call i32 @ht_hashcode(%struct.ht_ht* %ht, i8* %key), !dbg !212
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !213, metadata !56), !dbg !214
  call void @llvm.dbg.value(metadata %struct.ht_node* null, i64 0, metadata !215, metadata !56), !dbg !216
  %idxprom = sext i32 %call to i64, !dbg !217
  %tbl = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 1, !dbg !218
  %tmp4 = load %struct.ht_node**, %struct.ht_node*** %tbl, align 8, !dbg !218
  %arrayidx = getelementptr inbounds %struct.ht_node*, %struct.ht_node** %tmp4, i64 %idxprom, !dbg !217
  %tmp5 = load %struct.ht_node*, %struct.ht_node** %arrayidx, align 8, !dbg !217
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp5, i64 0, metadata !219, metadata !56), !dbg !220
  br label %while.cond, !dbg !221

while.cond:                                       ; preds = %if.end, %entry
  %prev.0 = phi %struct.ht_node* [ null, %entry ], [ %node.0, %if.end ]
  %node.0 = phi %struct.ht_node* [ %tmp5, %entry ], [ %tmp13, %if.end ]
  %tobool = icmp ne %struct.ht_node* %node.0, null, !dbg !221
  br i1 %tobool, label %while.body, label %while.end, !dbg !221

while.body:                                       ; preds = %while.cond
  %key1 = getelementptr inbounds %struct.ht_node, %struct.ht_node* %node.0, i32 0, i32 0, !dbg !222
  %tmp9 = load i8*, i8** %key1, align 8, !dbg !222
  %call2 = call i32 @strcmp(i8* %key, i8* %tmp9) #8, !dbg !225
  %cmp = icmp eq i32 %call2, 0, !dbg !226
  br i1 %cmp, label %if.then, label %if.end, !dbg !227

if.then:                                          ; preds = %while.body
  %node.0.lcssa25 = phi %struct.ht_node* [ %node.0, %while.body ]
  br label %return, !dbg !228

if.end:                                           ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.ht_node* %node.0, i64 0, metadata !215, metadata !56), !dbg !216
  %next = getelementptr inbounds %struct.ht_node, %struct.ht_node* %node.0, i32 0, i32 2, !dbg !229
  %tmp13 = load %struct.ht_node*, %struct.ht_node** %next, align 8, !dbg !229
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp13, i64 0, metadata !219, metadata !56), !dbg !220
  br label %while.cond, !dbg !221

while.end:                                        ; preds = %while.cond
  %prev.0.lcssa = phi %struct.ht_node* [ %prev.0, %while.cond ]
  %items = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 4, !dbg !230
  %tmp15 = load i32, i32* %items, align 4, !dbg !231
  %inc = add nsw i32 %tmp15, 1, !dbg !231
  store i32 %inc, i32* %items, align 4, !dbg !231
  %tobool3 = icmp ne %struct.ht_node* %prev.0.lcssa, null, !dbg !232
  br i1 %tobool3, label %if.then.4, label %if.else, !dbg !234

if.then.4:                                        ; preds = %while.end
  %call5 = call %struct.ht_node* @ht_node_create(i8* %key), !dbg !235
  %next6 = getelementptr inbounds %struct.ht_node, %struct.ht_node* %prev.0.lcssa, i32 0, i32 2, !dbg !237
  store %struct.ht_node* %call5, %struct.ht_node** %next6, align 8, !dbg !238
  br label %return, !dbg !239

if.else:                                          ; preds = %while.end
  %call7 = call %struct.ht_node* @ht_node_create(i8* %key), !dbg !240
  %idxprom8 = sext i32 %call to i64, !dbg !242
  %tbl9 = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 1, !dbg !243
  %tmp22 = load %struct.ht_node**, %struct.ht_node*** %tbl9, align 8, !dbg !243
  %arrayidx10 = getelementptr inbounds %struct.ht_node*, %struct.ht_node** %tmp22, i64 %idxprom8, !dbg !242
  store %struct.ht_node* %call7, %struct.ht_node** %arrayidx10, align 8, !dbg !244
  br label %return, !dbg !245

return:                                           ; preds = %if.else, %if.then.4, %if.then
  %retval.0 = phi %struct.ht_node* [ %node.0.lcssa25, %if.then ], [ %call5, %if.then.4 ], [ %call7, %if.else ]
  ret %struct.ht_node* %retval.0, !dbg !246
}

; Function Attrs: nounwind uwtable
define internal %struct.ht_node* @ht_find(%struct.ht_ht* %ht, i8* %key) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.ht_ht* %ht, i64 0, metadata !247, metadata !56), !dbg !248
  call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !249, metadata !56), !dbg !250
  %call = call i32 @ht_hashcode(%struct.ht_ht* %ht, i8* %key), !dbg !251
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !252, metadata !56), !dbg !253
  %idxprom = sext i32 %call to i64, !dbg !254
  %tbl = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 1, !dbg !255
  %tmp4 = load %struct.ht_node**, %struct.ht_node*** %tbl, align 8, !dbg !255
  %arrayidx = getelementptr inbounds %struct.ht_node*, %struct.ht_node** %tmp4, i64 %idxprom, !dbg !254
  %tmp5 = load %struct.ht_node*, %struct.ht_node** %arrayidx, align 8, !dbg !254
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp5, i64 0, metadata !256, metadata !56), !dbg !257
  br label %while.cond, !dbg !258

while.cond:                                       ; preds = %if.end, %entry
  %node.0 = phi %struct.ht_node* [ %tmp5, %entry ], [ %tmp12, %if.end ]
  %tobool = icmp ne %struct.ht_node* %node.0, null, !dbg !258
  br i1 %tobool, label %while.body, label %while.end, !dbg !258

while.body:                                       ; preds = %while.cond
  %key1 = getelementptr inbounds %struct.ht_node, %struct.ht_node* %node.0, i32 0, i32 0, !dbg !259
  %tmp9 = load i8*, i8** %key1, align 8, !dbg !259
  %call2 = call i32 @strcmp(i8* %key, i8* %tmp9) #8, !dbg !262
  %cmp = icmp eq i32 %call2, 0, !dbg !263
  br i1 %cmp, label %if.then, label %if.end, !dbg !264

if.then:                                          ; preds = %while.body
  %node.0.lcssa14 = phi %struct.ht_node* [ %node.0, %while.body ]
  br label %return, !dbg !265

if.end:                                           ; preds = %while.body
  %next = getelementptr inbounds %struct.ht_node, %struct.ht_node* %node.0, i32 0, i32 2, !dbg !266
  %tmp12 = load %struct.ht_node*, %struct.ht_node** %next, align 8, !dbg !266
  call void @llvm.dbg.value(metadata %struct.ht_node* %tmp12, i64 0, metadata !256, metadata !56), !dbg !257
  br label %while.cond, !dbg !258

while.end:                                        ; preds = %while.cond
  br label %return, !dbg !267

return:                                           ; preds = %while.end, %if.then
  %retval.0 = phi %struct.ht_node* [ %node.0.lcssa14, %if.then ], [ null, %while.end ]
  ret %struct.ht_node* %retval.0, !dbg !268
}

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @ht_hashcode(%struct.ht_ht* %ht, i8* %key) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.ht_ht* %ht, i64 0, metadata !269, metadata !56), !dbg !270
  call void @llvm.dbg.value(metadata i8* %key, i64 0, metadata !271, metadata !56), !dbg !272
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !273, metadata !56), !dbg !274
  br label %for.cond, !dbg !275

for.cond:                                         ; preds = %for.inc, %entry
  %key.addr.0 = phi i8* [ %key, %entry ], [ %incdec.ptr, %for.inc ]
  %val.0 = phi i64 [ 0, %entry ], [ %add, %for.inc ]
  %tmp1 = load i8, i8* %key.addr.0, align 1, !dbg !276
  %tobool = icmp ne i8 %tmp1, 0, !dbg !279
  br i1 %tobool, label %for.body, label %for.end, !dbg !279

for.body:                                         ; preds = %for.cond
  %mul = mul i64 5, %val.0, !dbg !280
  %tmp4 = load i8, i8* %key.addr.0, align 1, !dbg !281
  %conv = sext i8 %tmp4 to i64, !dbg !281
  %add = add i64 %mul, %conv, !dbg !282
  call void @llvm.dbg.value(metadata i64 %add, i64 0, metadata !273, metadata !56), !dbg !274
  br label %for.inc, !dbg !283

for.inc:                                          ; preds = %for.body
  %incdec.ptr = getelementptr inbounds i8, i8* %key.addr.0, i32 1, !dbg !284
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !271, metadata !56), !dbg !272
  br label %for.cond, !dbg !286

for.end:                                          ; preds = %for.cond
  %val.0.lcssa = phi i64 [ %val.0, %for.cond ]
  %size = getelementptr inbounds %struct.ht_ht, %struct.ht_ht* %ht, i32 0, i32 0, !dbg !287
  %tmp8 = load i32, i32* %size, align 4, !dbg !287
  %conv1 = sext i32 %tmp8 to i64, !dbg !288
  %rem = urem i64 %val.0.lcssa, %conv1, !dbg !289
  %conv2 = trunc i64 %rem to i32, !dbg !290
  ret i32 %conv2, !dbg !291
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!52, !53}
!llvm.ident = !{!54}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !24, globals: !46)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Shootout/hash")
!2 = !{}
!3 = !{!4, !9, !14, !15, !20}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "ht_node", file: !6, line: 21, size: 192, align: 64, elements: !7)
!6 = !DIFile(filename: "./simple_hash.h", directory: "/home/gleison/tf/Benchmarks/Shootout/hash")
!7 = !{!8, !11, !13}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5, file: !6, line: 22, baseType: !9, size: 64, align: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5, file: !6, line: 23, baseType: !12, size: 32, align: 32, offset: 64)
!12 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5, file: !6, line: 24, baseType: !4, size: 64, align: 64, offset: 128)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!16 = !DICompositeType(tag: DW_TAG_structure_type, name: "ht_ht", file: !6, line: 27, size: 320, align: 64, elements: !17)
!17 = !{!18, !19, !21, !22, !23}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16, file: !6, line: 28, baseType: !12, size: 32, align: 32)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !16, file: !6, line: 29, baseType: !20, size: 64, align: 64, offset: 64)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "iter_index", scope: !16, file: !6, line: 30, baseType: !12, size: 32, align: 32, offset: 128)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "iter_next", scope: !16, file: !6, line: 31, baseType: !4, size: 64, align: 64, offset: 192)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !16, file: !6, line: 32, baseType: !12, size: 32, align: 32, offset: 256)
!24 = !{!25, !28, !31, !34, !39, !42, !45}
!25 = !DISubprogram(name: "ht_node_create", scope: !6, file: !6, line: 52, type: !26, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: false, function: %struct.ht_node* (i8*)* @ht_node_create, variables: !2)
!26 = !DISubroutineType(types: !27)
!27 = !{!4, !9}
!28 = !DISubprogram(name: "ht_create", scope: !6, file: !6, line: 69, type: !29, isLocal: false, isDefinition: true, scopeLine: 69, flags: DIFlagPrototyped, isOptimized: false, function: %struct.ht_ht* (i32)* @ht_create, variables: !2)
!29 = !DISubroutineType(types: !30)
!30 = !{!15, !12}
!31 = !DISubprogram(name: "ht_destroy", scope: !6, file: !6, line: 84, type: !32, isLocal: false, isDefinition: true, scopeLine: 84, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.ht_ht*)* @ht_destroy, variables: !2)
!32 = !DISubroutineType(types: !33)
!33 = !{null, !15}
!34 = !DISubprogram(name: "main", scope: !35, file: !35, line: 11, type: !36, isLocal: false, isDefinition: true, scopeLine: 11, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!35 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Shootout/hash/tmp.c", directory: "/home/gleison/tf/Benchmarks/Shootout/hash")
!36 = !DISubroutineType(types: !37)
!37 = !{!12, !12, !38}
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!39 = !DISubprogram(name: "ht_find_new", scope: !6, file: !6, line: 135, type: !40, isLocal: true, isDefinition: true, scopeLine: 135, flags: DIFlagPrototyped, isOptimized: false, function: %struct.ht_node* (%struct.ht_ht*, i8*)* @ht_find_new, variables: !2)
!40 = !DISubroutineType(types: !41)
!41 = !{!4, !15, !9}
!42 = !DISubprogram(name: "ht_hashcode", scope: !6, file: !6, line: 46, type: !43, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.ht_ht*, i8*)* @ht_hashcode, variables: !2)
!43 = !DISubroutineType(types: !44)
!44 = !{!12, !15, !9}
!45 = !DISubprogram(name: "ht_find", scope: !6, file: !6, line: 125, type: !40, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: false, function: %struct.ht_node* (%struct.ht_ht*, i8*)* @ht_find, variables: !2)
!46 = !{!47}
!47 = !DIGlobalVariable(name: "ht_prime_list", scope: !0, file: !6, line: 12, type: !48, isLocal: true, isDefinition: true, variable: [28 x i64]* @ht_prime_list)
!48 = !DICompositeType(tag: DW_TAG_array_type, baseType: !49, size: 1792, align: 64, elements: !50)
!49 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!50 = !{!51}
!51 = !DISubrange(count: 28)
!52 = !{i32 2, !"Dwarf Version", i32 4}
!53 = !{i32 2, !"Debug Info Version", i32 3}
!54 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!55 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !25, file: !6, line: 52, type: !9)
!56 = !DIExpression()
!57 = !DILocation(line: 52, column: 38, scope: !25)
!58 = !DILocation(line: 55, column: 35, scope: !59)
!59 = distinct !DILexicalBlock(scope: !25, file: !6, line: 55, column: 9)
!60 = !DILocation(line: 55, column: 17, scope: !59)
!61 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !25, file: !6, line: 54, type: !4)
!62 = !DILocation(line: 54, column: 21, scope: !25)
!63 = !DILocation(line: 55, column: 67, scope: !59)
!64 = !DILocation(line: 55, column: 9, scope: !25)
!65 = !DILocation(line: 56, column: 2, scope: !66)
!66 = distinct !DILexicalBlock(scope: !59, file: !6, line: 55, column: 73)
!67 = !DILocation(line: 57, column: 2, scope: !66)
!68 = !DILocation(line: 59, column: 27, scope: !69)
!69 = distinct !DILexicalBlock(scope: !25, file: !6, line: 59, column: 9)
!70 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newkey", scope: !25, file: !6, line: 53, type: !9)
!71 = !DILocation(line: 53, column: 11, scope: !25)
!72 = !DILocation(line: 59, column: 40, scope: !69)
!73 = !DILocation(line: 59, column: 9, scope: !25)
!74 = !DILocation(line: 60, column: 2, scope: !75)
!75 = distinct !DILexicalBlock(scope: !69, file: !6, line: 59, column: 46)
!76 = !DILocation(line: 61, column: 2, scope: !75)
!77 = !DILocation(line: 63, column: 11, scope: !25)
!78 = !DILocation(line: 63, column: 15, scope: !25)
!79 = !DILocation(line: 64, column: 11, scope: !25)
!80 = !DILocation(line: 64, column: 15, scope: !25)
!81 = !DILocation(line: 65, column: 11, scope: !25)
!82 = !DILocation(line: 65, column: 16, scope: !25)
!83 = !DILocation(line: 66, column: 5, scope: !25)
!84 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 1, scope: !28, file: !6, line: 69, type: !12)
!85 = !DILocation(line: 69, column: 29, scope: !28)
!86 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !28, file: !6, line: 70, type: !12)
!87 = !DILocation(line: 70, column: 9, scope: !28)
!88 = !DILocation(line: 71, column: 40, scope: !28)
!89 = !DILocation(line: 71, column: 24, scope: !28)
!90 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ht", scope: !28, file: !6, line: 71, type: !15)
!91 = !DILocation(line: 71, column: 19, scope: !28)
!92 = !DILocation(line: 72, column: 5, scope: !28)
!93 = !DILocation(line: 72, column: 12, scope: !28)
!94 = !DILocation(line: 72, column: 31, scope: !28)
!95 = !DILocation(line: 72, column: 29, scope: !28)
!96 = !DILocation(line: 72, column: 40, scope: !97)
!97 = !DILexicalBlockFile(scope: !98, file: !6, discriminator: 2)
!98 = distinct !DILexicalBlock(scope: !28, file: !6, line: 72, column: 37)
!99 = !DILocation(line: 73, column: 16, scope: !28)
!100 = !DILocation(line: 73, column: 9, scope: !28)
!101 = !DILocation(line: 73, column: 14, scope: !28)
!102 = !DILocation(line: 74, column: 45, scope: !28)
!103 = !DILocation(line: 74, column: 41, scope: !28)
!104 = !DILocation(line: 74, column: 34, scope: !28)
!105 = !DILocation(line: 74, column: 15, scope: !28)
!106 = !DILocation(line: 74, column: 9, scope: !28)
!107 = !DILocation(line: 74, column: 13, scope: !28)
!108 = !DILocation(line: 75, column: 9, scope: !28)
!109 = !DILocation(line: 75, column: 20, scope: !28)
!110 = !DILocation(line: 76, column: 9, scope: !28)
!111 = !DILocation(line: 76, column: 19, scope: !28)
!112 = !DILocation(line: 77, column: 9, scope: !28)
!113 = !DILocation(line: 77, column: 15, scope: !28)
!114 = !DILocation(line: 81, column: 5, scope: !28)
!115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ht", arg: 1, scope: !31, file: !6, line: 84, type: !15)
!116 = !DILocation(line: 84, column: 31, scope: !31)
!117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !31, file: !6, line: 86, type: !12)
!118 = !DILocation(line: 86, column: 9, scope: !31)
!119 = !DILocation(line: 95, column: 10, scope: !120)
!120 = distinct !DILexicalBlock(scope: !31, file: !6, line: 95, column: 5)
!121 = !DILocation(line: 95, column: 21, scope: !122)
!122 = distinct !DILexicalBlock(scope: !120, file: !6, line: 95, column: 5)
!123 = !DILocation(line: 95, column: 16, scope: !122)
!124 = !DILocation(line: 95, column: 5, scope: !120)
!125 = !DILocation(line: 96, column: 9, scope: !126)
!126 = distinct !DILexicalBlock(scope: !122, file: !6, line: 95, column: 32)
!127 = !DILocation(line: 96, column: 13, scope: !126)
!128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "next", scope: !31, file: !6, line: 85, type: !4)
!129 = !DILocation(line: 85, column: 27, scope: !31)
!130 = !DILocation(line: 103, column: 2, scope: !126)
!131 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cur", scope: !31, file: !6, line: 85, type: !4)
!132 = !DILocation(line: 85, column: 21, scope: !31)
!133 = !DILocation(line: 105, column: 19, scope: !134)
!134 = distinct !DILexicalBlock(scope: !126, file: !6, line: 103, column: 15)
!135 = !DILocation(line: 106, column: 16, scope: !134)
!136 = !DILocation(line: 106, column: 6, scope: !134)
!137 = !DILocation(line: 107, column: 11, scope: !134)
!138 = !DILocation(line: 107, column: 6, scope: !134)
!139 = !DILocation(line: 116, column: 5, scope: !126)
!140 = !DILocation(line: 95, column: 28, scope: !122)
!141 = !DILocation(line: 95, column: 5, scope: !122)
!142 = !DILocation(line: 117, column: 14, scope: !31)
!143 = !DILocation(line: 117, column: 10, scope: !31)
!144 = !DILocation(line: 117, column: 5, scope: !31)
!145 = !DILocation(line: 118, column: 10, scope: !31)
!146 = !DILocation(line: 118, column: 5, scope: !31)
!147 = !DILocation(line: 123, column: 1, scope: !31)
!148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !34, file: !35, line: 11, type: !12)
!149 = !DILocation(line: 11, column: 14, scope: !34)
!150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !34, file: !35, line: 11, type: !38)
!151 = !DILocation(line: 11, column: 26, scope: !34)
!152 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !34, file: !35, line: 17, type: !12)
!153 = !DILocation(line: 17, column: 10, scope: !34)
!154 = !DILocation(line: 17, column: 28, scope: !34)
!155 = !DILocation(line: 17, column: 22, scope: !34)
!156 = !DILocation(line: 17, column: 41, scope: !157)
!157 = !DILexicalBlockFile(scope: !34, file: !35, discriminator: 1)
!158 = !DILocation(line: 17, column: 36, scope: !34)
!159 = !DILocation(line: 17, column: 22, scope: !160)
!160 = !DILexicalBlockFile(scope: !34, file: !35, discriminator: 2)
!161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !34, file: !35, line: 17, type: !12)
!162 = !DILocation(line: 17, column: 17, scope: !34)
!163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "buf", scope: !34, file: !35, line: 18, type: !164)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, align: 8, elements: !165)
!165 = !{!166}
!166 = !DISubrange(count: 32)
!167 = !DILocation(line: 18, column: 8, scope: !34)
!168 = !DILocation(line: 20, column: 22, scope: !34)
!169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ht", scope: !34, file: !35, line: 20, type: !15)
!170 = !DILocation(line: 20, column: 17, scope: !34)
!171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !34, file: !35, line: 17, type: !12)
!172 = !DILocation(line: 17, column: 7, scope: !34)
!173 = !DILocation(line: 22, column: 8, scope: !174)
!174 = distinct !DILexicalBlock(scope: !34, file: !35, line: 22, column: 3)
!175 = !DILocation(line: 22, column: 17, scope: !176)
!176 = distinct !DILexicalBlock(scope: !174, file: !35, line: 22, column: 3)
!177 = !DILocation(line: 22, column: 3, scope: !174)
!178 = !DILocation(line: 23, column: 13, scope: !179)
!179 = distinct !DILexicalBlock(scope: !176, file: !35, line: 22, column: 28)
!180 = !DILocation(line: 23, column: 5, scope: !179)
!181 = !DILocation(line: 24, column: 22, scope: !179)
!182 = !DILocation(line: 24, column: 6, scope: !179)
!183 = !DILocation(line: 24, column: 29, scope: !179)
!184 = !DILocation(line: 24, column: 33, scope: !179)
!185 = !DILocation(line: 25, column: 3, scope: !179)
!186 = !DILocation(line: 22, column: 24, scope: !176)
!187 = !DILocation(line: 22, column: 3, scope: !176)
!188 = !DILocation(line: 27, column: 8, scope: !189)
!189 = distinct !DILexicalBlock(scope: !34, file: !35, line: 27, column: 3)
!190 = !DILocation(line: 27, column: 17, scope: !191)
!191 = distinct !DILexicalBlock(scope: !189, file: !35, line: 27, column: 3)
!192 = !DILocation(line: 27, column: 3, scope: !189)
!193 = !DILocation(line: 28, column: 13, scope: !194)
!194 = distinct !DILexicalBlock(scope: !191, file: !35, line: 27, column: 27)
!195 = !DILocation(line: 28, column: 5, scope: !194)
!196 = !DILocation(line: 29, column: 21, scope: !197)
!197 = distinct !DILexicalBlock(scope: !194, file: !35, line: 29, column: 9)
!198 = !DILocation(line: 29, column: 9, scope: !197)
!199 = !DILocation(line: 29, column: 9, scope: !194)
!200 = !DILocation(line: 30, column: 8, scope: !197)
!201 = !DILocation(line: 30, column: 7, scope: !197)
!202 = !DILocation(line: 31, column: 3, scope: !194)
!203 = !DILocation(line: 27, column: 23, scope: !191)
!204 = !DILocation(line: 27, column: 3, scope: !191)
!205 = !DILocation(line: 33, column: 3, scope: !34)
!206 = !DILocation(line: 35, column: 3, scope: !34)
!207 = !DILocation(line: 36, column: 3, scope: !34)
!208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ht", arg: 1, scope: !39, file: !6, line: 135, type: !15)
!209 = !DILocation(line: 135, column: 50, scope: !39)
!210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !39, file: !6, line: 135, type: !9)
!211 = !DILocation(line: 135, column: 60, scope: !39)
!212 = !DILocation(line: 136, column: 21, scope: !39)
!213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hash_code", scope: !39, file: !6, line: 136, type: !12)
!214 = !DILocation(line: 136, column: 9, scope: !39)
!215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "prev", scope: !39, file: !6, line: 137, type: !4)
!216 = !DILocation(line: 137, column: 21, scope: !39)
!217 = !DILocation(line: 137, column: 39, scope: !39)
!218 = !DILocation(line: 137, column: 43, scope: !39)
!219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !39, file: !6, line: 137, type: !4)
!220 = !DILocation(line: 137, column: 32, scope: !39)
!221 = !DILocation(line: 138, column: 5, scope: !39)
!222 = !DILocation(line: 139, column: 24, scope: !223)
!223 = distinct !DILexicalBlock(scope: !224, file: !6, line: 139, column: 6)
!224 = distinct !DILexicalBlock(scope: !39, file: !6, line: 138, column: 18)
!225 = !DILocation(line: 139, column: 6, scope: !223)
!226 = !DILocation(line: 139, column: 29, scope: !223)
!227 = !DILocation(line: 139, column: 6, scope: !224)
!228 = !DILocation(line: 139, column: 35, scope: !223)
!229 = !DILocation(line: 141, column: 15, scope: !224)
!230 = !DILocation(line: 146, column: 9, scope: !39)
!231 = !DILocation(line: 146, column: 14, scope: !39)
!232 = !DILocation(line: 147, column: 9, scope: !233)
!233 = distinct !DILexicalBlock(scope: !39, file: !6, line: 147, column: 9)
!234 = !DILocation(line: 147, column: 9, scope: !39)
!235 = !DILocation(line: 148, column: 22, scope: !236)
!236 = distinct !DILexicalBlock(scope: !233, file: !6, line: 147, column: 15)
!237 = !DILocation(line: 148, column: 15, scope: !236)
!238 = !DILocation(line: 148, column: 20, scope: !236)
!239 = !DILocation(line: 148, column: 2, scope: !236)
!240 = !DILocation(line: 150, column: 30, scope: !241)
!241 = distinct !DILexicalBlock(scope: !233, file: !6, line: 149, column: 12)
!242 = !DILocation(line: 150, column: 9, scope: !241)
!243 = !DILocation(line: 150, column: 13, scope: !241)
!244 = !DILocation(line: 150, column: 28, scope: !241)
!245 = !DILocation(line: 150, column: 2, scope: !241)
!246 = !DILocation(line: 152, column: 1, scope: !39)
!247 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ht", arg: 1, scope: !45, file: !6, line: 125, type: !15)
!248 = !DILocation(line: 125, column: 46, scope: !45)
!249 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !45, file: !6, line: 125, type: !9)
!250 = !DILocation(line: 125, column: 56, scope: !45)
!251 = !DILocation(line: 126, column: 21, scope: !45)
!252 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hash_code", scope: !45, file: !6, line: 126, type: !12)
!253 = !DILocation(line: 126, column: 9, scope: !45)
!254 = !DILocation(line: 127, column: 28, scope: !45)
!255 = !DILocation(line: 127, column: 32, scope: !45)
!256 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "node", scope: !45, file: !6, line: 127, type: !4)
!257 = !DILocation(line: 127, column: 21, scope: !45)
!258 = !DILocation(line: 128, column: 5, scope: !45)
!259 = !DILocation(line: 129, column: 24, scope: !260)
!260 = distinct !DILexicalBlock(scope: !261, file: !6, line: 129, column: 6)
!261 = distinct !DILexicalBlock(scope: !45, file: !6, line: 128, column: 18)
!262 = !DILocation(line: 129, column: 6, scope: !260)
!263 = !DILocation(line: 129, column: 29, scope: !260)
!264 = !DILocation(line: 129, column: 6, scope: !261)
!265 = !DILocation(line: 129, column: 35, scope: !260)
!266 = !DILocation(line: 130, column: 15, scope: !261)
!267 = !DILocation(line: 132, column: 5, scope: !45)
!268 = !DILocation(line: 133, column: 1, scope: !45)
!269 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ht", arg: 1, scope: !42, file: !6, line: 46, type: !15)
!270 = !DILocation(line: 46, column: 38, scope: !42)
!271 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 2, scope: !42, file: !6, line: 46, type: !9)
!272 = !DILocation(line: 46, column: 48, scope: !42)
!273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "val", scope: !42, file: !6, line: 47, type: !49)
!274 = !DILocation(line: 47, column: 19, scope: !42)
!275 = !DILocation(line: 48, column: 5, scope: !42)
!276 = !DILocation(line: 48, column: 12, scope: !277)
!277 = distinct !DILexicalBlock(scope: !278, file: !6, line: 48, column: 5)
!278 = distinct !DILexicalBlock(scope: !42, file: !6, line: 48, column: 5)
!279 = !DILocation(line: 48, column: 5, scope: !278)
!280 = !DILocation(line: 48, column: 33, scope: !277)
!281 = !DILocation(line: 48, column: 41, scope: !277)
!282 = !DILocation(line: 48, column: 39, scope: !277)
!283 = !DILocation(line: 48, column: 25, scope: !277)
!284 = !DILocation(line: 48, column: 18, scope: !285)
!285 = !DILexicalBlockFile(scope: !277, file: !6, discriminator: 3)
!286 = !DILocation(line: 48, column: 5, scope: !277)
!287 = !DILocation(line: 49, column: 22, scope: !42)
!288 = !DILocation(line: 49, column: 18, scope: !42)
!289 = !DILocation(line: 49, column: 16, scope: !42)
!290 = !DILocation(line: 49, column: 11, scope: !42)
!291 = !DILocation(line: 49, column: 5, scope: !42)
