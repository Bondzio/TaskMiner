; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Toggle = type { i8, {}*, %struct.Toggle* (%struct.Toggle*)* }
%struct.NthToggle = type { %struct.Toggle, i32, i32 }

@.str = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind uwtable
define signext i8 @toggle_value(%struct.Toggle* %this) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.Toggle* %this, i64 0, metadata !64, metadata !65), !dbg !66
  %state = getelementptr inbounds %struct.Toggle, %struct.Toggle* %this, i32 0, i32 0, !dbg !67
  %tmp1 = load i8, i8* %state, align 1, !dbg !67
  ret i8 %tmp1, !dbg !68
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define %struct.Toggle* @toggle_activate(%struct.Toggle* %this) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.Toggle* %this, i64 0, metadata !69, metadata !65), !dbg !70
  %state = getelementptr inbounds %struct.Toggle, %struct.Toggle* %this, i32 0, i32 0, !dbg !71
  %tmp1 = load i8, i8* %state, align 1, !dbg !71
  %tobool = icmp ne i8 %tmp1, 0, !dbg !72
  %lnot = xor i1 %tobool, true, !dbg !72
  %lnot.ext = zext i1 %lnot to i32, !dbg !72
  %conv = trunc i32 %lnot.ext to i8, !dbg !72
  %state1 = getelementptr inbounds %struct.Toggle, %struct.Toggle* %this, i32 0, i32 0, !dbg !73
  store i8 %conv, i8* %state1, align 1, !dbg !74
  ret %struct.Toggle* %this, !dbg !75
}

; Function Attrs: nounwind uwtable
define %struct.Toggle* @init_Toggle(%struct.Toggle* %this, i8 signext %start_state) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.Toggle* %this, i64 0, metadata !76, metadata !65), !dbg !77
  call void @llvm.dbg.value(metadata i8 %start_state, i64 0, metadata !78, metadata !65), !dbg !79
  %state = getelementptr inbounds %struct.Toggle, %struct.Toggle* %this, i32 0, i32 0, !dbg !80
  store i8 %start_state, i8* %state, align 1, !dbg !81
  %value = getelementptr inbounds %struct.Toggle, %struct.Toggle* %this, i32 0, i32 1, !dbg !82
  %value1 = bitcast {}** %value to i8 (%struct.Toggle*)**, !dbg !82
  store i8 (%struct.Toggle*)* @toggle_value, i8 (%struct.Toggle*)** %value1, align 8, !dbg !83
  %activate = getelementptr inbounds %struct.Toggle, %struct.Toggle* %this, i32 0, i32 2, !dbg !84
  store %struct.Toggle* (%struct.Toggle*)* @toggle_activate, %struct.Toggle* (%struct.Toggle*)** %activate, align 8, !dbg !85
  ret %struct.Toggle* %this, !dbg !86
}

; Function Attrs: nounwind uwtable
define %struct.Toggle* @new_Toggle(i8 signext %start_state) #0 {
entry:
  call void @llvm.dbg.value(metadata i8 %start_state, i64 0, metadata !87, metadata !65), !dbg !88
  %call = call noalias i8* @malloc(i64 24) #5, !dbg !89
  %tmp = bitcast i8* %call to %struct.Toggle*, !dbg !90
  call void @llvm.dbg.value(metadata %struct.Toggle* %tmp, i64 0, metadata !91, metadata !65), !dbg !92
  %call1 = call %struct.Toggle* @init_Toggle(%struct.Toggle* %tmp, i8 signext %start_state), !dbg !93
  ret %struct.Toggle* %call1, !dbg !94
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind uwtable
define %struct.NthToggle* @nth_toggle_activate(%struct.NthToggle* %this) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.NthToggle* %this, i64 0, metadata !95, metadata !65), !dbg !96
  %counter = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 2, !dbg !97
  %tmp1 = load i32, i32* %counter, align 4, !dbg !99
  %inc = add nsw i32 %tmp1, 1, !dbg !99
  store i32 %inc, i32* %counter, align 4, !dbg !99
  %count_max = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 1, !dbg !100
  %tmp3 = load i32, i32* %count_max, align 4, !dbg !100
  %cmp = icmp sge i32 %inc, %tmp3, !dbg !101
  br i1 %cmp, label %if.then, label %if.end, !dbg !102

if.then:                                          ; preds = %entry
  %base = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 0, !dbg !103
  %state = getelementptr inbounds %struct.Toggle, %struct.Toggle* %base, i32 0, i32 0, !dbg !105
  %tmp5 = load i8, i8* %state, align 1, !dbg !105
  %tobool = icmp ne i8 %tmp5, 0, !dbg !106
  %lnot = xor i1 %tobool, true, !dbg !106
  %lnot.ext = zext i1 %lnot to i32, !dbg !106
  %conv = trunc i32 %lnot.ext to i8, !dbg !106
  %base1 = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 0, !dbg !107
  %state2 = getelementptr inbounds %struct.Toggle, %struct.Toggle* %base1, i32 0, i32 0, !dbg !108
  store i8 %conv, i8* %state2, align 1, !dbg !109
  %counter3 = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 2, !dbg !110
  store i32 0, i32* %counter3, align 4, !dbg !111
  br label %if.end, !dbg !112

if.end:                                           ; preds = %if.then, %entry
  ret %struct.NthToggle* %this, !dbg !113
}

; Function Attrs: nounwind uwtable
define %struct.NthToggle* @init_NthToggle(%struct.NthToggle* %this, i32 %max_count) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.NthToggle* %this, i64 0, metadata !114, metadata !65), !dbg !115
  call void @llvm.dbg.value(metadata i32 %max_count, i64 0, metadata !116, metadata !65), !dbg !117
  %count_max = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 1, !dbg !118
  store i32 %max_count, i32* %count_max, align 4, !dbg !119
  %counter = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 2, !dbg !120
  store i32 0, i32* %counter, align 4, !dbg !121
  %base = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %this, i32 0, i32 0, !dbg !122
  %activate = getelementptr inbounds %struct.Toggle, %struct.Toggle* %base, i32 0, i32 2, !dbg !123
  store %struct.Toggle* (%struct.Toggle*)* bitcast (%struct.NthToggle* (%struct.NthToggle*)* @nth_toggle_activate to %struct.Toggle* (%struct.Toggle*)*), %struct.Toggle* (%struct.Toggle*)** %activate, align 8, !dbg !124
  ret %struct.NthToggle* %this, !dbg !125
}

; Function Attrs: nounwind uwtable
define %struct.NthToggle* @new_NthToggle(i8 signext %start_state, i32 %max_count) #0 {
entry:
  call void @llvm.dbg.value(metadata i8 %start_state, i64 0, metadata !126, metadata !65), !dbg !127
  call void @llvm.dbg.value(metadata i32 %max_count, i64 0, metadata !128, metadata !65), !dbg !129
  %call = call noalias i8* @malloc(i64 32) #5, !dbg !130
  %tmp = bitcast i8* %call to %struct.NthToggle*, !dbg !131
  call void @llvm.dbg.value(metadata %struct.NthToggle* %tmp, i64 0, metadata !132, metadata !65), !dbg !133
  %tmp2 = bitcast %struct.NthToggle* %tmp to %struct.Toggle*, !dbg !134
  %call1 = call %struct.Toggle* @init_Toggle(%struct.Toggle* %tmp2, i8 signext %start_state), !dbg !135
  %tmp4 = bitcast %struct.Toggle* %call1 to %struct.NthToggle*, !dbg !136
  call void @llvm.dbg.value(metadata %struct.NthToggle* %tmp4, i64 0, metadata !132, metadata !65), !dbg !133
  %call2 = call %struct.NthToggle* @init_NthToggle(%struct.NthToggle* %tmp4, i32 %max_count), !dbg !137
  ret %struct.NthToggle* %call2, !dbg !138
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !139, metadata !65), !dbg !140
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !141, metadata !65), !dbg !142
  %cmp = icmp eq i32 %argc, 2, !dbg !143
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !144

cond.true:                                        ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !145
  %tmp2 = load i8*, i8** %arrayidx, align 8, !dbg !145
  %call = call i32 @atoi(i8* %tmp2) #6, !dbg !147
  br label %cond.end, !dbg !144

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !148

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 70000000, %cond.false ], !dbg !144
  call void @llvm.dbg.value(metadata i32 %cond, i64 0, metadata !150, metadata !65), !dbg !151
  %call1 = call %struct.Toggle* @new_Toggle(i8 signext 1), !dbg !152
  call void @llvm.dbg.value(metadata %struct.Toggle* %call1, i64 0, metadata !153, metadata !65), !dbg !154
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond, !dbg !157

for.cond:                                         ; preds = %for.inc, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.inc ]
  %cmp2 = icmp slt i32 %i.0, 5, !dbg !159
  br i1 %cmp2, label %for.body, label %for.end, !dbg !161

for.body:                                         ; preds = %for.cond
  %activate = getelementptr inbounds %struct.Toggle, %struct.Toggle* %call1, i32 0, i32 2, !dbg !162
  %tmp5 = load %struct.Toggle* (%struct.Toggle*)*, %struct.Toggle* (%struct.Toggle*)** %activate, align 8, !dbg !162
  %call3 = call %struct.Toggle* %tmp5(%struct.Toggle* %call1), !dbg !164
  %value = getelementptr inbounds %struct.Toggle, %struct.Toggle* %call3, i32 0, i32 1, !dbg !165
  %value4 = bitcast {}** %value to i8 (%struct.Toggle*)**, !dbg !165
  %tmp7 = load i8 (%struct.Toggle*)*, i8 (%struct.Toggle*)** %value4, align 8, !dbg !165
  %call5 = call signext i8 %tmp7(%struct.Toggle* %call1), !dbg !164
  %conv = sext i8 %call5 to i32, !dbg !166
  %tobool = icmp ne i32 %conv, 0, !dbg !166
  %cond6 = select i1 %tobool, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), !dbg !166
  %call7 = call i32 @puts(i8* %cond6), !dbg !167
  br label %for.inc, !dbg !168

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !169
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond, !dbg !170

for.end:                                          ; preds = %for.cond
  %tmp11 = bitcast %struct.Toggle* %call1 to i8*, !dbg !171
  call void @free(i8* %tmp11) #5, !dbg !172
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond.8, !dbg !173

for.cond.8:                                       ; preds = %for.inc.13, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc14, %for.inc.13 ]
  %cmp9 = icmp slt i32 %i.1, %cond, !dbg !175
  br i1 %cmp9, label %for.body.11, label %for.end.15, !dbg !177

for.body.11:                                      ; preds = %for.cond.8
  %call12 = call %struct.Toggle* @new_Toggle(i8 signext 1), !dbg !178
  call void @llvm.dbg.value(metadata %struct.Toggle* %call12, i64 0, metadata !153, metadata !65), !dbg !154
  %tmp15 = bitcast %struct.Toggle* %call12 to i8*, !dbg !180
  call void @free(i8* %tmp15) #5, !dbg !181
  br label %for.inc.13, !dbg !182

for.inc.13:                                       ; preds = %for.body.11
  %inc14 = add nsw i32 %i.1, 1, !dbg !183
  call void @llvm.dbg.value(metadata i32 %inc14, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond.8, !dbg !184

for.end.15:                                       ; preds = %for.cond.8
  %call16 = call i32 @puts(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0)), !dbg !185
  %call17 = call %struct.NthToggle* @new_NthToggle(i8 signext 1, i32 3), !dbg !186
  call void @llvm.dbg.value(metadata %struct.NthToggle* %call17, i64 0, metadata !187, metadata !65), !dbg !188
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond.18, !dbg !189

for.cond.18:                                      ; preds = %for.inc.29, %for.end.15
  %i.2 = phi i32 [ 0, %for.end.15 ], [ %inc30, %for.inc.29 ]
  %cmp19 = icmp slt i32 %i.2, 8, !dbg !191
  br i1 %cmp19, label %for.body.21, label %for.end.31, !dbg !193

for.body.21:                                      ; preds = %for.cond.18
  %base = getelementptr inbounds %struct.NthToggle, %struct.NthToggle* %call17, i32 0, i32 0, !dbg !194
  %activate22 = getelementptr inbounds %struct.Toggle, %struct.Toggle* %base, i32 0, i32 2, !dbg !197
  %tmp19 = load %struct.Toggle* (%struct.Toggle*)*, %struct.Toggle* (%struct.Toggle*)** %activate22, align 8, !dbg !197
  %tmp21 = bitcast %struct.NthToggle* %call17 to %struct.Toggle*, !dbg !198
  %call23 = call %struct.Toggle* %tmp19(%struct.Toggle* %tmp21), !dbg !199
  %value24 = getelementptr inbounds %struct.Toggle, %struct.Toggle* %call23, i32 0, i32 1, !dbg !200
  %value25 = bitcast {}** %value24 to i8 (%struct.Toggle*)**, !dbg !200
  %tmp22 = load i8 (%struct.Toggle*)*, i8 (%struct.Toggle*)** %value25, align 8, !dbg !200
  %tmp24 = bitcast %struct.NthToggle* %call17 to %struct.Toggle*, !dbg !201
  %call26 = call signext i8 %tmp22(%struct.Toggle* %tmp24), !dbg !199
  %tobool27 = icmp ne i8 %call26, 0, !dbg !199
  br i1 %tobool27, label %if.then, label %if.else, !dbg !202

if.then:                                          ; preds = %for.body.21
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64 0, metadata !203, metadata !65), !dbg !206
  br label %if.end, !dbg !207

if.else:                                          ; preds = %for.body.21
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i64 0, metadata !203, metadata !65), !dbg !206
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %Msg.0 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %if.then ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), %if.else ]
  %call28 = call i32 @puts(i8* %Msg.0), !dbg !208
  br label %for.inc.29, !dbg !209

for.inc.29:                                       ; preds = %if.end
  %inc30 = add nsw i32 %i.2, 1, !dbg !210
  call void @llvm.dbg.value(metadata i32 %inc30, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond.18, !dbg !211

for.end.31:                                       ; preds = %for.cond.18
  %tmp28 = bitcast %struct.NthToggle* %call17 to i8*, !dbg !212
  call void @free(i8* %tmp28) #5, !dbg !213
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond.32, !dbg !214

for.cond.32:                                      ; preds = %for.inc.37, %for.end.31
  %i.3 = phi i32 [ 0, %for.end.31 ], [ %inc38, %for.inc.37 ]
  %cmp33 = icmp slt i32 %i.3, %cond, !dbg !216
  br i1 %cmp33, label %for.body.35, label %for.end.39, !dbg !218

for.body.35:                                      ; preds = %for.cond.32
  %call36 = call %struct.NthToggle* @new_NthToggle(i8 signext 1, i32 3), !dbg !219
  call void @llvm.dbg.value(metadata %struct.NthToggle* %call36, i64 0, metadata !187, metadata !65), !dbg !188
  %tmp32 = bitcast %struct.NthToggle* %call36 to i8*, !dbg !221
  call void @free(i8* %tmp32) #5, !dbg !222
  br label %for.inc.37, !dbg !223

for.inc.37:                                       ; preds = %for.body.35
  %inc38 = add nsw i32 %i.3, 1, !dbg !224
  call void @llvm.dbg.value(metadata i32 %inc38, i64 0, metadata !155, metadata !65), !dbg !156
  br label %for.cond.32, !dbg !225

for.end.39:                                       ; preds = %for.cond.32
  ret i32 0, !dbg !226
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #3

declare i32 @puts(i8*) #4

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!61, !62}
!llvm.ident = !{!63}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !8, subprograms: !35)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Shootout/objinst")
!2 = !{!3}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 9, size: 32, align: 32, elements: !5)
!4 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Shootout/objinst/tmp.c", directory: "/home/gleison/tf/Benchmarks/Shootout/objinst")
!5 = !{!6, !7}
!6 = !DIEnumerator(name: "false", value: 0)
!7 = !DIEnumerator(name: "true", value: 1)
!8 = !{!9, !24, !27}
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "Toggle", file: !4, line: 21, baseType: !11)
!11 = !DICompositeType(tag: DW_TAG_structure_type, name: "Toggle", file: !4, line: 19, size: 192, align: 64, elements: !12)
!12 = !{!13, !15, !20}
!13 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11, file: !4, line: 20, baseType: !14, size: 8, align: 8)
!14 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !11, file: !4, line: 20, baseType: !16, size: 64, align: 64, offset: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64, align: 64)
!17 = !DISubroutineType(types: !18)
!18 = !{!14, !19}
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !11, file: !4, line: 20, baseType: !21, size: 64, align: 64, offset: 128)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!22 = !DISubroutineType(types: !23)
!23 = !{!19, !19}
!24 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64, align: 64)
!25 = !DISubroutineType(types: !26)
!26 = !{!9, !9}
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "NthToggle", file: !4, line: 45, baseType: !29)
!29 = !DICompositeType(tag: DW_TAG_structure_type, name: "NthToggle", file: !4, line: 41, size: 256, align: 64, elements: !30)
!30 = !{!31, !32, !34}
!31 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !29, file: !4, line: 42, baseType: !10, size: 192, align: 64)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "count_max", scope: !29, file: !4, line: 43, baseType: !33, size: 32, align: 32, offset: 192)
!33 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !29, file: !4, line: 44, baseType: !33, size: 32, align: 32, offset: 224)
!35 = !{!36, !40, !41, !44, !47, !50, !53, !56}
!36 = !DISubprogram(name: "toggle_value", scope: !4, file: !4, line: 23, type: !37, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: i8 (%struct.Toggle*)* @toggle_value, variables: !39)
!37 = !DISubroutineType(types: !38)
!38 = !{!14, !9}
!39 = !{}
!40 = !DISubprogram(name: "toggle_activate", scope: !4, file: !4, line: 26, type: !25, isLocal: false, isDefinition: true, scopeLine: 26, flags: DIFlagPrototyped, isOptimized: false, function: %struct.Toggle* (%struct.Toggle*)* @toggle_activate, variables: !39)
!41 = !DISubprogram(name: "init_Toggle", scope: !4, file: !4, line: 30, type: !42, isLocal: false, isDefinition: true, scopeLine: 30, flags: DIFlagPrototyped, isOptimized: false, function: %struct.Toggle* (%struct.Toggle*, i8)* @init_Toggle, variables: !39)
!42 = !DISubroutineType(types: !43)
!43 = !{!9, !9, !14}
!44 = !DISubprogram(name: "new_Toggle", scope: !4, file: !4, line: 36, type: !45, isLocal: false, isDefinition: true, scopeLine: 36, flags: DIFlagPrototyped, isOptimized: false, function: %struct.Toggle* (i8)* @new_Toggle, variables: !39)
!45 = !DISubroutineType(types: !46)
!46 = !{!9, !14}
!47 = !DISubprogram(name: "nth_toggle_activate", scope: !4, file: !4, line: 47, type: !48, isLocal: false, isDefinition: true, scopeLine: 47, flags: DIFlagPrototyped, isOptimized: false, function: %struct.NthToggle* (%struct.NthToggle*)* @nth_toggle_activate, variables: !39)
!48 = !DISubroutineType(types: !49)
!49 = !{!27, !27}
!50 = !DISubprogram(name: "init_NthToggle", scope: !4, file: !4, line: 54, type: !51, isLocal: false, isDefinition: true, scopeLine: 54, flags: DIFlagPrototyped, isOptimized: false, function: %struct.NthToggle* (%struct.NthToggle*, i32)* @init_NthToggle, variables: !39)
!51 = !DISubroutineType(types: !52)
!52 = !{!27, !27, !33}
!53 = !DISubprogram(name: "new_NthToggle", scope: !4, file: !4, line: 60, type: !54, isLocal: false, isDefinition: true, scopeLine: 60, flags: DIFlagPrototyped, isOptimized: false, function: %struct.NthToggle* (i8, i32)* @new_NthToggle, variables: !39)
!54 = !DISubroutineType(types: !55)
!55 = !{!27, !14, !33}
!56 = !DISubprogram(name: "main", scope: !4, file: !4, line: 66, type: !57, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !39)
!57 = !DISubroutineType(types: !58)
!58 = !{!33, !33, !59}
!59 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64, align: 64)
!61 = !{i32 2, !"Dwarf Version", i32 4}
!62 = !{i32 2, !"Debug Info Version", i32 3}
!63 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!64 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !36, file: !4, line: 23, type: !9)
!65 = !DIExpression()
!66 = !DILocation(line: 23, column: 27, scope: !36)
!67 = !DILocation(line: 24, column: 17, scope: !36)
!68 = !DILocation(line: 24, column: 3, scope: !36)
!69 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !40, file: !4, line: 26, type: !9)
!70 = !DILocation(line: 26, column: 33, scope: !40)
!71 = !DILocation(line: 27, column: 24, scope: !40)
!72 = !DILocation(line: 27, column: 17, scope: !40)
!73 = !DILocation(line: 27, column: 9, scope: !40)
!74 = !DILocation(line: 27, column: 15, scope: !40)
!75 = !DILocation(line: 28, column: 3, scope: !40)
!76 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !41, file: !4, line: 30, type: !9)
!77 = !DILocation(line: 30, column: 29, scope: !41)
!78 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start_state", arg: 2, scope: !41, file: !4, line: 30, type: !14)
!79 = !DILocation(line: 30, column: 40, scope: !41)
!80 = !DILocation(line: 31, column: 9, scope: !41)
!81 = !DILocation(line: 31, column: 15, scope: !41)
!82 = !DILocation(line: 32, column: 9, scope: !41)
!83 = !DILocation(line: 32, column: 15, scope: !41)
!84 = !DILocation(line: 33, column: 9, scope: !41)
!85 = !DILocation(line: 33, column: 18, scope: !41)
!86 = !DILocation(line: 34, column: 3, scope: !41)
!87 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start_state", arg: 1, scope: !44, file: !4, line: 36, type: !14)
!88 = !DILocation(line: 36, column: 25, scope: !44)
!89 = !DILocation(line: 37, column: 28, scope: !44)
!90 = !DILocation(line: 37, column: 18, scope: !44)
!91 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "this", scope: !44, file: !4, line: 37, type: !9)
!92 = !DILocation(line: 37, column: 11, scope: !44)
!93 = !DILocation(line: 38, column: 11, scope: !44)
!94 = !DILocation(line: 38, column: 3, scope: !44)
!95 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !47, file: !4, line: 47, type: !27)
!96 = !DILocation(line: 47, column: 43, scope: !47)
!97 = !DILocation(line: 48, column: 15, scope: !98)
!98 = distinct !DILexicalBlock(scope: !47, file: !4, line: 48, column: 7)
!99 = !DILocation(line: 48, column: 7, scope: !98)
!100 = !DILocation(line: 48, column: 32, scope: !98)
!101 = !DILocation(line: 48, column: 23, scope: !98)
!102 = !DILocation(line: 48, column: 7, scope: !47)
!103 = !DILocation(line: 49, column: 31, scope: !104)
!104 = distinct !DILexicalBlock(scope: !98, file: !4, line: 48, column: 43)
!105 = !DILocation(line: 49, column: 36, scope: !104)
!106 = !DILocation(line: 49, column: 24, scope: !104)
!107 = !DILocation(line: 49, column: 11, scope: !104)
!108 = !DILocation(line: 49, column: 16, scope: !104)
!109 = !DILocation(line: 49, column: 22, scope: !104)
!110 = !DILocation(line: 50, column: 11, scope: !104)
!111 = !DILocation(line: 50, column: 19, scope: !104)
!112 = !DILocation(line: 51, column: 3, scope: !104)
!113 = !DILocation(line: 52, column: 3, scope: !47)
!114 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "this", arg: 1, scope: !50, file: !4, line: 54, type: !27)
!115 = !DILocation(line: 54, column: 38, scope: !50)
!116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_count", arg: 2, scope: !50, file: !4, line: 54, type: !33)
!117 = !DILocation(line: 54, column: 48, scope: !50)
!118 = !DILocation(line: 55, column: 9, scope: !50)
!119 = !DILocation(line: 55, column: 19, scope: !50)
!120 = !DILocation(line: 56, column: 9, scope: !50)
!121 = !DILocation(line: 56, column: 17, scope: !50)
!122 = !DILocation(line: 57, column: 9, scope: !50)
!123 = !DILocation(line: 57, column: 14, scope: !50)
!124 = !DILocation(line: 57, column: 23, scope: !50)
!125 = !DILocation(line: 58, column: 3, scope: !50)
!126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "start_state", arg: 1, scope: !53, file: !4, line: 60, type: !14)
!127 = !DILocation(line: 60, column: 31, scope: !53)
!128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "max_count", arg: 2, scope: !53, file: !4, line: 60, type: !33)
!129 = !DILocation(line: 60, column: 48, scope: !53)
!130 = !DILocation(line: 61, column: 34, scope: !53)
!131 = !DILocation(line: 61, column: 21, scope: !53)
!132 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "this", scope: !53, file: !4, line: 61, type: !27)
!133 = !DILocation(line: 61, column: 14, scope: !53)
!134 = !DILocation(line: 62, column: 35, scope: !53)
!135 = !DILocation(line: 62, column: 23, scope: !53)
!136 = !DILocation(line: 62, column: 10, scope: !53)
!137 = !DILocation(line: 63, column: 11, scope: !53)
!138 = !DILocation(line: 63, column: 3, scope: !53)
!139 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !56, file: !4, line: 66, type: !33)
!140 = !DILocation(line: 66, column: 14, scope: !56)
!141 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !56, file: !4, line: 66, type: !59)
!142 = !DILocation(line: 66, column: 26, scope: !56)
!143 = !DILocation(line: 72, column: 21, scope: !56)
!144 = !DILocation(line: 72, column: 15, scope: !56)
!145 = !DILocation(line: 72, column: 34, scope: !146)
!146 = !DILexicalBlockFile(scope: !56, file: !4, discriminator: 1)
!147 = !DILocation(line: 72, column: 29, scope: !56)
!148 = !DILocation(line: 72, column: 15, scope: !149)
!149 = !DILexicalBlockFile(scope: !56, file: !4, discriminator: 2)
!150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !56, file: !4, line: 72, type: !33)
!151 = !DILocation(line: 72, column: 10, scope: !56)
!152 = !DILocation(line: 76, column: 9, scope: !56)
!153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tog", scope: !56, file: !4, line: 73, type: !9)
!154 = !DILocation(line: 73, column: 11, scope: !56)
!155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !56, file: !4, line: 72, type: !33)
!156 = !DILocation(line: 72, column: 7, scope: !56)
!157 = !DILocation(line: 77, column: 8, scope: !158)
!158 = distinct !DILexicalBlock(scope: !56, file: !4, line: 77, column: 3)
!159 = !DILocation(line: 77, column: 17, scope: !160)
!160 = distinct !DILexicalBlock(scope: !158, file: !4, line: 77, column: 3)
!161 = !DILocation(line: 77, column: 3, scope: !158)
!162 = !DILocation(line: 78, column: 16, scope: !163)
!163 = distinct !DILexicalBlock(scope: !160, file: !4, line: 77, column: 27)
!164 = !DILocation(line: 78, column: 11, scope: !163)
!165 = !DILocation(line: 78, column: 31, scope: !163)
!166 = !DILocation(line: 78, column: 10, scope: !163)
!167 = !DILocation(line: 78, column: 5, scope: !163)
!168 = !DILocation(line: 79, column: 3, scope: !163)
!169 = !DILocation(line: 77, column: 23, scope: !160)
!170 = !DILocation(line: 77, column: 3, scope: !160)
!171 = !DILocation(line: 80, column: 11, scope: !56)
!172 = !DILocation(line: 80, column: 3, scope: !56)
!173 = !DILocation(line: 81, column: 8, scope: !174)
!174 = distinct !DILexicalBlock(scope: !56, file: !4, line: 81, column: 3)
!175 = !DILocation(line: 81, column: 17, scope: !176)
!176 = distinct !DILexicalBlock(scope: !174, file: !4, line: 81, column: 3)
!177 = !DILocation(line: 81, column: 3, scope: !174)
!178 = !DILocation(line: 82, column: 11, scope: !179)
!179 = distinct !DILexicalBlock(scope: !176, file: !4, line: 81, column: 27)
!180 = !DILocation(line: 83, column: 13, scope: !179)
!181 = !DILocation(line: 83, column: 5, scope: !179)
!182 = !DILocation(line: 84, column: 3, scope: !179)
!183 = !DILocation(line: 81, column: 23, scope: !176)
!184 = !DILocation(line: 81, column: 3, scope: !176)
!185 = !DILocation(line: 86, column: 3, scope: !56)
!186 = !DILocation(line: 88, column: 10, scope: !56)
!187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ntog", scope: !56, file: !4, line: 74, type: !27)
!188 = !DILocation(line: 74, column: 14, scope: !56)
!189 = !DILocation(line: 89, column: 8, scope: !190)
!190 = distinct !DILexicalBlock(scope: !56, file: !4, line: 89, column: 3)
!191 = !DILocation(line: 89, column: 17, scope: !192)
!192 = distinct !DILexicalBlock(scope: !190, file: !4, line: 89, column: 3)
!193 = !DILocation(line: 89, column: 3, scope: !190)
!194 = !DILocation(line: 91, column: 15, scope: !195)
!195 = distinct !DILexicalBlock(scope: !196, file: !4, line: 91, column: 9)
!196 = distinct !DILexicalBlock(scope: !192, file: !4, line: 89, column: 27)
!197 = !DILocation(line: 91, column: 20, scope: !195)
!198 = !DILocation(line: 91, column: 29, scope: !195)
!199 = !DILocation(line: 91, column: 9, scope: !195)
!200 = !DILocation(line: 91, column: 46, scope: !195)
!201 = !DILocation(line: 91, column: 52, scope: !195)
!202 = !DILocation(line: 91, column: 9, scope: !196)
!203 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Msg", scope: !196, file: !4, line: 90, type: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64, align: 64)
!205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!206 = !DILocation(line: 90, column: 17, scope: !196)
!207 = !DILocation(line: 92, column: 7, scope: !195)
!208 = !DILocation(line: 95, column: 5, scope: !196)
!209 = !DILocation(line: 96, column: 3, scope: !196)
!210 = !DILocation(line: 89, column: 23, scope: !192)
!211 = !DILocation(line: 89, column: 3, scope: !192)
!212 = !DILocation(line: 97, column: 11, scope: !56)
!213 = !DILocation(line: 97, column: 3, scope: !56)
!214 = !DILocation(line: 98, column: 8, scope: !215)
!215 = distinct !DILexicalBlock(scope: !56, file: !4, line: 98, column: 3)
!216 = !DILocation(line: 98, column: 17, scope: !217)
!217 = distinct !DILexicalBlock(scope: !215, file: !4, line: 98, column: 3)
!218 = !DILocation(line: 98, column: 3, scope: !215)
!219 = !DILocation(line: 99, column: 12, scope: !220)
!220 = distinct !DILexicalBlock(scope: !217, file: !4, line: 98, column: 27)
!221 = !DILocation(line: 100, column: 13, scope: !220)
!222 = !DILocation(line: 100, column: 5, scope: !220)
!223 = !DILocation(line: 101, column: 3, scope: !220)
!224 = !DILocation(line: 98, column: 23, scope: !217)
!225 = !DILocation(line: 98, column: 3, scope: !217)
!226 = !DILocation(line: 102, column: 3, scope: !56)
