; ModuleID = '/home/gleison/tf/Benchmarks/Olden/health/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define float @my_rand(i64 %idum) #0 {
entry:
  %idum.addr = alloca i64, align 8
  %k = alloca i64, align 8
  %answer = alloca float, align 4
  store i64 %idum, i64* %idum.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %idum.addr, metadata !13, metadata !14), !dbg !15
  call void @llvm.dbg.declare(metadata i64* %k, metadata !16, metadata !14), !dbg !17
  call void @llvm.dbg.declare(metadata float* %answer, metadata !18, metadata !14), !dbg !19
  %0 = load i64, i64* %idum.addr, align 8, !dbg !20
  %xor = xor i64 %0, 123459876, !dbg !20
  store i64 %xor, i64* %idum.addr, align 8, !dbg !20
  %1 = load i64, i64* %idum.addr, align 8, !dbg !21
  %div = sdiv i64 %1, 127773, !dbg !22
  store i64 %div, i64* %k, align 8, !dbg !23
  %2 = load i64, i64* %idum.addr, align 8, !dbg !24
  %3 = load i64, i64* %k, align 8, !dbg !25
  %mul = mul nsw i64 %3, 127773, !dbg !26
  %sub = sub nsw i64 %2, %mul, !dbg !27
  %mul1 = mul nsw i64 16807, %sub, !dbg !28
  %4 = load i64, i64* %k, align 8, !dbg !29
  %mul2 = mul nsw i64 2836, %4, !dbg !30
  %sub3 = sub nsw i64 %mul1, %mul2, !dbg !31
  store i64 %sub3, i64* %idum.addr, align 8, !dbg !32
  %5 = load i64, i64* %idum.addr, align 8, !dbg !33
  %xor4 = xor i64 %5, 123459876, !dbg !33
  store i64 %xor4, i64* %idum.addr, align 8, !dbg !33
  %6 = load i64, i64* %idum.addr, align 8, !dbg !34
  %cmp = icmp slt i64 %6, 0, !dbg !36
  br i1 %cmp, label %if.then, label %if.end, !dbg !37

if.then:                                          ; preds = %entry
  %7 = load i64, i64* %idum.addr, align 8, !dbg !38
  %add = add nsw i64 %7, 2147483647, !dbg !38
  store i64 %add, i64* %idum.addr, align 8, !dbg !38
  br label %if.end, !dbg !39

if.end:                                           ; preds = %if.then, %entry
  %8 = load i64, i64* %idum.addr, align 8, !dbg !40
  %conv = sitofp i64 %8 to double, !dbg !40
  %mul5 = fmul double 0x3E00000000200000, %conv, !dbg !41
  %conv6 = fptrunc double %mul5 to float, !dbg !42
  store float %conv6, float* %answer, align 4, !dbg !43
  %9 = load float, float* %answer, align 4, !dbg !44
  ret float %9, !dbg !45
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10, !11}
!llvm.ident = !{!12}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Olden/health")
!2 = !{}
!3 = !{!4}
!4 = !DISubprogram(name: "my_rand", scope: !5, file: !5, line: 11, type: !6, isLocal: false, isDefinition: true, scopeLine: 11, flags: DIFlagPrototyped, isOptimized: false, function: float (i64)* @my_rand, variables: !2)
!5 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Olden/health/tmp.c", directory: "/home/gleison/tf/Benchmarks/Olden/health")
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !9}
!8 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!9 = !DIBasicType(name: "long long int", size: 64, align: 64, encoding: DW_ATE_signed)
!10 = !{i32 2, !"Dwarf Version", i32 4}
!11 = !{i32 2, !"Debug Info Version", i32 3}
!12 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!13 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "idum", arg: 1, scope: !4, file: !5, line: 11, type: !9)
!14 = !DIExpression()
!15 = !DILocation(line: 11, column: 25, scope: !4)
!16 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !4, file: !5, line: 12, type: !9)
!17 = !DILocation(line: 12, column: 13, scope: !4)
!18 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "answer", scope: !4, file: !5, line: 13, type: !8)
!19 = !DILocation(line: 13, column: 9, scope: !4)
!20 = !DILocation(line: 15, column: 8, scope: !4)
!21 = !DILocation(line: 16, column: 7, scope: !4)
!22 = !DILocation(line: 16, column: 12, scope: !4)
!23 = !DILocation(line: 16, column: 5, scope: !4)
!24 = !DILocation(line: 17, column: 16, scope: !4)
!25 = !DILocation(line: 17, column: 23, scope: !4)
!26 = !DILocation(line: 17, column: 25, scope: !4)
!27 = !DILocation(line: 17, column: 21, scope: !4)
!28 = !DILocation(line: 17, column: 13, scope: !4)
!29 = !DILocation(line: 17, column: 38, scope: !4)
!30 = !DILocation(line: 17, column: 36, scope: !4)
!31 = !DILocation(line: 17, column: 31, scope: !4)
!32 = !DILocation(line: 17, column: 8, scope: !4)
!33 = !DILocation(line: 18, column: 8, scope: !4)
!34 = !DILocation(line: 19, column: 7, scope: !35)
!35 = distinct !DILexicalBlock(scope: !4, file: !5, line: 19, column: 7)
!36 = !DILocation(line: 19, column: 12, scope: !35)
!37 = !DILocation(line: 19, column: 7, scope: !4)
!38 = !DILocation(line: 20, column: 10, scope: !35)
!39 = !DILocation(line: 20, column: 5, scope: !35)
!40 = !DILocation(line: 21, column: 17, scope: !4)
!41 = !DILocation(line: 21, column: 15, scope: !4)
!42 = !DILocation(line: 21, column: 12, scope: !4)
!43 = !DILocation(line: 21, column: 10, scope: !4)
!44 = !DILocation(line: 22, column: 10, scope: !4)
!45 = !DILocation(line: 22, column: 3, scope: !4)
