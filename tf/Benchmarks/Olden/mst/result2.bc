; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.graph_st = type { [1 x %struct.vert_st*] }
%struct.vert_st = type { i32, %struct.vert_st*, %struct.hash* }
%struct.hash = type { %struct.hash_entry**, i32 (i32)*, i32 }
%struct.hash_entry = type { i32, i8*, %struct.hash_entry* }

@.str = private unnamed_addr constant [14 x i8] c"Make phase 2\0A\00", align 1
@HashRange = internal global i32 0, align 4
@.str.1 = private unnamed_addr constant [14 x i8] c"Make phase 3\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"Make phase 4\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"Make returning\0A\00", align 1

; Function Attrs: nounwind uwtable
define %struct.graph_st* @MakeGraph(i32 %numvert, i32 %numproc) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %numvert, i64 0, metadata !65, metadata !66), !dbg !67
  call void @llvm.dbg.value(metadata i32 %numproc, i64 0, metadata !68, metadata !66), !dbg !69
  %div = sdiv i32 %numvert, %numproc, !dbg !70
  call void @llvm.dbg.value(metadata i32 %div, i64 0, metadata !71, metadata !66), !dbg !72
  %call = call noalias i8* @malloc(i64 8) #4, !dbg !73
  %0 = ptrtoint i8* %call to i64
  %call41 = ptrtoint i8* %call to i64
  %tmp3 = bitcast i8* %call to %struct.graph_st*, !dbg !74
  call void @llvm.dbg.value(metadata %struct.graph_st* %tmp3, i64 0, metadata !75, metadata !66), !dbg !76
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !77, metadata !66), !dbg !78
  %1 = add i64 %call41, 1, !dbg !79
  %2 = add i64 %call41, 1, !dbg !79
  %3 = add i64 %0, 1, !dbg !79
  %4 = add i64 %0, 1, !dbg !79
  br label %for.cond, !dbg !81

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 1, !dbg !82
  %5 = ptrtoint i8* undef to i64, !dbg !79
  %6 = sub i64 %1, %0, !dbg !79
  %7 = ptrtoint i8* %call to i64, !dbg !79
  %8 = sub i64 %3, %7, !dbg !79
  br i1 %cmp, label %for.body, label %for.end, !dbg !79

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !84
  %vlist = getelementptr inbounds %struct.graph_st, %struct.graph_st* %tmp3, i32 0, i32 0, !dbg !86
  %arrayidx = getelementptr inbounds [1 x %struct.vert_st*], [1 x %struct.vert_st*]* %vlist, i32 0, i64 %idxprom, !dbg !84
  store %struct.vert_st* null, %struct.vert_st** %arrayidx, align 8, !dbg !87
  br label %for.inc, !dbg !88

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !89
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !77, metadata !66), !dbg !78
  br label %for.cond, !dbg !90

for.end:                                          ; preds = %for.cond
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0)), !dbg !91
  %sub = sub nsw i32 %numproc, 1, !dbg !92
  call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !94, metadata !66), !dbg !95
  br label %for.cond.5, !dbg !96

for.cond.5:                                       ; preds = %for.inc.24, %for.end
  %j.0 = phi i32 [ %sub, %for.end ], [ %dec, %for.inc.24 ]
  %cmp6 = icmp sge i32 %j.0, 0, !dbg !97
  br i1 %cmp6, label %for.body.7, label %for.end.25, !dbg !99

for.body.7:                                       ; preds = %for.cond.5
  %conv = sext i32 %div to i64, !dbg !100
  %mul = mul i64 %conv, 24, !dbg !102
  %call8 = call noalias i8* @malloc(i64 %mul) #4, !dbg !103
  %tmp11 = bitcast i8* %call8 to %struct.vert_st*, !dbg !104
  call void @llvm.dbg.value(metadata %struct.vert_st* %tmp11, i64 0, metadata !105, metadata !66), !dbg !106
  call void @llvm.dbg.value(metadata %struct.vert_st* null, i64 0, metadata !107, metadata !66), !dbg !108
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !77, metadata !66), !dbg !78
  br label %for.cond.9, !dbg !109

for.cond.9:                                       ; preds = %for.inc.18, %for.body.7
  %i.1 = phi i32 [ 0, %for.body.7 ], [ %inc19, %for.inc.18 ]
  %v.0 = phi %struct.vert_st* [ null, %for.body.7 ], [ %add.ptr, %for.inc.18 ]
  %cmp10 = icmp slt i32 %i.1, %div, !dbg !111
  br i1 %cmp10, label %for.body.12, label %for.end.20, !dbg !113

for.body.12:                                      ; preds = %for.cond.9
  %sub13 = sub nsw i32 %div, %i.1, !dbg !114
  %sub14 = sub nsw i32 %sub13, 1, !dbg !116
  %idx.ext = sext i32 %sub14 to i64, !dbg !117
  %add.ptr = getelementptr inbounds %struct.vert_st, %struct.vert_st* %tmp11, i64 %idx.ext, !dbg !117
  call void @llvm.dbg.value(metadata %struct.vert_st* %add.ptr, i64 0, metadata !118, metadata !66), !dbg !119
  %div15 = sdiv i32 %numvert, 4, !dbg !120
  store i32 %div15, i32* @HashRange, align 4, !dbg !121
  %mindist = getelementptr inbounds %struct.vert_st, %struct.vert_st* %add.ptr, i32 0, i32 0, !dbg !122
  store i32 9999999, i32* %mindist, align 4, !dbg !123
  %div16 = sdiv i32 %numvert, 4, !dbg !124
  %call17 = call %struct.hash* @MakeHash(i32 %div16, i32 (i32)* @hashfunc), !dbg !125
  %edgehash = getelementptr inbounds %struct.vert_st, %struct.vert_st* %add.ptr, i32 0, i32 2, !dbg !126
  store %struct.hash* %call17, %struct.hash** %edgehash, align 8, !dbg !127
  %next = getelementptr inbounds %struct.vert_st, %struct.vert_st* %add.ptr, i32 0, i32 1, !dbg !128
  store %struct.vert_st* %v.0, %struct.vert_st** %next, align 8, !dbg !129
  call void @llvm.dbg.value(metadata %struct.vert_st* %add.ptr, i64 0, metadata !107, metadata !66), !dbg !108
  br label %for.inc.18, !dbg !130

for.inc.18:                                       ; preds = %for.body.12
  %inc19 = add nsw i32 %i.1, 1, !dbg !131
  call void @llvm.dbg.value(metadata i32 %inc19, i64 0, metadata !77, metadata !66), !dbg !78
  br label %for.cond.9, !dbg !132

for.end.20:                                       ; preds = %for.cond.9
  %v.0.lcssa = phi %struct.vert_st* [ %v.0, %for.cond.9 ]
  %idxprom21 = sext i32 %j.0 to i64, !dbg !133
  %vlist22 = getelementptr inbounds %struct.graph_st, %struct.graph_st* %tmp3, i32 0, i32 0, !dbg !134
  %arrayidx23 = getelementptr inbounds [1 x %struct.vert_st*], [1 x %struct.vert_st*]* %vlist22, i32 0, i64 %idxprom21, !dbg !133
  store %struct.vert_st* %v.0.lcssa, %struct.vert_st** %arrayidx23, align 8, !dbg !135
  br label %for.inc.24, !dbg !136

for.inc.24:                                       ; preds = %for.end.20
  %dec = add nsw i32 %j.0, -1, !dbg !137
  call void @llvm.dbg.value(metadata i32 %dec, i64 0, metadata !94, metadata !66), !dbg !95
  br label %for.cond.5, !dbg !138

for.end.25:                                       ; preds = %for.cond.5
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0)), !dbg !139
  %sub27 = sub nsw i32 %numproc, 1, !dbg !140
  call void @llvm.dbg.value(metadata i32 %sub27, i64 0, metadata !94, metadata !66), !dbg !95
  br label %for.cond.28, !dbg !142

for.cond.28:                                      ; preds = %for.inc.33, %for.end.25
  %j.1 = phi i32 [ %sub27, %for.end.25 ], [ %dec34, %for.inc.33 ]
  %cmp29 = icmp sge i32 %j.1, 0, !dbg !143
  br i1 %cmp29, label %for.body.31, label %for.end.35, !dbg !145

for.body.31:                                      ; preds = %for.cond.28
  %mul32 = mul nsw i32 %j.1, %div, !dbg !146
  call void @llvm.dbg.value(metadata i32 %mul32, i64 0, metadata !148, metadata !66), !dbg !149
  call void @AddEdges(i32 %mul32, %struct.graph_st* %tmp3, i32 %numproc, i32 %div, i32 %numvert, i32 %j.1), !dbg !150
  br label %for.inc.33, !dbg !151

for.inc.33:                                       ; preds = %for.body.31
  %dec34 = add nsw i32 %j.1, -1, !dbg !152
  call void @llvm.dbg.value(metadata i32 %dec34, i64 0, metadata !94, metadata !66), !dbg !95
  br label %for.cond.28, !dbg !153

for.end.35:                                       ; preds = %for.cond.28
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0)), !dbg !154
  %call37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0)), !dbg !155
  ret %struct.graph_st* %tmp3, !dbg !156
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i32 @printf(i8*, ...) #3

declare %struct.hash* @MakeHash(i32, i32 (i32)*) #3

; Function Attrs: nounwind uwtable
define internal i32 @hashfunc(i32 %key) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %key, i64 0, metadata !157, metadata !66), !dbg !158
  %shr = lshr i32 %key, 3, !dbg !159
  %tmp1 = load i32, i32* @HashRange, align 4, !dbg !160
  %rem = urem i32 %shr, %tmp1, !dbg !161
  ret i32 %rem, !dbg !162
}

; Function Attrs: nounwind uwtable
define internal void @AddEdges(i32 %count1, %struct.graph_st* %retval, i32 %numproc, i32 %perproc, i32 %numvert, i32 %j) #0 {
entry:
  %0 = ptrtoint %struct.graph_st* %retval to i64
  %retval39 = ptrtoint %struct.graph_st* %retval to i64
  %helper = alloca [1 x %struct.vert_st*], align 8
  %1 = ptrtoint [1 x %struct.vert_st*]* %helper to i64
  %helper38 = ptrtoint [1 x %struct.vert_st*]* %helper to i64
  call void @llvm.dbg.value(metadata i32 %count1, i64 0, metadata !163, metadata !66), !dbg !164
  call void @llvm.dbg.value(metadata %struct.graph_st* %retval, i64 0, metadata !165, metadata !66), !dbg !166
  call void @llvm.dbg.value(metadata i32 %numproc, i64 0, metadata !167, metadata !66), !dbg !168
  call void @llvm.dbg.value(metadata i32 %perproc, i64 0, metadata !169, metadata !66), !dbg !170
  call void @llvm.dbg.value(metadata i32 %numvert, i64 0, metadata !171, metadata !66), !dbg !172
  call void @llvm.dbg.value(metadata i32 %j, i64 0, metadata !173, metadata !66), !dbg !174
  call void @llvm.dbg.declare(metadata [1 x %struct.vert_st*]* %helper, metadata !175, metadata !66), !dbg !176
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !177, metadata !66), !dbg !178
  %2 = add i64 %helper38, 24, !dbg !179
  %3 = add i64 %helper38, 24, !dbg !179
  %4 = add i64 %retval39, 8, !dbg !179
  %5 = add i64 %retval39, 8, !dbg !179
  %6 = add i64 %1, 24, !dbg !179
  %7 = add i64 %1, 24, !dbg !179
  %8 = add i64 %0, 8, !dbg !179
  %9 = add i64 %0, 8, !dbg !179
  br label %for.cond, !dbg !181

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %numproc, !dbg !182
  %10 = icmp sgt i32 %numproc, 0, !dbg !179
  %smax = select i1 %10, i32 %numproc, i32 0, !dbg !179
  %11 = mul i32 1, %smax, !dbg !179
  %12 = add i32 0, %11, !dbg !179
  %13 = ptrtoint [1 x %struct.vert_st*]* undef to i64, !dbg !179
  %14 = sub i64 %2, %1, !dbg !179
  %15 = ptrtoint %struct.graph_st* undef to i64, !dbg !179
  %16 = sub i64 %4, %0, !dbg !179
  %17 = icmp sgt i32 %numproc, 0, !dbg !179
  %smax40 = select i1 %17, i32 %numproc, i32 0, !dbg !179
  %18 = mul i32 1, %smax40, !dbg !179
  %19 = add i32 0, %18, !dbg !179
  %20 = ptrtoint [1 x %struct.vert_st*]* %helper to i64, !dbg !179
  %21 = sub i64 %6, %20, !dbg !179
  %22 = ptrtoint %struct.graph_st* %retval to i64, !dbg !179
  %23 = sub i64 %8, %22, !dbg !179
  br i1 %cmp, label %for.body, label %for.end, !dbg !179

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !184
  %vlist = getelementptr inbounds %struct.graph_st, %struct.graph_st* %retval, i32 0, i32 0, !dbg !186
  %arrayidx = getelementptr inbounds [1 x %struct.vert_st*], [1 x %struct.vert_st*]* %vlist, i32 0, i64 %idxprom, !dbg !184
  %tmp5 = load %struct.vert_st*, %struct.vert_st** %arrayidx, align 8, !dbg !184
  %idxprom3 = sext i32 %i.0 to i64, !dbg !187
  %arrayidx4 = getelementptr inbounds [1 x %struct.vert_st*], [1 x %struct.vert_st*]* %helper, i32 0, i64 %idxprom3, !dbg !187
  store %struct.vert_st* %tmp5, %struct.vert_st** %arrayidx4, align 8, !dbg !188
  br label %for.inc, !dbg !189

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !190
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !177, metadata !66), !dbg !178
  br label %for.cond, !dbg !191

for.end:                                          ; preds = %for.cond
  %idxprom5 = sext i32 %j to i64, !dbg !192
  %vlist6 = getelementptr inbounds %struct.graph_st, %struct.graph_st* %retval, i32 0, i32 0, !dbg !194
  %arrayidx7 = getelementptr inbounds [1 x %struct.vert_st*], [1 x %struct.vert_st*]* %vlist6, i32 0, i64 %idxprom5, !dbg !192
  %tmp10 = load %struct.vert_st*, %struct.vert_st** %arrayidx7, align 8, !dbg !192
  call void @llvm.dbg.value(metadata %struct.vert_st* %tmp10, i64 0, metadata !195, metadata !66), !dbg !196
  br label %for.cond.8, !dbg !197

for.cond.8:                                       ; preds = %for.inc.25, %for.end
  %tmp.0 = phi %struct.vert_st* [ %tmp10, %for.end ], [ %tmp37, %for.inc.25 ]
  %count1.addr.0 = phi i32 [ %count1, %for.end ], [ %inc24, %for.inc.25 ]
  %tobool = icmp ne %struct.vert_st* %tmp.0, null, !dbg !198
  br i1 %tobool, label %for.body.9, label %for.end.26, !dbg !198

for.body.9:                                       ; preds = %for.cond.8
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !177, metadata !66), !dbg !178
  br label %for.cond.10, !dbg !199

for.cond.10:                                      ; preds = %for.inc.21, %for.body.9
  %i.1 = phi i32 [ 0, %for.body.9 ], [ %inc22, %for.inc.21 ]
  %mul = mul nsw i32 %numproc, %perproc, !dbg !203
  %cmp11 = icmp slt i32 %i.1, %mul, !dbg !205
  br i1 %cmp11, label %for.body.12, label %for.end.23, !dbg !206

for.body.12:                                      ; preds = %for.cond.10
  %cmp18 = icmp ne i32 %i.1, %count1.addr.0, !dbg !207
  br i1 %cmp18, label %if.then, label %if.end, !dbg !210

if.then:                                          ; preds = %for.body.12
  %call = call i32 @compute_dist(i32 %i.1, i32 %count1.addr.0, i32 %numvert), !dbg !211
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !213, metadata !66), !dbg !214
  %div = sdiv i32 %i.1, %perproc, !dbg !215
  call void @llvm.dbg.value(metadata i32 %div, i64 0, metadata !216, metadata !66), !dbg !217
  %rem = srem i32 %i.1, %perproc, !dbg !218
  call void @llvm.dbg.value(metadata i32 %rem, i64 0, metadata !219, metadata !66), !dbg !220
  %idxprom19 = sext i32 %div to i64, !dbg !221
  %arrayidx20 = getelementptr inbounds [1 x %struct.vert_st*], [1 x %struct.vert_st*]* %helper, i32 0, i64 %idxprom19, !dbg !221
  %tmp25 = load %struct.vert_st*, %struct.vert_st** %arrayidx20, align 8, !dbg !221
  %idx.ext = sext i32 %rem to i64, !dbg !222
  %add.ptr = getelementptr inbounds %struct.vert_st, %struct.vert_st* %tmp25, i64 %idx.ext, !dbg !222
  call void @llvm.dbg.value(metadata %struct.vert_st* %add.ptr, i64 0, metadata !223, metadata !66), !dbg !224
  %edgehash = getelementptr inbounds %struct.vert_st, %struct.vert_st* %tmp.0, i32 0, i32 2, !dbg !225
  %tmp28 = load %struct.hash*, %struct.hash** %edgehash, align 8, !dbg !225
  call void @llvm.dbg.value(metadata %struct.hash* %tmp28, i64 0, metadata !226, metadata !66), !dbg !227
  %conv = sext i32 %call to i64, !dbg !228
  %tmp30 = inttoptr i64 %conv to i8*, !dbg !228
  %tmp32 = ptrtoint %struct.vert_st* %add.ptr to i32, !dbg !229
  call void @HashInsert(i8* %tmp30, i32 %tmp32, %struct.hash* %tmp28), !dbg !230
  br label %if.end, !dbg !231

if.end:                                           ; preds = %if.then, %for.body.12
  br label %for.inc.21, !dbg !232

for.inc.21:                                       ; preds = %if.end
  %inc22 = add nsw i32 %i.1, 1, !dbg !233
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !177, metadata !66), !dbg !178
  br label %for.cond.10, !dbg !234

for.end.23:                                       ; preds = %for.cond.10
  %inc24 = add nsw i32 %count1.addr.0, 1, !dbg !235
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !163, metadata !66), !dbg !164
  br label %for.inc.25, !dbg !236

for.inc.25:                                       ; preds = %for.end.23
  %next = getelementptr inbounds %struct.vert_st, %struct.vert_st* %tmp.0, i32 0, i32 1, !dbg !237
  %tmp37 = load %struct.vert_st*, %struct.vert_st** %next, align 8, !dbg !237
  call void @llvm.dbg.value(metadata %struct.vert_st* %tmp37, i64 0, metadata !195, metadata !66), !dbg !196
  br label %for.cond.8, !dbg !238

for.end.26:                                       ; preds = %for.cond.8
  ret void, !dbg !239
}

; Function Attrs: nounwind uwtable
define internal i32 @compute_dist(i32 %i, i32 %j, i32 %numvert) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !240, metadata !66), !dbg !241
  call void @llvm.dbg.value(metadata i32 %j, i64 0, metadata !242, metadata !66), !dbg !243
  call void @llvm.dbg.value(metadata i32 %numvert, i64 0, metadata !244, metadata !66), !dbg !245
  %cmp = icmp slt i32 %i, %j, !dbg !246
  br i1 %cmp, label %if.then, label %if.else, !dbg !248

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !249, metadata !66), !dbg !250
  call void @llvm.dbg.value(metadata i32 %j, i64 0, metadata !251, metadata !66), !dbg !252
  br label %if.end, !dbg !253

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %j, i64 0, metadata !249, metadata !66), !dbg !250
  call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !251, metadata !66), !dbg !252
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %less.0 = phi i32 [ %i, %if.then ], [ %j, %if.else ]
  %gt.0 = phi i32 [ %j, %if.then ], [ %i, %if.else ]
  %mul = mul nsw i32 %less.0, %numvert, !dbg !255
  %add = add nsw i32 %mul, %gt.0, !dbg !256
  %call = call i32 @random2(i32 %add), !dbg !257
  %rem = srem i32 %call, 2048, !dbg !258
  %add1 = add nsw i32 %rem, 1, !dbg !259
  ret i32 %add1, !dbg !260
}

declare void @HashInsert(i8*, i32, %struct.hash*) #3

; Function Attrs: nounwind uwtable
define internal i32 @random2(i32 %seed) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %seed, i64 0, metadata !261, metadata !66), !dbg !262
  %call = call i32 @mult(i32 %seed, i32 31415821), !dbg !263
  %add = add nsw i32 %call, 1, !dbg !264
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !265, metadata !66), !dbg !266
  ret i32 %add, !dbg !267
}

; Function Attrs: nounwind uwtable
define internal i32 @mult(i32 %p, i32 %q) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %p, i64 0, metadata !268, metadata !66), !dbg !269
  call void @llvm.dbg.value(metadata i32 %q, i64 0, metadata !270, metadata !66), !dbg !271
  %div = sdiv i32 %p, 10000, !dbg !272
  call void @llvm.dbg.value(metadata i32 %div, i64 0, metadata !273, metadata !66), !dbg !274
  %rem = srem i32 %p, 10000, !dbg !275
  call void @llvm.dbg.value(metadata i32 %rem, i64 0, metadata !276, metadata !66), !dbg !277
  %div1 = sdiv i32 %q, 10000, !dbg !278
  call void @llvm.dbg.value(metadata i32 %div1, i64 0, metadata !279, metadata !66), !dbg !280
  %rem2 = srem i32 %q, 10000, !dbg !281
  call void @llvm.dbg.value(metadata i32 %rem2, i64 0, metadata !282, metadata !66), !dbg !283
  %mul = mul nsw i32 %rem, %div1, !dbg !284
  %mul3 = mul nsw i32 %div, %rem2, !dbg !285
  %add = add nsw i32 %mul, %mul3, !dbg !286
  %rem4 = srem i32 %add, 10000, !dbg !287
  %mul5 = mul nsw i32 %rem4, 10000, !dbg !288
  %mul6 = mul nsw i32 %rem, %rem2, !dbg !289
  %add7 = add nsw i32 %mul5, %mul6, !dbg !290
  ret i32 %add7, !dbg !291
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!62, !63}
!llvm.ident = !{!64}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !42, globals: !60)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Olden/mst")
!2 = !{}
!3 = !{!4, !11, !33, !31}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "Graph", file: !5, line: 18, baseType: !6)
!5 = !DIFile(filename: "./mst.h", directory: "/home/gleison/tf/Benchmarks/Olden/mst")
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!7 = !DICompositeType(tag: DW_TAG_structure_type, name: "graph_st", file: !5, line: 16, size: 64, align: 64, elements: !8)
!8 = !{!9}
!9 = !DIDerivedType(tag: DW_TAG_member, name: "vlist", scope: !7, file: !5, line: 17, baseType: !10, size: 64, align: 64)
!10 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 64, align: 64, elements: !40)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "Vertex", file: !5, line: 14, baseType: !12)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DICompositeType(tag: DW_TAG_structure_type, name: "vert_st", file: !5, line: 10, size: 192, align: 64, elements: !14)
!14 = !{!15, !17, !18}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !13, file: !5, line: 11, baseType: !16, size: 32, align: 32)
!16 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13, file: !5, line: 12, baseType: !12, size: 64, align: 64, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "edgehash", scope: !13, file: !5, line: 13, baseType: !19, size: 64, align: 64, offset: 128)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash", file: !20, line: 15, baseType: !21)
!20 = !DIFile(filename: "./hash.h", directory: "/home/gleison/tf/Benchmarks/Olden/mst")
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!22 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash", file: !20, line: 11, size: 192, align: 64, elements: !23)
!23 = !{!24, !35, !39}
!24 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !22, file: !20, line: 12, baseType: !25, size: 64, align: 64)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64, align: 64)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "HashEntry", file: !20, line: 9, baseType: !27)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !20, line: 5, size: 192, align: 64, elements: !29)
!29 = !{!30, !32, !34}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !28, file: !20, line: 6, baseType: !31, size: 32, align: 32)
!31 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !28, file: !20, line: 7, baseType: !33, size: 64, align: 64, offset: 64)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !28, file: !20, line: 8, baseType: !27, size: 64, align: 64, offset: 128)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "mapfunc", scope: !22, file: !20, line: 13, baseType: !36, size: 64, align: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64, align: 64)
!37 = !DISubroutineType(types: !38)
!38 = !{!16, !31}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !22, file: !20, line: 14, baseType: !16, size: 32, align: 32, offset: 128)
!40 = !{!41}
!41 = !DISubrange(count: 1)
!42 = !{!43, !47, !48, !51, !54, !57}
!43 = !DISubprogram(name: "MakeGraph", scope: !44, file: !44, line: 75, type: !45, isLocal: false, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: false, function: %struct.graph_st* (i32, i32)* @MakeGraph, variables: !2)
!44 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Olden/mst/tmp.c", directory: "/home/gleison/tf/Benchmarks/Olden/mst")
!45 = !DISubroutineType(types: !46)
!46 = !{!4, !16, !16}
!47 = !DISubprogram(name: "hashfunc", scope: !44, file: !44, line: 41, type: !37, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32)* @hashfunc, variables: !2)
!48 = !DISubprogram(name: "AddEdges", scope: !44, file: !44, line: 45, type: !49, isLocal: true, isDefinition: true, scopeLine: 46, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, %struct.graph_st*, i32, i32, i32, i32)* @AddEdges, variables: !2)
!49 = !DISubroutineType(types: !50)
!50 = !{null, !16, !4, !16, !16, !16, !16}
!51 = !DISubprogram(name: "compute_dist", scope: !44, file: !44, line: 29, type: !52, isLocal: true, isDefinition: true, scopeLine: 29, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32, i32)* @compute_dist, variables: !2)
!52 = !DISubroutineType(types: !53)
!53 = !{!16, !16, !16, !16}
!54 = !DISubprogram(name: "random2", scope: !44, file: !44, line: 23, type: !55, isLocal: true, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32)* @random2, variables: !2)
!55 = !DISubroutineType(types: !56)
!56 = !{!16, !16}
!57 = !DISubprogram(name: "mult", scope: !44, file: !44, line: 13, type: !58, isLocal: true, isDefinition: true, scopeLine: 13, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @mult, variables: !2)
!58 = !DISubroutineType(types: !59)
!59 = !{!16, !16, !16}
!60 = !{!61}
!61 = !DIGlobalVariable(name: "HashRange", scope: !0, file: !44, line: 11, type: !16, isLocal: true, isDefinition: true, variable: i32* @HashRange)
!62 = !{i32 2, !"Dwarf Version", i32 4}
!63 = !{i32 2, !"Debug Info Version", i32 3}
!64 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!65 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numvert", arg: 1, scope: !43, file: !44, line: 75, type: !16)
!66 = !DIExpression()
!67 = !DILocation(line: 75, column: 21, scope: !43)
!68 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numproc", arg: 2, scope: !43, file: !44, line: 75, type: !16)
!69 = !DILocation(line: 75, column: 34, scope: !43)
!70 = !DILocation(line: 76, column: 25, scope: !43)
!71 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "perproc", scope: !43, file: !44, line: 76, type: !16)
!72 = !DILocation(line: 76, column: 7, scope: !43)
!73 = !DILocation(line: 82, column: 19, scope: !43)
!74 = !DILocation(line: 82, column: 12, scope: !43)
!75 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !43, file: !44, line: 81, type: !4)
!76 = !DILocation(line: 81, column: 9, scope: !43)
!77 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !43, file: !44, line: 77, type: !16)
!78 = !DILocation(line: 77, column: 7, scope: !43)
!79 = !DILocation(line: 83, column: 3, scope: !80)
!80 = distinct !DILexicalBlock(scope: !43, file: !44, line: 83, column: 3)
!81 = !DILocation(line: 83, column: 8, scope: !80)
!82 = !DILocation(line: 83, column: 17, scope: !83)
!83 = distinct !DILexicalBlock(scope: !80, file: !44, line: 83, column: 3)
!84 = !DILocation(line: 84, column: 5, scope: !85)
!85 = distinct !DILexicalBlock(scope: !83, file: !44, line: 83, column: 33)
!86 = !DILocation(line: 84, column: 13, scope: !85)
!87 = !DILocation(line: 84, column: 22, scope: !85)
!88 = !DILocation(line: 85, column: 3, scope: !85)
!89 = !DILocation(line: 83, column: 29, scope: !83)
!90 = !DILocation(line: 83, column: 3, scope: !83)
!91 = !DILocation(line: 86, column: 3, scope: !43)
!92 = !DILocation(line: 87, column: 20, scope: !93)
!93 = distinct !DILexicalBlock(scope: !43, file: !44, line: 87, column: 3)
!94 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !43, file: !44, line: 77, type: !16)
!95 = !DILocation(line: 77, column: 10, scope: !43)
!96 = !DILocation(line: 87, column: 8, scope: !93)
!97 = !DILocation(line: 87, column: 27, scope: !98)
!98 = distinct !DILexicalBlock(scope: !93, file: !44, line: 87, column: 3)
!99 = !DILocation(line: 87, column: 3, scope: !93)
!100 = !DILocation(line: 88, column: 28, scope: !101)
!101 = distinct !DILexicalBlock(scope: !98, file: !44, line: 87, column: 38)
!102 = !DILocation(line: 88, column: 36, scope: !101)
!103 = !DILocation(line: 88, column: 21, scope: !101)
!104 = !DILocation(line: 88, column: 13, scope: !101)
!105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "block", scope: !43, file: !44, line: 80, type: !11)
!106 = !DILocation(line: 80, column: 10, scope: !43)
!107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !43, file: !44, line: 79, type: !11)
!108 = !DILocation(line: 79, column: 10, scope: !43)
!109 = !DILocation(line: 90, column: 10, scope: !110)
!110 = distinct !DILexicalBlock(scope: !101, file: !44, line: 90, column: 5)
!111 = !DILocation(line: 90, column: 19, scope: !112)
!112 = distinct !DILexicalBlock(scope: !110, file: !44, line: 90, column: 5)
!113 = !DILocation(line: 90, column: 5, scope: !110)
!114 = !DILocation(line: 91, column: 30, scope: !115)
!115 = distinct !DILexicalBlock(scope: !112, file: !44, line: 90, column: 35)
!116 = !DILocation(line: 91, column: 34, scope: !115)
!117 = !DILocation(line: 91, column: 19, scope: !115)
!118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !43, file: !44, line: 79, type: !11)
!119 = !DILocation(line: 79, column: 13, scope: !43)
!120 = !DILocation(line: 92, column: 27, scope: !115)
!121 = !DILocation(line: 92, column: 17, scope: !115)
!122 = !DILocation(line: 93, column: 12, scope: !115)
!123 = !DILocation(line: 93, column: 20, scope: !115)
!124 = !DILocation(line: 94, column: 40, scope: !115)
!125 = !DILocation(line: 94, column: 23, scope: !115)
!126 = !DILocation(line: 94, column: 12, scope: !115)
!127 = !DILocation(line: 94, column: 21, scope: !115)
!128 = !DILocation(line: 95, column: 12, scope: !115)
!129 = !DILocation(line: 95, column: 17, scope: !115)
!130 = !DILocation(line: 97, column: 5, scope: !115)
!131 = !DILocation(line: 90, column: 31, scope: !112)
!132 = !DILocation(line: 90, column: 5, scope: !112)
!133 = !DILocation(line: 98, column: 5, scope: !101)
!134 = !DILocation(line: 98, column: 13, scope: !101)
!135 = !DILocation(line: 98, column: 22, scope: !101)
!136 = !DILocation(line: 99, column: 3, scope: !101)
!137 = !DILocation(line: 87, column: 34, scope: !98)
!138 = !DILocation(line: 87, column: 3, scope: !98)
!139 = !DILocation(line: 101, column: 3, scope: !43)
!140 = !DILocation(line: 102, column: 20, scope: !141)
!141 = distinct !DILexicalBlock(scope: !43, file: !44, line: 102, column: 3)
!142 = !DILocation(line: 102, column: 8, scope: !141)
!143 = !DILocation(line: 102, column: 27, scope: !144)
!144 = distinct !DILexicalBlock(scope: !141, file: !44, line: 102, column: 3)
!145 = !DILocation(line: 102, column: 3, scope: !141)
!146 = !DILocation(line: 103, column: 16, scope: !147)
!147 = distinct !DILexicalBlock(scope: !144, file: !44, line: 102, column: 38)
!148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count1", scope: !43, file: !44, line: 78, type: !16)
!149 = !DILocation(line: 78, column: 7, scope: !43)
!150 = !DILocation(line: 104, column: 5, scope: !147)
!151 = !DILocation(line: 105, column: 3, scope: !147)
!152 = !DILocation(line: 102, column: 34, scope: !144)
!153 = !DILocation(line: 102, column: 3, scope: !144)
!154 = !DILocation(line: 106, column: 3, scope: !43)
!155 = !DILocation(line: 108, column: 3, scope: !43)
!156 = !DILocation(line: 109, column: 3, scope: !43)
!157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !47, file: !44, line: 41, type: !31)
!158 = !DILocation(line: 41, column: 34, scope: !47)
!159 = !DILocation(line: 42, column: 16, scope: !47)
!160 = !DILocation(line: 42, column: 24, scope: !47)
!161 = !DILocation(line: 42, column: 22, scope: !47)
!162 = !DILocation(line: 42, column: 3, scope: !47)
!163 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "count1", arg: 1, scope: !48, file: !44, line: 45, type: !16)
!164 = !DILocation(line: 45, column: 26, scope: !48)
!165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "retval", arg: 2, scope: !48, file: !44, line: 45, type: !4)
!166 = !DILocation(line: 45, column: 40, scope: !48)
!167 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numproc", arg: 3, scope: !48, file: !44, line: 45, type: !16)
!168 = !DILocation(line: 45, column: 52, scope: !48)
!169 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "perproc", arg: 4, scope: !48, file: !44, line: 46, type: !16)
!170 = !DILocation(line: 46, column: 26, scope: !48)
!171 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numvert", arg: 5, scope: !48, file: !44, line: 46, type: !16)
!172 = !DILocation(line: 46, column: 39, scope: !48)
!173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "j", arg: 6, scope: !48, file: !44, line: 46, type: !16)
!174 = !DILocation(line: 46, column: 52, scope: !48)
!175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "helper", scope: !48, file: !44, line: 48, type: !10)
!176 = !DILocation(line: 48, column: 10, scope: !48)
!177 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !48, file: !44, line: 49, type: !16)
!178 = !DILocation(line: 49, column: 7, scope: !48)
!179 = !DILocation(line: 51, column: 3, scope: !180)
!180 = distinct !DILexicalBlock(scope: !48, file: !44, line: 51, column: 3)
!181 = !DILocation(line: 51, column: 8, scope: !180)
!182 = !DILocation(line: 51, column: 17, scope: !183)
!183 = distinct !DILexicalBlock(scope: !180, file: !44, line: 51, column: 3)
!184 = !DILocation(line: 52, column: 17, scope: !185)
!185 = distinct !DILexicalBlock(scope: !183, file: !44, line: 51, column: 33)
!186 = !DILocation(line: 52, column: 25, scope: !185)
!187 = !DILocation(line: 52, column: 5, scope: !185)
!188 = !DILocation(line: 52, column: 15, scope: !185)
!189 = !DILocation(line: 53, column: 3, scope: !185)
!190 = !DILocation(line: 51, column: 29, scope: !183)
!191 = !DILocation(line: 51, column: 3, scope: !183)
!192 = !DILocation(line: 55, column: 14, scope: !193)
!193 = distinct !DILexicalBlock(scope: !48, file: !44, line: 55, column: 3)
!194 = !DILocation(line: 55, column: 22, scope: !193)
!195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !48, file: !44, line: 47, type: !11)
!196 = !DILocation(line: 47, column: 10, scope: !48)
!197 = !DILocation(line: 55, column: 8, scope: !193)
!198 = !DILocation(line: 55, column: 3, scope: !193)
!199 = !DILocation(line: 56, column: 10, scope: !200)
!200 = distinct !DILexicalBlock(scope: !201, file: !44, line: 56, column: 5)
!201 = distinct !DILexicalBlock(scope: !202, file: !44, line: 55, column: 54)
!202 = distinct !DILexicalBlock(scope: !193, file: !44, line: 55, column: 3)
!203 = !DILocation(line: 56, column: 29, scope: !204)
!204 = distinct !DILexicalBlock(scope: !200, file: !44, line: 56, column: 5)
!205 = !DILocation(line: 56, column: 19, scope: !204)
!206 = !DILocation(line: 56, column: 5, scope: !200)
!207 = !DILocation(line: 61, column: 13, scope: !208)
!208 = distinct !DILexicalBlock(scope: !209, file: !44, line: 61, column: 11)
!209 = distinct !DILexicalBlock(scope: !204, file: !44, line: 56, column: 45)
!210 = !DILocation(line: 61, column: 11, scope: !209)
!211 = !DILocation(line: 62, column: 16, scope: !212)
!212 = distinct !DILexicalBlock(scope: !208, file: !44, line: 61, column: 24)
!213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dist", scope: !209, file: !44, line: 57, type: !16)
!214 = !DILocation(line: 57, column: 23, scope: !209)
!215 = !DILocation(line: 63, column: 16, scope: !212)
!216 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pn", scope: !209, file: !44, line: 57, type: !16)
!217 = !DILocation(line: 57, column: 11, scope: !209)
!218 = !DILocation(line: 64, column: 20, scope: !212)
!219 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "offset", scope: !209, file: !44, line: 57, type: !16)
!220 = !DILocation(line: 57, column: 15, scope: !209)
!221 = !DILocation(line: 65, column: 18, scope: !212)
!222 = !DILocation(line: 65, column: 30, scope: !212)
!223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dest", scope: !209, file: !44, line: 58, type: !11)
!224 = !DILocation(line: 58, column: 14, scope: !209)
!225 = !DILocation(line: 66, column: 21, scope: !212)
!226 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hash", scope: !209, file: !44, line: 59, type: !19)
!227 = !DILocation(line: 59, column: 12, scope: !209)
!228 = !DILocation(line: 67, column: 20, scope: !212)
!229 = !DILocation(line: 67, column: 34, scope: !212)
!230 = !DILocation(line: 67, column: 9, scope: !212)
!231 = !DILocation(line: 69, column: 7, scope: !212)
!232 = !DILocation(line: 70, column: 5, scope: !209)
!233 = !DILocation(line: 56, column: 41, scope: !204)
!234 = !DILocation(line: 56, column: 5, scope: !204)
!235 = !DILocation(line: 71, column: 11, scope: !201)
!236 = !DILocation(line: 72, column: 3, scope: !201)
!237 = !DILocation(line: 55, column: 48, scope: !202)
!238 = !DILocation(line: 55, column: 3, scope: !202)
!239 = !DILocation(line: 73, column: 1, scope: !48)
!240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 1, scope: !51, file: !44, line: 29, type: !16)
!241 = !DILocation(line: 29, column: 29, scope: !51)
!242 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "j", arg: 2, scope: !51, file: !44, line: 29, type: !16)
!243 = !DILocation(line: 29, column: 36, scope: !51)
!244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numvert", arg: 3, scope: !51, file: !44, line: 29, type: !16)
!245 = !DILocation(line: 29, column: 43, scope: !51)
!246 = !DILocation(line: 31, column: 9, scope: !247)
!247 = distinct !DILexicalBlock(scope: !51, file: !44, line: 31, column: 7)
!248 = !DILocation(line: 31, column: 7, scope: !51)
!249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "less", scope: !51, file: !44, line: 30, type: !16)
!250 = !DILocation(line: 30, column: 7, scope: !51)
!251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gt", scope: !51, file: !44, line: 30, type: !16)
!252 = !DILocation(line: 30, column: 13, scope: !51)
!253 = !DILocation(line: 34, column: 3, scope: !254)
!254 = distinct !DILexicalBlock(scope: !247, file: !44, line: 31, column: 14)
!255 = !DILocation(line: 38, column: 24, scope: !51)
!256 = !DILocation(line: 38, column: 34, scope: !51)
!257 = !DILocation(line: 38, column: 11, scope: !51)
!258 = !DILocation(line: 38, column: 40, scope: !51)
!259 = !DILocation(line: 38, column: 49, scope: !51)
!260 = !DILocation(line: 38, column: 3, scope: !51)
!261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seed", arg: 1, scope: !54, file: !44, line: 23, type: !16)
!262 = !DILocation(line: 23, column: 24, scope: !54)
!263 = !DILocation(line: 25, column: 10, scope: !54)
!264 = !DILocation(line: 25, column: 30, scope: !54)
!265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !54, file: !44, line: 24, type: !16)
!266 = !DILocation(line: 24, column: 7, scope: !54)
!267 = !DILocation(line: 26, column: 3, scope: !54)
!268 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 1, scope: !57, file: !44, line: 13, type: !16)
!269 = !DILocation(line: 13, column: 21, scope: !57)
!270 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !57, file: !44, line: 13, type: !16)
!271 = !DILocation(line: 13, column: 28, scope: !57)
!272 = !DILocation(line: 16, column: 10, scope: !57)
!273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p1", scope: !57, file: !44, line: 14, type: !16)
!274 = !DILocation(line: 14, column: 7, scope: !57)
!275 = !DILocation(line: 17, column: 10, scope: !57)
!276 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p0", scope: !57, file: !44, line: 14, type: !16)
!277 = !DILocation(line: 14, column: 11, scope: !57)
!278 = !DILocation(line: 18, column: 10, scope: !57)
!279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q1", scope: !57, file: !44, line: 14, type: !16)
!280 = !DILocation(line: 14, column: 15, scope: !57)
!281 = !DILocation(line: 19, column: 10, scope: !57)
!282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q0", scope: !57, file: !44, line: 14, type: !16)
!283 = !DILocation(line: 14, column: 19, scope: !57)
!284 = !DILocation(line: 20, column: 16, scope: !57)
!285 = !DILocation(line: 20, column: 26, scope: !57)
!286 = !DILocation(line: 20, column: 21, scope: !57)
!287 = !DILocation(line: 20, column: 32, scope: !57)
!288 = !DILocation(line: 20, column: 44, scope: !57)
!289 = !DILocation(line: 20, column: 60, scope: !57)
!290 = !DILocation(line: 20, column: 55, scope: !57)
!291 = !DILocation(line: 20, column: 3, scope: !57)
