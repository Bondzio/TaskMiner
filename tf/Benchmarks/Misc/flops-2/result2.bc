; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@A0 = global double 1.000000e+00, align 8
@A1 = global double 0xBFC5555555559705, align 8
@A2 = global double 0x3F811111113AE9A3, align 8
@A3 = global double 0x3F2A01A03FB1CA71, align 8
@A4 = global double 0x3EC71DF284AA3566, align 8
@A5 = global double 0x3E5AEB5A8CF8A426, align 8
@A6 = global double 0x3DE68DF75229C1A6, align 8
@B0 = global double 1.000000e+00, align 8
@B1 = global double 0xBFDFFFFFFFFF8156, align 8
@B2 = global double 0x3FA5555555290224, align 8
@B3 = global double 0xBF56C16BFFE76516, align 8
@B4 = global double 0x3EFA019528242DB7, align 8
@B5 = global double 0xBE927BB3D47DDB8E, align 8
@B6 = global double 0x3E2157B275DF182A, align 8
@C0 = global double 1.000000e+00, align 8
@C1 = global double 0x3FEFFFFFFE37B3E2, align 8
@C2 = global double 0x3FDFFFFFCC2BA4B8, align 8
@C3 = global double 0x3FC555587C476915, align 8
@C4 = global double 0x3FA5555B7E795548, align 8
@C5 = global double 0x3F810D9A4AD9120C, align 8
@C6 = global double 0x3F5713187EDB8C05, align 8
@C7 = global double 0x3F26C077C8173F3A, align 8
@C8 = global double 3.931683e-05, align 8
@D1 = global double 0x3FA47AE143138374, align 8
@D2 = global double 9.600000e-04, align 8
@D3 = global double 1.233153e-06, align 8
@E2 = global double 4.800000e-04, align 8
@E3 = global double 4.110510e-07, align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"   FLOPS C Program (Double Precision), V2.0 18 Dec 1992\0A\0A\00", align 1
@TLimit = common global double 0.000000e+00, align 8
@piref = common global double 0.000000e+00, align 8
@one = common global double 0.000000e+00, align 8
@two = common global double 0.000000e+00, align 8
@three = common global double 0.000000e+00, align 8
@four = common global double 0.000000e+00, align 8
@five = common global double 0.000000e+00, align 8
@scale = common global double 0.000000e+00, align 8
@.str.2 = private unnamed_addr constant [48 x i8] c"   Module     Error        RunTime      MFLOPS\0A\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"                            (usec)\0A\00", align 1
@sa = common global double 0.000000e+00, align 8
@sc = common global double 0.000000e+00, align 8
@sb = common global double 0.000000e+00, align 8
@piprg = common global double 0.000000e+00, align 8
@pierr = common global double 0.000000e+00, align 8
@.str.4 = private unnamed_addr constant [36 x i8] c"     2   %13.4lf  %10.4lf  %10.4lf\0A\00", align 1
@nulltime = common global double 0.000000e+00, align 8
@TimeArray = common global [3 x double] zeroinitializer, align 16
@T = common global [36 x double] zeroinitializer, align 16
@sd = common global double 0.000000e+00, align 8

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @llvm.dbg.declare(metadata !2, metadata !67, metadata !68), !dbg !69
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !70
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0)), !dbg !71
  call void @llvm.dbg.value(metadata i64 15625, i64 0, metadata !72, metadata !68), !dbg !73
  store double 1.000000e+00, double* @TLimit, align 8, !dbg !74
  call void @llvm.dbg.value(metadata i64 512000000, i64 0, metadata !75, metadata !68), !dbg !76
  store double 0x400921FB54442D18, double* @piref, align 8, !dbg !77
  store double 1.000000e+00, double* @one, align 8, !dbg !78
  store double 2.000000e+00, double* @two, align 8, !dbg !79
  store double 3.000000e+00, double* @three, align 8, !dbg !80
  store double 4.000000e+00, double* @four, align 8, !dbg !81
  store double 5.000000e+00, double* @five, align 8, !dbg !82
  %tmp = load double, double* @one, align 8, !dbg !83
  store double %tmp, double* @scale, align 8, !dbg !84
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i32 0, i32 0)), !dbg !85
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i32 0, i32 0)), !dbg !86
  %mul = mul nsw i64 15625, 10000, !dbg !87
  call void @llvm.dbg.value(metadata i64 %mul, i64 0, metadata !88, metadata !68), !dbg !89
  %tmp2 = load double, double* @five, align 8, !dbg !90
  %sub = fsub double -0.000000e+00, %tmp2, !dbg !91
  call void @llvm.dbg.value(metadata double %sub, i64 0, metadata !92, metadata !68), !dbg !93
  %tmp3 = load double, double* @one, align 8, !dbg !94
  %sub4 = fsub double -0.000000e+00, %tmp3, !dbg !95
  store double %sub4, double* @sa, align 8, !dbg !96
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !97, metadata !68), !dbg !98
  br label %for.cond, !dbg !99

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i64 [ 1, %entry ], [ %inc, %for.inc ]
  %s.0 = phi double [ %sub, %entry ], [ %sub5, %for.inc ]
  %cmp = icmp sle i64 %i.0, %mul, !dbg !101
  br i1 %cmp, label %for.body, label %for.end, !dbg !103

for.body:                                         ; preds = %for.cond
  %sub5 = fsub double -0.000000e+00, %s.0, !dbg !104
  call void @llvm.dbg.value(metadata double %sub5, i64 0, metadata !92, metadata !68), !dbg !93
  %tmp7 = load double, double* @sa, align 8, !dbg !106
  %add = fadd double %tmp7, %sub5, !dbg !107
  store double %add, double* @sa, align 8, !dbg !108
  br label %for.inc, !dbg !109

for.inc:                                          ; preds = %for.body
  %inc = add nsw i64 %i.0, 1, !dbg !110
  call void @llvm.dbg.value(metadata i64 %inc, i64 0, metadata !97, metadata !68), !dbg !98
  br label %for.cond, !dbg !111

for.end:                                          ; preds = %for.cond
  %s.0.lcssa = phi double [ %s.0, %for.cond ]
  %conv = sitofp i64 %mul to double, !dbg !112
  store double %conv, double* @sc, align 8, !dbg !113
  %tmp11 = load double, double* @sa, align 8, !dbg !114
  call void @llvm.dbg.value(metadata double %tmp11, i64 0, metadata !115, metadata !68), !dbg !116
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !117, metadata !68), !dbg !118
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !119, metadata !68), !dbg !120
  call void @llvm.dbg.value(metadata double 0.000000e+00, i64 0, metadata !121, metadata !68), !dbg !122
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !97, metadata !68), !dbg !98
  br label %for.cond.6, !dbg !123

for.cond.6:                                       ; preds = %for.inc.18, %for.end
  %i.1 = phi i64 [ 1, %for.end ], [ %inc19, %for.inc.18 ]
  %x.0 = phi double [ 0.000000e+00, %for.end ], [ %add14, %for.inc.18 ]
  %w.0 = phi double [ 0.000000e+00, %for.end ], [ %add17, %for.inc.18 ]
  %v.0 = phi double [ 0.000000e+00, %for.end ], [ %sub16, %for.inc.18 ]
  %u.0 = phi double [ %tmp11, %for.end ], [ %add12, %for.inc.18 ]
  %s.1 = phi double [ %s.0.lcssa, %for.end ], [ %sub10, %for.inc.18 ]
  %cmp7 = icmp sle i64 %i.1, %mul, !dbg !125
  br i1 %cmp7, label %for.body.9, label %for.end.20, !dbg !127

for.body.9:                                       ; preds = %for.cond.6
  %sub10 = fsub double -0.000000e+00, %s.1, !dbg !128
  call void @llvm.dbg.value(metadata double %sub10, i64 0, metadata !92, metadata !68), !dbg !93
  %tmp15 = load double, double* @sa, align 8, !dbg !130
  %add11 = fadd double %tmp15, %sub10, !dbg !131
  store double %add11, double* @sa, align 8, !dbg !132
  %tmp18 = load double, double* @two, align 8, !dbg !133
  %add12 = fadd double %u.0, %tmp18, !dbg !134
  call void @llvm.dbg.value(metadata double %add12, i64 0, metadata !115, metadata !68), !dbg !116
  %sub13 = fsub double %sub10, %add12, !dbg !135
  %add14 = fadd double %x.0, %sub13, !dbg !136
  call void @llvm.dbg.value(metadata double %add14, i64 0, metadata !121, metadata !68), !dbg !122
  %mul15 = fmul double %sub10, %add12, !dbg !137
  %sub16 = fsub double %v.0, %mul15, !dbg !138
  call void @llvm.dbg.value(metadata double %sub16, i64 0, metadata !117, metadata !68), !dbg !118
  %div = fdiv double %sub10, %add12, !dbg !139
  %add17 = fadd double %w.0, %div, !dbg !140
  call void @llvm.dbg.value(metadata double %add17, i64 0, metadata !119, metadata !68), !dbg !120
  br label %for.inc.18, !dbg !141

for.inc.18:                                       ; preds = %for.body.9
  %inc19 = add nsw i64 %i.1, 1, !dbg !142
  call void @llvm.dbg.value(metadata i64 %inc19, i64 0, metadata !97, metadata !68), !dbg !98
  br label %for.cond.6, !dbg !143

for.end.20:                                       ; preds = %for.cond.6
  %v.0.lcssa = phi double [ %v.0, %for.cond.6 ]
  %w.0.lcssa = phi double [ %w.0, %for.cond.6 ]
  %x.0.lcssa = phi double [ %x.0, %for.cond.6 ]
  %tmp29 = load double, double* @sa, align 8, !dbg !144
  %mul21 = fmul double %tmp29, %x.0.lcssa, !dbg !145
  %tmp31 = load double, double* @sc, align 8, !dbg !146
  %div22 = fdiv double %mul21, %tmp31, !dbg !147
  %conv23 = fptosi double %div22 to i64, !dbg !148
  call void @llvm.dbg.value(metadata i64 %conv23, i64 0, metadata !88, metadata !68), !dbg !89
  %tmp32 = load double, double* @four, align 8, !dbg !149
  %mul24 = fmul double %tmp32, %w.0.lcssa, !dbg !150
  %tmp34 = load double, double* @five, align 8, !dbg !151
  %div25 = fdiv double %mul24, %tmp34, !dbg !152
  store double %div25, double* @sa, align 8, !dbg !153
  %tmp35 = load double, double* @sa, align 8, !dbg !154
  %tmp36 = load double, double* @five, align 8, !dbg !155
  %div26 = fdiv double %tmp36, %v.0.lcssa, !dbg !156
  %add27 = fadd double %tmp35, %div26, !dbg !157
  store double %add27, double* @sb, align 8, !dbg !158
  store double 3.125000e+01, double* @sc, align 8, !dbg !159
  %tmp38 = load double, double* @sb, align 8, !dbg !160
  %tmp39 = load double, double* @sc, align 8, !dbg !161
  %mul28 = fmul double %v.0.lcssa, %v.0.lcssa, !dbg !162
  %mul29 = fmul double %mul28, %v.0.lcssa, !dbg !163
  %div30 = fdiv double %tmp39, %mul29, !dbg !164
  %sub31 = fsub double %tmp38, %div30, !dbg !165
  store double %sub31, double* @piprg, align 8, !dbg !166
  %tmp43 = load double, double* @piprg, align 8, !dbg !167
  %tmp44 = load double, double* @piref, align 8, !dbg !168
  %sub32 = fsub double %tmp43, %tmp44, !dbg !169
  store double %sub32, double* @pierr, align 8, !dbg !170
  %tmp45 = load double, double* @pierr, align 8, !dbg !171
  %mul33 = fmul double %tmp45, 1.000000e-30, !dbg !172
  %call34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i32 0, i32 0), double %mul33, double 0.000000e+00, double 0.000000e+00), !dbg !173
  ret i32 0, !dbg !174
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!64, !65}
!llvm.ident = !{!66}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6, globals: !12)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/flops-2")
!2 = !{}
!3 = !{!4, !5}
!4 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!5 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!6 = !{!7}
!7 = !DISubprogram(name: "main", scope: !8, file: !8, line: 173, type: !9, isLocal: false, isDefinition: true, scopeLine: 173, isOptimized: false, function: i32 ()* @main, variables: !2)
!8 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Misc/flops-2/tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/flops-2")
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !46, !47, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!13 = !DIGlobalVariable(name: "A0", scope: !0, file: !8, line: 140, type: !4, isLocal: false, isDefinition: true, variable: double* @A0)
!14 = !DIGlobalVariable(name: "A1", scope: !0, file: !8, line: 141, type: !4, isLocal: false, isDefinition: true, variable: double* @A1)
!15 = !DIGlobalVariable(name: "A2", scope: !0, file: !8, line: 142, type: !4, isLocal: false, isDefinition: true, variable: double* @A2)
!16 = !DIGlobalVariable(name: "A3", scope: !0, file: !8, line: 143, type: !4, isLocal: false, isDefinition: true, variable: double* @A3)
!17 = !DIGlobalVariable(name: "A4", scope: !0, file: !8, line: 144, type: !4, isLocal: false, isDefinition: true, variable: double* @A4)
!18 = !DIGlobalVariable(name: "A5", scope: !0, file: !8, line: 145, type: !4, isLocal: false, isDefinition: true, variable: double* @A5)
!19 = !DIGlobalVariable(name: "A6", scope: !0, file: !8, line: 146, type: !4, isLocal: false, isDefinition: true, variable: double* @A6)
!20 = !DIGlobalVariable(name: "B0", scope: !0, file: !8, line: 148, type: !4, isLocal: false, isDefinition: true, variable: double* @B0)
!21 = !DIGlobalVariable(name: "B1", scope: !0, file: !8, line: 149, type: !4, isLocal: false, isDefinition: true, variable: double* @B1)
!22 = !DIGlobalVariable(name: "B2", scope: !0, file: !8, line: 150, type: !4, isLocal: false, isDefinition: true, variable: double* @B2)
!23 = !DIGlobalVariable(name: "B3", scope: !0, file: !8, line: 151, type: !4, isLocal: false, isDefinition: true, variable: double* @B3)
!24 = !DIGlobalVariable(name: "B4", scope: !0, file: !8, line: 152, type: !4, isLocal: false, isDefinition: true, variable: double* @B4)
!25 = !DIGlobalVariable(name: "B5", scope: !0, file: !8, line: 153, type: !4, isLocal: false, isDefinition: true, variable: double* @B5)
!26 = !DIGlobalVariable(name: "B6", scope: !0, file: !8, line: 154, type: !4, isLocal: false, isDefinition: true, variable: double* @B6)
!27 = !DIGlobalVariable(name: "C0", scope: !0, file: !8, line: 156, type: !4, isLocal: false, isDefinition: true, variable: double* @C0)
!28 = !DIGlobalVariable(name: "C1", scope: !0, file: !8, line: 157, type: !4, isLocal: false, isDefinition: true, variable: double* @C1)
!29 = !DIGlobalVariable(name: "C2", scope: !0, file: !8, line: 158, type: !4, isLocal: false, isDefinition: true, variable: double* @C2)
!30 = !DIGlobalVariable(name: "C3", scope: !0, file: !8, line: 159, type: !4, isLocal: false, isDefinition: true, variable: double* @C3)
!31 = !DIGlobalVariable(name: "C4", scope: !0, file: !8, line: 160, type: !4, isLocal: false, isDefinition: true, variable: double* @C4)
!32 = !DIGlobalVariable(name: "C5", scope: !0, file: !8, line: 161, type: !4, isLocal: false, isDefinition: true, variable: double* @C5)
!33 = !DIGlobalVariable(name: "C6", scope: !0, file: !8, line: 162, type: !4, isLocal: false, isDefinition: true, variable: double* @C6)
!34 = !DIGlobalVariable(name: "C7", scope: !0, file: !8, line: 163, type: !4, isLocal: false, isDefinition: true, variable: double* @C7)
!35 = !DIGlobalVariable(name: "C8", scope: !0, file: !8, line: 164, type: !4, isLocal: false, isDefinition: true, variable: double* @C8)
!36 = !DIGlobalVariable(name: "D1", scope: !0, file: !8, line: 166, type: !4, isLocal: false, isDefinition: true, variable: double* @D1)
!37 = !DIGlobalVariable(name: "D2", scope: !0, file: !8, line: 167, type: !4, isLocal: false, isDefinition: true, variable: double* @D2)
!38 = !DIGlobalVariable(name: "D3", scope: !0, file: !8, line: 168, type: !4, isLocal: false, isDefinition: true, variable: double* @D3)
!39 = !DIGlobalVariable(name: "E2", scope: !0, file: !8, line: 170, type: !4, isLocal: false, isDefinition: true, variable: double* @E2)
!40 = !DIGlobalVariable(name: "E3", scope: !0, file: !8, line: 171, type: !4, isLocal: false, isDefinition: true, variable: double* @E3)
!41 = !DIGlobalVariable(name: "nulltime", scope: !0, file: !8, line: 129, type: !4, isLocal: false, isDefinition: true, variable: double* @nulltime)
!42 = !DIGlobalVariable(name: "TimeArray", scope: !0, file: !8, line: 129, type: !43, isLocal: false, isDefinition: true, variable: [3 x double]* @TimeArray)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, align: 64, elements: !44)
!44 = !{!45}
!45 = !DISubrange(count: 3)
!46 = !DIGlobalVariable(name: "TLimit", scope: !0, file: !8, line: 130, type: !4, isLocal: false, isDefinition: true, variable: double* @TLimit)
!47 = !DIGlobalVariable(name: "T", scope: !0, file: !8, line: 133, type: !48, isLocal: false, isDefinition: true, variable: [36 x double]* @T)
!48 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 2304, align: 64, elements: !49)
!49 = !{!50}
!50 = !DISubrange(count: 36)
!51 = !DIGlobalVariable(name: "sa", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @sa)
!52 = !DIGlobalVariable(name: "sb", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @sb)
!53 = !DIGlobalVariable(name: "sc", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @sc)
!54 = !DIGlobalVariable(name: "sd", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @sd)
!55 = !DIGlobalVariable(name: "one", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @one)
!56 = !DIGlobalVariable(name: "two", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @two)
!57 = !DIGlobalVariable(name: "three", scope: !0, file: !8, line: 136, type: !4, isLocal: false, isDefinition: true, variable: double* @three)
!58 = !DIGlobalVariable(name: "four", scope: !0, file: !8, line: 137, type: !4, isLocal: false, isDefinition: true, variable: double* @four)
!59 = !DIGlobalVariable(name: "five", scope: !0, file: !8, line: 137, type: !4, isLocal: false, isDefinition: true, variable: double* @five)
!60 = !DIGlobalVariable(name: "piref", scope: !0, file: !8, line: 137, type: !4, isLocal: false, isDefinition: true, variable: double* @piref)
!61 = !DIGlobalVariable(name: "piprg", scope: !0, file: !8, line: 137, type: !4, isLocal: false, isDefinition: true, variable: double* @piprg)
!62 = !DIGlobalVariable(name: "scale", scope: !0, file: !8, line: 138, type: !4, isLocal: false, isDefinition: true, variable: double* @scale)
!63 = !DIGlobalVariable(name: "pierr", scope: !0, file: !8, line: 138, type: !4, isLocal: false, isDefinition: true, variable: double* @pierr)
!64 = !{i32 2, !"Dwarf Version", i32 4}
!65 = !{i32 2, !"Debug Info Version", i32 3}
!66 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!67 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !7, file: !8, line: 182, type: !5)
!68 = !DIExpression()
!69 = !DILocation(line: 182, column: 23, scope: !7)
!70 = !DILocation(line: 184, column: 3, scope: !7)
!71 = !DILocation(line: 185, column: 3, scope: !7)
!72 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "loops", scope: !7, file: !8, line: 181, type: !5)
!73 = !DILocation(line: 181, column: 8, scope: !7)
!74 = !DILocation(line: 206, column: 10, scope: !7)
!75 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "NLimit", scope: !7, file: !8, line: 181, type: !5)
!76 = !DILocation(line: 181, column: 15, scope: !7)
!77 = !DILocation(line: 209, column: 9, scope: !7)
!78 = !DILocation(line: 210, column: 7, scope: !7)
!79 = !DILocation(line: 211, column: 7, scope: !7)
!80 = !DILocation(line: 212, column: 9, scope: !7)
!81 = !DILocation(line: 213, column: 8, scope: !7)
!82 = !DILocation(line: 214, column: 8, scope: !7)
!83 = !DILocation(line: 215, column: 11, scope: !7)
!84 = !DILocation(line: 215, column: 9, scope: !7)
!85 = !DILocation(line: 217, column: 3, scope: !7)
!86 = !DILocation(line: 218, column: 3, scope: !7)
!87 = !DILocation(line: 231, column: 13, scope: !7)
!88 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !7, file: !8, line: 182, type: !5)
!89 = !DILocation(line: 182, column: 20, scope: !7)
!90 = !DILocation(line: 233, column: 8, scope: !7)
!91 = !DILocation(line: 233, column: 7, scope: !7)
!92 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !7, file: !8, line: 178, type: !4)
!93 = !DILocation(line: 178, column: 10, scope: !7)
!94 = !DILocation(line: 234, column: 9, scope: !7)
!95 = !DILocation(line: 234, column: 8, scope: !7)
!96 = !DILocation(line: 234, column: 6, scope: !7)
!97 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !7, file: !8, line: 182, type: !5)
!98 = !DILocation(line: 182, column: 17, scope: !7)
!99 = !DILocation(line: 236, column: 8, scope: !100)
!100 = distinct !DILexicalBlock(scope: !7, file: !8, line: 236, column: 3)
!101 = !DILocation(line: 236, column: 17, scope: !102)
!102 = distinct !DILexicalBlock(scope: !100, file: !8, line: 236, column: 3)
!103 = !DILocation(line: 236, column: 3, scope: !100)
!104 = !DILocation(line: 237, column: 9, scope: !105)
!105 = distinct !DILexicalBlock(scope: !102, file: !8, line: 236, column: 28)
!106 = !DILocation(line: 238, column: 10, scope: !105)
!107 = !DILocation(line: 238, column: 13, scope: !105)
!108 = !DILocation(line: 238, column: 8, scope: !105)
!109 = !DILocation(line: 239, column: 3, scope: !105)
!110 = !DILocation(line: 236, column: 24, scope: !102)
!111 = !DILocation(line: 236, column: 3, scope: !102)
!112 = !DILocation(line: 241, column: 8, scope: !7)
!113 = !DILocation(line: 241, column: 6, scope: !7)
!114 = !DILocation(line: 243, column: 7, scope: !7)
!115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !7, file: !8, line: 178, type: !4)
!116 = !DILocation(line: 178, column: 13, scope: !7)
!117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "v", scope: !7, file: !8, line: 178, type: !4)
!118 = !DILocation(line: 178, column: 16, scope: !7)
!119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !7, file: !8, line: 178, type: !4)
!120 = !DILocation(line: 178, column: 19, scope: !7)
!121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !7, file: !8, line: 178, type: !4)
!122 = !DILocation(line: 178, column: 22, scope: !7)
!123 = !DILocation(line: 248, column: 8, scope: !124)
!124 = distinct !DILexicalBlock(scope: !7, file: !8, line: 248, column: 3)
!125 = !DILocation(line: 248, column: 17, scope: !126)
!126 = distinct !DILexicalBlock(scope: !124, file: !8, line: 248, column: 3)
!127 = !DILocation(line: 248, column: 3, scope: !124)
!128 = !DILocation(line: 249, column: 9, scope: !129)
!129 = distinct !DILexicalBlock(scope: !126, file: !8, line: 248, column: 28)
!130 = !DILocation(line: 250, column: 10, scope: !129)
!131 = !DILocation(line: 250, column: 13, scope: !129)
!132 = !DILocation(line: 250, column: 8, scope: !129)
!133 = !DILocation(line: 251, column: 13, scope: !129)
!134 = !DILocation(line: 251, column: 11, scope: !129)
!135 = !DILocation(line: 252, column: 16, scope: !129)
!136 = !DILocation(line: 252, column: 11, scope: !129)
!137 = !DILocation(line: 253, column: 15, scope: !129)
!138 = !DILocation(line: 253, column: 11, scope: !129)
!139 = !DILocation(line: 254, column: 15, scope: !129)
!140 = !DILocation(line: 254, column: 11, scope: !129)
!141 = !DILocation(line: 255, column: 3, scope: !129)
!142 = !DILocation(line: 248, column: 24, scope: !126)
!143 = !DILocation(line: 248, column: 3, scope: !126)
!144 = !DILocation(line: 257, column: 14, scope: !7)
!145 = !DILocation(line: 257, column: 17, scope: !7)
!146 = !DILocation(line: 257, column: 23, scope: !7)
!147 = !DILocation(line: 257, column: 21, scope: !7)
!148 = !DILocation(line: 257, column: 7, scope: !7)
!149 = !DILocation(line: 258, column: 8, scope: !7)
!150 = !DILocation(line: 258, column: 13, scope: !7)
!151 = !DILocation(line: 258, column: 19, scope: !7)
!152 = !DILocation(line: 258, column: 17, scope: !7)
!153 = !DILocation(line: 258, column: 6, scope: !7)
!154 = !DILocation(line: 259, column: 8, scope: !7)
!155 = !DILocation(line: 259, column: 13, scope: !7)
!156 = !DILocation(line: 259, column: 18, scope: !7)
!157 = !DILocation(line: 259, column: 11, scope: !7)
!158 = !DILocation(line: 259, column: 6, scope: !7)
!159 = !DILocation(line: 260, column: 6, scope: !7)
!160 = !DILocation(line: 261, column: 11, scope: !7)
!161 = !DILocation(line: 261, column: 16, scope: !7)
!162 = !DILocation(line: 261, column: 24, scope: !7)
!163 = !DILocation(line: 261, column: 28, scope: !7)
!164 = !DILocation(line: 261, column: 19, scope: !7)
!165 = !DILocation(line: 261, column: 14, scope: !7)
!166 = !DILocation(line: 261, column: 9, scope: !7)
!167 = !DILocation(line: 262, column: 11, scope: !7)
!168 = !DILocation(line: 262, column: 19, scope: !7)
!169 = !DILocation(line: 262, column: 17, scope: !7)
!170 = !DILocation(line: 262, column: 9, scope: !7)
!171 = !DILocation(line: 265, column: 10, scope: !7)
!172 = !DILocation(line: 265, column: 16, scope: !7)
!173 = !DILocation(line: 264, column: 3, scope: !7)
!174 = !DILocation(line: 269, column: 3, scope: !7)
