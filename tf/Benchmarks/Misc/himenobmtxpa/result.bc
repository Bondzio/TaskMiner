; ModuleID = '/home/gleison/tf/Benchmarks/Misc/himenobmtxpa/tmp.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Mat = type { float*, i32, i32, i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }

@omega = global float 0x3FE99999A0000000, align 4
@.str = private unnamed_addr constant [34 x i8] c"mimax = %d mjmax = %d mkmax = %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"imax = %d jmax = %d kmax =%d\0A\00", align 1
@p = common global %struct.Mat zeroinitializer, align 8
@bnd = common global %struct.Mat zeroinitializer, align 8
@wrk1 = common global %struct.Mat zeroinitializer, align 8
@wrk2 = common global %struct.Mat zeroinitializer, align 8
@a = common global %struct.Mat zeroinitializer, align 8
@b = common global %struct.Mat zeroinitializer, align 8
@c = common global %struct.Mat zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [29 x i8] c" Loop executed for %d times\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c" Gosa : %e \0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"XS\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"xs\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"M\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"XL\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"xl\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"Invalid input character !!\0A\00", align 1
@second.base_sec = internal global i32 0, align 4
@second.base_usec = internal global i32 0, align 4

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %nn = alloca i32, align 4
  %imax = alloca i32, align 4
  %jmax = alloca i32, align 4
  %kmax = alloca i32, align 4
  %mimax = alloca i32, align 4
  %mjmax = alloca i32, align 4
  %mkmax = alloca i32, align 4
  %msize = alloca [3 x i32], align 4
  %gosa = alloca float, align 4
  %cpu0 = alloca double, align 8
  %cpu1 = alloca double, align 8
  %cpu = alloca double, align 8
  %flop = alloca double, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !66, metadata !67), !dbg !68
  store i8** %argv, i8*** %argv.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !69, metadata !67), !dbg !70
  call void @llvm.dbg.declare(metadata i32* %i, metadata !71, metadata !67), !dbg !72
  call void @llvm.dbg.declare(metadata i32* %j, metadata !73, metadata !67), !dbg !74
  call void @llvm.dbg.declare(metadata i32* %k, metadata !75, metadata !67), !dbg !76
  call void @llvm.dbg.declare(metadata i32* %nn, metadata !77, metadata !67), !dbg !78
  call void @llvm.dbg.declare(metadata i32* %imax, metadata !79, metadata !67), !dbg !80
  call void @llvm.dbg.declare(metadata i32* %jmax, metadata !81, metadata !67), !dbg !82
  call void @llvm.dbg.declare(metadata i32* %kmax, metadata !83, metadata !67), !dbg !84
  call void @llvm.dbg.declare(metadata i32* %mimax, metadata !85, metadata !67), !dbg !86
  call void @llvm.dbg.declare(metadata i32* %mjmax, metadata !87, metadata !67), !dbg !88
  call void @llvm.dbg.declare(metadata i32* %mkmax, metadata !89, metadata !67), !dbg !90
  call void @llvm.dbg.declare(metadata [3 x i32]* %msize, metadata !91, metadata !67), !dbg !95
  call void @llvm.dbg.declare(metadata float* %gosa, metadata !96, metadata !67), !dbg !97
  call void @llvm.dbg.declare(metadata double* %cpu0, metadata !98, metadata !67), !dbg !99
  call void @llvm.dbg.declare(metadata double* %cpu1, metadata !100, metadata !67), !dbg !101
  call void @llvm.dbg.declare(metadata double* %cpu, metadata !102, metadata !67), !dbg !103
  call void @llvm.dbg.declare(metadata double* %flop, metadata !104, metadata !67), !dbg !105
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %msize, i32 0, i64 0, !dbg !106
  store i32 64, i32* %arrayidx, align 4, !dbg !107
  %arrayidx1 = getelementptr inbounds [3 x i32], [3 x i32]* %msize, i32 0, i64 1, !dbg !108
  store i32 64, i32* %arrayidx1, align 4, !dbg !109
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %msize, i32 0, i64 2, !dbg !110
  store i32 128, i32* %arrayidx2, align 4, !dbg !111
  %arrayidx3 = getelementptr inbounds [3 x i32], [3 x i32]* %msize, i32 0, i64 0, !dbg !112
  %0 = load i32, i32* %arrayidx3, align 4, !dbg !112
  store i32 %0, i32* %mimax, align 4, !dbg !113
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %msize, i32 0, i64 1, !dbg !114
  %1 = load i32, i32* %arrayidx4, align 4, !dbg !114
  store i32 %1, i32* %mjmax, align 4, !dbg !115
  %arrayidx5 = getelementptr inbounds [3 x i32], [3 x i32]* %msize, i32 0, i64 2, !dbg !116
  %2 = load i32, i32* %arrayidx5, align 4, !dbg !116
  store i32 %2, i32* %mkmax, align 4, !dbg !117
  %3 = load i32, i32* %mimax, align 4, !dbg !118
  %sub = sub nsw i32 %3, 1, !dbg !119
  store i32 %sub, i32* %imax, align 4, !dbg !120
  %4 = load i32, i32* %mjmax, align 4, !dbg !121
  %sub6 = sub nsw i32 %4, 1, !dbg !122
  store i32 %sub6, i32* %jmax, align 4, !dbg !123
  %5 = load i32, i32* %mkmax, align 4, !dbg !124
  %sub7 = sub nsw i32 %5, 1, !dbg !125
  store i32 %sub7, i32* %kmax, align 4, !dbg !126
  %6 = load i32, i32* %mimax, align 4, !dbg !127
  %7 = load i32, i32* %mjmax, align 4, !dbg !128
  %8 = load i32, i32* %mkmax, align 4, !dbg !129
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i32 0, i32 0), i32 %6, i32 %7, i32 %8), !dbg !130
  %9 = load i32, i32* %imax, align 4, !dbg !131
  %10 = load i32, i32* %jmax, align 4, !dbg !132
  %11 = load i32, i32* %kmax, align 4, !dbg !133
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i32 0, i32 0), i32 %9, i32 %10, i32 %11), !dbg !134
  %12 = load i32, i32* %mimax, align 4, !dbg !135
  %13 = load i32, i32* %mjmax, align 4, !dbg !136
  %14 = load i32, i32* %mkmax, align 4, !dbg !137
  %call9 = call i32 @newMat(%struct.Mat* @p, i32 1, i32 %12, i32 %13, i32 %14), !dbg !138
  %15 = load i32, i32* %mimax, align 4, !dbg !139
  %16 = load i32, i32* %mjmax, align 4, !dbg !140
  %17 = load i32, i32* %mkmax, align 4, !dbg !141
  %call10 = call i32 @newMat(%struct.Mat* @bnd, i32 1, i32 %15, i32 %16, i32 %17), !dbg !142
  %18 = load i32, i32* %mimax, align 4, !dbg !143
  %19 = load i32, i32* %mjmax, align 4, !dbg !144
  %20 = load i32, i32* %mkmax, align 4, !dbg !145
  %call11 = call i32 @newMat(%struct.Mat* @wrk1, i32 1, i32 %18, i32 %19, i32 %20), !dbg !146
  %21 = load i32, i32* %mimax, align 4, !dbg !147
  %22 = load i32, i32* %mjmax, align 4, !dbg !148
  %23 = load i32, i32* %mkmax, align 4, !dbg !149
  %call12 = call i32 @newMat(%struct.Mat* @wrk2, i32 1, i32 %21, i32 %22, i32 %23), !dbg !150
  %24 = load i32, i32* %mimax, align 4, !dbg !151
  %25 = load i32, i32* %mjmax, align 4, !dbg !152
  %26 = load i32, i32* %mkmax, align 4, !dbg !153
  %call13 = call i32 @newMat(%struct.Mat* @a, i32 4, i32 %24, i32 %25, i32 %26), !dbg !154
  %27 = load i32, i32* %mimax, align 4, !dbg !155
  %28 = load i32, i32* %mjmax, align 4, !dbg !156
  %29 = load i32, i32* %mkmax, align 4, !dbg !157
  %call14 = call i32 @newMat(%struct.Mat* @b, i32 3, i32 %27, i32 %28, i32 %29), !dbg !158
  %30 = load i32, i32* %mimax, align 4, !dbg !159
  %31 = load i32, i32* %mjmax, align 4, !dbg !160
  %32 = load i32, i32* %mkmax, align 4, !dbg !161
  %call15 = call i32 @newMat(%struct.Mat* @c, i32 3, i32 %30, i32 %31, i32 %32), !dbg !162
  call void @mat_set_init(%struct.Mat* @p), !dbg !163
  call void @mat_set(%struct.Mat* @bnd, i32 0, float 1.000000e+00), !dbg !164
  call void @mat_set(%struct.Mat* @wrk1, i32 0, float 0.000000e+00), !dbg !165
  call void @mat_set(%struct.Mat* @wrk2, i32 0, float 0.000000e+00), !dbg !166
  call void @mat_set(%struct.Mat* @a, i32 0, float 1.000000e+00), !dbg !167
  call void @mat_set(%struct.Mat* @a, i32 1, float 1.000000e+00), !dbg !168
  call void @mat_set(%struct.Mat* @a, i32 2, float 1.000000e+00), !dbg !169
  call void @mat_set(%struct.Mat* @a, i32 3, float 0x3FC5555560000000), !dbg !170
  call void @mat_set(%struct.Mat* @b, i32 0, float 0.000000e+00), !dbg !171
  call void @mat_set(%struct.Mat* @b, i32 1, float 0.000000e+00), !dbg !172
  call void @mat_set(%struct.Mat* @b, i32 2, float 0.000000e+00), !dbg !173
  call void @mat_set(%struct.Mat* @c, i32 0, float 1.000000e+00), !dbg !174
  call void @mat_set(%struct.Mat* @c, i32 1, float 1.000000e+00), !dbg !175
  call void @mat_set(%struct.Mat* @c, i32 2, float 1.000000e+00), !dbg !176
  store i32 64, i32* %nn, align 4, !dbg !177
  %33 = load i32, i32* %nn, align 4, !dbg !178
  %call16 = call float @jacobi(i32 %33, %struct.Mat* @a, %struct.Mat* @b, %struct.Mat* @c, %struct.Mat* @p, %struct.Mat* @bnd, %struct.Mat* @wrk1, %struct.Mat* @wrk2), !dbg !179
  store float %call16, float* %gosa, align 4, !dbg !180
  %34 = load i32, i32* %nn, align 4, !dbg !181
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i32 0, i32 0), i32 %34), !dbg !182
  %35 = load float, float* %gosa, align 4, !dbg !183
  %conv = fpext float %35 to double, !dbg !183
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i32 0, i32 0), double %conv), !dbg !184
  call void @clearMat(%struct.Mat* @p), !dbg !185
  call void @clearMat(%struct.Mat* @bnd), !dbg !186
  call void @clearMat(%struct.Mat* @wrk1), !dbg !187
  call void @clearMat(%struct.Mat* @wrk2), !dbg !188
  call void @clearMat(%struct.Mat* @a), !dbg !189
  call void @clearMat(%struct.Mat* @b), !dbg !190
  call void @clearMat(%struct.Mat* @c), !dbg !191
  ret i32 0, !dbg !192
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @newMat(%struct.Mat* %Mat, i32 %mnums, i32 %mrows, i32 %mcols, i32 %mdeps) #0 {
entry:
  %Mat.addr = alloca %struct.Mat*, align 8
  %mnums.addr = alloca i32, align 4
  %mrows.addr = alloca i32, align 4
  %mcols.addr = alloca i32, align 4
  %mdeps.addr = alloca i32, align 4
  store %struct.Mat* %Mat, %struct.Mat** %Mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %Mat.addr, metadata !193, metadata !67), !dbg !194
  store i32 %mnums, i32* %mnums.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mnums.addr, metadata !195, metadata !67), !dbg !196
  store i32 %mrows, i32* %mrows.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mrows.addr, metadata !197, metadata !67), !dbg !198
  store i32 %mcols, i32* %mcols.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mcols.addr, metadata !199, metadata !67), !dbg !200
  store i32 %mdeps, i32* %mdeps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mdeps.addr, metadata !201, metadata !67), !dbg !202
  %0 = load i32, i32* %mnums.addr, align 4, !dbg !203
  %1 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !204
  %mnums1 = getelementptr inbounds %struct.Mat, %struct.Mat* %1, i32 0, i32 1, !dbg !205
  store i32 %0, i32* %mnums1, align 4, !dbg !206
  %2 = load i32, i32* %mrows.addr, align 4, !dbg !207
  %3 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !208
  %mrows2 = getelementptr inbounds %struct.Mat, %struct.Mat* %3, i32 0, i32 2, !dbg !209
  store i32 %2, i32* %mrows2, align 4, !dbg !210
  %4 = load i32, i32* %mcols.addr, align 4, !dbg !211
  %5 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !212
  %mcols3 = getelementptr inbounds %struct.Mat, %struct.Mat* %5, i32 0, i32 3, !dbg !213
  store i32 %4, i32* %mcols3, align 4, !dbg !214
  %6 = load i32, i32* %mdeps.addr, align 4, !dbg !215
  %7 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !216
  %mdeps4 = getelementptr inbounds %struct.Mat, %struct.Mat* %7, i32 0, i32 4, !dbg !217
  store i32 %6, i32* %mdeps4, align 4, !dbg !218
  %8 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !219
  %m = getelementptr inbounds %struct.Mat, %struct.Mat* %8, i32 0, i32 0, !dbg !220
  store float* null, float** %m, align 8, !dbg !221
  %9 = load i32, i32* %mnums.addr, align 4, !dbg !222
  %10 = load i32, i32* %mrows.addr, align 4, !dbg !223
  %mul = mul nsw i32 %9, %10, !dbg !224
  %11 = load i32, i32* %mcols.addr, align 4, !dbg !225
  %mul5 = mul nsw i32 %mul, %11, !dbg !226
  %12 = load i32, i32* %mdeps.addr, align 4, !dbg !227
  %mul6 = mul nsw i32 %mul5, %12, !dbg !228
  %conv = sext i32 %mul6 to i64, !dbg !222
  %mul7 = mul i64 %conv, 4, !dbg !229
  %call = call noalias i8* @malloc(i64 %mul7) #6, !dbg !230
  %13 = bitcast i8* %call to float*, !dbg !231
  %14 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !232
  %m8 = getelementptr inbounds %struct.Mat, %struct.Mat* %14, i32 0, i32 0, !dbg !233
  store float* %13, float** %m8, align 8, !dbg !234
  %15 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !235
  %m9 = getelementptr inbounds %struct.Mat, %struct.Mat* %15, i32 0, i32 0, !dbg !236
  %16 = load float*, float** %m9, align 8, !dbg !236
  %cmp = icmp ne float* %16, null, !dbg !237
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !238
  ret i32 %cond, !dbg !239
}

; Function Attrs: nounwind uwtable
define void @mat_set_init(%struct.Mat* %Mat) #0 {
entry:
  %Mat.addr = alloca %struct.Mat*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %tt = alloca float, align 4
  store %struct.Mat* %Mat, %struct.Mat** %Mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %Mat.addr, metadata !240, metadata !67), !dbg !241
  call void @llvm.dbg.declare(metadata i32* %i, metadata !242, metadata !67), !dbg !243
  call void @llvm.dbg.declare(metadata i32* %j, metadata !244, metadata !67), !dbg !245
  call void @llvm.dbg.declare(metadata i32* %k, metadata !246, metadata !67), !dbg !247
  call void @llvm.dbg.declare(metadata i32* %l, metadata !248, metadata !67), !dbg !249
  call void @llvm.dbg.declare(metadata float* %tt, metadata !250, metadata !67), !dbg !251
  store i32 0, i32* %i, align 4, !dbg !252
  br label %for.cond, !dbg !254

for.cond:                                         ; preds = %for.inc.29, %entry
  %0 = load i32, i32* %i, align 4, !dbg !255
  %1 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !259
  %mrows = getelementptr inbounds %struct.Mat, %struct.Mat* %1, i32 0, i32 2, !dbg !260
  %2 = load i32, i32* %mrows, align 4, !dbg !260
  %cmp = icmp slt i32 %0, %2, !dbg !261
  br i1 %cmp, label %for.body, label %for.end.31, !dbg !262

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !263
  br label %for.cond.1, !dbg !265

for.cond.1:                                       ; preds = %for.inc.26, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !266
  %4 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !270
  %mcols = getelementptr inbounds %struct.Mat, %struct.Mat* %4, i32 0, i32 3, !dbg !271
  %5 = load i32, i32* %mcols, align 4, !dbg !271
  %cmp2 = icmp slt i32 %3, %5, !dbg !272
  br i1 %cmp2, label %for.body.3, label %for.end.28, !dbg !273

for.body.3:                                       ; preds = %for.cond.1
  store i32 0, i32* %k, align 4, !dbg !274
  br label %for.cond.4, !dbg !276

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %6 = load i32, i32* %k, align 4, !dbg !277
  %7 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !281
  %mdeps = getelementptr inbounds %struct.Mat, %struct.Mat* %7, i32 0, i32 4, !dbg !282
  %8 = load i32, i32* %mdeps, align 4, !dbg !282
  %cmp5 = icmp slt i32 %6, %8, !dbg !283
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !284

for.body.6:                                       ; preds = %for.cond.4
  %9 = load i32, i32* %i, align 4, !dbg !285
  %10 = load i32, i32* %i, align 4, !dbg !286
  %mul = mul nsw i32 %9, %10, !dbg !287
  %conv = sitofp i32 %mul to float, !dbg !288
  %11 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !289
  %mrows7 = getelementptr inbounds %struct.Mat, %struct.Mat* %11, i32 0, i32 2, !dbg !290
  %12 = load i32, i32* %mrows7, align 4, !dbg !290
  %sub = sub nsw i32 %12, 1, !dbg !291
  %13 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !292
  %mrows8 = getelementptr inbounds %struct.Mat, %struct.Mat* %13, i32 0, i32 2, !dbg !293
  %14 = load i32, i32* %mrows8, align 4, !dbg !293
  %sub9 = sub nsw i32 %14, 1, !dbg !294
  %mul10 = mul nsw i32 %sub, %sub9, !dbg !295
  %conv11 = sitofp i32 %mul10 to float, !dbg !296
  %div = fdiv float %conv, %conv11, !dbg !297
  %15 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %mrows12 = getelementptr inbounds %struct.Mat, %struct.Mat* %15, i32 0, i32 2, !dbg !298
  %16 = load i32, i32* %mrows12, align 4, !dbg !298
  %mul13 = mul nsw i32 0, %16, !dbg !298
  %17 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %mcols14 = getelementptr inbounds %struct.Mat, %struct.Mat* %17, i32 0, i32 3, !dbg !298
  %18 = load i32, i32* %mcols14, align 4, !dbg !298
  %mul15 = mul nsw i32 %mul13, %18, !dbg !298
  %19 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %mdeps16 = getelementptr inbounds %struct.Mat, %struct.Mat* %19, i32 0, i32 4, !dbg !298
  %20 = load i32, i32* %mdeps16, align 4, !dbg !298
  %mul17 = mul nsw i32 %mul15, %20, !dbg !298
  %21 = load i32, i32* %i, align 4, !dbg !298
  %22 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %mcols18 = getelementptr inbounds %struct.Mat, %struct.Mat* %22, i32 0, i32 3, !dbg !298
  %23 = load i32, i32* %mcols18, align 4, !dbg !298
  %mul19 = mul nsw i32 %21, %23, !dbg !298
  %24 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %mdeps20 = getelementptr inbounds %struct.Mat, %struct.Mat* %24, i32 0, i32 4, !dbg !298
  %25 = load i32, i32* %mdeps20, align 4, !dbg !298
  %mul21 = mul nsw i32 %mul19, %25, !dbg !298
  %add = add nsw i32 %mul17, %mul21, !dbg !298
  %26 = load i32, i32* %j, align 4, !dbg !298
  %27 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %mdeps22 = getelementptr inbounds %struct.Mat, %struct.Mat* %27, i32 0, i32 4, !dbg !298
  %28 = load i32, i32* %mdeps22, align 4, !dbg !298
  %mul23 = mul nsw i32 %26, %28, !dbg !298
  %add24 = add nsw i32 %add, %mul23, !dbg !298
  %29 = load i32, i32* %k, align 4, !dbg !298
  %add25 = add nsw i32 %add24, %29, !dbg !298
  %idxprom = sext i32 %add25 to i64, !dbg !298
  %30 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !298
  %m = getelementptr inbounds %struct.Mat, %struct.Mat* %30, i32 0, i32 0, !dbg !298
  %31 = load float*, float** %m, align 8, !dbg !298
  %arrayidx = getelementptr inbounds float, float* %31, i64 %idxprom, !dbg !298
  store float %div, float* %arrayidx, align 4, !dbg !299
  br label %for.inc, !dbg !298

for.inc:                                          ; preds = %for.body.6
  %32 = load i32, i32* %k, align 4, !dbg !300
  %inc = add nsw i32 %32, 1, !dbg !300
  store i32 %inc, i32* %k, align 4, !dbg !300
  br label %for.cond.4, !dbg !301

for.end:                                          ; preds = %for.cond.4
  br label %for.inc.26, !dbg !302

for.inc.26:                                       ; preds = %for.end
  %33 = load i32, i32* %j, align 4, !dbg !303
  %inc27 = add nsw i32 %33, 1, !dbg !303
  store i32 %inc27, i32* %j, align 4, !dbg !303
  br label %for.cond.1, !dbg !304

for.end.28:                                       ; preds = %for.cond.1
  br label %for.inc.29, !dbg !305

for.inc.29:                                       ; preds = %for.end.28
  %34 = load i32, i32* %i, align 4, !dbg !306
  %inc30 = add nsw i32 %34, 1, !dbg !306
  store i32 %inc30, i32* %i, align 4, !dbg !306
  br label %for.cond, !dbg !307

for.end.31:                                       ; preds = %for.cond
  ret void, !dbg !308
}

; Function Attrs: nounwind uwtable
define void @mat_set(%struct.Mat* %Mat, i32 %l, float %val) #0 {
entry:
  %Mat.addr = alloca %struct.Mat*, align 8
  %l.addr = alloca i32, align 4
  %val.addr = alloca float, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store %struct.Mat* %Mat, %struct.Mat** %Mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %Mat.addr, metadata !309, metadata !67), !dbg !310
  store i32 %l, i32* %l.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %l.addr, metadata !311, metadata !67), !dbg !312
  store float %val, float* %val.addr, align 4
  call void @llvm.dbg.declare(metadata float* %val.addr, metadata !313, metadata !67), !dbg !314
  call void @llvm.dbg.declare(metadata i32* %i, metadata !315, metadata !67), !dbg !316
  call void @llvm.dbg.declare(metadata i32* %j, metadata !317, metadata !67), !dbg !318
  call void @llvm.dbg.declare(metadata i32* %k, metadata !319, metadata !67), !dbg !320
  store i32 0, i32* %i, align 4, !dbg !321
  br label %for.cond, !dbg !323

for.cond:                                         ; preds = %for.inc.23, %entry
  %0 = load i32, i32* %i, align 4, !dbg !324
  %1 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !328
  %mrows = getelementptr inbounds %struct.Mat, %struct.Mat* %1, i32 0, i32 2, !dbg !329
  %2 = load i32, i32* %mrows, align 4, !dbg !329
  %cmp = icmp slt i32 %0, %2, !dbg !330
  br i1 %cmp, label %for.body, label %for.end.25, !dbg !331

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !332
  br label %for.cond.1, !dbg !334

for.cond.1:                                       ; preds = %for.inc.20, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !335
  %4 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !339
  %mcols = getelementptr inbounds %struct.Mat, %struct.Mat* %4, i32 0, i32 3, !dbg !340
  %5 = load i32, i32* %mcols, align 4, !dbg !340
  %cmp2 = icmp slt i32 %3, %5, !dbg !341
  br i1 %cmp2, label %for.body.3, label %for.end.22, !dbg !342

for.body.3:                                       ; preds = %for.cond.1
  store i32 0, i32* %k, align 4, !dbg !343
  br label %for.cond.4, !dbg !345

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %6 = load i32, i32* %k, align 4, !dbg !346
  %7 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !350
  %mdeps = getelementptr inbounds %struct.Mat, %struct.Mat* %7, i32 0, i32 4, !dbg !351
  %8 = load i32, i32* %mdeps, align 4, !dbg !351
  %cmp5 = icmp slt i32 %6, %8, !dbg !352
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !353

for.body.6:                                       ; preds = %for.cond.4
  %9 = load float, float* %val.addr, align 4, !dbg !354
  %10 = load i32, i32* %l.addr, align 4, !dbg !355
  %11 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %mrows7 = getelementptr inbounds %struct.Mat, %struct.Mat* %11, i32 0, i32 2, !dbg !355
  %12 = load i32, i32* %mrows7, align 4, !dbg !355
  %mul = mul nsw i32 %10, %12, !dbg !355
  %13 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %mcols8 = getelementptr inbounds %struct.Mat, %struct.Mat* %13, i32 0, i32 3, !dbg !355
  %14 = load i32, i32* %mcols8, align 4, !dbg !355
  %mul9 = mul nsw i32 %mul, %14, !dbg !355
  %15 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %mdeps10 = getelementptr inbounds %struct.Mat, %struct.Mat* %15, i32 0, i32 4, !dbg !355
  %16 = load i32, i32* %mdeps10, align 4, !dbg !355
  %mul11 = mul nsw i32 %mul9, %16, !dbg !355
  %17 = load i32, i32* %i, align 4, !dbg !355
  %18 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %mcols12 = getelementptr inbounds %struct.Mat, %struct.Mat* %18, i32 0, i32 3, !dbg !355
  %19 = load i32, i32* %mcols12, align 4, !dbg !355
  %mul13 = mul nsw i32 %17, %19, !dbg !355
  %20 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %mdeps14 = getelementptr inbounds %struct.Mat, %struct.Mat* %20, i32 0, i32 4, !dbg !355
  %21 = load i32, i32* %mdeps14, align 4, !dbg !355
  %mul15 = mul nsw i32 %mul13, %21, !dbg !355
  %add = add nsw i32 %mul11, %mul15, !dbg !355
  %22 = load i32, i32* %j, align 4, !dbg !355
  %23 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %mdeps16 = getelementptr inbounds %struct.Mat, %struct.Mat* %23, i32 0, i32 4, !dbg !355
  %24 = load i32, i32* %mdeps16, align 4, !dbg !355
  %mul17 = mul nsw i32 %22, %24, !dbg !355
  %add18 = add nsw i32 %add, %mul17, !dbg !355
  %25 = load i32, i32* %k, align 4, !dbg !355
  %add19 = add nsw i32 %add18, %25, !dbg !355
  %idxprom = sext i32 %add19 to i64, !dbg !355
  %26 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !355
  %m = getelementptr inbounds %struct.Mat, %struct.Mat* %26, i32 0, i32 0, !dbg !355
  %27 = load float*, float** %m, align 8, !dbg !355
  %arrayidx = getelementptr inbounds float, float* %27, i64 %idxprom, !dbg !355
  store float %9, float* %arrayidx, align 4, !dbg !356
  br label %for.inc, !dbg !355

for.inc:                                          ; preds = %for.body.6
  %28 = load i32, i32* %k, align 4, !dbg !357
  %inc = add nsw i32 %28, 1, !dbg !357
  store i32 %inc, i32* %k, align 4, !dbg !357
  br label %for.cond.4, !dbg !358

for.end:                                          ; preds = %for.cond.4
  br label %for.inc.20, !dbg !359

for.inc.20:                                       ; preds = %for.end
  %29 = load i32, i32* %j, align 4, !dbg !360
  %inc21 = add nsw i32 %29, 1, !dbg !360
  store i32 %inc21, i32* %j, align 4, !dbg !360
  br label %for.cond.1, !dbg !361

for.end.22:                                       ; preds = %for.cond.1
  br label %for.inc.23, !dbg !362

for.inc.23:                                       ; preds = %for.end.22
  %30 = load i32, i32* %i, align 4, !dbg !363
  %inc24 = add nsw i32 %30, 1, !dbg !363
  store i32 %inc24, i32* %i, align 4, !dbg !363
  br label %for.cond, !dbg !364

for.end.25:                                       ; preds = %for.cond
  ret void, !dbg !365
}

; Function Attrs: nounwind uwtable
define float @jacobi(i32 %nn, %struct.Mat* %a, %struct.Mat* %b, %struct.Mat* %c, %struct.Mat* %p, %struct.Mat* %bnd, %struct.Mat* %wrk1, %struct.Mat* %wrk2) #0 {
entry:
  %nn.addr = alloca i32, align 4
  %a.addr = alloca %struct.Mat*, align 8
  %b.addr = alloca %struct.Mat*, align 8
  %c.addr = alloca %struct.Mat*, align 8
  %p.addr = alloca %struct.Mat*, align 8
  %bnd.addr = alloca %struct.Mat*, align 8
  %wrk1.addr = alloca %struct.Mat*, align 8
  %wrk2.addr = alloca %struct.Mat*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %imax = alloca i32, align 4
  %jmax = alloca i32, align 4
  %kmax = alloca i32, align 4
  %gosa = alloca float, align 4
  %s0 = alloca float, align 4
  %ss = alloca float, align 4
  store i32 %nn, i32* %nn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nn.addr, metadata !366, metadata !67), !dbg !367
  store %struct.Mat* %a, %struct.Mat** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %a.addr, metadata !368, metadata !67), !dbg !369
  store %struct.Mat* %b, %struct.Mat** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %b.addr, metadata !370, metadata !67), !dbg !371
  store %struct.Mat* %c, %struct.Mat** %c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %c.addr, metadata !372, metadata !67), !dbg !373
  store %struct.Mat* %p, %struct.Mat** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %p.addr, metadata !374, metadata !67), !dbg !375
  store %struct.Mat* %bnd, %struct.Mat** %bnd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %bnd.addr, metadata !376, metadata !67), !dbg !377
  store %struct.Mat* %wrk1, %struct.Mat** %wrk1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %wrk1.addr, metadata !378, metadata !67), !dbg !379
  store %struct.Mat* %wrk2, %struct.Mat** %wrk2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %wrk2.addr, metadata !380, metadata !67), !dbg !381
  call void @llvm.dbg.declare(metadata i32* %i, metadata !382, metadata !67), !dbg !383
  call void @llvm.dbg.declare(metadata i32* %j, metadata !384, metadata !67), !dbg !385
  call void @llvm.dbg.declare(metadata i32* %k, metadata !386, metadata !67), !dbg !387
  call void @llvm.dbg.declare(metadata i32* %n, metadata !388, metadata !67), !dbg !389
  call void @llvm.dbg.declare(metadata i32* %imax, metadata !390, metadata !67), !dbg !391
  call void @llvm.dbg.declare(metadata i32* %jmax, metadata !392, metadata !67), !dbg !393
  call void @llvm.dbg.declare(metadata i32* %kmax, metadata !394, metadata !67), !dbg !395
  call void @llvm.dbg.declare(metadata float* %gosa, metadata !396, metadata !67), !dbg !397
  call void @llvm.dbg.declare(metadata float* %s0, metadata !398, metadata !67), !dbg !399
  call void @llvm.dbg.declare(metadata float* %ss, metadata !400, metadata !67), !dbg !401
  %0 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !402
  %mrows = getelementptr inbounds %struct.Mat, %struct.Mat* %0, i32 0, i32 2, !dbg !403
  %1 = load i32, i32* %mrows, align 4, !dbg !403
  %sub = sub nsw i32 %1, 1, !dbg !404
  store i32 %sub, i32* %imax, align 4, !dbg !405
  %2 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !406
  %mcols = getelementptr inbounds %struct.Mat, %struct.Mat* %2, i32 0, i32 3, !dbg !407
  %3 = load i32, i32* %mcols, align 4, !dbg !407
  %sub1 = sub nsw i32 %3, 1, !dbg !408
  store i32 %sub1, i32* %jmax, align 4, !dbg !409
  %4 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !410
  %mdeps = getelementptr inbounds %struct.Mat, %struct.Mat* %4, i32 0, i32 4, !dbg !411
  %5 = load i32, i32* %mdeps, align 4, !dbg !411
  %sub2 = sub nsw i32 %5, 1, !dbg !412
  store i32 %sub2, i32* %kmax, align 4, !dbg !413
  store i32 0, i32* %n, align 4, !dbg !414
  br label %for.cond, !dbg !416

for.cond:                                         ; preds = %for.inc.725, %entry
  %6 = load i32, i32* %n, align 4, !dbg !417
  %7 = load i32, i32* %nn.addr, align 4, !dbg !421
  %cmp = icmp slt i32 %6, %7, !dbg !422
  br i1 %cmp, label %for.body, label %for.end.727, !dbg !423

for.body:                                         ; preds = %for.cond
  store float 0.000000e+00, float* %gosa, align 4, !dbg !424
  store i32 1, i32* %i, align 4, !dbg !426
  br label %for.cond.3, !dbg !428

for.cond.3:                                       ; preds = %for.inc.668, %for.body
  %8 = load i32, i32* %i, align 4, !dbg !429
  %9 = load i32, i32* %imax, align 4, !dbg !433
  %cmp4 = icmp slt i32 %8, %9, !dbg !434
  br i1 %cmp4, label %for.body.5, label %for.end.670, !dbg !435

for.body.5:                                       ; preds = %for.cond.3
  store i32 1, i32* %j, align 4, !dbg !436
  br label %for.cond.6, !dbg !438

for.cond.6:                                       ; preds = %for.inc.665, %for.body.5
  %10 = load i32, i32* %j, align 4, !dbg !439
  %11 = load i32, i32* %jmax, align 4, !dbg !443
  %cmp7 = icmp slt i32 %10, %11, !dbg !444
  br i1 %cmp7, label %for.body.8, label %for.end.667, !dbg !445

for.body.8:                                       ; preds = %for.cond.6
  store i32 1, i32* %k, align 4, !dbg !446
  br label %for.cond.9, !dbg !448

for.cond.9:                                       ; preds = %for.inc, %for.body.8
  %12 = load i32, i32* %k, align 4, !dbg !449
  %13 = load i32, i32* %kmax, align 4, !dbg !453
  %cmp10 = icmp slt i32 %12, %13, !dbg !454
  br i1 %cmp10, label %for.body.11, label %for.end, !dbg !455

for.body.11:                                      ; preds = %for.cond.9
  %14 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %mrows12 = getelementptr inbounds %struct.Mat, %struct.Mat* %14, i32 0, i32 2, !dbg !456
  %15 = load i32, i32* %mrows12, align 4, !dbg !456
  %mul = mul nsw i32 0, %15, !dbg !456
  %16 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %mcols13 = getelementptr inbounds %struct.Mat, %struct.Mat* %16, i32 0, i32 3, !dbg !456
  %17 = load i32, i32* %mcols13, align 4, !dbg !456
  %mul14 = mul nsw i32 %mul, %17, !dbg !456
  %18 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %mdeps15 = getelementptr inbounds %struct.Mat, %struct.Mat* %18, i32 0, i32 4, !dbg !456
  %19 = load i32, i32* %mdeps15, align 4, !dbg !456
  %mul16 = mul nsw i32 %mul14, %19, !dbg !456
  %20 = load i32, i32* %i, align 4, !dbg !456
  %21 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %mcols17 = getelementptr inbounds %struct.Mat, %struct.Mat* %21, i32 0, i32 3, !dbg !456
  %22 = load i32, i32* %mcols17, align 4, !dbg !456
  %mul18 = mul nsw i32 %20, %22, !dbg !456
  %23 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %mdeps19 = getelementptr inbounds %struct.Mat, %struct.Mat* %23, i32 0, i32 4, !dbg !456
  %24 = load i32, i32* %mdeps19, align 4, !dbg !456
  %mul20 = mul nsw i32 %mul18, %24, !dbg !456
  %add = add nsw i32 %mul16, %mul20, !dbg !456
  %25 = load i32, i32* %j, align 4, !dbg !456
  %26 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %mdeps21 = getelementptr inbounds %struct.Mat, %struct.Mat* %26, i32 0, i32 4, !dbg !456
  %27 = load i32, i32* %mdeps21, align 4, !dbg !456
  %mul22 = mul nsw i32 %25, %27, !dbg !456
  %add23 = add nsw i32 %add, %mul22, !dbg !456
  %28 = load i32, i32* %k, align 4, !dbg !456
  %add24 = add nsw i32 %add23, %28, !dbg !456
  %idxprom = sext i32 %add24 to i64, !dbg !456
  %29 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !456
  %m = getelementptr inbounds %struct.Mat, %struct.Mat* %29, i32 0, i32 0, !dbg !456
  %30 = load float*, float** %m, align 8, !dbg !456
  %arrayidx = getelementptr inbounds float, float* %30, i64 %idxprom, !dbg !456
  %31 = load float, float* %arrayidx, align 4, !dbg !456
  %32 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %mrows25 = getelementptr inbounds %struct.Mat, %struct.Mat* %32, i32 0, i32 2, !dbg !458
  %33 = load i32, i32* %mrows25, align 4, !dbg !458
  %mul26 = mul nsw i32 0, %33, !dbg !458
  %34 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %mcols27 = getelementptr inbounds %struct.Mat, %struct.Mat* %34, i32 0, i32 3, !dbg !458
  %35 = load i32, i32* %mcols27, align 4, !dbg !458
  %mul28 = mul nsw i32 %mul26, %35, !dbg !458
  %36 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %mdeps29 = getelementptr inbounds %struct.Mat, %struct.Mat* %36, i32 0, i32 4, !dbg !458
  %37 = load i32, i32* %mdeps29, align 4, !dbg !458
  %mul30 = mul nsw i32 %mul28, %37, !dbg !458
  %38 = load i32, i32* %i, align 4, !dbg !458
  %add31 = add nsw i32 %38, 1, !dbg !458
  %39 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %mcols32 = getelementptr inbounds %struct.Mat, %struct.Mat* %39, i32 0, i32 3, !dbg !458
  %40 = load i32, i32* %mcols32, align 4, !dbg !458
  %mul33 = mul nsw i32 %add31, %40, !dbg !458
  %41 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %mdeps34 = getelementptr inbounds %struct.Mat, %struct.Mat* %41, i32 0, i32 4, !dbg !458
  %42 = load i32, i32* %mdeps34, align 4, !dbg !458
  %mul35 = mul nsw i32 %mul33, %42, !dbg !458
  %add36 = add nsw i32 %mul30, %mul35, !dbg !458
  %43 = load i32, i32* %j, align 4, !dbg !458
  %44 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %mdeps37 = getelementptr inbounds %struct.Mat, %struct.Mat* %44, i32 0, i32 4, !dbg !458
  %45 = load i32, i32* %mdeps37, align 4, !dbg !458
  %mul38 = mul nsw i32 %43, %45, !dbg !458
  %add39 = add nsw i32 %add36, %mul38, !dbg !458
  %46 = load i32, i32* %k, align 4, !dbg !458
  %add40 = add nsw i32 %add39, %46, !dbg !458
  %idxprom41 = sext i32 %add40 to i64, !dbg !458
  %47 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !458
  %m42 = getelementptr inbounds %struct.Mat, %struct.Mat* %47, i32 0, i32 0, !dbg !458
  %48 = load float*, float** %m42, align 8, !dbg !458
  %arrayidx43 = getelementptr inbounds float, float* %48, i64 %idxprom41, !dbg !458
  %49 = load float, float* %arrayidx43, align 4, !dbg !458
  %mul44 = fmul float %31, %49, !dbg !459
  %50 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %mrows45 = getelementptr inbounds %struct.Mat, %struct.Mat* %50, i32 0, i32 2, !dbg !460
  %51 = load i32, i32* %mrows45, align 4, !dbg !460
  %mul46 = mul nsw i32 1, %51, !dbg !460
  %52 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %mcols47 = getelementptr inbounds %struct.Mat, %struct.Mat* %52, i32 0, i32 3, !dbg !460
  %53 = load i32, i32* %mcols47, align 4, !dbg !460
  %mul48 = mul nsw i32 %mul46, %53, !dbg !460
  %54 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %mdeps49 = getelementptr inbounds %struct.Mat, %struct.Mat* %54, i32 0, i32 4, !dbg !460
  %55 = load i32, i32* %mdeps49, align 4, !dbg !460
  %mul50 = mul nsw i32 %mul48, %55, !dbg !460
  %56 = load i32, i32* %i, align 4, !dbg !460
  %57 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %mcols51 = getelementptr inbounds %struct.Mat, %struct.Mat* %57, i32 0, i32 3, !dbg !460
  %58 = load i32, i32* %mcols51, align 4, !dbg !460
  %mul52 = mul nsw i32 %56, %58, !dbg !460
  %59 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %mdeps53 = getelementptr inbounds %struct.Mat, %struct.Mat* %59, i32 0, i32 4, !dbg !460
  %60 = load i32, i32* %mdeps53, align 4, !dbg !460
  %mul54 = mul nsw i32 %mul52, %60, !dbg !460
  %add55 = add nsw i32 %mul50, %mul54, !dbg !460
  %61 = load i32, i32* %j, align 4, !dbg !460
  %62 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %mdeps56 = getelementptr inbounds %struct.Mat, %struct.Mat* %62, i32 0, i32 4, !dbg !460
  %63 = load i32, i32* %mdeps56, align 4, !dbg !460
  %mul57 = mul nsw i32 %61, %63, !dbg !460
  %add58 = add nsw i32 %add55, %mul57, !dbg !460
  %64 = load i32, i32* %k, align 4, !dbg !460
  %add59 = add nsw i32 %add58, %64, !dbg !460
  %idxprom60 = sext i32 %add59 to i64, !dbg !460
  %65 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !460
  %m61 = getelementptr inbounds %struct.Mat, %struct.Mat* %65, i32 0, i32 0, !dbg !460
  %66 = load float*, float** %m61, align 8, !dbg !460
  %arrayidx62 = getelementptr inbounds float, float* %66, i64 %idxprom60, !dbg !460
  %67 = load float, float* %arrayidx62, align 4, !dbg !460
  %68 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %mrows63 = getelementptr inbounds %struct.Mat, %struct.Mat* %68, i32 0, i32 2, !dbg !461
  %69 = load i32, i32* %mrows63, align 4, !dbg !461
  %mul64 = mul nsw i32 0, %69, !dbg !461
  %70 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %mcols65 = getelementptr inbounds %struct.Mat, %struct.Mat* %70, i32 0, i32 3, !dbg !461
  %71 = load i32, i32* %mcols65, align 4, !dbg !461
  %mul66 = mul nsw i32 %mul64, %71, !dbg !461
  %72 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %mdeps67 = getelementptr inbounds %struct.Mat, %struct.Mat* %72, i32 0, i32 4, !dbg !461
  %73 = load i32, i32* %mdeps67, align 4, !dbg !461
  %mul68 = mul nsw i32 %mul66, %73, !dbg !461
  %74 = load i32, i32* %i, align 4, !dbg !461
  %75 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %mcols69 = getelementptr inbounds %struct.Mat, %struct.Mat* %75, i32 0, i32 3, !dbg !461
  %76 = load i32, i32* %mcols69, align 4, !dbg !461
  %mul70 = mul nsw i32 %74, %76, !dbg !461
  %77 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %mdeps71 = getelementptr inbounds %struct.Mat, %struct.Mat* %77, i32 0, i32 4, !dbg !461
  %78 = load i32, i32* %mdeps71, align 4, !dbg !461
  %mul72 = mul nsw i32 %mul70, %78, !dbg !461
  %add73 = add nsw i32 %mul68, %mul72, !dbg !461
  %79 = load i32, i32* %j, align 4, !dbg !461
  %add74 = add nsw i32 %79, 1, !dbg !461
  %80 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %mdeps75 = getelementptr inbounds %struct.Mat, %struct.Mat* %80, i32 0, i32 4, !dbg !461
  %81 = load i32, i32* %mdeps75, align 4, !dbg !461
  %mul76 = mul nsw i32 %add74, %81, !dbg !461
  %add77 = add nsw i32 %add73, %mul76, !dbg !461
  %82 = load i32, i32* %k, align 4, !dbg !461
  %add78 = add nsw i32 %add77, %82, !dbg !461
  %idxprom79 = sext i32 %add78 to i64, !dbg !461
  %83 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !461
  %m80 = getelementptr inbounds %struct.Mat, %struct.Mat* %83, i32 0, i32 0, !dbg !461
  %84 = load float*, float** %m80, align 8, !dbg !461
  %arrayidx81 = getelementptr inbounds float, float* %84, i64 %idxprom79, !dbg !461
  %85 = load float, float* %arrayidx81, align 4, !dbg !461
  %mul82 = fmul float %67, %85, !dbg !462
  %add83 = fadd float %mul44, %mul82, !dbg !463
  %86 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %mrows84 = getelementptr inbounds %struct.Mat, %struct.Mat* %86, i32 0, i32 2, !dbg !464
  %87 = load i32, i32* %mrows84, align 4, !dbg !464
  %mul85 = mul nsw i32 2, %87, !dbg !464
  %88 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %mcols86 = getelementptr inbounds %struct.Mat, %struct.Mat* %88, i32 0, i32 3, !dbg !464
  %89 = load i32, i32* %mcols86, align 4, !dbg !464
  %mul87 = mul nsw i32 %mul85, %89, !dbg !464
  %90 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %mdeps88 = getelementptr inbounds %struct.Mat, %struct.Mat* %90, i32 0, i32 4, !dbg !464
  %91 = load i32, i32* %mdeps88, align 4, !dbg !464
  %mul89 = mul nsw i32 %mul87, %91, !dbg !464
  %92 = load i32, i32* %i, align 4, !dbg !464
  %93 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %mcols90 = getelementptr inbounds %struct.Mat, %struct.Mat* %93, i32 0, i32 3, !dbg !464
  %94 = load i32, i32* %mcols90, align 4, !dbg !464
  %mul91 = mul nsw i32 %92, %94, !dbg !464
  %95 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %mdeps92 = getelementptr inbounds %struct.Mat, %struct.Mat* %95, i32 0, i32 4, !dbg !464
  %96 = load i32, i32* %mdeps92, align 4, !dbg !464
  %mul93 = mul nsw i32 %mul91, %96, !dbg !464
  %add94 = add nsw i32 %mul89, %mul93, !dbg !464
  %97 = load i32, i32* %j, align 4, !dbg !464
  %98 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %mdeps95 = getelementptr inbounds %struct.Mat, %struct.Mat* %98, i32 0, i32 4, !dbg !464
  %99 = load i32, i32* %mdeps95, align 4, !dbg !464
  %mul96 = mul nsw i32 %97, %99, !dbg !464
  %add97 = add nsw i32 %add94, %mul96, !dbg !464
  %100 = load i32, i32* %k, align 4, !dbg !464
  %add98 = add nsw i32 %add97, %100, !dbg !464
  %idxprom99 = sext i32 %add98 to i64, !dbg !464
  %101 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !464
  %m100 = getelementptr inbounds %struct.Mat, %struct.Mat* %101, i32 0, i32 0, !dbg !464
  %102 = load float*, float** %m100, align 8, !dbg !464
  %arrayidx101 = getelementptr inbounds float, float* %102, i64 %idxprom99, !dbg !464
  %103 = load float, float* %arrayidx101, align 4, !dbg !464
  %104 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %mrows102 = getelementptr inbounds %struct.Mat, %struct.Mat* %104, i32 0, i32 2, !dbg !465
  %105 = load i32, i32* %mrows102, align 4, !dbg !465
  %mul103 = mul nsw i32 0, %105, !dbg !465
  %106 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %mcols104 = getelementptr inbounds %struct.Mat, %struct.Mat* %106, i32 0, i32 3, !dbg !465
  %107 = load i32, i32* %mcols104, align 4, !dbg !465
  %mul105 = mul nsw i32 %mul103, %107, !dbg !465
  %108 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %mdeps106 = getelementptr inbounds %struct.Mat, %struct.Mat* %108, i32 0, i32 4, !dbg !465
  %109 = load i32, i32* %mdeps106, align 4, !dbg !465
  %mul107 = mul nsw i32 %mul105, %109, !dbg !465
  %110 = load i32, i32* %i, align 4, !dbg !465
  %111 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %mcols108 = getelementptr inbounds %struct.Mat, %struct.Mat* %111, i32 0, i32 3, !dbg !465
  %112 = load i32, i32* %mcols108, align 4, !dbg !465
  %mul109 = mul nsw i32 %110, %112, !dbg !465
  %113 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %mdeps110 = getelementptr inbounds %struct.Mat, %struct.Mat* %113, i32 0, i32 4, !dbg !465
  %114 = load i32, i32* %mdeps110, align 4, !dbg !465
  %mul111 = mul nsw i32 %mul109, %114, !dbg !465
  %add112 = add nsw i32 %mul107, %mul111, !dbg !465
  %115 = load i32, i32* %j, align 4, !dbg !465
  %116 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %mdeps113 = getelementptr inbounds %struct.Mat, %struct.Mat* %116, i32 0, i32 4, !dbg !465
  %117 = load i32, i32* %mdeps113, align 4, !dbg !465
  %mul114 = mul nsw i32 %115, %117, !dbg !465
  %add115 = add nsw i32 %add112, %mul114, !dbg !465
  %118 = load i32, i32* %k, align 4, !dbg !465
  %add116 = add nsw i32 %118, 1, !dbg !465
  %add117 = add nsw i32 %add115, %add116, !dbg !465
  %idxprom118 = sext i32 %add117 to i64, !dbg !465
  %119 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !465
  %m119 = getelementptr inbounds %struct.Mat, %struct.Mat* %119, i32 0, i32 0, !dbg !465
  %120 = load float*, float** %m119, align 8, !dbg !465
  %arrayidx120 = getelementptr inbounds float, float* %120, i64 %idxprom118, !dbg !465
  %121 = load float, float* %arrayidx120, align 4, !dbg !465
  %mul121 = fmul float %103, %121, !dbg !466
  %add122 = fadd float %add83, %mul121, !dbg !467
  %122 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %mrows123 = getelementptr inbounds %struct.Mat, %struct.Mat* %122, i32 0, i32 2, !dbg !468
  %123 = load i32, i32* %mrows123, align 4, !dbg !468
  %mul124 = mul nsw i32 0, %123, !dbg !468
  %124 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %mcols125 = getelementptr inbounds %struct.Mat, %struct.Mat* %124, i32 0, i32 3, !dbg !468
  %125 = load i32, i32* %mcols125, align 4, !dbg !468
  %mul126 = mul nsw i32 %mul124, %125, !dbg !468
  %126 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %mdeps127 = getelementptr inbounds %struct.Mat, %struct.Mat* %126, i32 0, i32 4, !dbg !468
  %127 = load i32, i32* %mdeps127, align 4, !dbg !468
  %mul128 = mul nsw i32 %mul126, %127, !dbg !468
  %128 = load i32, i32* %i, align 4, !dbg !468
  %129 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %mcols129 = getelementptr inbounds %struct.Mat, %struct.Mat* %129, i32 0, i32 3, !dbg !468
  %130 = load i32, i32* %mcols129, align 4, !dbg !468
  %mul130 = mul nsw i32 %128, %130, !dbg !468
  %131 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %mdeps131 = getelementptr inbounds %struct.Mat, %struct.Mat* %131, i32 0, i32 4, !dbg !468
  %132 = load i32, i32* %mdeps131, align 4, !dbg !468
  %mul132 = mul nsw i32 %mul130, %132, !dbg !468
  %add133 = add nsw i32 %mul128, %mul132, !dbg !468
  %133 = load i32, i32* %j, align 4, !dbg !468
  %134 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %mdeps134 = getelementptr inbounds %struct.Mat, %struct.Mat* %134, i32 0, i32 4, !dbg !468
  %135 = load i32, i32* %mdeps134, align 4, !dbg !468
  %mul135 = mul nsw i32 %133, %135, !dbg !468
  %add136 = add nsw i32 %add133, %mul135, !dbg !468
  %136 = load i32, i32* %k, align 4, !dbg !468
  %add137 = add nsw i32 %add136, %136, !dbg !468
  %idxprom138 = sext i32 %add137 to i64, !dbg !468
  %137 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !468
  %m139 = getelementptr inbounds %struct.Mat, %struct.Mat* %137, i32 0, i32 0, !dbg !468
  %138 = load float*, float** %m139, align 8, !dbg !468
  %arrayidx140 = getelementptr inbounds float, float* %138, i64 %idxprom138, !dbg !468
  %139 = load float, float* %arrayidx140, align 4, !dbg !468
  %140 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %mrows141 = getelementptr inbounds %struct.Mat, %struct.Mat* %140, i32 0, i32 2, !dbg !469
  %141 = load i32, i32* %mrows141, align 4, !dbg !469
  %mul142 = mul nsw i32 0, %141, !dbg !469
  %142 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %mcols143 = getelementptr inbounds %struct.Mat, %struct.Mat* %142, i32 0, i32 3, !dbg !469
  %143 = load i32, i32* %mcols143, align 4, !dbg !469
  %mul144 = mul nsw i32 %mul142, %143, !dbg !469
  %144 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %mdeps145 = getelementptr inbounds %struct.Mat, %struct.Mat* %144, i32 0, i32 4, !dbg !469
  %145 = load i32, i32* %mdeps145, align 4, !dbg !469
  %mul146 = mul nsw i32 %mul144, %145, !dbg !469
  %146 = load i32, i32* %i, align 4, !dbg !469
  %add147 = add nsw i32 %146, 1, !dbg !469
  %147 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %mcols148 = getelementptr inbounds %struct.Mat, %struct.Mat* %147, i32 0, i32 3, !dbg !469
  %148 = load i32, i32* %mcols148, align 4, !dbg !469
  %mul149 = mul nsw i32 %add147, %148, !dbg !469
  %149 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %mdeps150 = getelementptr inbounds %struct.Mat, %struct.Mat* %149, i32 0, i32 4, !dbg !469
  %150 = load i32, i32* %mdeps150, align 4, !dbg !469
  %mul151 = mul nsw i32 %mul149, %150, !dbg !469
  %add152 = add nsw i32 %mul146, %mul151, !dbg !469
  %151 = load i32, i32* %j, align 4, !dbg !469
  %add153 = add nsw i32 %151, 1, !dbg !469
  %152 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %mdeps154 = getelementptr inbounds %struct.Mat, %struct.Mat* %152, i32 0, i32 4, !dbg !469
  %153 = load i32, i32* %mdeps154, align 4, !dbg !469
  %mul155 = mul nsw i32 %add153, %153, !dbg !469
  %add156 = add nsw i32 %add152, %mul155, !dbg !469
  %154 = load i32, i32* %k, align 4, !dbg !469
  %add157 = add nsw i32 %add156, %154, !dbg !469
  %idxprom158 = sext i32 %add157 to i64, !dbg !469
  %155 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !469
  %m159 = getelementptr inbounds %struct.Mat, %struct.Mat* %155, i32 0, i32 0, !dbg !469
  %156 = load float*, float** %m159, align 8, !dbg !469
  %arrayidx160 = getelementptr inbounds float, float* %156, i64 %idxprom158, !dbg !469
  %157 = load float, float* %arrayidx160, align 4, !dbg !469
  %158 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %mrows161 = getelementptr inbounds %struct.Mat, %struct.Mat* %158, i32 0, i32 2, !dbg !470
  %159 = load i32, i32* %mrows161, align 4, !dbg !470
  %mul162 = mul nsw i32 0, %159, !dbg !470
  %160 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %mcols163 = getelementptr inbounds %struct.Mat, %struct.Mat* %160, i32 0, i32 3, !dbg !470
  %161 = load i32, i32* %mcols163, align 4, !dbg !470
  %mul164 = mul nsw i32 %mul162, %161, !dbg !470
  %162 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %mdeps165 = getelementptr inbounds %struct.Mat, %struct.Mat* %162, i32 0, i32 4, !dbg !470
  %163 = load i32, i32* %mdeps165, align 4, !dbg !470
  %mul166 = mul nsw i32 %mul164, %163, !dbg !470
  %164 = load i32, i32* %i, align 4, !dbg !470
  %add167 = add nsw i32 %164, 1, !dbg !470
  %165 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %mcols168 = getelementptr inbounds %struct.Mat, %struct.Mat* %165, i32 0, i32 3, !dbg !470
  %166 = load i32, i32* %mcols168, align 4, !dbg !470
  %mul169 = mul nsw i32 %add167, %166, !dbg !470
  %167 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %mdeps170 = getelementptr inbounds %struct.Mat, %struct.Mat* %167, i32 0, i32 4, !dbg !470
  %168 = load i32, i32* %mdeps170, align 4, !dbg !470
  %mul171 = mul nsw i32 %mul169, %168, !dbg !470
  %add172 = add nsw i32 %mul166, %mul171, !dbg !470
  %169 = load i32, i32* %j, align 4, !dbg !470
  %sub173 = sub nsw i32 %169, 1, !dbg !470
  %170 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %mdeps174 = getelementptr inbounds %struct.Mat, %struct.Mat* %170, i32 0, i32 4, !dbg !470
  %171 = load i32, i32* %mdeps174, align 4, !dbg !470
  %mul175 = mul nsw i32 %sub173, %171, !dbg !470
  %add176 = add nsw i32 %add172, %mul175, !dbg !470
  %172 = load i32, i32* %k, align 4, !dbg !470
  %add177 = add nsw i32 %add176, %172, !dbg !470
  %idxprom178 = sext i32 %add177 to i64, !dbg !470
  %173 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !470
  %m179 = getelementptr inbounds %struct.Mat, %struct.Mat* %173, i32 0, i32 0, !dbg !470
  %174 = load float*, float** %m179, align 8, !dbg !470
  %arrayidx180 = getelementptr inbounds float, float* %174, i64 %idxprom178, !dbg !470
  %175 = load float, float* %arrayidx180, align 4, !dbg !470
  %sub181 = fsub float %157, %175, !dbg !471
  %176 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %mrows182 = getelementptr inbounds %struct.Mat, %struct.Mat* %176, i32 0, i32 2, !dbg !472
  %177 = load i32, i32* %mrows182, align 4, !dbg !472
  %mul183 = mul nsw i32 0, %177, !dbg !472
  %178 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %mcols184 = getelementptr inbounds %struct.Mat, %struct.Mat* %178, i32 0, i32 3, !dbg !472
  %179 = load i32, i32* %mcols184, align 4, !dbg !472
  %mul185 = mul nsw i32 %mul183, %179, !dbg !472
  %180 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %mdeps186 = getelementptr inbounds %struct.Mat, %struct.Mat* %180, i32 0, i32 4, !dbg !472
  %181 = load i32, i32* %mdeps186, align 4, !dbg !472
  %mul187 = mul nsw i32 %mul185, %181, !dbg !472
  %182 = load i32, i32* %i, align 4, !dbg !472
  %sub188 = sub nsw i32 %182, 1, !dbg !472
  %183 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %mcols189 = getelementptr inbounds %struct.Mat, %struct.Mat* %183, i32 0, i32 3, !dbg !472
  %184 = load i32, i32* %mcols189, align 4, !dbg !472
  %mul190 = mul nsw i32 %sub188, %184, !dbg !472
  %185 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %mdeps191 = getelementptr inbounds %struct.Mat, %struct.Mat* %185, i32 0, i32 4, !dbg !472
  %186 = load i32, i32* %mdeps191, align 4, !dbg !472
  %mul192 = mul nsw i32 %mul190, %186, !dbg !472
  %add193 = add nsw i32 %mul187, %mul192, !dbg !472
  %187 = load i32, i32* %j, align 4, !dbg !472
  %add194 = add nsw i32 %187, 1, !dbg !472
  %188 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %mdeps195 = getelementptr inbounds %struct.Mat, %struct.Mat* %188, i32 0, i32 4, !dbg !472
  %189 = load i32, i32* %mdeps195, align 4, !dbg !472
  %mul196 = mul nsw i32 %add194, %189, !dbg !472
  %add197 = add nsw i32 %add193, %mul196, !dbg !472
  %190 = load i32, i32* %k, align 4, !dbg !472
  %add198 = add nsw i32 %add197, %190, !dbg !472
  %idxprom199 = sext i32 %add198 to i64, !dbg !472
  %191 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !472
  %m200 = getelementptr inbounds %struct.Mat, %struct.Mat* %191, i32 0, i32 0, !dbg !472
  %192 = load float*, float** %m200, align 8, !dbg !472
  %arrayidx201 = getelementptr inbounds float, float* %192, i64 %idxprom199, !dbg !472
  %193 = load float, float* %arrayidx201, align 4, !dbg !472
  %sub202 = fsub float %sub181, %193, !dbg !473
  %194 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %mrows203 = getelementptr inbounds %struct.Mat, %struct.Mat* %194, i32 0, i32 2, !dbg !474
  %195 = load i32, i32* %mrows203, align 4, !dbg !474
  %mul204 = mul nsw i32 0, %195, !dbg !474
  %196 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %mcols205 = getelementptr inbounds %struct.Mat, %struct.Mat* %196, i32 0, i32 3, !dbg !474
  %197 = load i32, i32* %mcols205, align 4, !dbg !474
  %mul206 = mul nsw i32 %mul204, %197, !dbg !474
  %198 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %mdeps207 = getelementptr inbounds %struct.Mat, %struct.Mat* %198, i32 0, i32 4, !dbg !474
  %199 = load i32, i32* %mdeps207, align 4, !dbg !474
  %mul208 = mul nsw i32 %mul206, %199, !dbg !474
  %200 = load i32, i32* %i, align 4, !dbg !474
  %sub209 = sub nsw i32 %200, 1, !dbg !474
  %201 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %mcols210 = getelementptr inbounds %struct.Mat, %struct.Mat* %201, i32 0, i32 3, !dbg !474
  %202 = load i32, i32* %mcols210, align 4, !dbg !474
  %mul211 = mul nsw i32 %sub209, %202, !dbg !474
  %203 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %mdeps212 = getelementptr inbounds %struct.Mat, %struct.Mat* %203, i32 0, i32 4, !dbg !474
  %204 = load i32, i32* %mdeps212, align 4, !dbg !474
  %mul213 = mul nsw i32 %mul211, %204, !dbg !474
  %add214 = add nsw i32 %mul208, %mul213, !dbg !474
  %205 = load i32, i32* %j, align 4, !dbg !474
  %sub215 = sub nsw i32 %205, 1, !dbg !474
  %206 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %mdeps216 = getelementptr inbounds %struct.Mat, %struct.Mat* %206, i32 0, i32 4, !dbg !474
  %207 = load i32, i32* %mdeps216, align 4, !dbg !474
  %mul217 = mul nsw i32 %sub215, %207, !dbg !474
  %add218 = add nsw i32 %add214, %mul217, !dbg !474
  %208 = load i32, i32* %k, align 4, !dbg !474
  %add219 = add nsw i32 %add218, %208, !dbg !474
  %idxprom220 = sext i32 %add219 to i64, !dbg !474
  %209 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !474
  %m221 = getelementptr inbounds %struct.Mat, %struct.Mat* %209, i32 0, i32 0, !dbg !474
  %210 = load float*, float** %m221, align 8, !dbg !474
  %arrayidx222 = getelementptr inbounds float, float* %210, i64 %idxprom220, !dbg !474
  %211 = load float, float* %arrayidx222, align 4, !dbg !474
  %add223 = fadd float %sub202, %211, !dbg !475
  %mul224 = fmul float %139, %add223, !dbg !476
  %add225 = fadd float %add122, %mul224, !dbg !477
  %212 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %mrows226 = getelementptr inbounds %struct.Mat, %struct.Mat* %212, i32 0, i32 2, !dbg !478
  %213 = load i32, i32* %mrows226, align 4, !dbg !478
  %mul227 = mul nsw i32 1, %213, !dbg !478
  %214 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %mcols228 = getelementptr inbounds %struct.Mat, %struct.Mat* %214, i32 0, i32 3, !dbg !478
  %215 = load i32, i32* %mcols228, align 4, !dbg !478
  %mul229 = mul nsw i32 %mul227, %215, !dbg !478
  %216 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %mdeps230 = getelementptr inbounds %struct.Mat, %struct.Mat* %216, i32 0, i32 4, !dbg !478
  %217 = load i32, i32* %mdeps230, align 4, !dbg !478
  %mul231 = mul nsw i32 %mul229, %217, !dbg !478
  %218 = load i32, i32* %i, align 4, !dbg !478
  %219 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %mcols232 = getelementptr inbounds %struct.Mat, %struct.Mat* %219, i32 0, i32 3, !dbg !478
  %220 = load i32, i32* %mcols232, align 4, !dbg !478
  %mul233 = mul nsw i32 %218, %220, !dbg !478
  %221 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %mdeps234 = getelementptr inbounds %struct.Mat, %struct.Mat* %221, i32 0, i32 4, !dbg !478
  %222 = load i32, i32* %mdeps234, align 4, !dbg !478
  %mul235 = mul nsw i32 %mul233, %222, !dbg !478
  %add236 = add nsw i32 %mul231, %mul235, !dbg !478
  %223 = load i32, i32* %j, align 4, !dbg !478
  %224 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %mdeps237 = getelementptr inbounds %struct.Mat, %struct.Mat* %224, i32 0, i32 4, !dbg !478
  %225 = load i32, i32* %mdeps237, align 4, !dbg !478
  %mul238 = mul nsw i32 %223, %225, !dbg !478
  %add239 = add nsw i32 %add236, %mul238, !dbg !478
  %226 = load i32, i32* %k, align 4, !dbg !478
  %add240 = add nsw i32 %add239, %226, !dbg !478
  %idxprom241 = sext i32 %add240 to i64, !dbg !478
  %227 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !478
  %m242 = getelementptr inbounds %struct.Mat, %struct.Mat* %227, i32 0, i32 0, !dbg !478
  %228 = load float*, float** %m242, align 8, !dbg !478
  %arrayidx243 = getelementptr inbounds float, float* %228, i64 %idxprom241, !dbg !478
  %229 = load float, float* %arrayidx243, align 4, !dbg !478
  %230 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %mrows244 = getelementptr inbounds %struct.Mat, %struct.Mat* %230, i32 0, i32 2, !dbg !479
  %231 = load i32, i32* %mrows244, align 4, !dbg !479
  %mul245 = mul nsw i32 0, %231, !dbg !479
  %232 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %mcols246 = getelementptr inbounds %struct.Mat, %struct.Mat* %232, i32 0, i32 3, !dbg !479
  %233 = load i32, i32* %mcols246, align 4, !dbg !479
  %mul247 = mul nsw i32 %mul245, %233, !dbg !479
  %234 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %mdeps248 = getelementptr inbounds %struct.Mat, %struct.Mat* %234, i32 0, i32 4, !dbg !479
  %235 = load i32, i32* %mdeps248, align 4, !dbg !479
  %mul249 = mul nsw i32 %mul247, %235, !dbg !479
  %236 = load i32, i32* %i, align 4, !dbg !479
  %237 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %mcols250 = getelementptr inbounds %struct.Mat, %struct.Mat* %237, i32 0, i32 3, !dbg !479
  %238 = load i32, i32* %mcols250, align 4, !dbg !479
  %mul251 = mul nsw i32 %236, %238, !dbg !479
  %239 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %mdeps252 = getelementptr inbounds %struct.Mat, %struct.Mat* %239, i32 0, i32 4, !dbg !479
  %240 = load i32, i32* %mdeps252, align 4, !dbg !479
  %mul253 = mul nsw i32 %mul251, %240, !dbg !479
  %add254 = add nsw i32 %mul249, %mul253, !dbg !479
  %241 = load i32, i32* %j, align 4, !dbg !479
  %add255 = add nsw i32 %241, 1, !dbg !479
  %242 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %mdeps256 = getelementptr inbounds %struct.Mat, %struct.Mat* %242, i32 0, i32 4, !dbg !479
  %243 = load i32, i32* %mdeps256, align 4, !dbg !479
  %mul257 = mul nsw i32 %add255, %243, !dbg !479
  %add258 = add nsw i32 %add254, %mul257, !dbg !479
  %244 = load i32, i32* %k, align 4, !dbg !479
  %add259 = add nsw i32 %244, 1, !dbg !479
  %add260 = add nsw i32 %add258, %add259, !dbg !479
  %idxprom261 = sext i32 %add260 to i64, !dbg !479
  %245 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !479
  %m262 = getelementptr inbounds %struct.Mat, %struct.Mat* %245, i32 0, i32 0, !dbg !479
  %246 = load float*, float** %m262, align 8, !dbg !479
  %arrayidx263 = getelementptr inbounds float, float* %246, i64 %idxprom261, !dbg !479
  %247 = load float, float* %arrayidx263, align 4, !dbg !479
  %248 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %mrows264 = getelementptr inbounds %struct.Mat, %struct.Mat* %248, i32 0, i32 2, !dbg !480
  %249 = load i32, i32* %mrows264, align 4, !dbg !480
  %mul265 = mul nsw i32 0, %249, !dbg !480
  %250 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %mcols266 = getelementptr inbounds %struct.Mat, %struct.Mat* %250, i32 0, i32 3, !dbg !480
  %251 = load i32, i32* %mcols266, align 4, !dbg !480
  %mul267 = mul nsw i32 %mul265, %251, !dbg !480
  %252 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %mdeps268 = getelementptr inbounds %struct.Mat, %struct.Mat* %252, i32 0, i32 4, !dbg !480
  %253 = load i32, i32* %mdeps268, align 4, !dbg !480
  %mul269 = mul nsw i32 %mul267, %253, !dbg !480
  %254 = load i32, i32* %i, align 4, !dbg !480
  %255 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %mcols270 = getelementptr inbounds %struct.Mat, %struct.Mat* %255, i32 0, i32 3, !dbg !480
  %256 = load i32, i32* %mcols270, align 4, !dbg !480
  %mul271 = mul nsw i32 %254, %256, !dbg !480
  %257 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %mdeps272 = getelementptr inbounds %struct.Mat, %struct.Mat* %257, i32 0, i32 4, !dbg !480
  %258 = load i32, i32* %mdeps272, align 4, !dbg !480
  %mul273 = mul nsw i32 %mul271, %258, !dbg !480
  %add274 = add nsw i32 %mul269, %mul273, !dbg !480
  %259 = load i32, i32* %j, align 4, !dbg !480
  %sub275 = sub nsw i32 %259, 1, !dbg !480
  %260 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %mdeps276 = getelementptr inbounds %struct.Mat, %struct.Mat* %260, i32 0, i32 4, !dbg !480
  %261 = load i32, i32* %mdeps276, align 4, !dbg !480
  %mul277 = mul nsw i32 %sub275, %261, !dbg !480
  %add278 = add nsw i32 %add274, %mul277, !dbg !480
  %262 = load i32, i32* %k, align 4, !dbg !480
  %add279 = add nsw i32 %262, 1, !dbg !480
  %add280 = add nsw i32 %add278, %add279, !dbg !480
  %idxprom281 = sext i32 %add280 to i64, !dbg !480
  %263 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !480
  %m282 = getelementptr inbounds %struct.Mat, %struct.Mat* %263, i32 0, i32 0, !dbg !480
  %264 = load float*, float** %m282, align 8, !dbg !480
  %arrayidx283 = getelementptr inbounds float, float* %264, i64 %idxprom281, !dbg !480
  %265 = load float, float* %arrayidx283, align 4, !dbg !480
  %sub284 = fsub float %247, %265, !dbg !481
  %266 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %mrows285 = getelementptr inbounds %struct.Mat, %struct.Mat* %266, i32 0, i32 2, !dbg !482
  %267 = load i32, i32* %mrows285, align 4, !dbg !482
  %mul286 = mul nsw i32 0, %267, !dbg !482
  %268 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %mcols287 = getelementptr inbounds %struct.Mat, %struct.Mat* %268, i32 0, i32 3, !dbg !482
  %269 = load i32, i32* %mcols287, align 4, !dbg !482
  %mul288 = mul nsw i32 %mul286, %269, !dbg !482
  %270 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %mdeps289 = getelementptr inbounds %struct.Mat, %struct.Mat* %270, i32 0, i32 4, !dbg !482
  %271 = load i32, i32* %mdeps289, align 4, !dbg !482
  %mul290 = mul nsw i32 %mul288, %271, !dbg !482
  %272 = load i32, i32* %i, align 4, !dbg !482
  %273 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %mcols291 = getelementptr inbounds %struct.Mat, %struct.Mat* %273, i32 0, i32 3, !dbg !482
  %274 = load i32, i32* %mcols291, align 4, !dbg !482
  %mul292 = mul nsw i32 %272, %274, !dbg !482
  %275 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %mdeps293 = getelementptr inbounds %struct.Mat, %struct.Mat* %275, i32 0, i32 4, !dbg !482
  %276 = load i32, i32* %mdeps293, align 4, !dbg !482
  %mul294 = mul nsw i32 %mul292, %276, !dbg !482
  %add295 = add nsw i32 %mul290, %mul294, !dbg !482
  %277 = load i32, i32* %j, align 4, !dbg !482
  %add296 = add nsw i32 %277, 1, !dbg !482
  %278 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %mdeps297 = getelementptr inbounds %struct.Mat, %struct.Mat* %278, i32 0, i32 4, !dbg !482
  %279 = load i32, i32* %mdeps297, align 4, !dbg !482
  %mul298 = mul nsw i32 %add296, %279, !dbg !482
  %add299 = add nsw i32 %add295, %mul298, !dbg !482
  %280 = load i32, i32* %k, align 4, !dbg !482
  %sub300 = sub nsw i32 %280, 1, !dbg !482
  %add301 = add nsw i32 %add299, %sub300, !dbg !482
  %idxprom302 = sext i32 %add301 to i64, !dbg !482
  %281 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !482
  %m303 = getelementptr inbounds %struct.Mat, %struct.Mat* %281, i32 0, i32 0, !dbg !482
  %282 = load float*, float** %m303, align 8, !dbg !482
  %arrayidx304 = getelementptr inbounds float, float* %282, i64 %idxprom302, !dbg !482
  %283 = load float, float* %arrayidx304, align 4, !dbg !482
  %sub305 = fsub float %sub284, %283, !dbg !483
  %284 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %mrows306 = getelementptr inbounds %struct.Mat, %struct.Mat* %284, i32 0, i32 2, !dbg !484
  %285 = load i32, i32* %mrows306, align 4, !dbg !484
  %mul307 = mul nsw i32 0, %285, !dbg !484
  %286 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %mcols308 = getelementptr inbounds %struct.Mat, %struct.Mat* %286, i32 0, i32 3, !dbg !484
  %287 = load i32, i32* %mcols308, align 4, !dbg !484
  %mul309 = mul nsw i32 %mul307, %287, !dbg !484
  %288 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %mdeps310 = getelementptr inbounds %struct.Mat, %struct.Mat* %288, i32 0, i32 4, !dbg !484
  %289 = load i32, i32* %mdeps310, align 4, !dbg !484
  %mul311 = mul nsw i32 %mul309, %289, !dbg !484
  %290 = load i32, i32* %i, align 4, !dbg !484
  %291 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %mcols312 = getelementptr inbounds %struct.Mat, %struct.Mat* %291, i32 0, i32 3, !dbg !484
  %292 = load i32, i32* %mcols312, align 4, !dbg !484
  %mul313 = mul nsw i32 %290, %292, !dbg !484
  %293 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %mdeps314 = getelementptr inbounds %struct.Mat, %struct.Mat* %293, i32 0, i32 4, !dbg !484
  %294 = load i32, i32* %mdeps314, align 4, !dbg !484
  %mul315 = mul nsw i32 %mul313, %294, !dbg !484
  %add316 = add nsw i32 %mul311, %mul315, !dbg !484
  %295 = load i32, i32* %j, align 4, !dbg !484
  %sub317 = sub nsw i32 %295, 1, !dbg !484
  %296 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %mdeps318 = getelementptr inbounds %struct.Mat, %struct.Mat* %296, i32 0, i32 4, !dbg !484
  %297 = load i32, i32* %mdeps318, align 4, !dbg !484
  %mul319 = mul nsw i32 %sub317, %297, !dbg !484
  %add320 = add nsw i32 %add316, %mul319, !dbg !484
  %298 = load i32, i32* %k, align 4, !dbg !484
  %sub321 = sub nsw i32 %298, 1, !dbg !484
  %add322 = add nsw i32 %add320, %sub321, !dbg !484
  %idxprom323 = sext i32 %add322 to i64, !dbg !484
  %299 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !484
  %m324 = getelementptr inbounds %struct.Mat, %struct.Mat* %299, i32 0, i32 0, !dbg !484
  %300 = load float*, float** %m324, align 8, !dbg !484
  %arrayidx325 = getelementptr inbounds float, float* %300, i64 %idxprom323, !dbg !484
  %301 = load float, float* %arrayidx325, align 4, !dbg !484
  %add326 = fadd float %sub305, %301, !dbg !485
  %mul327 = fmul float %229, %add326, !dbg !486
  %add328 = fadd float %add225, %mul327, !dbg !487
  %302 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %mrows329 = getelementptr inbounds %struct.Mat, %struct.Mat* %302, i32 0, i32 2, !dbg !488
  %303 = load i32, i32* %mrows329, align 4, !dbg !488
  %mul330 = mul nsw i32 2, %303, !dbg !488
  %304 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %mcols331 = getelementptr inbounds %struct.Mat, %struct.Mat* %304, i32 0, i32 3, !dbg !488
  %305 = load i32, i32* %mcols331, align 4, !dbg !488
  %mul332 = mul nsw i32 %mul330, %305, !dbg !488
  %306 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %mdeps333 = getelementptr inbounds %struct.Mat, %struct.Mat* %306, i32 0, i32 4, !dbg !488
  %307 = load i32, i32* %mdeps333, align 4, !dbg !488
  %mul334 = mul nsw i32 %mul332, %307, !dbg !488
  %308 = load i32, i32* %i, align 4, !dbg !488
  %309 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %mcols335 = getelementptr inbounds %struct.Mat, %struct.Mat* %309, i32 0, i32 3, !dbg !488
  %310 = load i32, i32* %mcols335, align 4, !dbg !488
  %mul336 = mul nsw i32 %308, %310, !dbg !488
  %311 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %mdeps337 = getelementptr inbounds %struct.Mat, %struct.Mat* %311, i32 0, i32 4, !dbg !488
  %312 = load i32, i32* %mdeps337, align 4, !dbg !488
  %mul338 = mul nsw i32 %mul336, %312, !dbg !488
  %add339 = add nsw i32 %mul334, %mul338, !dbg !488
  %313 = load i32, i32* %j, align 4, !dbg !488
  %314 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %mdeps340 = getelementptr inbounds %struct.Mat, %struct.Mat* %314, i32 0, i32 4, !dbg !488
  %315 = load i32, i32* %mdeps340, align 4, !dbg !488
  %mul341 = mul nsw i32 %313, %315, !dbg !488
  %add342 = add nsw i32 %add339, %mul341, !dbg !488
  %316 = load i32, i32* %k, align 4, !dbg !488
  %add343 = add nsw i32 %add342, %316, !dbg !488
  %idxprom344 = sext i32 %add343 to i64, !dbg !488
  %317 = load %struct.Mat*, %struct.Mat** %b.addr, align 8, !dbg !488
  %m345 = getelementptr inbounds %struct.Mat, %struct.Mat* %317, i32 0, i32 0, !dbg !488
  %318 = load float*, float** %m345, align 8, !dbg !488
  %arrayidx346 = getelementptr inbounds float, float* %318, i64 %idxprom344, !dbg !488
  %319 = load float, float* %arrayidx346, align 4, !dbg !488
  %320 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %mrows347 = getelementptr inbounds %struct.Mat, %struct.Mat* %320, i32 0, i32 2, !dbg !489
  %321 = load i32, i32* %mrows347, align 4, !dbg !489
  %mul348 = mul nsw i32 0, %321, !dbg !489
  %322 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %mcols349 = getelementptr inbounds %struct.Mat, %struct.Mat* %322, i32 0, i32 3, !dbg !489
  %323 = load i32, i32* %mcols349, align 4, !dbg !489
  %mul350 = mul nsw i32 %mul348, %323, !dbg !489
  %324 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %mdeps351 = getelementptr inbounds %struct.Mat, %struct.Mat* %324, i32 0, i32 4, !dbg !489
  %325 = load i32, i32* %mdeps351, align 4, !dbg !489
  %mul352 = mul nsw i32 %mul350, %325, !dbg !489
  %326 = load i32, i32* %i, align 4, !dbg !489
  %add353 = add nsw i32 %326, 1, !dbg !489
  %327 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %mcols354 = getelementptr inbounds %struct.Mat, %struct.Mat* %327, i32 0, i32 3, !dbg !489
  %328 = load i32, i32* %mcols354, align 4, !dbg !489
  %mul355 = mul nsw i32 %add353, %328, !dbg !489
  %329 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %mdeps356 = getelementptr inbounds %struct.Mat, %struct.Mat* %329, i32 0, i32 4, !dbg !489
  %330 = load i32, i32* %mdeps356, align 4, !dbg !489
  %mul357 = mul nsw i32 %mul355, %330, !dbg !489
  %add358 = add nsw i32 %mul352, %mul357, !dbg !489
  %331 = load i32, i32* %j, align 4, !dbg !489
  %332 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %mdeps359 = getelementptr inbounds %struct.Mat, %struct.Mat* %332, i32 0, i32 4, !dbg !489
  %333 = load i32, i32* %mdeps359, align 4, !dbg !489
  %mul360 = mul nsw i32 %331, %333, !dbg !489
  %add361 = add nsw i32 %add358, %mul360, !dbg !489
  %334 = load i32, i32* %k, align 4, !dbg !489
  %add362 = add nsw i32 %334, 1, !dbg !489
  %add363 = add nsw i32 %add361, %add362, !dbg !489
  %idxprom364 = sext i32 %add363 to i64, !dbg !489
  %335 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !489
  %m365 = getelementptr inbounds %struct.Mat, %struct.Mat* %335, i32 0, i32 0, !dbg !489
  %336 = load float*, float** %m365, align 8, !dbg !489
  %arrayidx366 = getelementptr inbounds float, float* %336, i64 %idxprom364, !dbg !489
  %337 = load float, float* %arrayidx366, align 4, !dbg !489
  %338 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %mrows367 = getelementptr inbounds %struct.Mat, %struct.Mat* %338, i32 0, i32 2, !dbg !490
  %339 = load i32, i32* %mrows367, align 4, !dbg !490
  %mul368 = mul nsw i32 0, %339, !dbg !490
  %340 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %mcols369 = getelementptr inbounds %struct.Mat, %struct.Mat* %340, i32 0, i32 3, !dbg !490
  %341 = load i32, i32* %mcols369, align 4, !dbg !490
  %mul370 = mul nsw i32 %mul368, %341, !dbg !490
  %342 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %mdeps371 = getelementptr inbounds %struct.Mat, %struct.Mat* %342, i32 0, i32 4, !dbg !490
  %343 = load i32, i32* %mdeps371, align 4, !dbg !490
  %mul372 = mul nsw i32 %mul370, %343, !dbg !490
  %344 = load i32, i32* %i, align 4, !dbg !490
  %sub373 = sub nsw i32 %344, 1, !dbg !490
  %345 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %mcols374 = getelementptr inbounds %struct.Mat, %struct.Mat* %345, i32 0, i32 3, !dbg !490
  %346 = load i32, i32* %mcols374, align 4, !dbg !490
  %mul375 = mul nsw i32 %sub373, %346, !dbg !490
  %347 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %mdeps376 = getelementptr inbounds %struct.Mat, %struct.Mat* %347, i32 0, i32 4, !dbg !490
  %348 = load i32, i32* %mdeps376, align 4, !dbg !490
  %mul377 = mul nsw i32 %mul375, %348, !dbg !490
  %add378 = add nsw i32 %mul372, %mul377, !dbg !490
  %349 = load i32, i32* %j, align 4, !dbg !490
  %350 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %mdeps379 = getelementptr inbounds %struct.Mat, %struct.Mat* %350, i32 0, i32 4, !dbg !490
  %351 = load i32, i32* %mdeps379, align 4, !dbg !490
  %mul380 = mul nsw i32 %349, %351, !dbg !490
  %add381 = add nsw i32 %add378, %mul380, !dbg !490
  %352 = load i32, i32* %k, align 4, !dbg !490
  %add382 = add nsw i32 %352, 1, !dbg !490
  %add383 = add nsw i32 %add381, %add382, !dbg !490
  %idxprom384 = sext i32 %add383 to i64, !dbg !490
  %353 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !490
  %m385 = getelementptr inbounds %struct.Mat, %struct.Mat* %353, i32 0, i32 0, !dbg !490
  %354 = load float*, float** %m385, align 8, !dbg !490
  %arrayidx386 = getelementptr inbounds float, float* %354, i64 %idxprom384, !dbg !490
  %355 = load float, float* %arrayidx386, align 4, !dbg !490
  %sub387 = fsub float %337, %355, !dbg !491
  %356 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %mrows388 = getelementptr inbounds %struct.Mat, %struct.Mat* %356, i32 0, i32 2, !dbg !492
  %357 = load i32, i32* %mrows388, align 4, !dbg !492
  %mul389 = mul nsw i32 0, %357, !dbg !492
  %358 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %mcols390 = getelementptr inbounds %struct.Mat, %struct.Mat* %358, i32 0, i32 3, !dbg !492
  %359 = load i32, i32* %mcols390, align 4, !dbg !492
  %mul391 = mul nsw i32 %mul389, %359, !dbg !492
  %360 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %mdeps392 = getelementptr inbounds %struct.Mat, %struct.Mat* %360, i32 0, i32 4, !dbg !492
  %361 = load i32, i32* %mdeps392, align 4, !dbg !492
  %mul393 = mul nsw i32 %mul391, %361, !dbg !492
  %362 = load i32, i32* %i, align 4, !dbg !492
  %add394 = add nsw i32 %362, 1, !dbg !492
  %363 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %mcols395 = getelementptr inbounds %struct.Mat, %struct.Mat* %363, i32 0, i32 3, !dbg !492
  %364 = load i32, i32* %mcols395, align 4, !dbg !492
  %mul396 = mul nsw i32 %add394, %364, !dbg !492
  %365 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %mdeps397 = getelementptr inbounds %struct.Mat, %struct.Mat* %365, i32 0, i32 4, !dbg !492
  %366 = load i32, i32* %mdeps397, align 4, !dbg !492
  %mul398 = mul nsw i32 %mul396, %366, !dbg !492
  %add399 = add nsw i32 %mul393, %mul398, !dbg !492
  %367 = load i32, i32* %j, align 4, !dbg !492
  %368 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %mdeps400 = getelementptr inbounds %struct.Mat, %struct.Mat* %368, i32 0, i32 4, !dbg !492
  %369 = load i32, i32* %mdeps400, align 4, !dbg !492
  %mul401 = mul nsw i32 %367, %369, !dbg !492
  %add402 = add nsw i32 %add399, %mul401, !dbg !492
  %370 = load i32, i32* %k, align 4, !dbg !492
  %sub403 = sub nsw i32 %370, 1, !dbg !492
  %add404 = add nsw i32 %add402, %sub403, !dbg !492
  %idxprom405 = sext i32 %add404 to i64, !dbg !492
  %371 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !492
  %m406 = getelementptr inbounds %struct.Mat, %struct.Mat* %371, i32 0, i32 0, !dbg !492
  %372 = load float*, float** %m406, align 8, !dbg !492
  %arrayidx407 = getelementptr inbounds float, float* %372, i64 %idxprom405, !dbg !492
  %373 = load float, float* %arrayidx407, align 4, !dbg !492
  %sub408 = fsub float %sub387, %373, !dbg !493
  %374 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %mrows409 = getelementptr inbounds %struct.Mat, %struct.Mat* %374, i32 0, i32 2, !dbg !494
  %375 = load i32, i32* %mrows409, align 4, !dbg !494
  %mul410 = mul nsw i32 0, %375, !dbg !494
  %376 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %mcols411 = getelementptr inbounds %struct.Mat, %struct.Mat* %376, i32 0, i32 3, !dbg !494
  %377 = load i32, i32* %mcols411, align 4, !dbg !494
  %mul412 = mul nsw i32 %mul410, %377, !dbg !494
  %378 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %mdeps413 = getelementptr inbounds %struct.Mat, %struct.Mat* %378, i32 0, i32 4, !dbg !494
  %379 = load i32, i32* %mdeps413, align 4, !dbg !494
  %mul414 = mul nsw i32 %mul412, %379, !dbg !494
  %380 = load i32, i32* %i, align 4, !dbg !494
  %sub415 = sub nsw i32 %380, 1, !dbg !494
  %381 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %mcols416 = getelementptr inbounds %struct.Mat, %struct.Mat* %381, i32 0, i32 3, !dbg !494
  %382 = load i32, i32* %mcols416, align 4, !dbg !494
  %mul417 = mul nsw i32 %sub415, %382, !dbg !494
  %383 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %mdeps418 = getelementptr inbounds %struct.Mat, %struct.Mat* %383, i32 0, i32 4, !dbg !494
  %384 = load i32, i32* %mdeps418, align 4, !dbg !494
  %mul419 = mul nsw i32 %mul417, %384, !dbg !494
  %add420 = add nsw i32 %mul414, %mul419, !dbg !494
  %385 = load i32, i32* %j, align 4, !dbg !494
  %386 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %mdeps421 = getelementptr inbounds %struct.Mat, %struct.Mat* %386, i32 0, i32 4, !dbg !494
  %387 = load i32, i32* %mdeps421, align 4, !dbg !494
  %mul422 = mul nsw i32 %385, %387, !dbg !494
  %add423 = add nsw i32 %add420, %mul422, !dbg !494
  %388 = load i32, i32* %k, align 4, !dbg !494
  %sub424 = sub nsw i32 %388, 1, !dbg !494
  %add425 = add nsw i32 %add423, %sub424, !dbg !494
  %idxprom426 = sext i32 %add425 to i64, !dbg !494
  %389 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !494
  %m427 = getelementptr inbounds %struct.Mat, %struct.Mat* %389, i32 0, i32 0, !dbg !494
  %390 = load float*, float** %m427, align 8, !dbg !494
  %arrayidx428 = getelementptr inbounds float, float* %390, i64 %idxprom426, !dbg !494
  %391 = load float, float* %arrayidx428, align 4, !dbg !494
  %add429 = fadd float %sub408, %391, !dbg !495
  %mul430 = fmul float %319, %add429, !dbg !496
  %add431 = fadd float %add328, %mul430, !dbg !497
  %392 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %mrows432 = getelementptr inbounds %struct.Mat, %struct.Mat* %392, i32 0, i32 2, !dbg !498
  %393 = load i32, i32* %mrows432, align 4, !dbg !498
  %mul433 = mul nsw i32 0, %393, !dbg !498
  %394 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %mcols434 = getelementptr inbounds %struct.Mat, %struct.Mat* %394, i32 0, i32 3, !dbg !498
  %395 = load i32, i32* %mcols434, align 4, !dbg !498
  %mul435 = mul nsw i32 %mul433, %395, !dbg !498
  %396 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %mdeps436 = getelementptr inbounds %struct.Mat, %struct.Mat* %396, i32 0, i32 4, !dbg !498
  %397 = load i32, i32* %mdeps436, align 4, !dbg !498
  %mul437 = mul nsw i32 %mul435, %397, !dbg !498
  %398 = load i32, i32* %i, align 4, !dbg !498
  %399 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %mcols438 = getelementptr inbounds %struct.Mat, %struct.Mat* %399, i32 0, i32 3, !dbg !498
  %400 = load i32, i32* %mcols438, align 4, !dbg !498
  %mul439 = mul nsw i32 %398, %400, !dbg !498
  %401 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %mdeps440 = getelementptr inbounds %struct.Mat, %struct.Mat* %401, i32 0, i32 4, !dbg !498
  %402 = load i32, i32* %mdeps440, align 4, !dbg !498
  %mul441 = mul nsw i32 %mul439, %402, !dbg !498
  %add442 = add nsw i32 %mul437, %mul441, !dbg !498
  %403 = load i32, i32* %j, align 4, !dbg !498
  %404 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %mdeps443 = getelementptr inbounds %struct.Mat, %struct.Mat* %404, i32 0, i32 4, !dbg !498
  %405 = load i32, i32* %mdeps443, align 4, !dbg !498
  %mul444 = mul nsw i32 %403, %405, !dbg !498
  %add445 = add nsw i32 %add442, %mul444, !dbg !498
  %406 = load i32, i32* %k, align 4, !dbg !498
  %add446 = add nsw i32 %add445, %406, !dbg !498
  %idxprom447 = sext i32 %add446 to i64, !dbg !498
  %407 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !498
  %m448 = getelementptr inbounds %struct.Mat, %struct.Mat* %407, i32 0, i32 0, !dbg !498
  %408 = load float*, float** %m448, align 8, !dbg !498
  %arrayidx449 = getelementptr inbounds float, float* %408, i64 %idxprom447, !dbg !498
  %409 = load float, float* %arrayidx449, align 4, !dbg !498
  %410 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %mrows450 = getelementptr inbounds %struct.Mat, %struct.Mat* %410, i32 0, i32 2, !dbg !499
  %411 = load i32, i32* %mrows450, align 4, !dbg !499
  %mul451 = mul nsw i32 0, %411, !dbg !499
  %412 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %mcols452 = getelementptr inbounds %struct.Mat, %struct.Mat* %412, i32 0, i32 3, !dbg !499
  %413 = load i32, i32* %mcols452, align 4, !dbg !499
  %mul453 = mul nsw i32 %mul451, %413, !dbg !499
  %414 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %mdeps454 = getelementptr inbounds %struct.Mat, %struct.Mat* %414, i32 0, i32 4, !dbg !499
  %415 = load i32, i32* %mdeps454, align 4, !dbg !499
  %mul455 = mul nsw i32 %mul453, %415, !dbg !499
  %416 = load i32, i32* %i, align 4, !dbg !499
  %sub456 = sub nsw i32 %416, 1, !dbg !499
  %417 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %mcols457 = getelementptr inbounds %struct.Mat, %struct.Mat* %417, i32 0, i32 3, !dbg !499
  %418 = load i32, i32* %mcols457, align 4, !dbg !499
  %mul458 = mul nsw i32 %sub456, %418, !dbg !499
  %419 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %mdeps459 = getelementptr inbounds %struct.Mat, %struct.Mat* %419, i32 0, i32 4, !dbg !499
  %420 = load i32, i32* %mdeps459, align 4, !dbg !499
  %mul460 = mul nsw i32 %mul458, %420, !dbg !499
  %add461 = add nsw i32 %mul455, %mul460, !dbg !499
  %421 = load i32, i32* %j, align 4, !dbg !499
  %422 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %mdeps462 = getelementptr inbounds %struct.Mat, %struct.Mat* %422, i32 0, i32 4, !dbg !499
  %423 = load i32, i32* %mdeps462, align 4, !dbg !499
  %mul463 = mul nsw i32 %421, %423, !dbg !499
  %add464 = add nsw i32 %add461, %mul463, !dbg !499
  %424 = load i32, i32* %k, align 4, !dbg !499
  %add465 = add nsw i32 %add464, %424, !dbg !499
  %idxprom466 = sext i32 %add465 to i64, !dbg !499
  %425 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !499
  %m467 = getelementptr inbounds %struct.Mat, %struct.Mat* %425, i32 0, i32 0, !dbg !499
  %426 = load float*, float** %m467, align 8, !dbg !499
  %arrayidx468 = getelementptr inbounds float, float* %426, i64 %idxprom466, !dbg !499
  %427 = load float, float* %arrayidx468, align 4, !dbg !499
  %mul469 = fmul float %409, %427, !dbg !500
  %add470 = fadd float %add431, %mul469, !dbg !501
  %428 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %mrows471 = getelementptr inbounds %struct.Mat, %struct.Mat* %428, i32 0, i32 2, !dbg !502
  %429 = load i32, i32* %mrows471, align 4, !dbg !502
  %mul472 = mul nsw i32 1, %429, !dbg !502
  %430 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %mcols473 = getelementptr inbounds %struct.Mat, %struct.Mat* %430, i32 0, i32 3, !dbg !502
  %431 = load i32, i32* %mcols473, align 4, !dbg !502
  %mul474 = mul nsw i32 %mul472, %431, !dbg !502
  %432 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %mdeps475 = getelementptr inbounds %struct.Mat, %struct.Mat* %432, i32 0, i32 4, !dbg !502
  %433 = load i32, i32* %mdeps475, align 4, !dbg !502
  %mul476 = mul nsw i32 %mul474, %433, !dbg !502
  %434 = load i32, i32* %i, align 4, !dbg !502
  %435 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %mcols477 = getelementptr inbounds %struct.Mat, %struct.Mat* %435, i32 0, i32 3, !dbg !502
  %436 = load i32, i32* %mcols477, align 4, !dbg !502
  %mul478 = mul nsw i32 %434, %436, !dbg !502
  %437 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %mdeps479 = getelementptr inbounds %struct.Mat, %struct.Mat* %437, i32 0, i32 4, !dbg !502
  %438 = load i32, i32* %mdeps479, align 4, !dbg !502
  %mul480 = mul nsw i32 %mul478, %438, !dbg !502
  %add481 = add nsw i32 %mul476, %mul480, !dbg !502
  %439 = load i32, i32* %j, align 4, !dbg !502
  %440 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %mdeps482 = getelementptr inbounds %struct.Mat, %struct.Mat* %440, i32 0, i32 4, !dbg !502
  %441 = load i32, i32* %mdeps482, align 4, !dbg !502
  %mul483 = mul nsw i32 %439, %441, !dbg !502
  %add484 = add nsw i32 %add481, %mul483, !dbg !502
  %442 = load i32, i32* %k, align 4, !dbg !502
  %add485 = add nsw i32 %add484, %442, !dbg !502
  %idxprom486 = sext i32 %add485 to i64, !dbg !502
  %443 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !502
  %m487 = getelementptr inbounds %struct.Mat, %struct.Mat* %443, i32 0, i32 0, !dbg !502
  %444 = load float*, float** %m487, align 8, !dbg !502
  %arrayidx488 = getelementptr inbounds float, float* %444, i64 %idxprom486, !dbg !502
  %445 = load float, float* %arrayidx488, align 4, !dbg !502
  %446 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %mrows489 = getelementptr inbounds %struct.Mat, %struct.Mat* %446, i32 0, i32 2, !dbg !503
  %447 = load i32, i32* %mrows489, align 4, !dbg !503
  %mul490 = mul nsw i32 0, %447, !dbg !503
  %448 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %mcols491 = getelementptr inbounds %struct.Mat, %struct.Mat* %448, i32 0, i32 3, !dbg !503
  %449 = load i32, i32* %mcols491, align 4, !dbg !503
  %mul492 = mul nsw i32 %mul490, %449, !dbg !503
  %450 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %mdeps493 = getelementptr inbounds %struct.Mat, %struct.Mat* %450, i32 0, i32 4, !dbg !503
  %451 = load i32, i32* %mdeps493, align 4, !dbg !503
  %mul494 = mul nsw i32 %mul492, %451, !dbg !503
  %452 = load i32, i32* %i, align 4, !dbg !503
  %453 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %mcols495 = getelementptr inbounds %struct.Mat, %struct.Mat* %453, i32 0, i32 3, !dbg !503
  %454 = load i32, i32* %mcols495, align 4, !dbg !503
  %mul496 = mul nsw i32 %452, %454, !dbg !503
  %455 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %mdeps497 = getelementptr inbounds %struct.Mat, %struct.Mat* %455, i32 0, i32 4, !dbg !503
  %456 = load i32, i32* %mdeps497, align 4, !dbg !503
  %mul498 = mul nsw i32 %mul496, %456, !dbg !503
  %add499 = add nsw i32 %mul494, %mul498, !dbg !503
  %457 = load i32, i32* %j, align 4, !dbg !503
  %sub500 = sub nsw i32 %457, 1, !dbg !503
  %458 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %mdeps501 = getelementptr inbounds %struct.Mat, %struct.Mat* %458, i32 0, i32 4, !dbg !503
  %459 = load i32, i32* %mdeps501, align 4, !dbg !503
  %mul502 = mul nsw i32 %sub500, %459, !dbg !503
  %add503 = add nsw i32 %add499, %mul502, !dbg !503
  %460 = load i32, i32* %k, align 4, !dbg !503
  %add504 = add nsw i32 %add503, %460, !dbg !503
  %idxprom505 = sext i32 %add504 to i64, !dbg !503
  %461 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !503
  %m506 = getelementptr inbounds %struct.Mat, %struct.Mat* %461, i32 0, i32 0, !dbg !503
  %462 = load float*, float** %m506, align 8, !dbg !503
  %arrayidx507 = getelementptr inbounds float, float* %462, i64 %idxprom505, !dbg !503
  %463 = load float, float* %arrayidx507, align 4, !dbg !503
  %mul508 = fmul float %445, %463, !dbg !504
  %add509 = fadd float %add470, %mul508, !dbg !505
  %464 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %mrows510 = getelementptr inbounds %struct.Mat, %struct.Mat* %464, i32 0, i32 2, !dbg !506
  %465 = load i32, i32* %mrows510, align 4, !dbg !506
  %mul511 = mul nsw i32 2, %465, !dbg !506
  %466 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %mcols512 = getelementptr inbounds %struct.Mat, %struct.Mat* %466, i32 0, i32 3, !dbg !506
  %467 = load i32, i32* %mcols512, align 4, !dbg !506
  %mul513 = mul nsw i32 %mul511, %467, !dbg !506
  %468 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %mdeps514 = getelementptr inbounds %struct.Mat, %struct.Mat* %468, i32 0, i32 4, !dbg !506
  %469 = load i32, i32* %mdeps514, align 4, !dbg !506
  %mul515 = mul nsw i32 %mul513, %469, !dbg !506
  %470 = load i32, i32* %i, align 4, !dbg !506
  %471 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %mcols516 = getelementptr inbounds %struct.Mat, %struct.Mat* %471, i32 0, i32 3, !dbg !506
  %472 = load i32, i32* %mcols516, align 4, !dbg !506
  %mul517 = mul nsw i32 %470, %472, !dbg !506
  %473 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %mdeps518 = getelementptr inbounds %struct.Mat, %struct.Mat* %473, i32 0, i32 4, !dbg !506
  %474 = load i32, i32* %mdeps518, align 4, !dbg !506
  %mul519 = mul nsw i32 %mul517, %474, !dbg !506
  %add520 = add nsw i32 %mul515, %mul519, !dbg !506
  %475 = load i32, i32* %j, align 4, !dbg !506
  %476 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %mdeps521 = getelementptr inbounds %struct.Mat, %struct.Mat* %476, i32 0, i32 4, !dbg !506
  %477 = load i32, i32* %mdeps521, align 4, !dbg !506
  %mul522 = mul nsw i32 %475, %477, !dbg !506
  %add523 = add nsw i32 %add520, %mul522, !dbg !506
  %478 = load i32, i32* %k, align 4, !dbg !506
  %add524 = add nsw i32 %add523, %478, !dbg !506
  %idxprom525 = sext i32 %add524 to i64, !dbg !506
  %479 = load %struct.Mat*, %struct.Mat** %c.addr, align 8, !dbg !506
  %m526 = getelementptr inbounds %struct.Mat, %struct.Mat* %479, i32 0, i32 0, !dbg !506
  %480 = load float*, float** %m526, align 8, !dbg !506
  %arrayidx527 = getelementptr inbounds float, float* %480, i64 %idxprom525, !dbg !506
  %481 = load float, float* %arrayidx527, align 4, !dbg !506
  %482 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %mrows528 = getelementptr inbounds %struct.Mat, %struct.Mat* %482, i32 0, i32 2, !dbg !507
  %483 = load i32, i32* %mrows528, align 4, !dbg !507
  %mul529 = mul nsw i32 0, %483, !dbg !507
  %484 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %mcols530 = getelementptr inbounds %struct.Mat, %struct.Mat* %484, i32 0, i32 3, !dbg !507
  %485 = load i32, i32* %mcols530, align 4, !dbg !507
  %mul531 = mul nsw i32 %mul529, %485, !dbg !507
  %486 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %mdeps532 = getelementptr inbounds %struct.Mat, %struct.Mat* %486, i32 0, i32 4, !dbg !507
  %487 = load i32, i32* %mdeps532, align 4, !dbg !507
  %mul533 = mul nsw i32 %mul531, %487, !dbg !507
  %488 = load i32, i32* %i, align 4, !dbg !507
  %489 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %mcols534 = getelementptr inbounds %struct.Mat, %struct.Mat* %489, i32 0, i32 3, !dbg !507
  %490 = load i32, i32* %mcols534, align 4, !dbg !507
  %mul535 = mul nsw i32 %488, %490, !dbg !507
  %491 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %mdeps536 = getelementptr inbounds %struct.Mat, %struct.Mat* %491, i32 0, i32 4, !dbg !507
  %492 = load i32, i32* %mdeps536, align 4, !dbg !507
  %mul537 = mul nsw i32 %mul535, %492, !dbg !507
  %add538 = add nsw i32 %mul533, %mul537, !dbg !507
  %493 = load i32, i32* %j, align 4, !dbg !507
  %494 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %mdeps539 = getelementptr inbounds %struct.Mat, %struct.Mat* %494, i32 0, i32 4, !dbg !507
  %495 = load i32, i32* %mdeps539, align 4, !dbg !507
  %mul540 = mul nsw i32 %493, %495, !dbg !507
  %add541 = add nsw i32 %add538, %mul540, !dbg !507
  %496 = load i32, i32* %k, align 4, !dbg !507
  %sub542 = sub nsw i32 %496, 1, !dbg !507
  %add543 = add nsw i32 %add541, %sub542, !dbg !507
  %idxprom544 = sext i32 %add543 to i64, !dbg !507
  %497 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !507
  %m545 = getelementptr inbounds %struct.Mat, %struct.Mat* %497, i32 0, i32 0, !dbg !507
  %498 = load float*, float** %m545, align 8, !dbg !507
  %arrayidx546 = getelementptr inbounds float, float* %498, i64 %idxprom544, !dbg !507
  %499 = load float, float* %arrayidx546, align 4, !dbg !507
  %mul547 = fmul float %481, %499, !dbg !508
  %add548 = fadd float %add509, %mul547, !dbg !509
  %500 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %mrows549 = getelementptr inbounds %struct.Mat, %struct.Mat* %500, i32 0, i32 2, !dbg !510
  %501 = load i32, i32* %mrows549, align 4, !dbg !510
  %mul550 = mul nsw i32 0, %501, !dbg !510
  %502 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %mcols551 = getelementptr inbounds %struct.Mat, %struct.Mat* %502, i32 0, i32 3, !dbg !510
  %503 = load i32, i32* %mcols551, align 4, !dbg !510
  %mul552 = mul nsw i32 %mul550, %503, !dbg !510
  %504 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %mdeps553 = getelementptr inbounds %struct.Mat, %struct.Mat* %504, i32 0, i32 4, !dbg !510
  %505 = load i32, i32* %mdeps553, align 4, !dbg !510
  %mul554 = mul nsw i32 %mul552, %505, !dbg !510
  %506 = load i32, i32* %i, align 4, !dbg !510
  %507 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %mcols555 = getelementptr inbounds %struct.Mat, %struct.Mat* %507, i32 0, i32 3, !dbg !510
  %508 = load i32, i32* %mcols555, align 4, !dbg !510
  %mul556 = mul nsw i32 %506, %508, !dbg !510
  %509 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %mdeps557 = getelementptr inbounds %struct.Mat, %struct.Mat* %509, i32 0, i32 4, !dbg !510
  %510 = load i32, i32* %mdeps557, align 4, !dbg !510
  %mul558 = mul nsw i32 %mul556, %510, !dbg !510
  %add559 = add nsw i32 %mul554, %mul558, !dbg !510
  %511 = load i32, i32* %j, align 4, !dbg !510
  %512 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %mdeps560 = getelementptr inbounds %struct.Mat, %struct.Mat* %512, i32 0, i32 4, !dbg !510
  %513 = load i32, i32* %mdeps560, align 4, !dbg !510
  %mul561 = mul nsw i32 %511, %513, !dbg !510
  %add562 = add nsw i32 %add559, %mul561, !dbg !510
  %514 = load i32, i32* %k, align 4, !dbg !510
  %add563 = add nsw i32 %add562, %514, !dbg !510
  %idxprom564 = sext i32 %add563 to i64, !dbg !510
  %515 = load %struct.Mat*, %struct.Mat** %wrk1.addr, align 8, !dbg !510
  %m565 = getelementptr inbounds %struct.Mat, %struct.Mat* %515, i32 0, i32 0, !dbg !510
  %516 = load float*, float** %m565, align 8, !dbg !510
  %arrayidx566 = getelementptr inbounds float, float* %516, i64 %idxprom564, !dbg !510
  %517 = load float, float* %arrayidx566, align 4, !dbg !510
  %add567 = fadd float %add548, %517, !dbg !511
  store float %add567, float* %s0, align 4, !dbg !512
  %518 = load float, float* %s0, align 4, !dbg !513
  %519 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %mrows568 = getelementptr inbounds %struct.Mat, %struct.Mat* %519, i32 0, i32 2, !dbg !514
  %520 = load i32, i32* %mrows568, align 4, !dbg !514
  %mul569 = mul nsw i32 3, %520, !dbg !514
  %521 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %mcols570 = getelementptr inbounds %struct.Mat, %struct.Mat* %521, i32 0, i32 3, !dbg !514
  %522 = load i32, i32* %mcols570, align 4, !dbg !514
  %mul571 = mul nsw i32 %mul569, %522, !dbg !514
  %523 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %mdeps572 = getelementptr inbounds %struct.Mat, %struct.Mat* %523, i32 0, i32 4, !dbg !514
  %524 = load i32, i32* %mdeps572, align 4, !dbg !514
  %mul573 = mul nsw i32 %mul571, %524, !dbg !514
  %525 = load i32, i32* %i, align 4, !dbg !514
  %526 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %mcols574 = getelementptr inbounds %struct.Mat, %struct.Mat* %526, i32 0, i32 3, !dbg !514
  %527 = load i32, i32* %mcols574, align 4, !dbg !514
  %mul575 = mul nsw i32 %525, %527, !dbg !514
  %528 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %mdeps576 = getelementptr inbounds %struct.Mat, %struct.Mat* %528, i32 0, i32 4, !dbg !514
  %529 = load i32, i32* %mdeps576, align 4, !dbg !514
  %mul577 = mul nsw i32 %mul575, %529, !dbg !514
  %add578 = add nsw i32 %mul573, %mul577, !dbg !514
  %530 = load i32, i32* %j, align 4, !dbg !514
  %531 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %mdeps579 = getelementptr inbounds %struct.Mat, %struct.Mat* %531, i32 0, i32 4, !dbg !514
  %532 = load i32, i32* %mdeps579, align 4, !dbg !514
  %mul580 = mul nsw i32 %530, %532, !dbg !514
  %add581 = add nsw i32 %add578, %mul580, !dbg !514
  %533 = load i32, i32* %k, align 4, !dbg !514
  %add582 = add nsw i32 %add581, %533, !dbg !514
  %idxprom583 = sext i32 %add582 to i64, !dbg !514
  %534 = load %struct.Mat*, %struct.Mat** %a.addr, align 8, !dbg !514
  %m584 = getelementptr inbounds %struct.Mat, %struct.Mat* %534, i32 0, i32 0, !dbg !514
  %535 = load float*, float** %m584, align 8, !dbg !514
  %arrayidx585 = getelementptr inbounds float, float* %535, i64 %idxprom583, !dbg !514
  %536 = load float, float* %arrayidx585, align 4, !dbg !514
  %mul586 = fmul float %518, %536, !dbg !515
  %537 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %mrows587 = getelementptr inbounds %struct.Mat, %struct.Mat* %537, i32 0, i32 2, !dbg !516
  %538 = load i32, i32* %mrows587, align 4, !dbg !516
  %mul588 = mul nsw i32 0, %538, !dbg !516
  %539 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %mcols589 = getelementptr inbounds %struct.Mat, %struct.Mat* %539, i32 0, i32 3, !dbg !516
  %540 = load i32, i32* %mcols589, align 4, !dbg !516
  %mul590 = mul nsw i32 %mul588, %540, !dbg !516
  %541 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %mdeps591 = getelementptr inbounds %struct.Mat, %struct.Mat* %541, i32 0, i32 4, !dbg !516
  %542 = load i32, i32* %mdeps591, align 4, !dbg !516
  %mul592 = mul nsw i32 %mul590, %542, !dbg !516
  %543 = load i32, i32* %i, align 4, !dbg !516
  %544 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %mcols593 = getelementptr inbounds %struct.Mat, %struct.Mat* %544, i32 0, i32 3, !dbg !516
  %545 = load i32, i32* %mcols593, align 4, !dbg !516
  %mul594 = mul nsw i32 %543, %545, !dbg !516
  %546 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %mdeps595 = getelementptr inbounds %struct.Mat, %struct.Mat* %546, i32 0, i32 4, !dbg !516
  %547 = load i32, i32* %mdeps595, align 4, !dbg !516
  %mul596 = mul nsw i32 %mul594, %547, !dbg !516
  %add597 = add nsw i32 %mul592, %mul596, !dbg !516
  %548 = load i32, i32* %j, align 4, !dbg !516
  %549 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %mdeps598 = getelementptr inbounds %struct.Mat, %struct.Mat* %549, i32 0, i32 4, !dbg !516
  %550 = load i32, i32* %mdeps598, align 4, !dbg !516
  %mul599 = mul nsw i32 %548, %550, !dbg !516
  %add600 = add nsw i32 %add597, %mul599, !dbg !516
  %551 = load i32, i32* %k, align 4, !dbg !516
  %add601 = add nsw i32 %add600, %551, !dbg !516
  %idxprom602 = sext i32 %add601 to i64, !dbg !516
  %552 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !516
  %m603 = getelementptr inbounds %struct.Mat, %struct.Mat* %552, i32 0, i32 0, !dbg !516
  %553 = load float*, float** %m603, align 8, !dbg !516
  %arrayidx604 = getelementptr inbounds float, float* %553, i64 %idxprom602, !dbg !516
  %554 = load float, float* %arrayidx604, align 4, !dbg !516
  %sub605 = fsub float %mul586, %554, !dbg !517
  %555 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %mrows606 = getelementptr inbounds %struct.Mat, %struct.Mat* %555, i32 0, i32 2, !dbg !518
  %556 = load i32, i32* %mrows606, align 4, !dbg !518
  %mul607 = mul nsw i32 0, %556, !dbg !518
  %557 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %mcols608 = getelementptr inbounds %struct.Mat, %struct.Mat* %557, i32 0, i32 3, !dbg !518
  %558 = load i32, i32* %mcols608, align 4, !dbg !518
  %mul609 = mul nsw i32 %mul607, %558, !dbg !518
  %559 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %mdeps610 = getelementptr inbounds %struct.Mat, %struct.Mat* %559, i32 0, i32 4, !dbg !518
  %560 = load i32, i32* %mdeps610, align 4, !dbg !518
  %mul611 = mul nsw i32 %mul609, %560, !dbg !518
  %561 = load i32, i32* %i, align 4, !dbg !518
  %562 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %mcols612 = getelementptr inbounds %struct.Mat, %struct.Mat* %562, i32 0, i32 3, !dbg !518
  %563 = load i32, i32* %mcols612, align 4, !dbg !518
  %mul613 = mul nsw i32 %561, %563, !dbg !518
  %564 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %mdeps614 = getelementptr inbounds %struct.Mat, %struct.Mat* %564, i32 0, i32 4, !dbg !518
  %565 = load i32, i32* %mdeps614, align 4, !dbg !518
  %mul615 = mul nsw i32 %mul613, %565, !dbg !518
  %add616 = add nsw i32 %mul611, %mul615, !dbg !518
  %566 = load i32, i32* %j, align 4, !dbg !518
  %567 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %mdeps617 = getelementptr inbounds %struct.Mat, %struct.Mat* %567, i32 0, i32 4, !dbg !518
  %568 = load i32, i32* %mdeps617, align 4, !dbg !518
  %mul618 = mul nsw i32 %566, %568, !dbg !518
  %add619 = add nsw i32 %add616, %mul618, !dbg !518
  %569 = load i32, i32* %k, align 4, !dbg !518
  %add620 = add nsw i32 %add619, %569, !dbg !518
  %idxprom621 = sext i32 %add620 to i64, !dbg !518
  %570 = load %struct.Mat*, %struct.Mat** %bnd.addr, align 8, !dbg !518
  %m622 = getelementptr inbounds %struct.Mat, %struct.Mat* %570, i32 0, i32 0, !dbg !518
  %571 = load float*, float** %m622, align 8, !dbg !518
  %arrayidx623 = getelementptr inbounds float, float* %571, i64 %idxprom621, !dbg !518
  %572 = load float, float* %arrayidx623, align 4, !dbg !518
  %mul624 = fmul float %sub605, %572, !dbg !519
  store float %mul624, float* %ss, align 4, !dbg !520
  %573 = load float, float* %ss, align 4, !dbg !521
  %574 = load float, float* %ss, align 4, !dbg !522
  %mul625 = fmul float %573, %574, !dbg !523
  %575 = load float, float* %gosa, align 4, !dbg !524
  %add626 = fadd float %575, %mul625, !dbg !524
  store float %add626, float* %gosa, align 4, !dbg !524
  %576 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %mrows627 = getelementptr inbounds %struct.Mat, %struct.Mat* %576, i32 0, i32 2, !dbg !525
  %577 = load i32, i32* %mrows627, align 4, !dbg !525
  %mul628 = mul nsw i32 0, %577, !dbg !525
  %578 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %mcols629 = getelementptr inbounds %struct.Mat, %struct.Mat* %578, i32 0, i32 3, !dbg !525
  %579 = load i32, i32* %mcols629, align 4, !dbg !525
  %mul630 = mul nsw i32 %mul628, %579, !dbg !525
  %580 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %mdeps631 = getelementptr inbounds %struct.Mat, %struct.Mat* %580, i32 0, i32 4, !dbg !525
  %581 = load i32, i32* %mdeps631, align 4, !dbg !525
  %mul632 = mul nsw i32 %mul630, %581, !dbg !525
  %582 = load i32, i32* %i, align 4, !dbg !525
  %583 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %mcols633 = getelementptr inbounds %struct.Mat, %struct.Mat* %583, i32 0, i32 3, !dbg !525
  %584 = load i32, i32* %mcols633, align 4, !dbg !525
  %mul634 = mul nsw i32 %582, %584, !dbg !525
  %585 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %mdeps635 = getelementptr inbounds %struct.Mat, %struct.Mat* %585, i32 0, i32 4, !dbg !525
  %586 = load i32, i32* %mdeps635, align 4, !dbg !525
  %mul636 = mul nsw i32 %mul634, %586, !dbg !525
  %add637 = add nsw i32 %mul632, %mul636, !dbg !525
  %587 = load i32, i32* %j, align 4, !dbg !525
  %588 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %mdeps638 = getelementptr inbounds %struct.Mat, %struct.Mat* %588, i32 0, i32 4, !dbg !525
  %589 = load i32, i32* %mdeps638, align 4, !dbg !525
  %mul639 = mul nsw i32 %587, %589, !dbg !525
  %add640 = add nsw i32 %add637, %mul639, !dbg !525
  %590 = load i32, i32* %k, align 4, !dbg !525
  %add641 = add nsw i32 %add640, %590, !dbg !525
  %idxprom642 = sext i32 %add641 to i64, !dbg !525
  %591 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !525
  %m643 = getelementptr inbounds %struct.Mat, %struct.Mat* %591, i32 0, i32 0, !dbg !525
  %592 = load float*, float** %m643, align 8, !dbg !525
  %arrayidx644 = getelementptr inbounds float, float* %592, i64 %idxprom642, !dbg !525
  %593 = load float, float* %arrayidx644, align 4, !dbg !525
  %594 = load float, float* @omega, align 4, !dbg !526
  %595 = load float, float* %ss, align 4, !dbg !527
  %mul645 = fmul float %594, %595, !dbg !528
  %add646 = fadd float %593, %mul645, !dbg !529
  %596 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %mrows647 = getelementptr inbounds %struct.Mat, %struct.Mat* %596, i32 0, i32 2, !dbg !530
  %597 = load i32, i32* %mrows647, align 4, !dbg !530
  %mul648 = mul nsw i32 0, %597, !dbg !530
  %598 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %mcols649 = getelementptr inbounds %struct.Mat, %struct.Mat* %598, i32 0, i32 3, !dbg !530
  %599 = load i32, i32* %mcols649, align 4, !dbg !530
  %mul650 = mul nsw i32 %mul648, %599, !dbg !530
  %600 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %mdeps651 = getelementptr inbounds %struct.Mat, %struct.Mat* %600, i32 0, i32 4, !dbg !530
  %601 = load i32, i32* %mdeps651, align 4, !dbg !530
  %mul652 = mul nsw i32 %mul650, %601, !dbg !530
  %602 = load i32, i32* %i, align 4, !dbg !530
  %603 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %mcols653 = getelementptr inbounds %struct.Mat, %struct.Mat* %603, i32 0, i32 3, !dbg !530
  %604 = load i32, i32* %mcols653, align 4, !dbg !530
  %mul654 = mul nsw i32 %602, %604, !dbg !530
  %605 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %mdeps655 = getelementptr inbounds %struct.Mat, %struct.Mat* %605, i32 0, i32 4, !dbg !530
  %606 = load i32, i32* %mdeps655, align 4, !dbg !530
  %mul656 = mul nsw i32 %mul654, %606, !dbg !530
  %add657 = add nsw i32 %mul652, %mul656, !dbg !530
  %607 = load i32, i32* %j, align 4, !dbg !530
  %608 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %mdeps658 = getelementptr inbounds %struct.Mat, %struct.Mat* %608, i32 0, i32 4, !dbg !530
  %609 = load i32, i32* %mdeps658, align 4, !dbg !530
  %mul659 = mul nsw i32 %607, %609, !dbg !530
  %add660 = add nsw i32 %add657, %mul659, !dbg !530
  %610 = load i32, i32* %k, align 4, !dbg !530
  %add661 = add nsw i32 %add660, %610, !dbg !530
  %idxprom662 = sext i32 %add661 to i64, !dbg !530
  %611 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !530
  %m663 = getelementptr inbounds %struct.Mat, %struct.Mat* %611, i32 0, i32 0, !dbg !530
  %612 = load float*, float** %m663, align 8, !dbg !530
  %arrayidx664 = getelementptr inbounds float, float* %612, i64 %idxprom662, !dbg !530
  store float %add646, float* %arrayidx664, align 4, !dbg !531
  br label %for.inc, !dbg !532

for.inc:                                          ; preds = %for.body.11
  %613 = load i32, i32* %k, align 4, !dbg !533
  %inc = add nsw i32 %613, 1, !dbg !533
  store i32 %inc, i32* %k, align 4, !dbg !533
  br label %for.cond.9, !dbg !534

for.end:                                          ; preds = %for.cond.9
  br label %for.inc.665, !dbg !535

for.inc.665:                                      ; preds = %for.end
  %614 = load i32, i32* %j, align 4, !dbg !536
  %inc666 = add nsw i32 %614, 1, !dbg !536
  store i32 %inc666, i32* %j, align 4, !dbg !536
  br label %for.cond.6, !dbg !537

for.end.667:                                      ; preds = %for.cond.6
  br label %for.inc.668, !dbg !538

for.inc.668:                                      ; preds = %for.end.667
  %615 = load i32, i32* %i, align 4, !dbg !539
  %inc669 = add nsw i32 %615, 1, !dbg !539
  store i32 %inc669, i32* %i, align 4, !dbg !539
  br label %for.cond.3, !dbg !540

for.end.670:                                      ; preds = %for.cond.3
  store i32 1, i32* %i, align 4, !dbg !541
  br label %for.cond.671, !dbg !543

for.cond.671:                                     ; preds = %for.inc.722, %for.end.670
  %616 = load i32, i32* %i, align 4, !dbg !544
  %617 = load i32, i32* %imax, align 4, !dbg !548
  %cmp672 = icmp slt i32 %616, %617, !dbg !549
  br i1 %cmp672, label %for.body.673, label %for.end.724, !dbg !550

for.body.673:                                     ; preds = %for.cond.671
  store i32 1, i32* %j, align 4, !dbg !551
  br label %for.cond.674, !dbg !553

for.cond.674:                                     ; preds = %for.inc.719, %for.body.673
  %618 = load i32, i32* %j, align 4, !dbg !554
  %619 = load i32, i32* %jmax, align 4, !dbg !558
  %cmp675 = icmp slt i32 %618, %619, !dbg !559
  br i1 %cmp675, label %for.body.676, label %for.end.721, !dbg !560

for.body.676:                                     ; preds = %for.cond.674
  store i32 1, i32* %k, align 4, !dbg !561
  br label %for.cond.677, !dbg !563

for.cond.677:                                     ; preds = %for.inc.716, %for.body.676
  %620 = load i32, i32* %k, align 4, !dbg !564
  %621 = load i32, i32* %kmax, align 4, !dbg !568
  %cmp678 = icmp slt i32 %620, %621, !dbg !569
  br i1 %cmp678, label %for.body.679, label %for.end.718, !dbg !570

for.body.679:                                     ; preds = %for.cond.677
  %622 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %mrows680 = getelementptr inbounds %struct.Mat, %struct.Mat* %622, i32 0, i32 2, !dbg !571
  %623 = load i32, i32* %mrows680, align 4, !dbg !571
  %mul681 = mul nsw i32 0, %623, !dbg !571
  %624 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %mcols682 = getelementptr inbounds %struct.Mat, %struct.Mat* %624, i32 0, i32 3, !dbg !571
  %625 = load i32, i32* %mcols682, align 4, !dbg !571
  %mul683 = mul nsw i32 %mul681, %625, !dbg !571
  %626 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %mdeps684 = getelementptr inbounds %struct.Mat, %struct.Mat* %626, i32 0, i32 4, !dbg !571
  %627 = load i32, i32* %mdeps684, align 4, !dbg !571
  %mul685 = mul nsw i32 %mul683, %627, !dbg !571
  %628 = load i32, i32* %i, align 4, !dbg !571
  %629 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %mcols686 = getelementptr inbounds %struct.Mat, %struct.Mat* %629, i32 0, i32 3, !dbg !571
  %630 = load i32, i32* %mcols686, align 4, !dbg !571
  %mul687 = mul nsw i32 %628, %630, !dbg !571
  %631 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %mdeps688 = getelementptr inbounds %struct.Mat, %struct.Mat* %631, i32 0, i32 4, !dbg !571
  %632 = load i32, i32* %mdeps688, align 4, !dbg !571
  %mul689 = mul nsw i32 %mul687, %632, !dbg !571
  %add690 = add nsw i32 %mul685, %mul689, !dbg !571
  %633 = load i32, i32* %j, align 4, !dbg !571
  %634 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %mdeps691 = getelementptr inbounds %struct.Mat, %struct.Mat* %634, i32 0, i32 4, !dbg !571
  %635 = load i32, i32* %mdeps691, align 4, !dbg !571
  %mul692 = mul nsw i32 %633, %635, !dbg !571
  %add693 = add nsw i32 %add690, %mul692, !dbg !571
  %636 = load i32, i32* %k, align 4, !dbg !571
  %add694 = add nsw i32 %add693, %636, !dbg !571
  %idxprom695 = sext i32 %add694 to i64, !dbg !571
  %637 = load %struct.Mat*, %struct.Mat** %wrk2.addr, align 8, !dbg !571
  %m696 = getelementptr inbounds %struct.Mat, %struct.Mat* %637, i32 0, i32 0, !dbg !571
  %638 = load float*, float** %m696, align 8, !dbg !571
  %arrayidx697 = getelementptr inbounds float, float* %638, i64 %idxprom695, !dbg !571
  %639 = load float, float* %arrayidx697, align 4, !dbg !571
  %640 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %mrows698 = getelementptr inbounds %struct.Mat, %struct.Mat* %640, i32 0, i32 2, !dbg !572
  %641 = load i32, i32* %mrows698, align 4, !dbg !572
  %mul699 = mul nsw i32 0, %641, !dbg !572
  %642 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %mcols700 = getelementptr inbounds %struct.Mat, %struct.Mat* %642, i32 0, i32 3, !dbg !572
  %643 = load i32, i32* %mcols700, align 4, !dbg !572
  %mul701 = mul nsw i32 %mul699, %643, !dbg !572
  %644 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %mdeps702 = getelementptr inbounds %struct.Mat, %struct.Mat* %644, i32 0, i32 4, !dbg !572
  %645 = load i32, i32* %mdeps702, align 4, !dbg !572
  %mul703 = mul nsw i32 %mul701, %645, !dbg !572
  %646 = load i32, i32* %i, align 4, !dbg !572
  %647 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %mcols704 = getelementptr inbounds %struct.Mat, %struct.Mat* %647, i32 0, i32 3, !dbg !572
  %648 = load i32, i32* %mcols704, align 4, !dbg !572
  %mul705 = mul nsw i32 %646, %648, !dbg !572
  %649 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %mdeps706 = getelementptr inbounds %struct.Mat, %struct.Mat* %649, i32 0, i32 4, !dbg !572
  %650 = load i32, i32* %mdeps706, align 4, !dbg !572
  %mul707 = mul nsw i32 %mul705, %650, !dbg !572
  %add708 = add nsw i32 %mul703, %mul707, !dbg !572
  %651 = load i32, i32* %j, align 4, !dbg !572
  %652 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %mdeps709 = getelementptr inbounds %struct.Mat, %struct.Mat* %652, i32 0, i32 4, !dbg !572
  %653 = load i32, i32* %mdeps709, align 4, !dbg !572
  %mul710 = mul nsw i32 %651, %653, !dbg !572
  %add711 = add nsw i32 %add708, %mul710, !dbg !572
  %654 = load i32, i32* %k, align 4, !dbg !572
  %add712 = add nsw i32 %add711, %654, !dbg !572
  %idxprom713 = sext i32 %add712 to i64, !dbg !572
  %655 = load %struct.Mat*, %struct.Mat** %p.addr, align 8, !dbg !572
  %m714 = getelementptr inbounds %struct.Mat, %struct.Mat* %655, i32 0, i32 0, !dbg !572
  %656 = load float*, float** %m714, align 8, !dbg !572
  %arrayidx715 = getelementptr inbounds float, float* %656, i64 %idxprom713, !dbg !572
  store float %639, float* %arrayidx715, align 4, !dbg !573
  br label %for.inc.716, !dbg !572

for.inc.716:                                      ; preds = %for.body.679
  %657 = load i32, i32* %k, align 4, !dbg !574
  %inc717 = add nsw i32 %657, 1, !dbg !574
  store i32 %inc717, i32* %k, align 4, !dbg !574
  br label %for.cond.677, !dbg !575

for.end.718:                                      ; preds = %for.cond.677
  br label %for.inc.719, !dbg !576

for.inc.719:                                      ; preds = %for.end.718
  %658 = load i32, i32* %j, align 4, !dbg !577
  %inc720 = add nsw i32 %658, 1, !dbg !577
  store i32 %inc720, i32* %j, align 4, !dbg !577
  br label %for.cond.674, !dbg !578

for.end.721:                                      ; preds = %for.cond.674
  br label %for.inc.722, !dbg !579

for.inc.722:                                      ; preds = %for.end.721
  %659 = load i32, i32* %i, align 4, !dbg !580
  %inc723 = add nsw i32 %659, 1, !dbg !580
  store i32 %inc723, i32* %i, align 4, !dbg !580
  br label %for.cond.671, !dbg !581

for.end.724:                                      ; preds = %for.cond.671
  br label %for.inc.725, !dbg !582

for.inc.725:                                      ; preds = %for.end.724
  %660 = load i32, i32* %n, align 4, !dbg !583
  %inc726 = add nsw i32 %660, 1, !dbg !583
  store i32 %inc726, i32* %n, align 4, !dbg !583
  br label %for.cond, !dbg !584

for.end.727:                                      ; preds = %for.cond
  %661 = load float, float* %gosa, align 4, !dbg !585
  ret float %661, !dbg !586
}

; Function Attrs: nounwind uwtable
define void @clearMat(%struct.Mat* %Mat) #0 {
entry:
  %Mat.addr = alloca %struct.Mat*, align 8
  store %struct.Mat* %Mat, %struct.Mat** %Mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat** %Mat.addr, metadata !587, metadata !67), !dbg !588
  %0 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !589
  %m = getelementptr inbounds %struct.Mat, %struct.Mat* %0, i32 0, i32 0, !dbg !591
  %1 = load float*, float** %m, align 8, !dbg !591
  %tobool = icmp ne float* %1, null, !dbg !589
  br i1 %tobool, label %if.then, label %if.end, !dbg !592

if.then:                                          ; preds = %entry
  %2 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !593
  %m1 = getelementptr inbounds %struct.Mat, %struct.Mat* %2, i32 0, i32 0, !dbg !594
  %3 = load float*, float** %m1, align 8, !dbg !594
  %4 = bitcast float* %3 to i8*, !dbg !593
  call void @free(i8* %4) #6, !dbg !595
  br label %if.end, !dbg !595

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !596
  %m2 = getelementptr inbounds %struct.Mat, %struct.Mat* %5, i32 0, i32 0, !dbg !597
  store float* null, float** %m2, align 8, !dbg !598
  %6 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !599
  %mnums = getelementptr inbounds %struct.Mat, %struct.Mat* %6, i32 0, i32 1, !dbg !600
  store i32 0, i32* %mnums, align 4, !dbg !601
  %7 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !602
  %mcols = getelementptr inbounds %struct.Mat, %struct.Mat* %7, i32 0, i32 3, !dbg !603
  store i32 0, i32* %mcols, align 4, !dbg !604
  %8 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !605
  %mrows = getelementptr inbounds %struct.Mat, %struct.Mat* %8, i32 0, i32 2, !dbg !606
  store i32 0, i32* %mrows, align 4, !dbg !607
  %9 = load %struct.Mat*, %struct.Mat** %Mat.addr, align 8, !dbg !608
  %mdeps = getelementptr inbounds %struct.Mat, %struct.Mat* %9, i32 0, i32 4, !dbg !609
  store i32 0, i32* %mdeps, align 4, !dbg !610
  ret void, !dbg !611
}

; Function Attrs: nounwind uwtable
define double @fflop(i32 %mx, i32 %my, i32 %mz) #0 {
entry:
  %mx.addr = alloca i32, align 4
  %my.addr = alloca i32, align 4
  %mz.addr = alloca i32, align 4
  store i32 %mx, i32* %mx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mx.addr, metadata !612, metadata !67), !dbg !613
  store i32 %my, i32* %my.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %my.addr, metadata !614, metadata !67), !dbg !615
  store i32 %mz, i32* %mz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mz.addr, metadata !616, metadata !67), !dbg !617
  %0 = load i32, i32* %mz.addr, align 4, !dbg !618
  %sub = sub nsw i32 %0, 2, !dbg !619
  %conv = sitofp i32 %sub to double, !dbg !620
  %1 = load i32, i32* %my.addr, align 4, !dbg !621
  %sub1 = sub nsw i32 %1, 2, !dbg !622
  %conv2 = sitofp i32 %sub1 to double, !dbg !623
  %mul = fmul double %conv, %conv2, !dbg !624
  %2 = load i32, i32* %mx.addr, align 4, !dbg !625
  %sub3 = sub nsw i32 %2, 2, !dbg !626
  %conv4 = sitofp i32 %sub3 to double, !dbg !627
  %mul5 = fmul double %mul, %conv4, !dbg !628
  %mul6 = fmul double %mul5, 3.400000e+01, !dbg !629
  ret double %mul6, !dbg !630
}

; Function Attrs: nounwind uwtable
define double @mflops(i32 %nn, double %cpu, double %flop) #0 {
entry:
  %nn.addr = alloca i32, align 4
  %cpu.addr = alloca double, align 8
  %flop.addr = alloca double, align 8
  store i32 %nn, i32* %nn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nn.addr, metadata !631, metadata !67), !dbg !632
  store double %cpu, double* %cpu.addr, align 8
  call void @llvm.dbg.declare(metadata double* %cpu.addr, metadata !633, metadata !67), !dbg !634
  store double %flop, double* %flop.addr, align 8
  call void @llvm.dbg.declare(metadata double* %flop.addr, metadata !635, metadata !67), !dbg !636
  %0 = load double, double* %flop.addr, align 8, !dbg !637
  %1 = load double, double* %cpu.addr, align 8, !dbg !638
  %div = fdiv double %0, %1, !dbg !639
  %mul = fmul double %div, 1.000000e-06, !dbg !640
  %2 = load i32, i32* %nn.addr, align 4, !dbg !641
  %conv = sitofp i32 %2 to double, !dbg !642
  %mul1 = fmul double %mul, %conv, !dbg !643
  ret double %mul1, !dbg !644
}

; Function Attrs: nounwind uwtable
define void @set_param(i32* %is, i8* %size) #0 {
entry:
  %is.addr = alloca i32*, align 8
  %size.addr = alloca i8*, align 8
  store i32* %is, i32** %is.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %is.addr, metadata !645, metadata !67), !dbg !646
  store i8* %size, i8** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %size.addr, metadata !647, metadata !67), !dbg !648
  %0 = load i8*, i8** %size.addr, align 8, !dbg !649
  %call = call i32 @strcmp(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #7, !dbg !651
  %tobool = icmp ne i32 %call, 0, !dbg !651
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !652

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %size.addr, align 8, !dbg !653
  %call1 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0)) #7, !dbg !655
  %tobool2 = icmp ne i32 %call1, 0, !dbg !655
  br i1 %tobool2, label %if.end, label %if.then, !dbg !656

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i32*, i32** %is.addr, align 8, !dbg !657
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 0, !dbg !657
  store i32 32, i32* %arrayidx, align 4, !dbg !659
  %3 = load i32*, i32** %is.addr, align 8, !dbg !660
  %arrayidx3 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !660
  store i32 32, i32* %arrayidx3, align 4, !dbg !661
  %4 = load i32*, i32** %is.addr, align 8, !dbg !662
  %arrayidx4 = getelementptr inbounds i32, i32* %4, i64 2, !dbg !662
  store i32 64, i32* %arrayidx4, align 4, !dbg !663
  br label %return, !dbg !664

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8*, i8** %size.addr, align 8, !dbg !665
  %call5 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0)) #7, !dbg !667
  %tobool6 = icmp ne i32 %call5, 0, !dbg !667
  br i1 %tobool6, label %lor.lhs.false.7, label %if.then.10, !dbg !668

lor.lhs.false.7:                                  ; preds = %if.end
  %6 = load i8*, i8** %size.addr, align 8, !dbg !669
  %call8 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0)) #7, !dbg !671
  %tobool9 = icmp ne i32 %call8, 0, !dbg !671
  br i1 %tobool9, label %if.end.14, label %if.then.10, !dbg !672

if.then.10:                                       ; preds = %lor.lhs.false.7, %if.end
  %7 = load i32*, i32** %is.addr, align 8, !dbg !673
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 0, !dbg !673
  store i32 64, i32* %arrayidx11, align 4, !dbg !675
  %8 = load i32*, i32** %is.addr, align 8, !dbg !676
  %arrayidx12 = getelementptr inbounds i32, i32* %8, i64 1, !dbg !676
  store i32 64, i32* %arrayidx12, align 4, !dbg !677
  %9 = load i32*, i32** %is.addr, align 8, !dbg !678
  %arrayidx13 = getelementptr inbounds i32, i32* %9, i64 2, !dbg !678
  store i32 128, i32* %arrayidx13, align 4, !dbg !679
  br label %return, !dbg !680

if.end.14:                                        ; preds = %lor.lhs.false.7
  %10 = load i8*, i8** %size.addr, align 8, !dbg !681
  %call15 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0)) #7, !dbg !683
  %tobool16 = icmp ne i32 %call15, 0, !dbg !683
  br i1 %tobool16, label %lor.lhs.false.17, label %if.then.20, !dbg !684

lor.lhs.false.17:                                 ; preds = %if.end.14
  %11 = load i8*, i8** %size.addr, align 8, !dbg !685
  %call18 = call i32 @strcmp(i8* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0)) #7, !dbg !687
  %tobool19 = icmp ne i32 %call18, 0, !dbg !687
  br i1 %tobool19, label %if.end.24, label %if.then.20, !dbg !688

if.then.20:                                       ; preds = %lor.lhs.false.17, %if.end.14
  %12 = load i32*, i32** %is.addr, align 8, !dbg !689
  %arrayidx21 = getelementptr inbounds i32, i32* %12, i64 0, !dbg !689
  store i32 128, i32* %arrayidx21, align 4, !dbg !691
  %13 = load i32*, i32** %is.addr, align 8, !dbg !692
  %arrayidx22 = getelementptr inbounds i32, i32* %13, i64 1, !dbg !692
  store i32 128, i32* %arrayidx22, align 4, !dbg !693
  %14 = load i32*, i32** %is.addr, align 8, !dbg !694
  %arrayidx23 = getelementptr inbounds i32, i32* %14, i64 2, !dbg !694
  store i32 256, i32* %arrayidx23, align 4, !dbg !695
  br label %return, !dbg !696

if.end.24:                                        ; preds = %lor.lhs.false.17
  %15 = load i8*, i8** %size.addr, align 8, !dbg !697
  %call25 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)) #7, !dbg !699
  %tobool26 = icmp ne i32 %call25, 0, !dbg !699
  br i1 %tobool26, label %lor.lhs.false.27, label %if.then.30, !dbg !700

lor.lhs.false.27:                                 ; preds = %if.end.24
  %16 = load i8*, i8** %size.addr, align 8, !dbg !701
  %call28 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0)) #7, !dbg !703
  %tobool29 = icmp ne i32 %call28, 0, !dbg !703
  br i1 %tobool29, label %if.end.34, label %if.then.30, !dbg !704

if.then.30:                                       ; preds = %lor.lhs.false.27, %if.end.24
  %17 = load i32*, i32** %is.addr, align 8, !dbg !705
  %arrayidx31 = getelementptr inbounds i32, i32* %17, i64 0, !dbg !705
  store i32 256, i32* %arrayidx31, align 4, !dbg !707
  %18 = load i32*, i32** %is.addr, align 8, !dbg !708
  %arrayidx32 = getelementptr inbounds i32, i32* %18, i64 1, !dbg !708
  store i32 256, i32* %arrayidx32, align 4, !dbg !709
  %19 = load i32*, i32** %is.addr, align 8, !dbg !710
  %arrayidx33 = getelementptr inbounds i32, i32* %19, i64 2, !dbg !710
  store i32 512, i32* %arrayidx33, align 4, !dbg !711
  br label %return, !dbg !712

if.end.34:                                        ; preds = %lor.lhs.false.27
  %20 = load i8*, i8** %size.addr, align 8, !dbg !713
  %call35 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i32 0, i32 0)) #7, !dbg !715
  %tobool36 = icmp ne i32 %call35, 0, !dbg !715
  br i1 %tobool36, label %lor.lhs.false.37, label %if.then.40, !dbg !716

lor.lhs.false.37:                                 ; preds = %if.end.34
  %21 = load i8*, i8** %size.addr, align 8, !dbg !717
  %call38 = call i32 @strcmp(i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i32 0, i32 0)) #7, !dbg !719
  %tobool39 = icmp ne i32 %call38, 0, !dbg !719
  br i1 %tobool39, label %if.else, label %if.then.40, !dbg !720

if.then.40:                                       ; preds = %lor.lhs.false.37, %if.end.34
  %22 = load i32*, i32** %is.addr, align 8, !dbg !721
  %arrayidx41 = getelementptr inbounds i32, i32* %22, i64 0, !dbg !721
  store i32 512, i32* %arrayidx41, align 4, !dbg !723
  %23 = load i32*, i32** %is.addr, align 8, !dbg !724
  %arrayidx42 = getelementptr inbounds i32, i32* %23, i64 1, !dbg !724
  store i32 512, i32* %arrayidx42, align 4, !dbg !725
  %24 = load i32*, i32** %is.addr, align 8, !dbg !726
  %arrayidx43 = getelementptr inbounds i32, i32* %24, i64 2, !dbg !726
  store i32 1024, i32* %arrayidx43, align 4, !dbg !727
  br label %return, !dbg !728

if.else:                                          ; preds = %lor.lhs.false.37
  %call44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0)), !dbg !729
  call void @exit(i32 6) #8, !dbg !731
  unreachable, !dbg !731

return:                                           ; preds = %if.then.40, %if.then.30, %if.then.20, %if.then.10, %if.then
  ret void, !dbg !732
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #3

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: nounwind
declare void @free(i8*) #5

; Function Attrs: nounwind uwtable
define double @second() #0 {
entry:
  %tm = alloca %struct.timeval, align 8
  %t = alloca double, align 8
  call void @llvm.dbg.declare(metadata %struct.timeval* %tm, metadata !733, metadata !67), !dbg !743
  call void @llvm.dbg.declare(metadata double* %t, metadata !744, metadata !67), !dbg !745
  %call = call i32 @gettimeofday(%struct.timeval* %tm, %struct.timezone* null) #6, !dbg !746
  %0 = load i32, i32* @second.base_sec, align 4, !dbg !747
  %cmp = icmp eq i32 %0, 0, !dbg !749
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !750

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @second.base_usec, align 4, !dbg !751
  %cmp1 = icmp eq i32 %1, 0, !dbg !753
  br i1 %cmp1, label %if.then, label %if.else, !dbg !754

if.then:                                          ; preds = %land.lhs.true
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %tm, i32 0, i32 0, !dbg !755
  %2 = load i64, i64* %tv_sec, align 8, !dbg !755
  %conv = trunc i64 %2 to i32, !dbg !757
  store i32 %conv, i32* @second.base_sec, align 4, !dbg !758
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %tm, i32 0, i32 1, !dbg !759
  %3 = load i64, i64* %tv_usec, align 8, !dbg !759
  %conv2 = trunc i64 %3 to i32, !dbg !760
  store i32 %conv2, i32* @second.base_usec, align 4, !dbg !761
  store double 0.000000e+00, double* %t, align 8, !dbg !762
  br label %if.end, !dbg !763

if.else:                                          ; preds = %land.lhs.true, %entry
  %tv_sec3 = getelementptr inbounds %struct.timeval, %struct.timeval* %tm, i32 0, i32 0, !dbg !764
  %4 = load i64, i64* %tv_sec3, align 8, !dbg !764
  %5 = load i32, i32* @second.base_sec, align 4, !dbg !766
  %conv4 = sext i32 %5 to i64, !dbg !766
  %sub = sub nsw i64 %4, %conv4, !dbg !767
  %conv5 = sitofp i64 %sub to double, !dbg !768
  %tv_usec6 = getelementptr inbounds %struct.timeval, %struct.timeval* %tm, i32 0, i32 1, !dbg !769
  %6 = load i64, i64* %tv_usec6, align 8, !dbg !769
  %7 = load i32, i32* @second.base_usec, align 4, !dbg !770
  %conv7 = sext i32 %7 to i64, !dbg !770
  %sub8 = sub nsw i64 %6, %conv7, !dbg !771
  %conv9 = sitofp i64 %sub8 to double, !dbg !772
  %div = fdiv double %conv9, 1.000000e+06, !dbg !773
  %add = fadd double %conv5, %div, !dbg !774
  store double %add, double* %t, align 8, !dbg !775
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load double, double* %t, align 8, !dbg !776
  ret double %8, !dbg !777
}

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #5

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }
attributes #8 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!63, !64}
!llvm.ident = !{!65}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !8, globals: !52)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/himenobmtxpa")
!2 = !{}
!3 = !{!4, !5, !7, !6}
!4 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!8 = !{!9, !17, !20, !23, !27, !39, !42, !45, !46, !49}
!9 = !DISubprogram(name: "main", scope: !10, file: !10, line: 71, type: !11, isLocal: false, isDefinition: true, scopeLine: 71, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!10 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Misc/himenobmtxpa/tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/himenobmtxpa")
!11 = !DISubroutineType(types: !12)
!12 = !{!13, !13, !14}
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64, align: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64, align: 64)
!16 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!17 = !DISubprogram(name: "fflop", scope: !10, file: !10, line: 143, type: !18, isLocal: false, isDefinition: true, scopeLine: 143, flags: DIFlagPrototyped, isOptimized: false, function: double (i32, i32, i32)* @fflop, variables: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{!4, !13, !13, !13}
!20 = !DISubprogram(name: "mflops", scope: !10, file: !10, line: 148, type: !21, isLocal: false, isDefinition: true, scopeLine: 148, flags: DIFlagPrototyped, isOptimized: false, function: double (i32, double, double)* @mflops, variables: !2)
!21 = !DISubroutineType(types: !22)
!22 = !{!4, !13, !4, !4}
!23 = !DISubprogram(name: "set_param", scope: !10, file: !10, line: 152, type: !24, isLocal: false, isDefinition: true, scopeLine: 152, flags: DIFlagPrototyped, isOptimized: false, function: void (i32*, i8*)* @set_param, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{null, !26, !15}
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!27 = !DISubprogram(name: "newMat", scope: !10, file: !10, line: 188, type: !28, isLocal: false, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, function: i32 (%struct.Mat*, i32, i32, i32, i32)* @newMat, variables: !2)
!28 = !DISubroutineType(types: !29)
!29 = !{!13, !30, !13, !13, !13, !13}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "Matrix", file: !10, line: 55, baseType: !32)
!32 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mat", file: !10, line: 46, size: 192, align: 64, elements: !33)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !32, file: !10, line: 47, baseType: !5, size: 64, align: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "mnums", scope: !32, file: !10, line: 48, baseType: !13, size: 32, align: 32, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "mrows", scope: !32, file: !10, line: 49, baseType: !13, size: 32, align: 32, offset: 96)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "mcols", scope: !32, file: !10, line: 50, baseType: !13, size: 32, align: 32, offset: 128)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "mdeps", scope: !32, file: !10, line: 51, baseType: !13, size: 32, align: 32, offset: 160)
!39 = !DISubprogram(name: "clearMat", scope: !10, file: !10, line: 200, type: !40, isLocal: false, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.Mat*)* @clearMat, variables: !2)
!40 = !DISubroutineType(types: !41)
!41 = !{null, !30}
!42 = !DISubprogram(name: "mat_set", scope: !10, file: !10, line: 210, type: !43, isLocal: false, isDefinition: true, scopeLine: 210, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.Mat*, i32, float)* @mat_set, variables: !2)
!43 = !DISubroutineType(types: !44)
!44 = !{null, !30, !13, !6}
!45 = !DISubprogram(name: "mat_set_init", scope: !10, file: !10, line: 219, type: !40, isLocal: false, isDefinition: true, scopeLine: 219, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.Mat*)* @mat_set_init, variables: !2)
!46 = !DISubprogram(name: "jacobi", scope: !10, file: !10, line: 229, type: !47, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: false, function: float (i32, %struct.Mat*, %struct.Mat*, %struct.Mat*, %struct.Mat*, %struct.Mat*, %struct.Mat*, %struct.Mat*)* @jacobi, variables: !2)
!47 = !DISubroutineType(types: !48)
!48 = !{!6, !13, !30, !30, !30, !30, !30, !30, !30}
!49 = !DISubprogram(name: "second", scope: !10, file: !10, line: 263, type: !50, isLocal: false, isDefinition: true, scopeLine: 263, isOptimized: false, function: double ()* @second, variables: !2)
!50 = !DISubroutineType(types: !51)
!51 = !{!4}
!52 = !{!53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!53 = !DIGlobalVariable(name: "omega", scope: !0, file: !10, line: 68, type: !6, isLocal: false, isDefinition: true, variable: float* @omega)
!54 = !DIGlobalVariable(name: "base_sec", scope: !49, file: !10, line: 268, type: !13, isLocal: true, isDefinition: true, variable: i32* @second.base_sec)
!55 = !DIGlobalVariable(name: "base_usec", scope: !49, file: !10, line: 268, type: !13, isLocal: true, isDefinition: true, variable: i32* @second.base_usec)
!56 = !DIGlobalVariable(name: "a", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @a)
!57 = !DIGlobalVariable(name: "b", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @b)
!58 = !DIGlobalVariable(name: "c", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @c)
!59 = !DIGlobalVariable(name: "p", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @p)
!60 = !DIGlobalVariable(name: "bnd", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @bnd)
!61 = !DIGlobalVariable(name: "wrk1", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @wrk1)
!62 = !DIGlobalVariable(name: "wrk2", scope: !0, file: !10, line: 69, type: !31, isLocal: false, isDefinition: true, variable: %struct.Mat* @wrk2)
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!66 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !9, file: !10, line: 71, type: !13)
!67 = !DIExpression()
!68 = !DILocation(line: 71, column: 14, scope: !9)
!69 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !9, file: !10, line: 71, type: !14)
!70 = !DILocation(line: 71, column: 26, scope: !9)
!71 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !9, file: !10, line: 72, type: !13)
!72 = !DILocation(line: 72, column: 7, scope: !9)
!73 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !9, file: !10, line: 72, type: !13)
!74 = !DILocation(line: 72, column: 10, scope: !9)
!75 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !9, file: !10, line: 72, type: !13)
!76 = !DILocation(line: 72, column: 13, scope: !9)
!77 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nn", scope: !9, file: !10, line: 72, type: !13)
!78 = !DILocation(line: 72, column: 16, scope: !9)
!79 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imax", scope: !9, file: !10, line: 73, type: !13)
!80 = !DILocation(line: 73, column: 7, scope: !9)
!81 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "jmax", scope: !9, file: !10, line: 73, type: !13)
!82 = !DILocation(line: 73, column: 13, scope: !9)
!83 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kmax", scope: !9, file: !10, line: 73, type: !13)
!84 = !DILocation(line: 73, column: 19, scope: !9)
!85 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mimax", scope: !9, file: !10, line: 73, type: !13)
!86 = !DILocation(line: 73, column: 25, scope: !9)
!87 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mjmax", scope: !9, file: !10, line: 73, type: !13)
!88 = !DILocation(line: 73, column: 32, scope: !9)
!89 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mkmax", scope: !9, file: !10, line: 73, type: !13)
!90 = !DILocation(line: 73, column: 39, scope: !9)
!91 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "msize", scope: !9, file: !10, line: 73, type: !92)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13, size: 96, align: 32, elements: !93)
!93 = !{!94}
!94 = !DISubrange(count: 3)
!95 = !DILocation(line: 73, column: 46, scope: !9)
!96 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gosa", scope: !9, file: !10, line: 74, type: !6)
!97 = !DILocation(line: 74, column: 9, scope: !9)
!98 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpu0", scope: !9, file: !10, line: 75, type: !4)
!99 = !DILocation(line: 75, column: 10, scope: !9)
!100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpu1", scope: !9, file: !10, line: 75, type: !4)
!101 = !DILocation(line: 75, column: 16, scope: !9)
!102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cpu", scope: !9, file: !10, line: 75, type: !4)
!103 = !DILocation(line: 75, column: 22, scope: !9)
!104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "flop", scope: !9, file: !10, line: 75, type: !4)
!105 = !DILocation(line: 75, column: 27, scope: !9)
!106 = !DILocation(line: 78, column: 3, scope: !9)
!107 = !DILocation(line: 78, column: 12, scope: !9)
!108 = !DILocation(line: 79, column: 3, scope: !9)
!109 = !DILocation(line: 79, column: 12, scope: !9)
!110 = !DILocation(line: 80, column: 3, scope: !9)
!111 = !DILocation(line: 80, column: 12, scope: !9)
!112 = !DILocation(line: 82, column: 11, scope: !9)
!113 = !DILocation(line: 82, column: 9, scope: !9)
!114 = !DILocation(line: 83, column: 11, scope: !9)
!115 = !DILocation(line: 83, column: 9, scope: !9)
!116 = !DILocation(line: 84, column: 11, scope: !9)
!117 = !DILocation(line: 84, column: 9, scope: !9)
!118 = !DILocation(line: 85, column: 10, scope: !9)
!119 = !DILocation(line: 85, column: 16, scope: !9)
!120 = !DILocation(line: 85, column: 8, scope: !9)
!121 = !DILocation(line: 86, column: 10, scope: !9)
!122 = !DILocation(line: 86, column: 16, scope: !9)
!123 = !DILocation(line: 86, column: 8, scope: !9)
!124 = !DILocation(line: 87, column: 10, scope: !9)
!125 = !DILocation(line: 87, column: 16, scope: !9)
!126 = !DILocation(line: 87, column: 8, scope: !9)
!127 = !DILocation(line: 89, column: 48, scope: !9)
!128 = !DILocation(line: 89, column: 55, scope: !9)
!129 = !DILocation(line: 89, column: 62, scope: !9)
!130 = !DILocation(line: 89, column: 3, scope: !9)
!131 = !DILocation(line: 90, column: 44, scope: !9)
!132 = !DILocation(line: 90, column: 50, scope: !9)
!133 = !DILocation(line: 90, column: 56, scope: !9)
!134 = !DILocation(line: 90, column: 3, scope: !9)
!135 = !DILocation(line: 95, column: 17, scope: !9)
!136 = !DILocation(line: 95, column: 24, scope: !9)
!137 = !DILocation(line: 95, column: 31, scope: !9)
!138 = !DILocation(line: 95, column: 3, scope: !9)
!139 = !DILocation(line: 96, column: 19, scope: !9)
!140 = !DILocation(line: 96, column: 26, scope: !9)
!141 = !DILocation(line: 96, column: 33, scope: !9)
!142 = !DILocation(line: 96, column: 3, scope: !9)
!143 = !DILocation(line: 97, column: 20, scope: !9)
!144 = !DILocation(line: 97, column: 27, scope: !9)
!145 = !DILocation(line: 97, column: 34, scope: !9)
!146 = !DILocation(line: 97, column: 3, scope: !9)
!147 = !DILocation(line: 98, column: 20, scope: !9)
!148 = !DILocation(line: 98, column: 27, scope: !9)
!149 = !DILocation(line: 98, column: 34, scope: !9)
!150 = !DILocation(line: 98, column: 3, scope: !9)
!151 = !DILocation(line: 99, column: 17, scope: !9)
!152 = !DILocation(line: 99, column: 24, scope: !9)
!153 = !DILocation(line: 99, column: 31, scope: !9)
!154 = !DILocation(line: 99, column: 3, scope: !9)
!155 = !DILocation(line: 100, column: 17, scope: !9)
!156 = !DILocation(line: 100, column: 24, scope: !9)
!157 = !DILocation(line: 100, column: 31, scope: !9)
!158 = !DILocation(line: 100, column: 3, scope: !9)
!159 = !DILocation(line: 101, column: 17, scope: !9)
!160 = !DILocation(line: 101, column: 24, scope: !9)
!161 = !DILocation(line: 101, column: 31, scope: !9)
!162 = !DILocation(line: 101, column: 3, scope: !9)
!163 = !DILocation(line: 103, column: 3, scope: !9)
!164 = !DILocation(line: 104, column: 3, scope: !9)
!165 = !DILocation(line: 105, column: 3, scope: !9)
!166 = !DILocation(line: 106, column: 3, scope: !9)
!167 = !DILocation(line: 107, column: 3, scope: !9)
!168 = !DILocation(line: 108, column: 3, scope: !9)
!169 = !DILocation(line: 109, column: 3, scope: !9)
!170 = !DILocation(line: 110, column: 3, scope: !9)
!171 = !DILocation(line: 111, column: 3, scope: !9)
!172 = !DILocation(line: 112, column: 3, scope: !9)
!173 = !DILocation(line: 113, column: 3, scope: !9)
!174 = !DILocation(line: 114, column: 3, scope: !9)
!175 = !DILocation(line: 115, column: 3, scope: !9)
!176 = !DILocation(line: 116, column: 3, scope: !9)
!177 = !DILocation(line: 121, column: 6, scope: !9)
!178 = !DILocation(line: 123, column: 17, scope: !9)
!179 = !DILocation(line: 123, column: 10, scope: !9)
!180 = !DILocation(line: 123, column: 8, scope: !9)
!181 = !DILocation(line: 125, column: 43, scope: !9)
!182 = !DILocation(line: 125, column: 3, scope: !9)
!183 = !DILocation(line: 126, column: 27, scope: !9)
!184 = !DILocation(line: 126, column: 3, scope: !9)
!185 = !DILocation(line: 131, column: 3, scope: !9)
!186 = !DILocation(line: 132, column: 3, scope: !9)
!187 = !DILocation(line: 133, column: 3, scope: !9)
!188 = !DILocation(line: 134, column: 3, scope: !9)
!189 = !DILocation(line: 135, column: 3, scope: !9)
!190 = !DILocation(line: 136, column: 3, scope: !9)
!191 = !DILocation(line: 137, column: 3, scope: !9)
!192 = !DILocation(line: 139, column: 3, scope: !9)
!193 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Mat", arg: 1, scope: !27, file: !10, line: 188, type: !30)
!194 = !DILocation(line: 188, column: 20, scope: !27)
!195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mnums", arg: 2, scope: !27, file: !10, line: 188, type: !13)
!196 = !DILocation(line: 188, column: 29, scope: !27)
!197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mrows", arg: 3, scope: !27, file: !10, line: 188, type: !13)
!198 = !DILocation(line: 188, column: 40, scope: !27)
!199 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mcols", arg: 4, scope: !27, file: !10, line: 188, type: !13)
!200 = !DILocation(line: 188, column: 51, scope: !27)
!201 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mdeps", arg: 5, scope: !27, file: !10, line: 188, type: !13)
!202 = !DILocation(line: 188, column: 62, scope: !27)
!203 = !DILocation(line: 189, column: 16, scope: !27)
!204 = !DILocation(line: 189, column: 3, scope: !27)
!205 = !DILocation(line: 189, column: 8, scope: !27)
!206 = !DILocation(line: 189, column: 14, scope: !27)
!207 = !DILocation(line: 190, column: 16, scope: !27)
!208 = !DILocation(line: 190, column: 3, scope: !27)
!209 = !DILocation(line: 190, column: 8, scope: !27)
!210 = !DILocation(line: 190, column: 14, scope: !27)
!211 = !DILocation(line: 191, column: 16, scope: !27)
!212 = !DILocation(line: 191, column: 3, scope: !27)
!213 = !DILocation(line: 191, column: 8, scope: !27)
!214 = !DILocation(line: 191, column: 14, scope: !27)
!215 = !DILocation(line: 192, column: 16, scope: !27)
!216 = !DILocation(line: 192, column: 3, scope: !27)
!217 = !DILocation(line: 192, column: 8, scope: !27)
!218 = !DILocation(line: 192, column: 14, scope: !27)
!219 = !DILocation(line: 193, column: 3, scope: !27)
!220 = !DILocation(line: 193, column: 8, scope: !27)
!221 = !DILocation(line: 193, column: 10, scope: !27)
!222 = !DILocation(line: 195, column: 14, scope: !27)
!223 = !DILocation(line: 195, column: 22, scope: !27)
!224 = !DILocation(line: 195, column: 20, scope: !27)
!225 = !DILocation(line: 195, column: 30, scope: !27)
!226 = !DILocation(line: 195, column: 28, scope: !27)
!227 = !DILocation(line: 195, column: 38, scope: !27)
!228 = !DILocation(line: 195, column: 36, scope: !27)
!229 = !DILocation(line: 195, column: 44, scope: !27)
!230 = !DILocation(line: 195, column: 7, scope: !27)
!231 = !DILocation(line: 194, column: 12, scope: !27)
!232 = !DILocation(line: 194, column: 3, scope: !27)
!233 = !DILocation(line: 194, column: 8, scope: !27)
!234 = !DILocation(line: 194, column: 10, scope: !27)
!235 = !DILocation(line: 197, column: 11, scope: !27)
!236 = !DILocation(line: 197, column: 16, scope: !27)
!237 = !DILocation(line: 197, column: 18, scope: !27)
!238 = !DILocation(line: 197, column: 10, scope: !27)
!239 = !DILocation(line: 197, column: 3, scope: !27)
!240 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Mat", arg: 1, scope: !45, file: !10, line: 219, type: !30)
!241 = !DILocation(line: 219, column: 27, scope: !45)
!242 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !45, file: !10, line: 220, type: !13)
!243 = !DILocation(line: 220, column: 7, scope: !45)
!244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !45, file: !10, line: 220, type: !13)
!245 = !DILocation(line: 220, column: 10, scope: !45)
!246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !45, file: !10, line: 220, type: !13)
!247 = !DILocation(line: 220, column: 13, scope: !45)
!248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l", scope: !45, file: !10, line: 220, type: !13)
!249 = !DILocation(line: 220, column: 16, scope: !45)
!250 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tt", scope: !45, file: !10, line: 221, type: !6)
!251 = !DILocation(line: 221, column: 9, scope: !45)
!252 = !DILocation(line: 223, column: 10, scope: !253)
!253 = distinct !DILexicalBlock(scope: !45, file: !10, line: 223, column: 3)
!254 = !DILocation(line: 223, column: 8, scope: !253)
!255 = !DILocation(line: 223, column: 15, scope: !256)
!256 = !DILexicalBlockFile(scope: !257, file: !10, discriminator: 2)
!257 = !DILexicalBlockFile(scope: !258, file: !10, discriminator: 1)
!258 = distinct !DILexicalBlock(scope: !253, file: !10, line: 223, column: 3)
!259 = !DILocation(line: 223, column: 19, scope: !258)
!260 = !DILocation(line: 223, column: 24, scope: !258)
!261 = !DILocation(line: 223, column: 17, scope: !258)
!262 = !DILocation(line: 223, column: 3, scope: !253)
!263 = !DILocation(line: 224, column: 12, scope: !264)
!264 = distinct !DILexicalBlock(scope: !258, file: !10, line: 224, column: 5)
!265 = !DILocation(line: 224, column: 10, scope: !264)
!266 = !DILocation(line: 224, column: 17, scope: !267)
!267 = !DILexicalBlockFile(scope: !268, file: !10, discriminator: 2)
!268 = !DILexicalBlockFile(scope: !269, file: !10, discriminator: 1)
!269 = distinct !DILexicalBlock(scope: !264, file: !10, line: 224, column: 5)
!270 = !DILocation(line: 224, column: 21, scope: !269)
!271 = !DILocation(line: 224, column: 26, scope: !269)
!272 = !DILocation(line: 224, column: 19, scope: !269)
!273 = !DILocation(line: 224, column: 5, scope: !264)
!274 = !DILocation(line: 225, column: 14, scope: !275)
!275 = distinct !DILexicalBlock(scope: !269, file: !10, line: 225, column: 7)
!276 = !DILocation(line: 225, column: 12, scope: !275)
!277 = !DILocation(line: 225, column: 19, scope: !278)
!278 = !DILexicalBlockFile(scope: !279, file: !10, discriminator: 2)
!279 = !DILexicalBlockFile(scope: !280, file: !10, discriminator: 1)
!280 = distinct !DILexicalBlock(scope: !275, file: !10, line: 225, column: 7)
!281 = !DILocation(line: 225, column: 23, scope: !280)
!282 = !DILocation(line: 225, column: 28, scope: !280)
!283 = !DILocation(line: 225, column: 21, scope: !280)
!284 = !DILocation(line: 225, column: 7, scope: !275)
!285 = !DILocation(line: 226, column: 39, scope: !280)
!286 = !DILocation(line: 226, column: 43, scope: !280)
!287 = !DILocation(line: 226, column: 41, scope: !280)
!288 = !DILocation(line: 226, column: 31, scope: !280)
!289 = !DILocation(line: 226, column: 57, scope: !280)
!290 = !DILocation(line: 226, column: 62, scope: !280)
!291 = !DILocation(line: 226, column: 68, scope: !280)
!292 = !DILocation(line: 226, column: 76, scope: !280)
!293 = !DILocation(line: 226, column: 81, scope: !280)
!294 = !DILocation(line: 226, column: 87, scope: !280)
!295 = !DILocation(line: 226, column: 73, scope: !280)
!296 = !DILocation(line: 226, column: 48, scope: !280)
!297 = !DILocation(line: 226, column: 46, scope: !280)
!298 = !DILocation(line: 226, column: 9, scope: !280)
!299 = !DILocation(line: 226, column: 29, scope: !280)
!300 = !DILocation(line: 225, column: 36, scope: !280)
!301 = !DILocation(line: 225, column: 7, scope: !280)
!302 = !DILocation(line: 226, column: 91, scope: !275)
!303 = !DILocation(line: 224, column: 34, scope: !269)
!304 = !DILocation(line: 224, column: 5, scope: !269)
!305 = !DILocation(line: 226, column: 91, scope: !264)
!306 = !DILocation(line: 223, column: 32, scope: !258)
!307 = !DILocation(line: 223, column: 3, scope: !258)
!308 = !DILocation(line: 227, column: 1, scope: !45)
!309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Mat", arg: 1, scope: !42, file: !10, line: 210, type: !30)
!310 = !DILocation(line: 210, column: 22, scope: !42)
!311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l", arg: 2, scope: !42, file: !10, line: 210, type: !13)
!312 = !DILocation(line: 210, column: 31, scope: !42)
!313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val", arg: 3, scope: !42, file: !10, line: 210, type: !6)
!314 = !DILocation(line: 210, column: 40, scope: !42)
!315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !42, file: !10, line: 211, type: !13)
!316 = !DILocation(line: 211, column: 7, scope: !42)
!317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !42, file: !10, line: 211, type: !13)
!318 = !DILocation(line: 211, column: 10, scope: !42)
!319 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !42, file: !10, line: 211, type: !13)
!320 = !DILocation(line: 211, column: 13, scope: !42)
!321 = !DILocation(line: 213, column: 10, scope: !322)
!322 = distinct !DILexicalBlock(scope: !42, file: !10, line: 213, column: 3)
!323 = !DILocation(line: 213, column: 8, scope: !322)
!324 = !DILocation(line: 213, column: 15, scope: !325)
!325 = !DILexicalBlockFile(scope: !326, file: !10, discriminator: 2)
!326 = !DILexicalBlockFile(scope: !327, file: !10, discriminator: 1)
!327 = distinct !DILexicalBlock(scope: !322, file: !10, line: 213, column: 3)
!328 = !DILocation(line: 213, column: 19, scope: !327)
!329 = !DILocation(line: 213, column: 24, scope: !327)
!330 = !DILocation(line: 213, column: 17, scope: !327)
!331 = !DILocation(line: 213, column: 3, scope: !322)
!332 = !DILocation(line: 214, column: 12, scope: !333)
!333 = distinct !DILexicalBlock(scope: !327, file: !10, line: 214, column: 5)
!334 = !DILocation(line: 214, column: 10, scope: !333)
!335 = !DILocation(line: 214, column: 17, scope: !336)
!336 = !DILexicalBlockFile(scope: !337, file: !10, discriminator: 2)
!337 = !DILexicalBlockFile(scope: !338, file: !10, discriminator: 1)
!338 = distinct !DILexicalBlock(scope: !333, file: !10, line: 214, column: 5)
!339 = !DILocation(line: 214, column: 21, scope: !338)
!340 = !DILocation(line: 214, column: 26, scope: !338)
!341 = !DILocation(line: 214, column: 19, scope: !338)
!342 = !DILocation(line: 214, column: 5, scope: !333)
!343 = !DILocation(line: 215, column: 14, scope: !344)
!344 = distinct !DILexicalBlock(scope: !338, file: !10, line: 215, column: 7)
!345 = !DILocation(line: 215, column: 12, scope: !344)
!346 = !DILocation(line: 215, column: 19, scope: !347)
!347 = !DILexicalBlockFile(scope: !348, file: !10, discriminator: 2)
!348 = !DILexicalBlockFile(scope: !349, file: !10, discriminator: 1)
!349 = distinct !DILexicalBlock(scope: !344, file: !10, line: 215, column: 7)
!350 = !DILocation(line: 215, column: 23, scope: !349)
!351 = !DILocation(line: 215, column: 28, scope: !349)
!352 = !DILocation(line: 215, column: 21, scope: !349)
!353 = !DILocation(line: 215, column: 7, scope: !344)
!354 = !DILocation(line: 216, column: 31, scope: !349)
!355 = !DILocation(line: 216, column: 9, scope: !349)
!356 = !DILocation(line: 216, column: 29, scope: !349)
!357 = !DILocation(line: 215, column: 36, scope: !349)
!358 = !DILocation(line: 215, column: 7, scope: !349)
!359 = !DILocation(line: 216, column: 31, scope: !344)
!360 = !DILocation(line: 214, column: 34, scope: !338)
!361 = !DILocation(line: 214, column: 5, scope: !338)
!362 = !DILocation(line: 216, column: 31, scope: !333)
!363 = !DILocation(line: 213, column: 32, scope: !327)
!364 = !DILocation(line: 213, column: 3, scope: !327)
!365 = !DILocation(line: 217, column: 1, scope: !42)
!366 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nn", arg: 1, scope: !46, file: !10, line: 229, type: !13)
!367 = !DILocation(line: 229, column: 18, scope: !46)
!368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !46, file: !10, line: 229, type: !30)
!369 = !DILocation(line: 229, column: 30, scope: !46)
!370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !46, file: !10, line: 229, type: !30)
!371 = !DILocation(line: 229, column: 41, scope: !46)
!372 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 4, scope: !46, file: !10, line: 229, type: !30)
!373 = !DILocation(line: 229, column: 52, scope: !46)
!374 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "p", arg: 5, scope: !46, file: !10, line: 230, type: !30)
!375 = !DILocation(line: 230, column: 22, scope: !46)
!376 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "bnd", arg: 6, scope: !46, file: !10, line: 230, type: !30)
!377 = !DILocation(line: 230, column: 33, scope: !46)
!378 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wrk1", arg: 7, scope: !46, file: !10, line: 230, type: !30)
!379 = !DILocation(line: 230, column: 46, scope: !46)
!380 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wrk2", arg: 8, scope: !46, file: !10, line: 230, type: !30)
!381 = !DILocation(line: 230, column: 60, scope: !46)
!382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !46, file: !10, line: 231, type: !13)
!383 = !DILocation(line: 231, column: 7, scope: !46)
!384 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !46, file: !10, line: 231, type: !13)
!385 = !DILocation(line: 231, column: 10, scope: !46)
!386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !46, file: !10, line: 231, type: !13)
!387 = !DILocation(line: 231, column: 13, scope: !46)
!388 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n", scope: !46, file: !10, line: 231, type: !13)
!389 = !DILocation(line: 231, column: 16, scope: !46)
!390 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imax", scope: !46, file: !10, line: 231, type: !13)
!391 = !DILocation(line: 231, column: 19, scope: !46)
!392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "jmax", scope: !46, file: !10, line: 231, type: !13)
!393 = !DILocation(line: 231, column: 25, scope: !46)
!394 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "kmax", scope: !46, file: !10, line: 231, type: !13)
!395 = !DILocation(line: 231, column: 31, scope: !46)
!396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "gosa", scope: !46, file: !10, line: 232, type: !6)
!397 = !DILocation(line: 232, column: 9, scope: !46)
!398 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s0", scope: !46, file: !10, line: 232, type: !6)
!399 = !DILocation(line: 232, column: 15, scope: !46)
!400 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ss", scope: !46, file: !10, line: 232, type: !6)
!401 = !DILocation(line: 232, column: 19, scope: !46)
!402 = !DILocation(line: 234, column: 10, scope: !46)
!403 = !DILocation(line: 234, column: 13, scope: !46)
!404 = !DILocation(line: 234, column: 19, scope: !46)
!405 = !DILocation(line: 234, column: 8, scope: !46)
!406 = !DILocation(line: 235, column: 10, scope: !46)
!407 = !DILocation(line: 235, column: 13, scope: !46)
!408 = !DILocation(line: 235, column: 19, scope: !46)
!409 = !DILocation(line: 235, column: 8, scope: !46)
!410 = !DILocation(line: 236, column: 10, scope: !46)
!411 = !DILocation(line: 236, column: 13, scope: !46)
!412 = !DILocation(line: 236, column: 19, scope: !46)
!413 = !DILocation(line: 236, column: 8, scope: !46)
!414 = !DILocation(line: 238, column: 10, scope: !415)
!415 = distinct !DILexicalBlock(scope: !46, file: !10, line: 238, column: 3)
!416 = !DILocation(line: 238, column: 8, scope: !415)
!417 = !DILocation(line: 238, column: 15, scope: !418)
!418 = !DILexicalBlockFile(scope: !419, file: !10, discriminator: 2)
!419 = !DILexicalBlockFile(scope: !420, file: !10, discriminator: 1)
!420 = distinct !DILexicalBlock(scope: !415, file: !10, line: 238, column: 3)
!421 = !DILocation(line: 238, column: 19, scope: !420)
!422 = !DILocation(line: 238, column: 17, scope: !420)
!423 = !DILocation(line: 238, column: 3, scope: !415)
!424 = !DILocation(line: 239, column: 10, scope: !425)
!425 = distinct !DILexicalBlock(scope: !420, file: !10, line: 238, column: 28)
!426 = !DILocation(line: 241, column: 12, scope: !427)
!427 = distinct !DILexicalBlock(scope: !425, file: !10, line: 241, column: 5)
!428 = !DILocation(line: 241, column: 10, scope: !427)
!429 = !DILocation(line: 241, column: 17, scope: !430)
!430 = !DILexicalBlockFile(scope: !431, file: !10, discriminator: 2)
!431 = !DILexicalBlockFile(scope: !432, file: !10, discriminator: 1)
!432 = distinct !DILexicalBlock(scope: !427, file: !10, line: 241, column: 5)
!433 = !DILocation(line: 241, column: 21, scope: !432)
!434 = !DILocation(line: 241, column: 19, scope: !432)
!435 = !DILocation(line: 241, column: 5, scope: !427)
!436 = !DILocation(line: 242, column: 14, scope: !437)
!437 = distinct !DILexicalBlock(scope: !432, file: !10, line: 242, column: 7)
!438 = !DILocation(line: 242, column: 12, scope: !437)
!439 = !DILocation(line: 242, column: 19, scope: !440)
!440 = !DILexicalBlockFile(scope: !441, file: !10, discriminator: 2)
!441 = !DILexicalBlockFile(scope: !442, file: !10, discriminator: 1)
!442 = distinct !DILexicalBlock(scope: !437, file: !10, line: 242, column: 7)
!443 = !DILocation(line: 242, column: 23, scope: !442)
!444 = !DILocation(line: 242, column: 21, scope: !442)
!445 = !DILocation(line: 242, column: 7, scope: !437)
!446 = !DILocation(line: 243, column: 16, scope: !447)
!447 = distinct !DILexicalBlock(scope: !442, file: !10, line: 243, column: 9)
!448 = !DILocation(line: 243, column: 14, scope: !447)
!449 = !DILocation(line: 243, column: 21, scope: !450)
!450 = !DILexicalBlockFile(scope: !451, file: !10, discriminator: 2)
!451 = !DILexicalBlockFile(scope: !452, file: !10, discriminator: 1)
!452 = distinct !DILexicalBlock(scope: !447, file: !10, line: 243, column: 9)
!453 = !DILocation(line: 243, column: 25, scope: !452)
!454 = !DILocation(line: 243, column: 23, scope: !452)
!455 = !DILocation(line: 243, column: 9, scope: !447)
!456 = !DILocation(line: 244, column: 16, scope: !457)
!457 = distinct !DILexicalBlock(scope: !452, file: !10, line: 243, column: 36)
!458 = !DILocation(line: 244, column: 36, scope: !457)
!459 = !DILocation(line: 244, column: 34, scope: !457)
!460 = !DILocation(line: 244, column: 60, scope: !457)
!461 = !DILocation(line: 244, column: 80, scope: !457)
!462 = !DILocation(line: 244, column: 78, scope: !457)
!463 = !DILocation(line: 244, column: 58, scope: !457)
!464 = !DILocation(line: 244, column: 104, scope: !457)
!465 = !DILocation(line: 244, column: 124, scope: !457)
!466 = !DILocation(line: 244, column: 122, scope: !457)
!467 = !DILocation(line: 244, column: 102, scope: !457)
!468 = !DILocation(line: 244, column: 148, scope: !457)
!469 = !DILocation(line: 244, column: 169, scope: !457)
!470 = !DILocation(line: 244, column: 197, scope: !457)
!471 = !DILocation(line: 244, column: 195, scope: !457)
!472 = !DILocation(line: 244, column: 225, scope: !457)
!473 = !DILocation(line: 244, column: 223, scope: !457)
!474 = !DILocation(line: 244, column: 253, scope: !457)
!475 = !DILocation(line: 244, column: 251, scope: !457)
!476 = !DILocation(line: 244, column: 166, scope: !457)
!477 = !DILocation(line: 244, column: 146, scope: !457)
!478 = !DILocation(line: 244, column: 282, scope: !457)
!479 = !DILocation(line: 244, column: 303, scope: !457)
!480 = !DILocation(line: 244, column: 331, scope: !457)
!481 = !DILocation(line: 244, column: 329, scope: !457)
!482 = !DILocation(line: 244, column: 359, scope: !457)
!483 = !DILocation(line: 244, column: 357, scope: !457)
!484 = !DILocation(line: 244, column: 387, scope: !457)
!485 = !DILocation(line: 244, column: 385, scope: !457)
!486 = !DILocation(line: 244, column: 300, scope: !457)
!487 = !DILocation(line: 244, column: 280, scope: !457)
!488 = !DILocation(line: 244, column: 416, scope: !457)
!489 = !DILocation(line: 244, column: 437, scope: !457)
!490 = !DILocation(line: 244, column: 465, scope: !457)
!491 = !DILocation(line: 244, column: 463, scope: !457)
!492 = !DILocation(line: 244, column: 493, scope: !457)
!493 = !DILocation(line: 244, column: 491, scope: !457)
!494 = !DILocation(line: 244, column: 521, scope: !457)
!495 = !DILocation(line: 244, column: 519, scope: !457)
!496 = !DILocation(line: 244, column: 434, scope: !457)
!497 = !DILocation(line: 244, column: 414, scope: !457)
!498 = !DILocation(line: 244, column: 550, scope: !457)
!499 = !DILocation(line: 244, column: 570, scope: !457)
!500 = !DILocation(line: 244, column: 568, scope: !457)
!501 = !DILocation(line: 244, column: 548, scope: !457)
!502 = !DILocation(line: 244, column: 594, scope: !457)
!503 = !DILocation(line: 244, column: 614, scope: !457)
!504 = !DILocation(line: 244, column: 612, scope: !457)
!505 = !DILocation(line: 244, column: 592, scope: !457)
!506 = !DILocation(line: 244, column: 638, scope: !457)
!507 = !DILocation(line: 244, column: 658, scope: !457)
!508 = !DILocation(line: 244, column: 656, scope: !457)
!509 = !DILocation(line: 244, column: 636, scope: !457)
!510 = !DILocation(line: 244, column: 682, scope: !457)
!511 = !DILocation(line: 244, column: 680, scope: !457)
!512 = !DILocation(line: 244, column: 14, scope: !457)
!513 = !DILocation(line: 246, column: 17, scope: !457)
!514 = !DILocation(line: 246, column: 22, scope: !457)
!515 = !DILocation(line: 246, column: 20, scope: !457)
!516 = !DILocation(line: 246, column: 42, scope: !457)
!517 = !DILocation(line: 246, column: 40, scope: !457)
!518 = !DILocation(line: 246, column: 63, scope: !457)
!519 = !DILocation(line: 246, column: 61, scope: !457)
!520 = !DILocation(line: 246, column: 14, scope: !457)
!521 = !DILocation(line: 248, column: 19, scope: !457)
!522 = !DILocation(line: 248, column: 24, scope: !457)
!523 = !DILocation(line: 248, column: 22, scope: !457)
!524 = !DILocation(line: 248, column: 16, scope: !457)
!525 = !DILocation(line: 249, column: 34, scope: !457)
!526 = !DILocation(line: 249, column: 54, scope: !457)
!527 = !DILocation(line: 249, column: 62, scope: !457)
!528 = !DILocation(line: 249, column: 60, scope: !457)
!529 = !DILocation(line: 249, column: 52, scope: !457)
!530 = !DILocation(line: 249, column: 11, scope: !457)
!531 = !DILocation(line: 249, column: 32, scope: !457)
!532 = !DILocation(line: 250, column: 9, scope: !457)
!533 = !DILocation(line: 243, column: 32, scope: !452)
!534 = !DILocation(line: 243, column: 9, scope: !452)
!535 = !DILocation(line: 250, column: 9, scope: !447)
!536 = !DILocation(line: 242, column: 30, scope: !442)
!537 = !DILocation(line: 242, column: 7, scope: !442)
!538 = !DILocation(line: 250, column: 9, scope: !437)
!539 = !DILocation(line: 241, column: 28, scope: !432)
!540 = !DILocation(line: 241, column: 5, scope: !432)
!541 = !DILocation(line: 252, column: 12, scope: !542)
!542 = distinct !DILexicalBlock(scope: !425, file: !10, line: 252, column: 5)
!543 = !DILocation(line: 252, column: 10, scope: !542)
!544 = !DILocation(line: 252, column: 17, scope: !545)
!545 = !DILexicalBlockFile(scope: !546, file: !10, discriminator: 2)
!546 = !DILexicalBlockFile(scope: !547, file: !10, discriminator: 1)
!547 = distinct !DILexicalBlock(scope: !542, file: !10, line: 252, column: 5)
!548 = !DILocation(line: 252, column: 21, scope: !547)
!549 = !DILocation(line: 252, column: 19, scope: !547)
!550 = !DILocation(line: 252, column: 5, scope: !542)
!551 = !DILocation(line: 253, column: 14, scope: !552)
!552 = distinct !DILexicalBlock(scope: !547, file: !10, line: 253, column: 7)
!553 = !DILocation(line: 253, column: 12, scope: !552)
!554 = !DILocation(line: 253, column: 19, scope: !555)
!555 = !DILexicalBlockFile(scope: !556, file: !10, discriminator: 2)
!556 = !DILexicalBlockFile(scope: !557, file: !10, discriminator: 1)
!557 = distinct !DILexicalBlock(scope: !552, file: !10, line: 253, column: 7)
!558 = !DILocation(line: 253, column: 23, scope: !557)
!559 = !DILocation(line: 253, column: 21, scope: !557)
!560 = !DILocation(line: 253, column: 7, scope: !552)
!561 = !DILocation(line: 254, column: 16, scope: !562)
!562 = distinct !DILexicalBlock(scope: !557, file: !10, line: 254, column: 9)
!563 = !DILocation(line: 254, column: 14, scope: !562)
!564 = !DILocation(line: 254, column: 21, scope: !565)
!565 = !DILexicalBlockFile(scope: !566, file: !10, discriminator: 2)
!566 = !DILexicalBlockFile(scope: !567, file: !10, discriminator: 1)
!567 = distinct !DILexicalBlock(scope: !562, file: !10, line: 254, column: 9)
!568 = !DILocation(line: 254, column: 25, scope: !567)
!569 = !DILocation(line: 254, column: 23, scope: !567)
!570 = !DILocation(line: 254, column: 9, scope: !562)
!571 = !DILocation(line: 255, column: 31, scope: !567)
!572 = !DILocation(line: 255, column: 11, scope: !567)
!573 = !DILocation(line: 255, column: 29, scope: !567)
!574 = !DILocation(line: 254, column: 32, scope: !567)
!575 = !DILocation(line: 254, column: 9, scope: !567)
!576 = !DILocation(line: 255, column: 31, scope: !562)
!577 = !DILocation(line: 253, column: 30, scope: !557)
!578 = !DILocation(line: 253, column: 7, scope: !557)
!579 = !DILocation(line: 255, column: 31, scope: !552)
!580 = !DILocation(line: 252, column: 28, scope: !547)
!581 = !DILocation(line: 252, column: 5, scope: !547)
!582 = !DILocation(line: 257, column: 3, scope: !425)
!583 = !DILocation(line: 238, column: 24, scope: !420)
!584 = !DILocation(line: 238, column: 3, scope: !420)
!585 = !DILocation(line: 259, column: 11, scope: !46)
!586 = !DILocation(line: 259, column: 3, scope: !46)
!587 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "Mat", arg: 1, scope: !39, file: !10, line: 200, type: !30)
!588 = !DILocation(line: 200, column: 23, scope: !39)
!589 = !DILocation(line: 201, column: 7, scope: !590)
!590 = distinct !DILexicalBlock(scope: !39, file: !10, line: 201, column: 7)
!591 = !DILocation(line: 201, column: 12, scope: !590)
!592 = !DILocation(line: 201, column: 7, scope: !39)
!593 = !DILocation(line: 202, column: 10, scope: !590)
!594 = !DILocation(line: 202, column: 15, scope: !590)
!595 = !DILocation(line: 202, column: 5, scope: !590)
!596 = !DILocation(line: 203, column: 3, scope: !39)
!597 = !DILocation(line: 203, column: 8, scope: !39)
!598 = !DILocation(line: 203, column: 10, scope: !39)
!599 = !DILocation(line: 204, column: 3, scope: !39)
!600 = !DILocation(line: 204, column: 8, scope: !39)
!601 = !DILocation(line: 204, column: 14, scope: !39)
!602 = !DILocation(line: 205, column: 3, scope: !39)
!603 = !DILocation(line: 205, column: 8, scope: !39)
!604 = !DILocation(line: 205, column: 14, scope: !39)
!605 = !DILocation(line: 206, column: 3, scope: !39)
!606 = !DILocation(line: 206, column: 8, scope: !39)
!607 = !DILocation(line: 206, column: 14, scope: !39)
!608 = !DILocation(line: 207, column: 3, scope: !39)
!609 = !DILocation(line: 207, column: 8, scope: !39)
!610 = !DILocation(line: 207, column: 14, scope: !39)
!611 = !DILocation(line: 208, column: 1, scope: !39)
!612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mx", arg: 1, scope: !17, file: !10, line: 143, type: !13)
!613 = !DILocation(line: 143, column: 11, scope: !17)
!614 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "my", arg: 2, scope: !17, file: !10, line: 143, type: !13)
!615 = !DILocation(line: 143, column: 19, scope: !17)
!616 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "mz", arg: 3, scope: !17, file: !10, line: 143, type: !13)
!617 = !DILocation(line: 143, column: 27, scope: !17)
!618 = !DILocation(line: 144, column: 20, scope: !17)
!619 = !DILocation(line: 144, column: 23, scope: !17)
!620 = !DILocation(line: 144, column: 11, scope: !17)
!621 = !DILocation(line: 144, column: 39, scope: !17)
!622 = !DILocation(line: 144, column: 42, scope: !17)
!623 = !DILocation(line: 144, column: 30, scope: !17)
!624 = !DILocation(line: 144, column: 28, scope: !17)
!625 = !DILocation(line: 144, column: 58, scope: !17)
!626 = !DILocation(line: 144, column: 61, scope: !17)
!627 = !DILocation(line: 144, column: 49, scope: !17)
!628 = !DILocation(line: 144, column: 47, scope: !17)
!629 = !DILocation(line: 144, column: 66, scope: !17)
!630 = !DILocation(line: 144, column: 3, scope: !17)
!631 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nn", arg: 1, scope: !20, file: !10, line: 148, type: !13)
!632 = !DILocation(line: 148, column: 12, scope: !20)
!633 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "cpu", arg: 2, scope: !20, file: !10, line: 148, type: !4)
!634 = !DILocation(line: 148, column: 23, scope: !20)
!635 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "flop", arg: 3, scope: !20, file: !10, line: 148, type: !4)
!636 = !DILocation(line: 148, column: 35, scope: !20)
!637 = !DILocation(line: 149, column: 11, scope: !20)
!638 = !DILocation(line: 149, column: 18, scope: !20)
!639 = !DILocation(line: 149, column: 16, scope: !20)
!640 = !DILocation(line: 149, column: 22, scope: !20)
!641 = !DILocation(line: 149, column: 40, scope: !20)
!642 = !DILocation(line: 149, column: 32, scope: !20)
!643 = !DILocation(line: 149, column: 30, scope: !20)
!644 = !DILocation(line: 149, column: 3, scope: !20)
!645 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "is", arg: 1, scope: !23, file: !10, line: 152, type: !26)
!646 = !DILocation(line: 152, column: 20, scope: !23)
!647 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "size", arg: 2, scope: !23, file: !10, line: 152, type: !15)
!648 = !DILocation(line: 152, column: 32, scope: !23)
!649 = !DILocation(line: 153, column: 15, scope: !650)
!650 = distinct !DILexicalBlock(scope: !23, file: !10, line: 153, column: 7)
!651 = !DILocation(line: 153, column: 8, scope: !650)
!652 = !DILocation(line: 153, column: 27, scope: !650)
!653 = !DILocation(line: 153, column: 38, scope: !654)
!654 = !DILexicalBlockFile(scope: !650, file: !10, discriminator: 1)
!655 = !DILocation(line: 153, column: 31, scope: !650)
!656 = !DILocation(line: 153, column: 7, scope: !23)
!657 = !DILocation(line: 154, column: 5, scope: !658)
!658 = distinct !DILexicalBlock(scope: !650, file: !10, line: 153, column: 51)
!659 = !DILocation(line: 154, column: 11, scope: !658)
!660 = !DILocation(line: 155, column: 5, scope: !658)
!661 = !DILocation(line: 155, column: 11, scope: !658)
!662 = !DILocation(line: 156, column: 5, scope: !658)
!663 = !DILocation(line: 156, column: 11, scope: !658)
!664 = !DILocation(line: 157, column: 5, scope: !658)
!665 = !DILocation(line: 159, column: 15, scope: !666)
!666 = distinct !DILexicalBlock(scope: !23, file: !10, line: 159, column: 7)
!667 = !DILocation(line: 159, column: 8, scope: !666)
!668 = !DILocation(line: 159, column: 26, scope: !666)
!669 = !DILocation(line: 159, column: 37, scope: !670)
!670 = !DILexicalBlockFile(scope: !666, file: !10, discriminator: 1)
!671 = !DILocation(line: 159, column: 30, scope: !666)
!672 = !DILocation(line: 159, column: 7, scope: !23)
!673 = !DILocation(line: 160, column: 5, scope: !674)
!674 = distinct !DILexicalBlock(scope: !666, file: !10, line: 159, column: 49)
!675 = !DILocation(line: 160, column: 11, scope: !674)
!676 = !DILocation(line: 161, column: 5, scope: !674)
!677 = !DILocation(line: 161, column: 11, scope: !674)
!678 = !DILocation(line: 162, column: 5, scope: !674)
!679 = !DILocation(line: 162, column: 11, scope: !674)
!680 = !DILocation(line: 163, column: 5, scope: !674)
!681 = !DILocation(line: 165, column: 15, scope: !682)
!682 = distinct !DILexicalBlock(scope: !23, file: !10, line: 165, column: 7)
!683 = !DILocation(line: 165, column: 8, scope: !682)
!684 = !DILocation(line: 165, column: 26, scope: !682)
!685 = !DILocation(line: 165, column: 37, scope: !686)
!686 = !DILexicalBlockFile(scope: !682, file: !10, discriminator: 1)
!687 = !DILocation(line: 165, column: 30, scope: !682)
!688 = !DILocation(line: 165, column: 7, scope: !23)
!689 = !DILocation(line: 166, column: 5, scope: !690)
!690 = distinct !DILexicalBlock(scope: !682, file: !10, line: 165, column: 49)
!691 = !DILocation(line: 166, column: 11, scope: !690)
!692 = !DILocation(line: 167, column: 5, scope: !690)
!693 = !DILocation(line: 167, column: 11, scope: !690)
!694 = !DILocation(line: 168, column: 5, scope: !690)
!695 = !DILocation(line: 168, column: 11, scope: !690)
!696 = !DILocation(line: 169, column: 5, scope: !690)
!697 = !DILocation(line: 171, column: 15, scope: !698)
!698 = distinct !DILexicalBlock(scope: !23, file: !10, line: 171, column: 7)
!699 = !DILocation(line: 171, column: 8, scope: !698)
!700 = !DILocation(line: 171, column: 26, scope: !698)
!701 = !DILocation(line: 171, column: 37, scope: !702)
!702 = !DILexicalBlockFile(scope: !698, file: !10, discriminator: 1)
!703 = !DILocation(line: 171, column: 30, scope: !698)
!704 = !DILocation(line: 171, column: 7, scope: !23)
!705 = !DILocation(line: 172, column: 5, scope: !706)
!706 = distinct !DILexicalBlock(scope: !698, file: !10, line: 171, column: 49)
!707 = !DILocation(line: 172, column: 11, scope: !706)
!708 = !DILocation(line: 173, column: 5, scope: !706)
!709 = !DILocation(line: 173, column: 11, scope: !706)
!710 = !DILocation(line: 174, column: 5, scope: !706)
!711 = !DILocation(line: 174, column: 11, scope: !706)
!712 = !DILocation(line: 175, column: 5, scope: !706)
!713 = !DILocation(line: 177, column: 15, scope: !714)
!714 = distinct !DILexicalBlock(scope: !23, file: !10, line: 177, column: 7)
!715 = !DILocation(line: 177, column: 8, scope: !714)
!716 = !DILocation(line: 177, column: 27, scope: !714)
!717 = !DILocation(line: 177, column: 38, scope: !718)
!718 = !DILexicalBlockFile(scope: !714, file: !10, discriminator: 1)
!719 = !DILocation(line: 177, column: 31, scope: !714)
!720 = !DILocation(line: 177, column: 7, scope: !23)
!721 = !DILocation(line: 178, column: 5, scope: !722)
!722 = distinct !DILexicalBlock(scope: !714, file: !10, line: 177, column: 51)
!723 = !DILocation(line: 178, column: 11, scope: !722)
!724 = !DILocation(line: 179, column: 5, scope: !722)
!725 = !DILocation(line: 179, column: 11, scope: !722)
!726 = !DILocation(line: 180, column: 5, scope: !722)
!727 = !DILocation(line: 180, column: 11, scope: !722)
!728 = !DILocation(line: 181, column: 5, scope: !722)
!729 = !DILocation(line: 183, column: 5, scope: !730)
!730 = distinct !DILexicalBlock(scope: !714, file: !10, line: 182, column: 10)
!731 = !DILocation(line: 184, column: 5, scope: !730)
!732 = !DILocation(line: 186, column: 1, scope: !23)
!733 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tm", scope: !49, file: !10, line: 265, type: !734)
!734 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !735, line: 30, size: 128, align: 64, elements: !736)
!735 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/tf/Benchmarks/Misc/himenobmtxpa")
!736 = !{!737, !741}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !734, file: !735, line: 32, baseType: !738, size: 64, align: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !739, line: 139, baseType: !740)
!739 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/tf/Benchmarks/Misc/himenobmtxpa")
!740 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !734, file: !735, line: 33, baseType: !742, size: 64, align: 64, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !739, line: 141, baseType: !740)
!743 = !DILocation(line: 265, column: 18, scope: !49)
!744 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !49, file: !10, line: 266, type: !4)
!745 = !DILocation(line: 266, column: 10, scope: !49)
!746 = !DILocation(line: 270, column: 3, scope: !49)
!747 = !DILocation(line: 272, column: 7, scope: !748)
!748 = distinct !DILexicalBlock(scope: !49, file: !10, line: 272, column: 7)
!749 = !DILocation(line: 272, column: 16, scope: !748)
!750 = !DILocation(line: 272, column: 21, scope: !748)
!751 = !DILocation(line: 272, column: 24, scope: !752)
!752 = !DILexicalBlockFile(scope: !748, file: !10, discriminator: 1)
!753 = !DILocation(line: 272, column: 34, scope: !748)
!754 = !DILocation(line: 272, column: 7, scope: !49)
!755 = !DILocation(line: 273, column: 19, scope: !756)
!756 = distinct !DILexicalBlock(scope: !748, file: !10, line: 272, column: 40)
!757 = !DILocation(line: 273, column: 16, scope: !756)
!758 = !DILocation(line: 273, column: 14, scope: !756)
!759 = !DILocation(line: 274, column: 20, scope: !756)
!760 = !DILocation(line: 274, column: 17, scope: !756)
!761 = !DILocation(line: 274, column: 15, scope: !756)
!762 = !DILocation(line: 275, column: 7, scope: !756)
!763 = !DILocation(line: 276, column: 3, scope: !756)
!764 = !DILocation(line: 277, column: 21, scope: !765)
!765 = distinct !DILexicalBlock(scope: !748, file: !10, line: 276, column: 10)
!766 = !DILocation(line: 277, column: 30, scope: !765)
!767 = !DILocation(line: 277, column: 28, scope: !765)
!768 = !DILocation(line: 277, column: 9, scope: !765)
!769 = !DILocation(line: 278, column: 22, scope: !765)
!770 = !DILocation(line: 278, column: 32, scope: !765)
!771 = !DILocation(line: 278, column: 30, scope: !765)
!772 = !DILocation(line: 278, column: 10, scope: !765)
!773 = !DILocation(line: 278, column: 44, scope: !765)
!774 = !DILocation(line: 277, column: 40, scope: !765)
!775 = !DILocation(line: 277, column: 7, scope: !765)
!776 = !DILocation(line: 281, column: 10, scope: !49)
!777 = !DILocation(line: 281, column: 3, scope: !49)
