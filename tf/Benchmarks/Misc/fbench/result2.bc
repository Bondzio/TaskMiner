; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@niter = global i32 1000, align 4
@spectral_line = internal global [9 x double] zeroinitializer, align 16
@clear_aperture = internal global double 0.000000e+00, align 8
@current_surfaces = internal global i16 0, align 2
@testcase = internal global [4 x [4 x double]] [[4 x double] [double 2.705000e+01, double 1.513700e+00, double 6.360000e+01, double 5.200000e-01], [4 x double] [double -1.668000e+01, double 1.000000e+00, double 0.000000e+00, double 1.380000e-01], [4 x double] [double -1.668000e+01, double 1.616400e+00, double 3.670000e+01, double 3.800000e-01], [4 x double] [double -7.810000e+01, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00]], align 16
@s = internal global [10 x [5 x double]] zeroinitializer, align 16
@.str = private unnamed_addr constant [54 x i8] c"Ready to begin John Walker's floating point accuracy\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"and performance benchmark.  %d iterations will be made.\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"\0AMeasured run time in seconds should be divided by %.f\0A\00", align 1
@.str.3 = private unnamed_addr constant [60 x i8] c"to normalise for reporting results.  For archival results,\0A\00", align 1
@.str.4 = private unnamed_addr constant [67 x i8] c"adjust iteration count so the benchmark runs about five minutes.\0A\0A\00", align 1
@itercount = common global i32 0, align 4
@paraxial = internal global i16 0, align 2
@object_distance = internal global double 0.000000e+00, align 8
@od_sa = internal global [2 x [2 x double]] zeroinitializer, align 16
@axis_slope_angle = internal global double 0.000000e+00, align 8
@aberr_lspher = internal global double 0.000000e+00, align 8
@aberr_osc = internal global double 0.000000e+00, align 8
@aberr_lchrom = internal global double 0.000000e+00, align 8
@max_lspher = internal global double 0.000000e+00, align 8
@max_osc = internal global double 0.000000e+00, align 8
@max_lchrom = internal global double 0.000000e+00, align 8
@outarr = internal global [8 x [80 x i8]] zeroinitializer, align 16
@.str.5 = private unnamed_addr constant [24 x i8] c"%15s   %21.11f  %14.11f\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"Marginal ray\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"Paraxial ray\00", align 1
@.str.8 = private unnamed_addr constant [48 x i8] c"Longitudinal spherical aberration:      %16.11f\00", align 1
@.str.9 = private unnamed_addr constant [48 x i8] c"    (Maximum permissible):              %16.11f\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"Offense against sine condition (coma):  %16.11f\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"Axial chromatic aberration:             %16.11f\00", align 1
@refarr = internal global [8 x i8*] [i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.25, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [33 x i8] c"\0AError in results on line %d...\0A\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"Expected:  \22%s\22\0A\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"Received:  \22%s\22\0A\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"(Errors)    \00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"\0A%d error%s in results.  This is VERY SERIOUS.\0A\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"\0ANo errors in results.\0A\00", align 1
@ray_height = internal global double 0.000000e+00, align 8
@from_index = internal global double 0.000000e+00, align 8
@radius_of_curvature = internal global double 0.000000e+00, align 8
@to_index = internal global double 0.000000e+00, align 8
@.str.22 = private unnamed_addr constant [56 x i8] c"   Marginal ray          47.09479120920   0.04178472683\00", align 1
@.str.23 = private unnamed_addr constant [56 x i8] c"   Paraxial ray          47.08372160249   0.04177864821\00", align 1
@.str.24 = private unnamed_addr constant [57 x i8] c"Longitudinal spherical aberration:        -0.01106960671\00", align 1
@.str.25 = private unnamed_addr constant [57 x i8] c"    (Maximum permissible):                 0.05306749907\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"Offense against sine condition (coma):     0.00008954761\00", align 1
@.str.27 = private unnamed_addr constant [57 x i8] c"    (Maximum permissible):                 0.00250000000\00", align 1
@.str.28 = private unnamed_addr constant [57 x i8] c"Axial chromatic aberration:                0.00448229032\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !66, metadata !67), !dbg !68
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !69, metadata !67), !dbg !70
  store double 7.621000e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 1), align 8, !dbg !71
  store double 6.869955e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 2), align 8, !dbg !72
  store double 6.562816e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 3), align 8, !dbg !73
  store double 5.895944e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 4), align 8, !dbg !74
  store double 5.269557e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 5), align 8, !dbg !75
  store double 4.861344e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 6), align 8, !dbg !76
  store double 4.340477e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 7), align 8, !dbg !77
  store double 3.968494e+03, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 8), align 8, !dbg !78
  store i32 1000000, i32* @niter, align 4, !dbg !79
  store double 4.000000e+00, double* @clear_aperture, align 8, !dbg !80
  store i16 4, i16* @current_surfaces, align 2, !dbg !81
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !82, metadata !67), !dbg !83
  br label %for.cond, !dbg !84

for.cond:                                         ; preds = %for.inc.13, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc14, %for.inc.13 ]
  %tmp1 = load i16, i16* @current_surfaces, align 2, !dbg !86
  %conv = sext i16 %tmp1 to i32, !dbg !86
  %cmp = icmp slt i32 %i.0, %conv, !dbg !88
  br i1 %cmp, label %for.body, label %for.end.15, !dbg !89

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !90, metadata !67), !dbg !91
  br label %for.cond.2, !dbg !92

for.cond.2:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp3 = icmp slt i32 %j.0, 4, !dbg !94
  br i1 %cmp3, label %for.body.5, label %for.end, !dbg !96

for.body.5:                                       ; preds = %for.cond.2
  %idxprom = sext i32 %j.0 to i64, !dbg !97
  %idxprom6 = sext i32 %i.0 to i64, !dbg !97
  %arrayidx = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* @testcase, i32 0, i64 %idxprom6, !dbg !97
  %arrayidx7 = getelementptr inbounds [4 x double], [4 x double]* %arrayidx, i32 0, i64 %idxprom, !dbg !97
  %tmp5 = load double, double* %arrayidx7, align 8, !dbg !97
  %add = add nsw i32 %j.0, 1, !dbg !98
  %idxprom8 = sext i32 %add to i64, !dbg !99
  %add9 = add nsw i32 %i.0, 1, !dbg !100
  %idxprom10 = sext i32 %add9 to i64, !dbg !99
  %arrayidx11 = getelementptr inbounds [10 x [5 x double]], [10 x [5 x double]]* @s, i32 0, i64 %idxprom10, !dbg !99
  %arrayidx12 = getelementptr inbounds [5 x double], [5 x double]* %arrayidx11, i32 0, i64 %idxprom8, !dbg !99
  store double %tmp5, double* %arrayidx12, align 8, !dbg !101
  br label %for.inc, !dbg !99

for.inc:                                          ; preds = %for.body.5
  %inc = add nsw i32 %j.0, 1, !dbg !102
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !90, metadata !67), !dbg !91
  br label %for.cond.2, !dbg !103

for.end:                                          ; preds = %for.cond.2
  br label %for.inc.13, !dbg !104

for.inc.13:                                       ; preds = %for.end
  %inc14 = add nsw i32 %i.0, 1, !dbg !105
  call void @llvm.dbg.value(metadata i32 %inc14, i64 0, metadata !82, metadata !67), !dbg !83
  br label %for.cond, !dbg !106

for.end.15:                                       ; preds = %for.cond
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i32 0, i32 0)), !dbg !107
  %tmp10 = load i32, i32* @niter, align 4, !dbg !108
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i32 0, i32 0), i32 %tmp10), !dbg !109
  %tmp11 = load i32, i32* @niter, align 4, !dbg !110
  %conv17 = sitofp i32 %tmp11 to double, !dbg !110
  %div = fdiv double %conv17, 1.000000e+03, !dbg !111
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i32 0, i32 0), double %div), !dbg !112
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.3, i32 0, i32 0)), !dbg !113
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4, i32 0, i32 0)), !dbg !114
  store i32 0, i32* @itercount, align 4, !dbg !115
  br label %for.cond.21, !dbg !117

for.cond.21:                                      ; preds = %for.inc.53, %for.end.15
  %tmp12 = load i32, i32* @itercount, align 4, !dbg !118
  %tmp13 = load i32, i32* @niter, align 4, !dbg !122
  %cmp22 = icmp slt i32 %tmp12, %tmp13, !dbg !123
  br i1 %cmp22, label %for.body.24, label %for.end.55, !dbg !124

for.body.24:                                      ; preds = %for.cond.21
  store i16 0, i16* @paraxial, align 2, !dbg !125
  br label %for.cond.25, !dbg !128

for.cond.25:                                      ; preds = %for.inc.38, %for.body.24
  %tmp14 = load i16, i16* @paraxial, align 2, !dbg !129
  %conv26 = sext i16 %tmp14 to i32, !dbg !129
  %cmp27 = icmp sle i32 %conv26, 1, !dbg !133
  br i1 %cmp27, label %for.body.29, label %for.end.40, !dbg !134

for.body.29:                                      ; preds = %for.cond.25
  %tmp15 = load double, double* @clear_aperture, align 8, !dbg !135
  %div30 = fdiv double %tmp15, 2.000000e+00, !dbg !137
  %call31 = call i32 @trace_line(i32 4, double %div30), !dbg !138
  %tmp16 = load double, double* @object_distance, align 8, !dbg !139
  %tmp17 = load i16, i16* @paraxial, align 2, !dbg !140
  %idxprom32 = sext i16 %tmp17 to i64, !dbg !141
  %arrayidx33 = getelementptr inbounds [2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 %idxprom32, !dbg !141
  %arrayidx34 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx33, i32 0, i64 0, !dbg !141
  store double %tmp16, double* %arrayidx34, align 8, !dbg !142
  %tmp18 = load double, double* @axis_slope_angle, align 8, !dbg !143
  %tmp19 = load i16, i16* @paraxial, align 2, !dbg !144
  %idxprom35 = sext i16 %tmp19 to i64, !dbg !145
  %arrayidx36 = getelementptr inbounds [2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 %idxprom35, !dbg !145
  %arrayidx37 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx36, i32 0, i64 1, !dbg !145
  store double %tmp18, double* %arrayidx37, align 8, !dbg !146
  br label %for.inc.38, !dbg !147

for.inc.38:                                       ; preds = %for.body.29
  %tmp20 = load i16, i16* @paraxial, align 2, !dbg !148
  %inc39 = add i16 %tmp20, 1, !dbg !148
  store i16 %inc39, i16* @paraxial, align 2, !dbg !148
  br label %for.cond.25, !dbg !149

for.end.40:                                       ; preds = %for.cond.25
  store i16 0, i16* @paraxial, align 2, !dbg !150
  %tmp21 = load double, double* @clear_aperture, align 8, !dbg !151
  %div41 = fdiv double %tmp21, 2.000000e+00, !dbg !152
  %call42 = call i32 @trace_line(i32 3, double %div41), !dbg !153
  %tmp22 = load double, double* @object_distance, align 8, !dbg !154
  call void @llvm.dbg.value(metadata double %tmp22, i64 0, metadata !155, metadata !67), !dbg !156
  %tmp23 = load double, double* @clear_aperture, align 8, !dbg !157
  %div43 = fdiv double %tmp23, 2.000000e+00, !dbg !158
  %call44 = call i32 @trace_line(i32 6, double %div43), !dbg !159
  %tmp24 = load double, double* @object_distance, align 8, !dbg !160
  call void @llvm.dbg.value(metadata double %tmp24, i64 0, metadata !161, metadata !67), !dbg !162
  %tmp25 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 1, i64 0), align 8, !dbg !163
  %tmp26 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 0, i64 0), align 8, !dbg !164
  %sub = fsub double %tmp25, %tmp26, !dbg !165
  store double %sub, double* @aberr_lspher, align 8, !dbg !166
  %tmp27 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 1, i64 0), align 8, !dbg !167
  %tmp28 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 1, i64 1), align 8, !dbg !168
  %mul = fmul double %tmp27, %tmp28, !dbg !169
  %tmp29 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 0, i64 1), align 8, !dbg !170
  %call45 = call double @sin(double %tmp29) #5, !dbg !171
  %tmp30 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 0, i64 0), align 8, !dbg !172
  %mul46 = fmul double %call45, %tmp30, !dbg !173
  %div47 = fdiv double %mul, %mul46, !dbg !174
  %sub48 = fsub double 1.000000e+00, %div47, !dbg !175
  store double %sub48, double* @aberr_osc, align 8, !dbg !176
  %sub49 = fsub double %tmp24, %tmp22, !dbg !177
  store double %sub49, double* @aberr_lchrom, align 8, !dbg !178
  %tmp33 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 0, i64 1), align 8, !dbg !179
  %call50 = call double @sin(double %tmp33) #5, !dbg !180
  store double %call50, double* @max_lspher, align 8, !dbg !181
  %tmp34 = load double, double* @max_lspher, align 8, !dbg !182
  %tmp35 = load double, double* @max_lspher, align 8, !dbg !183
  %mul51 = fmul double %tmp34, %tmp35, !dbg !184
  %div52 = fdiv double 9.260000e-05, %mul51, !dbg !185
  store double %div52, double* @max_lspher, align 8, !dbg !186
  store double 2.500000e-03, double* @max_osc, align 8, !dbg !187
  %tmp36 = load double, double* @max_lspher, align 8, !dbg !188
  store double %tmp36, double* @max_lchrom, align 8, !dbg !189
  br label %for.inc.53, !dbg !190

for.inc.53:                                       ; preds = %for.end.40
  %tmp37 = load i32, i32* @itercount, align 4, !dbg !191
  %inc54 = add nsw i32 %tmp37, 1, !dbg !191
  store i32 %inc54, i32* @itercount, align 4, !dbg !191
  br label %for.cond.21, !dbg !192

for.end.55:                                       ; preds = %for.cond.21
  %tmp38 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 0, i64 0), align 8, !dbg !193
  %tmp39 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 0, i64 1), align 8, !dbg !194
  %call56 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), double %tmp38, double %tmp39) #5, !dbg !195
  %tmp40 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 1, i64 0), align 8, !dbg !196
  %tmp41 = load double, double* getelementptr inbounds ([2 x [2 x double]], [2 x [2 x double]]* @od_sa, i32 0, i64 1, i64 1), align 8, !dbg !197
  %call57 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 1, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), double %tmp40, double %tmp41) #5, !dbg !198
  %tmp42 = load double, double* @aberr_lspher, align 8, !dbg !199
  %call58 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 2, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i32 0, i32 0), double %tmp42) #5, !dbg !200
  %tmp43 = load double, double* @max_lspher, align 8, !dbg !201
  %call59 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 3, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i32 0, i32 0), double %tmp43) #5, !dbg !202
  %tmp44 = load double, double* @aberr_osc, align 8, !dbg !203
  %call60 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 4, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i32 0, i32 0), double %tmp44) #5, !dbg !204
  %tmp45 = load double, double* @max_osc, align 8, !dbg !205
  %call61 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 5, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i32 0, i32 0), double %tmp45) #5, !dbg !206
  %tmp46 = load double, double* @aberr_lchrom, align 8, !dbg !207
  %call62 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 6, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i32 0, i32 0), double %tmp46) #5, !dbg !208
  %tmp47 = load double, double* @max_lchrom, align 8, !dbg !209
  %call63 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 7, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i32 0, i32 0), double %tmp47) #5, !dbg !210
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !211, metadata !67), !dbg !212
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !82, metadata !67), !dbg !83
  br label %for.cond.64, !dbg !213

for.cond.64:                                      ; preds = %for.inc.125, %for.end.55
  %i.1 = phi i32 [ 0, %for.end.55 ], [ %inc126, %for.inc.125 ]
  %errors.0 = phi i32 [ 0, %for.end.55 ], [ %errors.3, %for.inc.125 ]
  %cmp65 = icmp slt i32 %i.1, 8, !dbg !215
  br i1 %cmp65, label %for.body.67, label %for.end.127, !dbg !217

for.body.67:                                      ; preds = %for.cond.64
  %idxprom68 = sext i32 %i.1 to i64, !dbg !218
  %arrayidx69 = getelementptr inbounds [8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 %idxprom68, !dbg !218
  %arraydecay = getelementptr inbounds [80 x i8], [80 x i8]* %arrayidx69, i32 0, i32 0, !dbg !218
  %idxprom70 = sext i32 %i.1 to i64, !dbg !221
  %arrayidx71 = getelementptr inbounds [8 x i8*], [8 x i8*]* @refarr, i32 0, i64 %idxprom70, !dbg !221
  %tmp51 = load i8*, i8** %arrayidx71, align 8, !dbg !221
  %call72 = call i32 @strcmp(i8* %arraydecay, i8* %tmp51) #6, !dbg !222
  %cmp73 = icmp ne i32 %call72, 0, !dbg !223
  br i1 %cmp73, label %if.then, label %if.end.124, !dbg !224

if.then:                                          ; preds = %for.body.67
  %add75 = add nsw i32 %i.1, 1, !dbg !225
  %call76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i32 0, i32 0), i32 %add75), !dbg !227
  %idxprom77 = sext i32 %i.1 to i64, !dbg !228
  %arrayidx78 = getelementptr inbounds [8 x i8*], [8 x i8*]* @refarr, i32 0, i64 %idxprom77, !dbg !228
  %tmp54 = load i8*, i8** %arrayidx78, align 8, !dbg !228
  %call79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i32 0, i32 0), i8* %tmp54), !dbg !229
  %idxprom80 = sext i32 %i.1 to i64, !dbg !230
  %arrayidx81 = getelementptr inbounds [8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 %idxprom80, !dbg !230
  %arraydecay82 = getelementptr inbounds [80 x i8], [80 x i8]* %arrayidx81, i32 0, i32 0, !dbg !230
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i32 0, i32 0), i8* %arraydecay82), !dbg !231
  %call84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i32 0, i32 0)), !dbg !232
  %idxprom85 = sext i32 %i.1 to i64, !dbg !233
  %arrayidx86 = getelementptr inbounds [8 x i8*], [8 x i8*]* @refarr, i32 0, i64 %idxprom85, !dbg !233
  %tmp57 = load i8*, i8** %arrayidx86, align 8, !dbg !233
  %call87 = call i64 @strlen(i8* %tmp57) #6, !dbg !234
  %conv88 = trunc i64 %call87 to i32, !dbg !234
  call void @llvm.dbg.value(metadata i32 %conv88, i64 0, metadata !235, metadata !67), !dbg !236
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !90, metadata !67), !dbg !91
  br label %for.cond.89, !dbg !237

for.cond.89:                                      ; preds = %for.inc.120, %if.then
  %j.1 = phi i32 [ 0, %if.then ], [ %inc121, %for.inc.120 ]
  %errors.1 = phi i32 [ %errors.0, %if.then ], [ %errors.2, %for.inc.120 ]
  %cmp90 = icmp slt i32 %j.1, %conv88, !dbg !239
  br i1 %cmp90, label %for.body.92, label %for.end.122, !dbg !241

for.body.92:                                      ; preds = %for.cond.89
  %idxprom93 = sext i32 %j.1 to i64, !dbg !242
  %idxprom94 = sext i32 %i.1 to i64, !dbg !242
  %arrayidx95 = getelementptr inbounds [8 x i8*], [8 x i8*]* @refarr, i32 0, i64 %idxprom94, !dbg !242
  %tmp62 = load i8*, i8** %arrayidx95, align 8, !dbg !242
  %arrayidx96 = getelementptr inbounds i8, i8* %tmp62, i64 %idxprom93, !dbg !242
  %tmp63 = load i8, i8* %arrayidx96, align 1, !dbg !242
  %conv97 = sext i8 %tmp63 to i32, !dbg !242
  %idxprom98 = sext i32 %j.1 to i64, !dbg !244
  %idxprom99 = sext i32 %i.1 to i64, !dbg !244
  %arrayidx100 = getelementptr inbounds [8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 %idxprom99, !dbg !244
  %arrayidx101 = getelementptr inbounds [80 x i8], [80 x i8]* %arrayidx100, i32 0, i64 %idxprom98, !dbg !244
  %tmp66 = load i8, i8* %arrayidx101, align 1, !dbg !244
  %conv102 = sext i8 %tmp66 to i32, !dbg !244
  %cmp103 = icmp eq i32 %conv97, %conv102, !dbg !245
  %cond = select i1 %cmp103, i32 32, i32 94, !dbg !242
  %call105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), i32 %cond), !dbg !246
  %idxprom106 = sext i32 %j.1 to i64, !dbg !247
  %idxprom107 = sext i32 %i.1 to i64, !dbg !247
  %arrayidx108 = getelementptr inbounds [8 x i8*], [8 x i8*]* @refarr, i32 0, i64 %idxprom107, !dbg !247
  %tmp69 = load i8*, i8** %arrayidx108, align 8, !dbg !247
  %arrayidx109 = getelementptr inbounds i8, i8* %tmp69, i64 %idxprom106, !dbg !247
  %tmp70 = load i8, i8* %arrayidx109, align 1, !dbg !247
  %conv110 = sext i8 %tmp70 to i32, !dbg !247
  %idxprom111 = sext i32 %j.1 to i64, !dbg !249
  %idxprom112 = sext i32 %i.1 to i64, !dbg !249
  %arrayidx113 = getelementptr inbounds [8 x [80 x i8]], [8 x [80 x i8]]* @outarr, i32 0, i64 %idxprom112, !dbg !249
  %arrayidx114 = getelementptr inbounds [80 x i8], [80 x i8]* %arrayidx113, i32 0, i64 %idxprom111, !dbg !249
  %tmp73 = load i8, i8* %arrayidx114, align 1, !dbg !249
  %conv115 = sext i8 %tmp73 to i32, !dbg !249
  %cmp116 = icmp ne i32 %conv110, %conv115, !dbg !250
  br i1 %cmp116, label %if.then.118, label %if.end, !dbg !251

if.then.118:                                      ; preds = %for.body.92
  %inc119 = add nsw i32 %errors.1, 1, !dbg !252
  call void @llvm.dbg.value(metadata i32 %inc119, i64 0, metadata !211, metadata !67), !dbg !212
  br label %if.end, !dbg !253

if.end:                                           ; preds = %if.then.118, %for.body.92
  %errors.2 = phi i32 [ %inc119, %if.then.118 ], [ %errors.1, %for.body.92 ]
  br label %for.inc.120, !dbg !254

for.inc.120:                                      ; preds = %if.end
  %inc121 = add nsw i32 %j.1, 1, !dbg !255
  call void @llvm.dbg.value(metadata i32 %inc121, i64 0, metadata !90, metadata !67), !dbg !91
  br label %for.cond.89, !dbg !256

for.end.122:                                      ; preds = %for.cond.89
  %errors.1.lcssa = phi i32 [ %errors.1, %for.cond.89 ]
  %call123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0)), !dbg !257
  br label %if.end.124, !dbg !258

if.end.124:                                       ; preds = %for.end.122, %for.body.67
  %errors.3 = phi i32 [ %errors.1.lcssa, %for.end.122 ], [ %errors.0, %for.body.67 ]
  br label %for.inc.125, !dbg !259

for.inc.125:                                      ; preds = %if.end.124
  %inc126 = add nsw i32 %i.1, 1, !dbg !260
  call void @llvm.dbg.value(metadata i32 %inc126, i64 0, metadata !82, metadata !67), !dbg !83
  br label %for.cond.64, !dbg !261

for.end.127:                                      ; preds = %for.cond.64
  %errors.0.lcssa = phi i32 [ %errors.0, %for.cond.64 ]
  %cmp128 = icmp sgt i32 %errors.0.lcssa, 0, !dbg !262
  br i1 %cmp128, label %if.then.130, label %if.else, !dbg !264

if.then.130:                                      ; preds = %for.end.127
  %cmp131 = icmp sgt i32 %errors.0.lcssa, 1, !dbg !265
  %cond133 = select i1 %cmp131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), !dbg !267
  %call134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i32 0, i32 0), i32 %errors.0.lcssa, i8* %cond133), !dbg !268
  br label %if.end.136, !dbg !269

if.else:                                          ; preds = %for.end.127
  %call135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0)), !dbg !270
  br label %if.end.136

if.end.136:                                       ; preds = %if.else, %if.then.130
  ret i32 0, !dbg !271
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @trace_line(i32 %line, double %ray_h) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %line, i64 0, metadata !272, metadata !67), !dbg !273
  call void @llvm.dbg.value(metadata double %ray_h, i64 0, metadata !274, metadata !67), !dbg !275
  store double 0.000000e+00, double* @object_distance, align 8, !dbg !276
  store double %ray_h, double* @ray_height, align 8, !dbg !277
  store double 1.000000e+00, double* @from_index, align 8, !dbg !278
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !279, metadata !67), !dbg !280
  br label %for.cond, !dbg !281

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]
  %tmp2 = load i16, i16* @current_surfaces, align 2, !dbg !283
  %conv = sext i16 %tmp2 to i32, !dbg !283
  %cmp = icmp sle i32 %i.0, %conv, !dbg !285
  br i1 %cmp, label %for.body, label %for.end, !dbg !286

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !287
  %arrayidx = getelementptr inbounds [10 x [5 x double]], [10 x [5 x double]]* @s, i32 0, i64 %idxprom, !dbg !287
  %arrayidx2 = getelementptr inbounds [5 x double], [5 x double]* %arrayidx, i32 0, i64 1, !dbg !287
  %tmp4 = load double, double* %arrayidx2, align 8, !dbg !287
  store double %tmp4, double* @radius_of_curvature, align 8, !dbg !289
  %idxprom3 = sext i32 %i.0 to i64, !dbg !290
  %arrayidx4 = getelementptr inbounds [10 x [5 x double]], [10 x [5 x double]]* @s, i32 0, i64 %idxprom3, !dbg !290
  %arrayidx5 = getelementptr inbounds [5 x double], [5 x double]* %arrayidx4, i32 0, i64 2, !dbg !290
  %tmp6 = load double, double* %arrayidx5, align 8, !dbg !290
  store double %tmp6, double* @to_index, align 8, !dbg !291
  %tmp7 = load double, double* @to_index, align 8, !dbg !292
  %cmp6 = fcmp ogt double %tmp7, 1.000000e+00, !dbg !294
  br i1 %cmp6, label %if.then, label %if.end, !dbg !295

if.then:                                          ; preds = %for.body
  %tmp8 = load double, double* @to_index, align 8, !dbg !296
  %tmp9 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 4), align 8, !dbg !297
  %idxprom8 = sext i32 %line to i64, !dbg !298
  %arrayidx9 = getelementptr inbounds [9 x double], [9 x double]* @spectral_line, i32 0, i64 %idxprom8, !dbg !298
  %tmp11 = load double, double* %arrayidx9, align 8, !dbg !298
  %sub = fsub double %tmp9, %tmp11, !dbg !299
  %tmp12 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 3), align 8, !dbg !300
  %tmp13 = load double, double* getelementptr inbounds ([9 x double], [9 x double]* @spectral_line, i32 0, i64 6), align 8, !dbg !301
  %sub10 = fsub double %tmp12, %tmp13, !dbg !302
  %div = fdiv double %sub, %sub10, !dbg !303
  %idxprom11 = sext i32 %i.0 to i64, !dbg !304
  %arrayidx12 = getelementptr inbounds [10 x [5 x double]], [10 x [5 x double]]* @s, i32 0, i64 %idxprom11, !dbg !304
  %arrayidx13 = getelementptr inbounds [5 x double], [5 x double]* %arrayidx12, i32 0, i64 2, !dbg !304
  %tmp15 = load double, double* %arrayidx13, align 8, !dbg !304
  %sub14 = fsub double %tmp15, 1.000000e+00, !dbg !305
  %idxprom15 = sext i32 %i.0 to i64, !dbg !306
  %arrayidx16 = getelementptr inbounds [10 x [5 x double]], [10 x [5 x double]]* @s, i32 0, i64 %idxprom15, !dbg !306
  %arrayidx17 = getelementptr inbounds [5 x double], [5 x double]* %arrayidx16, i32 0, i64 3, !dbg !306
  %tmp17 = load double, double* %arrayidx17, align 8, !dbg !306
  %div18 = fdiv double %sub14, %tmp17, !dbg !307
  %mul = fmul double %div, %div18, !dbg !308
  %add = fadd double %tmp8, %mul, !dbg !309
  store double %add, double* @to_index, align 8, !dbg !310
  br label %if.end, !dbg !311

if.end:                                           ; preds = %if.then, %for.body
  call void @transit_surface(), !dbg !312
  %tmp18 = load double, double* @to_index, align 8, !dbg !313
  store double %tmp18, double* @from_index, align 8, !dbg !314
  %tmp20 = load i16, i16* @current_surfaces, align 2, !dbg !315
  %conv19 = sext i16 %tmp20 to i32, !dbg !315
  %cmp20 = icmp slt i32 %i.0, %conv19, !dbg !317
  br i1 %cmp20, label %if.then.22, label %if.end.27, !dbg !318

if.then.22:                                       ; preds = %if.end
  %tmp21 = load double, double* @object_distance, align 8, !dbg !319
  %idxprom23 = sext i32 %i.0 to i64, !dbg !320
  %arrayidx24 = getelementptr inbounds [10 x [5 x double]], [10 x [5 x double]]* @s, i32 0, i64 %idxprom23, !dbg !320
  %arrayidx25 = getelementptr inbounds [5 x double], [5 x double]* %arrayidx24, i32 0, i64 4, !dbg !320
  %tmp23 = load double, double* %arrayidx25, align 8, !dbg !320
  %sub26 = fsub double %tmp21, %tmp23, !dbg !321
  store double %sub26, double* @object_distance, align 8, !dbg !322
  br label %if.end.27, !dbg !323

if.end.27:                                        ; preds = %if.then.22, %if.end
  br label %for.inc, !dbg !324

for.inc:                                          ; preds = %if.end.27
  %inc = add nsw i32 %i.0, 1, !dbg !325
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !279, metadata !67), !dbg !280
  br label %for.cond, !dbg !326

for.end:                                          ; preds = %for.cond
  ret i32 undef, !dbg !327
}

; Function Attrs: nounwind
declare double @sin(double) #3

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #4

; Function Attrs: nounwind uwtable
define internal void @transit_surface() #0 {
entry:
  %tmp = load i16, i16* @paraxial, align 2, !dbg !328
  %tobool = icmp ne i16 %tmp, 0, !dbg !328
  br i1 %tobool, label %if.then, label %if.end.18, !dbg !330

if.then:                                          ; preds = %entry
  %tmp1 = load double, double* @radius_of_curvature, align 8, !dbg !331
  %cmp = fcmp une double %tmp1, 0.000000e+00, !dbg !334
  br i1 %cmp, label %if.then.1, label %if.end.13, !dbg !335

if.then.1:                                        ; preds = %if.then
  %tmp2 = load double, double* @object_distance, align 8, !dbg !336
  %cmp2 = fcmp oeq double %tmp2, 0.000000e+00, !dbg !339
  br i1 %cmp2, label %if.then.3, label %if.else, !dbg !340

if.then.3:                                        ; preds = %if.then.1
  store double 0.000000e+00, double* @axis_slope_angle, align 8, !dbg !341
  %tmp3 = load double, double* @ray_height, align 8, !dbg !343
  %tmp4 = load double, double* @radius_of_curvature, align 8, !dbg !344
  %div = fdiv double %tmp3, %tmp4, !dbg !345
  call void @llvm.dbg.value(metadata double %div, i64 0, metadata !346, metadata !67), !dbg !347
  br label %if.end, !dbg !348

if.else:                                          ; preds = %if.then.1
  %tmp5 = load double, double* @object_distance, align 8, !dbg !349
  %tmp6 = load double, double* @radius_of_curvature, align 8, !dbg !350
  %sub = fsub double %tmp5, %tmp6, !dbg !351
  %tmp7 = load double, double* @radius_of_curvature, align 8, !dbg !352
  %div4 = fdiv double %sub, %tmp7, !dbg !353
  %tmp8 = load double, double* @axis_slope_angle, align 8, !dbg !354
  %mul = fmul double %div4, %tmp8, !dbg !355
  call void @llvm.dbg.value(metadata double %mul, i64 0, metadata !346, metadata !67), !dbg !347
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.3
  %iang_sin.0 = phi double [ %div, %if.then.3 ], [ %mul, %if.else ]
  %tmp9 = load double, double* @from_index, align 8, !dbg !356
  %tmp10 = load double, double* @to_index, align 8, !dbg !357
  %div5 = fdiv double %tmp9, %tmp10, !dbg !358
  %mul6 = fmul double %div5, %iang_sin.0, !dbg !359
  call void @llvm.dbg.value(metadata double %mul6, i64 0, metadata !360, metadata !67), !dbg !361
  %tmp12 = load double, double* @axis_slope_angle, align 8, !dbg !362
  call void @llvm.dbg.value(metadata double %tmp12, i64 0, metadata !363, metadata !67), !dbg !364
  %tmp13 = load double, double* @axis_slope_angle, align 8, !dbg !365
  %add = fadd double %tmp13, %iang_sin.0, !dbg !366
  %sub7 = fsub double %add, %mul6, !dbg !367
  store double %sub7, double* @axis_slope_angle, align 8, !dbg !368
  %tmp16 = load double, double* @object_distance, align 8, !dbg !369
  %cmp8 = fcmp une double %tmp16, 0.000000e+00, !dbg !371
  br i1 %cmp8, label %if.then.9, label %if.end.11, !dbg !372

if.then.9:                                        ; preds = %if.end
  %tmp17 = load double, double* @object_distance, align 8, !dbg !373
  %mul10 = fmul double %tmp17, %tmp12, !dbg !374
  store double %mul10, double* @ray_height, align 8, !dbg !375
  br label %if.end.11, !dbg !376

if.end.11:                                        ; preds = %if.then.9, %if.end
  %tmp19 = load double, double* @ray_height, align 8, !dbg !377
  %tmp20 = load double, double* @axis_slope_angle, align 8, !dbg !378
  %div12 = fdiv double %tmp19, %tmp20, !dbg !379
  store double %div12, double* @object_distance, align 8, !dbg !380
  br label %return, !dbg !381

if.end.13:                                        ; preds = %if.then
  %tmp21 = load double, double* @object_distance, align 8, !dbg !382
  %tmp22 = load double, double* @to_index, align 8, !dbg !383
  %tmp23 = load double, double* @from_index, align 8, !dbg !384
  %div14 = fdiv double %tmp22, %tmp23, !dbg !385
  %mul15 = fmul double %tmp21, %div14, !dbg !386
  store double %mul15, double* @object_distance, align 8, !dbg !387
  %tmp24 = load double, double* @axis_slope_angle, align 8, !dbg !388
  %tmp25 = load double, double* @from_index, align 8, !dbg !389
  %tmp26 = load double, double* @to_index, align 8, !dbg !390
  %div16 = fdiv double %tmp25, %tmp26, !dbg !391
  %mul17 = fmul double %tmp24, %div16, !dbg !392
  store double %mul17, double* @axis_slope_angle, align 8, !dbg !393
  br label %return, !dbg !394

if.end.18:                                        ; preds = %entry
  %tmp27 = load double, double* @radius_of_curvature, align 8, !dbg !395
  %cmp19 = fcmp une double %tmp27, 0.000000e+00, !dbg !397
  br i1 %cmp19, label %if.then.20, label %if.end.48, !dbg !398

if.then.20:                                       ; preds = %if.end.18
  %tmp28 = load double, double* @object_distance, align 8, !dbg !399
  %cmp21 = fcmp oeq double %tmp28, 0.000000e+00, !dbg !402
  br i1 %cmp21, label %if.then.22, label %if.else.24, !dbg !403

if.then.22:                                       ; preds = %if.then.20
  store double 0.000000e+00, double* @axis_slope_angle, align 8, !dbg !404
  %tmp29 = load double, double* @ray_height, align 8, !dbg !406
  %tmp30 = load double, double* @radius_of_curvature, align 8, !dbg !407
  %div23 = fdiv double %tmp29, %tmp30, !dbg !408
  call void @llvm.dbg.value(metadata double %div23, i64 0, metadata !346, metadata !67), !dbg !347
  br label %if.end.28, !dbg !409

if.else.24:                                       ; preds = %if.then.20
  %tmp31 = load double, double* @object_distance, align 8, !dbg !410
  %tmp32 = load double, double* @radius_of_curvature, align 8, !dbg !412
  %sub25 = fsub double %tmp31, %tmp32, !dbg !413
  %tmp33 = load double, double* @radius_of_curvature, align 8, !dbg !414
  %div26 = fdiv double %sub25, %tmp33, !dbg !415
  %tmp34 = load double, double* @axis_slope_angle, align 8, !dbg !416
  %call = call double @sin(double %tmp34) #5, !dbg !417
  %mul27 = fmul double %div26, %call, !dbg !418
  call void @llvm.dbg.value(metadata double %mul27, i64 0, metadata !346, metadata !67), !dbg !347
  br label %if.end.28

if.end.28:                                        ; preds = %if.else.24, %if.then.22
  %iang_sin.1 = phi double [ %div23, %if.then.22 ], [ %mul27, %if.else.24 ]
  %call29 = call double @asin(double %iang_sin.1) #5, !dbg !419
  call void @llvm.dbg.value(metadata double %call29, i64 0, metadata !420, metadata !67), !dbg !421
  %tmp36 = load double, double* @from_index, align 8, !dbg !422
  %tmp37 = load double, double* @to_index, align 8, !dbg !423
  %div30 = fdiv double %tmp36, %tmp37, !dbg !424
  %mul31 = fmul double %div30, %iang_sin.1, !dbg !425
  call void @llvm.dbg.value(metadata double %mul31, i64 0, metadata !360, metadata !67), !dbg !361
  %tmp39 = load double, double* @axis_slope_angle, align 8, !dbg !426
  call void @llvm.dbg.value(metadata double %tmp39, i64 0, metadata !363, metadata !67), !dbg !364
  %tmp40 = load double, double* @axis_slope_angle, align 8, !dbg !427
  %add32 = fadd double %tmp40, %call29, !dbg !428
  %call33 = call double @asin(double %mul31) #5, !dbg !429
  %sub34 = fsub double %add32, %call33, !dbg !430
  store double %sub34, double* @axis_slope_angle, align 8, !dbg !431
  %add35 = fadd double %tmp39, %call29, !dbg !432
  %div36 = fdiv double %add35, 2.000000e+00, !dbg !433
  %call37 = call double @sin(double %div36) #5, !dbg !434
  call void @llvm.dbg.value(metadata double %call37, i64 0, metadata !435, metadata !67), !dbg !436
  %tmp45 = load double, double* @radius_of_curvature, align 8, !dbg !437
  %mul38 = fmul double 2.000000e+00, %tmp45, !dbg !438
  %mul39 = fmul double %mul38, %call37, !dbg !439
  %mul40 = fmul double %mul39, %call37, !dbg !440
  call void @llvm.dbg.value(metadata double %mul40, i64 0, metadata !435, metadata !67), !dbg !436
  %tmp48 = load double, double* @radius_of_curvature, align 8, !dbg !441
  %add41 = fadd double %tmp39, %call29, !dbg !442
  %call42 = call double @sin(double %add41) #5, !dbg !443
  %mul43 = fmul double %tmp48, %call42, !dbg !444
  %tmp51 = load double, double* @axis_slope_angle, align 8, !dbg !445
  %call44 = call double @tan(double %tmp51) #5, !dbg !445
  %div45 = fdiv double 1.000000e+00, %call44, !dbg !445
  %mul46 = fmul double %mul43, %div45, !dbg !446
  %add47 = fadd double %mul46, %mul40, !dbg !447
  store double %add47, double* @object_distance, align 8, !dbg !448
  br label %return, !dbg !449

if.end.48:                                        ; preds = %if.end.18
  %tmp53 = load double, double* @from_index, align 8, !dbg !450
  %tmp54 = load double, double* @to_index, align 8, !dbg !451
  %div49 = fdiv double %tmp53, %tmp54, !dbg !452
  %tmp55 = load double, double* @axis_slope_angle, align 8, !dbg !453
  %call50 = call double @sin(double %tmp55) #5, !dbg !454
  %mul51 = fmul double %div49, %call50, !dbg !455
  %call52 = call double @asin(double %mul51) #5, !dbg !456
  %sub53 = fsub double -0.000000e+00, %call52, !dbg !457
  call void @llvm.dbg.value(metadata double %sub53, i64 0, metadata !458, metadata !67), !dbg !459
  %tmp56 = load double, double* @object_distance, align 8, !dbg !460
  %tmp57 = load double, double* @to_index, align 8, !dbg !461
  %sub54 = fsub double -0.000000e+00, %sub53, !dbg !462
  %call55 = call double @cos(double %sub54) #5, !dbg !463
  %mul56 = fmul double %tmp57, %call55, !dbg !464
  %tmp59 = load double, double* @from_index, align 8, !dbg !465
  %tmp60 = load double, double* @axis_slope_angle, align 8, !dbg !466
  %call57 = call double @cos(double %tmp60) #5, !dbg !467
  %mul58 = fmul double %tmp59, %call57, !dbg !468
  %div59 = fdiv double %mul56, %mul58, !dbg !469
  %mul60 = fmul double %tmp56, %div59, !dbg !470
  store double %mul60, double* @object_distance, align 8, !dbg !471
  %sub61 = fsub double -0.000000e+00, %sub53, !dbg !472
  store double %sub61, double* @axis_slope_angle, align 8, !dbg !473
  br label %return, !dbg !474

return:                                           ; preds = %if.end.48, %if.end.28, %if.end.13, %if.end.11
  ret void, !dbg !475
}

; Function Attrs: nounwind
declare double @asin(double) #3

; Function Attrs: nounwind
declare double @tan(double) #3

; Function Attrs: nounwind
declare double @cos(double) #3

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!63, !64}
!llvm.ident = !{!65}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3, globals: !19)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/fbench")
!2 = !{}
!3 = !{!4, !12, !16}
!4 = !DISubprogram(name: "main", scope: !5, file: !5, line: 690, type: !6, isLocal: false, isDefinition: true, scopeLine: 692, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!5 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Misc/fbench/tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/fbench")
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !8, !9}
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!12 = !DISubprogram(name: "trace_line", scope: !5, file: !5, line: 666, type: !13, isLocal: true, isDefinition: true, scopeLine: 668, isOptimized: false, function: i32 (i32, double)* @trace_line, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{!8, !8, !15}
!15 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!16 = !DISubprogram(name: "transit_surface", scope: !5, file: !5, line: 597, type: !17, isLocal: true, isDefinition: true, scopeLine: 597, isOptimized: false, function: void ()* @transit_surface, variables: !2)
!17 = !DISubroutineType(types: !18)
!18 = !{null}
!19 = !{!20, !21, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !37, !42, !46, !51, !52, !56, !57, !58, !59, !60}
!20 = !DIGlobalVariable(name: "niter", scope: !0, file: !5, line: 283, type: !8, isLocal: false, isDefinition: true, variable: i32* @niter)
!21 = !DIGlobalVariable(name: "current_surfaces", scope: !0, file: !5, line: 248, type: !22, isLocal: true, isDefinition: true, variable: i16* @current_surfaces)
!22 = !DIBasicType(name: "short", size: 16, align: 16, encoding: DW_ATE_signed)
!23 = !DIGlobalVariable(name: "paraxial", scope: !0, file: !5, line: 249, type: !22, isLocal: true, isDefinition: true, variable: i16* @paraxial)
!24 = !DIGlobalVariable(name: "clear_aperture", scope: !0, file: !5, line: 251, type: !15, isLocal: true, isDefinition: true, variable: double* @clear_aperture)
!25 = !DIGlobalVariable(name: "aberr_lspher", scope: !0, file: !5, line: 253, type: !15, isLocal: true, isDefinition: true, variable: double* @aberr_lspher)
!26 = !DIGlobalVariable(name: "aberr_osc", scope: !0, file: !5, line: 254, type: !15, isLocal: true, isDefinition: true, variable: double* @aberr_osc)
!27 = !DIGlobalVariable(name: "aberr_lchrom", scope: !0, file: !5, line: 255, type: !15, isLocal: true, isDefinition: true, variable: double* @aberr_lchrom)
!28 = !DIGlobalVariable(name: "max_lspher", scope: !0, file: !5, line: 257, type: !15, isLocal: true, isDefinition: true, variable: double* @max_lspher)
!29 = !DIGlobalVariable(name: "max_osc", scope: !0, file: !5, line: 258, type: !15, isLocal: true, isDefinition: true, variable: double* @max_osc)
!30 = !DIGlobalVariable(name: "max_lchrom", scope: !0, file: !5, line: 259, type: !15, isLocal: true, isDefinition: true, variable: double* @max_lchrom)
!31 = !DIGlobalVariable(name: "object_distance", scope: !0, file: !5, line: 262, type: !15, isLocal: true, isDefinition: true, variable: double* @object_distance)
!32 = !DIGlobalVariable(name: "axis_slope_angle", scope: !0, file: !5, line: 264, type: !15, isLocal: true, isDefinition: true, variable: double* @axis_slope_angle)
!33 = !DIGlobalVariable(name: "spectral_line", scope: !0, file: !5, line: 268, type: !34, isLocal: true, isDefinition: true, variable: [9 x double]* @spectral_line)
!34 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 576, align: 64, elements: !35)
!35 = !{!36}
!36 = !DISubrange(count: 9)
!37 = !DIGlobalVariable(name: "s", scope: !0, file: !5, line: 269, type: !38, isLocal: true, isDefinition: true, variable: [10 x [5 x double]]* @s)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 3200, align: 64, elements: !39)
!39 = !{!40, !41}
!40 = !DISubrange(count: 10)
!41 = !DISubrange(count: 5)
!42 = !DIGlobalVariable(name: "od_sa", scope: !0, file: !5, line: 270, type: !43, isLocal: true, isDefinition: true, variable: [2 x [2 x double]]* @od_sa)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 256, align: 64, elements: !44)
!44 = !{!45, !45}
!45 = !DISubrange(count: 2)
!46 = !DIGlobalVariable(name: "outarr", scope: !0, file: !5, line: 272, type: !47, isLocal: true, isDefinition: true, variable: [8 x [80 x i8]]* @outarr)
!47 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 5120, align: 8, elements: !48)
!48 = !{!49, !50}
!49 = !DISubrange(count: 8)
!50 = !DISubrange(count: 80)
!51 = !DIGlobalVariable(name: "itercount", scope: !0, file: !5, line: 274, type: !8, isLocal: false, isDefinition: true, variable: i32* @itercount)
!52 = !DIGlobalVariable(name: "testcase", scope: !0, file: !5, line: 303, type: !53, isLocal: true, isDefinition: true, variable: [4 x [4 x double]]* @testcase)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15, size: 1024, align: 64, elements: !54)
!54 = !{!55, !55}
!55 = !DISubrange(count: 4)
!56 = !DIGlobalVariable(name: "ray_height", scope: !0, file: !5, line: 263, type: !15, isLocal: true, isDefinition: true, variable: double* @ray_height)
!57 = !DIGlobalVariable(name: "from_index", scope: !0, file: !5, line: 265, type: !15, isLocal: true, isDefinition: true, variable: double* @from_index)
!58 = !DIGlobalVariable(name: "radius_of_curvature", scope: !0, file: !5, line: 261, type: !15, isLocal: true, isDefinition: true, variable: double* @radius_of_curvature)
!59 = !DIGlobalVariable(name: "to_index", scope: !0, file: !5, line: 266, type: !15, isLocal: true, isDefinition: true, variable: double* @to_index)
!60 = !DIGlobalVariable(name: "refarr", scope: !0, file: !5, line: 285, type: !61, isLocal: true, isDefinition: true, variable: [8 x i8*]* @refarr)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 512, align: 64, elements: !62)
!62 = !{!49}
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!66 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !4, file: !5, line: 690, type: !8)
!67 = !DIExpression()
!68 = !DILocation(line: 690, column: 26, scope: !4)
!69 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !4, file: !5, line: 691, type: !9)
!70 = !DILocation(line: 691, column: 7, scope: !4)
!71 = !DILocation(line: 699, column: 20, scope: !4)
!72 = !DILocation(line: 700, column: 20, scope: !4)
!73 = !DILocation(line: 701, column: 20, scope: !4)
!74 = !DILocation(line: 702, column: 20, scope: !4)
!75 = !DILocation(line: 703, column: 20, scope: !4)
!76 = !DILocation(line: 704, column: 20, scope: !4)
!77 = !DILocation(line: 705, column: 20, scope: !4)
!78 = !DILocation(line: 706, column: 20, scope: !4)
!79 = !DILocation(line: 710, column: 9, scope: !4)
!80 = !DILocation(line: 714, column: 18, scope: !4)
!81 = !DILocation(line: 715, column: 20, scope: !4)
!82 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !4, file: !5, line: 693, type: !8)
!83 = !DILocation(line: 693, column: 7, scope: !4)
!84 = !DILocation(line: 716, column: 8, scope: !85)
!85 = distinct !DILexicalBlock(scope: !4, file: !5, line: 716, column: 3)
!86 = !DILocation(line: 716, column: 19, scope: !87)
!87 = distinct !DILexicalBlock(scope: !85, file: !5, line: 716, column: 3)
!88 = !DILocation(line: 716, column: 17, scope: !87)
!89 = !DILocation(line: 716, column: 3, scope: !85)
!90 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !4, file: !5, line: 693, type: !8)
!91 = !DILocation(line: 693, column: 10, scope: !4)
!92 = !DILocation(line: 717, column: 10, scope: !93)
!93 = distinct !DILexicalBlock(scope: !87, file: !5, line: 717, column: 5)
!94 = !DILocation(line: 717, column: 19, scope: !95)
!95 = distinct !DILexicalBlock(scope: !93, file: !5, line: 717, column: 5)
!96 = !DILocation(line: 717, column: 5, scope: !93)
!97 = !DILocation(line: 718, column: 25, scope: !95)
!98 = !DILocation(line: 718, column: 18, scope: !95)
!99 = !DILocation(line: 718, column: 7, scope: !95)
!100 = !DILocation(line: 718, column: 11, scope: !95)
!101 = !DILocation(line: 718, column: 23, scope: !95)
!102 = !DILocation(line: 717, column: 25, scope: !95)
!103 = !DILocation(line: 717, column: 5, scope: !95)
!104 = !DILocation(line: 718, column: 38, scope: !93)
!105 = !DILocation(line: 716, column: 38, scope: !87)
!106 = !DILocation(line: 716, column: 3, scope: !87)
!107 = !DILocation(line: 724, column: 3, scope: !4)
!108 = !DILocation(line: 726, column: 10, scope: !4)
!109 = !DILocation(line: 725, column: 3, scope: !4)
!110 = !DILocation(line: 728, column: 71, scope: !4)
!111 = !DILocation(line: 728, column: 77, scope: !4)
!112 = !DILocation(line: 728, column: 3, scope: !4)
!113 = !DILocation(line: 729, column: 3, scope: !4)
!114 = !DILocation(line: 730, column: 3, scope: !4)
!115 = !DILocation(line: 742, column: 18, scope: !116)
!116 = distinct !DILexicalBlock(scope: !4, file: !5, line: 742, column: 3)
!117 = !DILocation(line: 742, column: 8, scope: !116)
!118 = !DILocation(line: 742, column: 23, scope: !119)
!119 = !DILexicalBlockFile(scope: !120, file: !5, discriminator: 2)
!120 = !DILexicalBlockFile(scope: !121, file: !5, discriminator: 1)
!121 = distinct !DILexicalBlock(scope: !116, file: !5, line: 742, column: 3)
!122 = !DILocation(line: 742, column: 35, scope: !121)
!123 = !DILocation(line: 742, column: 33, scope: !121)
!124 = !DILocation(line: 742, column: 3, scope: !116)
!125 = !DILocation(line: 745, column: 19, scope: !126)
!126 = distinct !DILexicalBlock(scope: !127, file: !5, line: 745, column: 5)
!127 = distinct !DILexicalBlock(scope: !121, file: !5, line: 742, column: 55)
!128 = !DILocation(line: 745, column: 10, scope: !126)
!129 = !DILocation(line: 745, column: 24, scope: !130)
!130 = !DILexicalBlockFile(scope: !131, file: !5, discriminator: 2)
!131 = !DILexicalBlockFile(scope: !132, file: !5, discriminator: 1)
!132 = distinct !DILexicalBlock(scope: !126, file: !5, line: 745, column: 5)
!133 = !DILocation(line: 745, column: 33, scope: !132)
!134 = !DILocation(line: 745, column: 5, scope: !126)
!135 = !DILocation(line: 749, column: 21, scope: !136)
!136 = distinct !DILexicalBlock(scope: !132, file: !5, line: 745, column: 51)
!137 = !DILocation(line: 749, column: 36, scope: !136)
!138 = !DILocation(line: 749, column: 7, scope: !136)
!139 = !DILocation(line: 750, column: 28, scope: !136)
!140 = !DILocation(line: 750, column: 13, scope: !136)
!141 = !DILocation(line: 750, column: 7, scope: !136)
!142 = !DILocation(line: 750, column: 26, scope: !136)
!143 = !DILocation(line: 751, column: 28, scope: !136)
!144 = !DILocation(line: 751, column: 13, scope: !136)
!145 = !DILocation(line: 751, column: 7, scope: !136)
!146 = !DILocation(line: 751, column: 26, scope: !136)
!147 = !DILocation(line: 752, column: 5, scope: !136)
!148 = !DILocation(line: 745, column: 47, scope: !132)
!149 = !DILocation(line: 745, column: 5, scope: !132)
!150 = !DILocation(line: 753, column: 14, scope: !127)
!151 = !DILocation(line: 757, column: 19, scope: !127)
!152 = !DILocation(line: 757, column: 34, scope: !127)
!153 = !DILocation(line: 757, column: 5, scope: !127)
!154 = !DILocation(line: 758, column: 16, scope: !127)
!155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "od_cline", scope: !4, file: !5, line: 694, type: !15)
!156 = !DILocation(line: 694, column: 20, scope: !4)
!157 = !DILocation(line: 762, column: 19, scope: !127)
!158 = !DILocation(line: 762, column: 34, scope: !127)
!159 = !DILocation(line: 762, column: 5, scope: !127)
!160 = !DILocation(line: 763, column: 16, scope: !127)
!161 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "od_fline", scope: !4, file: !5, line: 694, type: !15)
!162 = !DILocation(line: 694, column: 10, scope: !4)
!163 = !DILocation(line: 765, column: 20, scope: !127)
!164 = !DILocation(line: 765, column: 34, scope: !127)
!165 = !DILocation(line: 765, column: 32, scope: !127)
!166 = !DILocation(line: 765, column: 18, scope: !127)
!167 = !DILocation(line: 766, column: 24, scope: !127)
!168 = !DILocation(line: 766, column: 38, scope: !127)
!169 = !DILocation(line: 766, column: 36, scope: !127)
!170 = !DILocation(line: 766, column: 58, scope: !127)
!171 = !DILocation(line: 766, column: 54, scope: !127)
!172 = !DILocation(line: 766, column: 73, scope: !127)
!173 = !DILocation(line: 766, column: 71, scope: !127)
!174 = !DILocation(line: 766, column: 51, scope: !127)
!175 = !DILocation(line: 766, column: 21, scope: !127)
!176 = !DILocation(line: 766, column: 15, scope: !127)
!177 = !DILocation(line: 767, column: 29, scope: !127)
!178 = !DILocation(line: 767, column: 18, scope: !127)
!179 = !DILocation(line: 768, column: 22, scope: !127)
!180 = !DILocation(line: 768, column: 18, scope: !127)
!181 = !DILocation(line: 768, column: 16, scope: !127)
!182 = !DILocation(line: 772, column: 31, scope: !127)
!183 = !DILocation(line: 772, column: 44, scope: !127)
!184 = !DILocation(line: 772, column: 42, scope: !127)
!185 = !DILocation(line: 772, column: 28, scope: !127)
!186 = !DILocation(line: 772, column: 16, scope: !127)
!187 = !DILocation(line: 773, column: 13, scope: !127)
!188 = !DILocation(line: 774, column: 18, scope: !127)
!189 = !DILocation(line: 774, column: 16, scope: !127)
!190 = !DILocation(line: 776, column: 3, scope: !127)
!191 = !DILocation(line: 742, column: 51, scope: !121)
!192 = !DILocation(line: 742, column: 3, scope: !121)
!193 = !DILocation(line: 782, column: 27, scope: !4)
!194 = !DILocation(line: 782, column: 40, scope: !4)
!195 = !DILocation(line: 781, column: 3, scope: !4)
!196 = !DILocation(line: 784, column: 27, scope: !4)
!197 = !DILocation(line: 784, column: 40, scope: !4)
!198 = !DILocation(line: 783, column: 3, scope: !4)
!199 = !DILocation(line: 787, column: 11, scope: !4)
!200 = !DILocation(line: 785, column: 3, scope: !4)
!201 = !DILocation(line: 790, column: 11, scope: !4)
!202 = !DILocation(line: 788, column: 3, scope: !4)
!203 = !DILocation(line: 793, column: 11, scope: !4)
!204 = !DILocation(line: 791, column: 3, scope: !4)
!205 = !DILocation(line: 796, column: 11, scope: !4)
!206 = !DILocation(line: 794, column: 3, scope: !4)
!207 = !DILocation(line: 799, column: 11, scope: !4)
!208 = !DILocation(line: 797, column: 3, scope: !4)
!209 = !DILocation(line: 802, column: 11, scope: !4)
!210 = !DILocation(line: 800, column: 3, scope: !4)
!211 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errors", scope: !4, file: !5, line: 693, type: !8)
!212 = !DILocation(line: 693, column: 16, scope: !4)
!213 = !DILocation(line: 808, column: 8, scope: !214)
!214 = distinct !DILexicalBlock(scope: !4, file: !5, line: 808, column: 3)
!215 = !DILocation(line: 808, column: 17, scope: !216)
!216 = distinct !DILexicalBlock(scope: !214, file: !5, line: 808, column: 3)
!217 = !DILocation(line: 808, column: 3, scope: !214)
!218 = !DILocation(line: 809, column: 16, scope: !219)
!219 = distinct !DILexicalBlock(scope: !220, file: !5, line: 809, column: 9)
!220 = distinct !DILexicalBlock(scope: !216, file: !5, line: 808, column: 27)
!221 = !DILocation(line: 809, column: 27, scope: !219)
!222 = !DILocation(line: 809, column: 9, scope: !219)
!223 = !DILocation(line: 809, column: 38, scope: !219)
!224 = !DILocation(line: 809, column: 9, scope: !220)
!225 = !DILocation(line: 814, column: 56, scope: !226)
!226 = distinct !DILexicalBlock(scope: !219, file: !5, line: 809, column: 44)
!227 = !DILocation(line: 814, column: 9, scope: !226)
!228 = !DILocation(line: 816, column: 37, scope: !226)
!229 = !DILocation(line: 816, column: 7, scope: !226)
!230 = !DILocation(line: 817, column: 37, scope: !226)
!231 = !DILocation(line: 817, column: 7, scope: !226)
!232 = !DILocation(line: 818, column: 7, scope: !226)
!233 = !DILocation(line: 819, column: 18, scope: !226)
!234 = !DILocation(line: 819, column: 11, scope: !226)
!235 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !4, file: !5, line: 693, type: !8)
!236 = !DILocation(line: 693, column: 13, scope: !4)
!237 = !DILocation(line: 820, column: 12, scope: !238)
!238 = distinct !DILexicalBlock(scope: !226, file: !5, line: 820, column: 7)
!239 = !DILocation(line: 820, column: 21, scope: !240)
!240 = distinct !DILexicalBlock(scope: !238, file: !5, line: 820, column: 7)
!241 = !DILocation(line: 820, column: 7, scope: !238)
!242 = !DILocation(line: 821, column: 22, scope: !243)
!243 = distinct !DILexicalBlock(scope: !240, file: !5, line: 820, column: 31)
!244 = !DILocation(line: 821, column: 38, scope: !243)
!245 = !DILocation(line: 821, column: 35, scope: !243)
!246 = !DILocation(line: 821, column: 9, scope: !243)
!247 = !DILocation(line: 822, column: 13, scope: !248)
!248 = distinct !DILexicalBlock(scope: !243, file: !5, line: 822, column: 13)
!249 = !DILocation(line: 822, column: 29, scope: !248)
!250 = !DILocation(line: 822, column: 26, scope: !248)
!251 = !DILocation(line: 822, column: 13, scope: !243)
!252 = !DILocation(line: 823, column: 17, scope: !248)
!253 = !DILocation(line: 823, column: 11, scope: !248)
!254 = !DILocation(line: 824, column: 7, scope: !243)
!255 = !DILocation(line: 820, column: 27, scope: !240)
!256 = !DILocation(line: 820, column: 7, scope: !240)
!257 = !DILocation(line: 825, column: 7, scope: !226)
!258 = !DILocation(line: 826, column: 5, scope: !226)
!259 = !DILocation(line: 827, column: 3, scope: !220)
!260 = !DILocation(line: 808, column: 23, scope: !216)
!261 = !DILocation(line: 808, column: 3, scope: !216)
!262 = !DILocation(line: 831, column: 16, scope: !263)
!263 = distinct !DILexicalBlock(scope: !4, file: !5, line: 831, column: 9)
!264 = !DILocation(line: 831, column: 9, scope: !4)
!265 = !DILocation(line: 833, column: 29, scope: !266)
!266 = distinct !DILexicalBlock(scope: !263, file: !5, line: 831, column: 21)
!267 = !DILocation(line: 833, column: 22, scope: !266)
!268 = !DILocation(line: 832, column: 7, scope: !266)
!269 = !DILocation(line: 834, column: 5, scope: !266)
!270 = !DILocation(line: 835, column: 7, scope: !263)
!271 = !DILocation(line: 837, column: 1, scope: !4)
!272 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "line", arg: 1, scope: !12, file: !5, line: 666, type: !8)
!273 = !DILocation(line: 666, column: 36, scope: !12)
!274 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ray_h", arg: 2, scope: !12, file: !5, line: 667, type: !15)
!275 = !DILocation(line: 667, column: 8, scope: !12)
!276 = !DILocation(line: 671, column: 19, scope: !12)
!277 = !DILocation(line: 672, column: 14, scope: !12)
!278 = !DILocation(line: 673, column: 14, scope: !12)
!279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !12, file: !5, line: 669, type: !8)
!280 = !DILocation(line: 669, column: 7, scope: !12)
!281 = !DILocation(line: 675, column: 8, scope: !282)
!282 = distinct !DILexicalBlock(scope: !12, file: !5, line: 675, column: 3)
!283 = !DILocation(line: 675, column: 20, scope: !284)
!284 = distinct !DILexicalBlock(scope: !282, file: !5, line: 675, column: 3)
!285 = !DILocation(line: 675, column: 17, scope: !284)
!286 = !DILocation(line: 675, column: 3, scope: !282)
!287 = !DILocation(line: 676, column: 27, scope: !288)
!288 = distinct !DILexicalBlock(scope: !284, file: !5, line: 675, column: 43)
!289 = !DILocation(line: 676, column: 25, scope: !288)
!290 = !DILocation(line: 677, column: 16, scope: !288)
!291 = !DILocation(line: 677, column: 14, scope: !288)
!292 = !DILocation(line: 678, column: 9, scope: !293)
!293 = distinct !DILexicalBlock(scope: !288, file: !5, line: 678, column: 9)
!294 = !DILocation(line: 678, column: 18, scope: !293)
!295 = !DILocation(line: 678, column: 9, scope: !288)
!296 = !DILocation(line: 679, column: 18, scope: !293)
!297 = !DILocation(line: 679, column: 31, scope: !293)
!298 = !DILocation(line: 679, column: 50, scope: !293)
!299 = !DILocation(line: 679, column: 48, scope: !293)
!300 = !DILocation(line: 679, column: 74, scope: !293)
!301 = !DILocation(line: 679, column: 93, scope: !293)
!302 = !DILocation(line: 679, column: 91, scope: !293)
!303 = !DILocation(line: 679, column: 71, scope: !293)
!304 = !DILocation(line: 679, column: 116, scope: !293)
!305 = !DILocation(line: 679, column: 124, scope: !293)
!306 = !DILocation(line: 679, column: 133, scope: !293)
!307 = !DILocation(line: 679, column: 131, scope: !293)
!308 = !DILocation(line: 679, column: 112, scope: !293)
!309 = !DILocation(line: 679, column: 27, scope: !293)
!310 = !DILocation(line: 679, column: 16, scope: !293)
!311 = !DILocation(line: 679, column: 7, scope: !293)
!312 = !DILocation(line: 680, column: 5, scope: !288)
!313 = !DILocation(line: 681, column: 18, scope: !288)
!314 = !DILocation(line: 681, column: 16, scope: !288)
!315 = !DILocation(line: 682, column: 13, scope: !316)
!316 = distinct !DILexicalBlock(scope: !288, file: !5, line: 682, column: 9)
!317 = !DILocation(line: 682, column: 11, scope: !316)
!318 = !DILocation(line: 682, column: 9, scope: !288)
!319 = !DILocation(line: 683, column: 25, scope: !316)
!320 = !DILocation(line: 683, column: 43, scope: !316)
!321 = !DILocation(line: 683, column: 41, scope: !316)
!322 = !DILocation(line: 683, column: 23, scope: !316)
!323 = !DILocation(line: 683, column: 7, scope: !316)
!324 = !DILocation(line: 684, column: 3, scope: !288)
!325 = !DILocation(line: 675, column: 39, scope: !284)
!326 = !DILocation(line: 675, column: 3, scope: !284)
!327 = !DILocation(line: 685, column: 1, scope: !12)
!328 = !DILocation(line: 604, column: 7, scope: !329)
!329 = distinct !DILexicalBlock(scope: !16, file: !5, line: 604, column: 7)
!330 = !DILocation(line: 604, column: 7, scope: !16)
!331 = !DILocation(line: 605, column: 9, scope: !332)
!332 = distinct !DILexicalBlock(scope: !333, file: !5, line: 605, column: 9)
!333 = distinct !DILexicalBlock(scope: !329, file: !5, line: 604, column: 17)
!334 = !DILocation(line: 605, column: 29, scope: !332)
!335 = !DILocation(line: 605, column: 9, scope: !333)
!336 = !DILocation(line: 606, column: 11, scope: !337)
!337 = distinct !DILexicalBlock(scope: !338, file: !5, line: 606, column: 11)
!338 = distinct !DILexicalBlock(scope: !332, file: !5, line: 605, column: 37)
!339 = !DILocation(line: 606, column: 27, scope: !337)
!340 = !DILocation(line: 606, column: 11, scope: !338)
!341 = !DILocation(line: 607, column: 26, scope: !342)
!342 = distinct !DILexicalBlock(scope: !337, file: !5, line: 606, column: 35)
!343 = !DILocation(line: 608, column: 20, scope: !342)
!344 = !DILocation(line: 608, column: 33, scope: !342)
!345 = !DILocation(line: 608, column: 31, scope: !342)
!346 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iang_sin", scope: !16, file: !5, line: 600, type: !15)
!347 = !DILocation(line: 600, column: 7, scope: !16)
!348 = !DILocation(line: 609, column: 7, scope: !342)
!349 = !DILocation(line: 610, column: 22, scope: !337)
!350 = !DILocation(line: 611, column: 22, scope: !337)
!351 = !DILocation(line: 610, column: 38, scope: !337)
!352 = !DILocation(line: 612, column: 21, scope: !337)
!353 = !DILocation(line: 611, column: 43, scope: !337)
!354 = !DILocation(line: 613, column: 20, scope: !337)
!355 = !DILocation(line: 612, column: 42, scope: !337)
!356 = !DILocation(line: 615, column: 19, scope: !338)
!357 = !DILocation(line: 615, column: 32, scope: !338)
!358 = !DILocation(line: 615, column: 30, scope: !338)
!359 = !DILocation(line: 615, column: 42, scope: !338)
!360 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rang_sin", scope: !16, file: !5, line: 601, type: !15)
!361 = !DILocation(line: 601, column: 7, scope: !16)
!362 = !DILocation(line: 617, column: 30, scope: !338)
!363 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "old_axis_slope_angle", scope: !16, file: !5, line: 602, type: !15)
!364 = !DILocation(line: 602, column: 7, scope: !16)
!365 = !DILocation(line: 618, column: 26, scope: !338)
!366 = !DILocation(line: 618, column: 43, scope: !338)
!367 = !DILocation(line: 619, column: 35, scope: !338)
!368 = !DILocation(line: 618, column: 24, scope: !338)
!369 = !DILocation(line: 620, column: 11, scope: !370)
!370 = distinct !DILexicalBlock(scope: !338, file: !5, line: 620, column: 11)
!371 = !DILocation(line: 620, column: 27, scope: !370)
!372 = !DILocation(line: 620, column: 11, scope: !338)
!373 = !DILocation(line: 621, column: 22, scope: !370)
!374 = !DILocation(line: 621, column: 38, scope: !370)
!375 = !DILocation(line: 621, column: 20, scope: !370)
!376 = !DILocation(line: 621, column: 9, scope: !370)
!377 = !DILocation(line: 622, column: 25, scope: !338)
!378 = !DILocation(line: 622, column: 38, scope: !338)
!379 = !DILocation(line: 622, column: 36, scope: !338)
!380 = !DILocation(line: 622, column: 23, scope: !338)
!381 = !DILocation(line: 623, column: 7, scope: !338)
!382 = !DILocation(line: 625, column: 23, scope: !333)
!383 = !DILocation(line: 625, column: 42, scope: !333)
!384 = !DILocation(line: 625, column: 53, scope: !333)
!385 = !DILocation(line: 625, column: 51, scope: !333)
!386 = !DILocation(line: 625, column: 39, scope: !333)
!387 = !DILocation(line: 625, column: 21, scope: !333)
!388 = !DILocation(line: 626, column: 24, scope: !333)
!389 = !DILocation(line: 626, column: 44, scope: !333)
!390 = !DILocation(line: 626, column: 57, scope: !333)
!391 = !DILocation(line: 626, column: 55, scope: !333)
!392 = !DILocation(line: 626, column: 41, scope: !333)
!393 = !DILocation(line: 626, column: 22, scope: !333)
!394 = !DILocation(line: 627, column: 5, scope: !333)
!395 = !DILocation(line: 630, column: 7, scope: !396)
!396 = distinct !DILexicalBlock(scope: !16, file: !5, line: 630, column: 7)
!397 = !DILocation(line: 630, column: 27, scope: !396)
!398 = !DILocation(line: 630, column: 7, scope: !16)
!399 = !DILocation(line: 631, column: 9, scope: !400)
!400 = distinct !DILexicalBlock(scope: !401, file: !5, line: 631, column: 9)
!401 = distinct !DILexicalBlock(scope: !396, file: !5, line: 630, column: 35)
!402 = !DILocation(line: 631, column: 25, scope: !400)
!403 = !DILocation(line: 631, column: 9, scope: !401)
!404 = !DILocation(line: 632, column: 24, scope: !405)
!405 = distinct !DILexicalBlock(scope: !400, file: !5, line: 631, column: 33)
!406 = !DILocation(line: 633, column: 18, scope: !405)
!407 = !DILocation(line: 633, column: 31, scope: !405)
!408 = !DILocation(line: 633, column: 29, scope: !405)
!409 = !DILocation(line: 634, column: 5, scope: !405)
!410 = !DILocation(line: 635, column: 20, scope: !411)
!411 = distinct !DILexicalBlock(scope: !400, file: !5, line: 634, column: 12)
!412 = !DILocation(line: 636, column: 20, scope: !411)
!413 = !DILocation(line: 635, column: 36, scope: !411)
!414 = !DILocation(line: 637, column: 19, scope: !411)
!415 = !DILocation(line: 636, column: 41, scope: !411)
!416 = !DILocation(line: 638, column: 22, scope: !411)
!417 = !DILocation(line: 638, column: 18, scope: !411)
!418 = !DILocation(line: 637, column: 40, scope: !411)
!419 = !DILocation(line: 640, column: 12, scope: !401)
!420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iang", scope: !16, file: !5, line: 598, type: !15)
!421 = !DILocation(line: 598, column: 10, scope: !16)
!422 = !DILocation(line: 641, column: 17, scope: !401)
!423 = !DILocation(line: 641, column: 30, scope: !401)
!424 = !DILocation(line: 641, column: 28, scope: !401)
!425 = !DILocation(line: 641, column: 40, scope: !401)
!426 = !DILocation(line: 643, column: 28, scope: !401)
!427 = !DILocation(line: 644, column: 24, scope: !401)
!428 = !DILocation(line: 644, column: 41, scope: !401)
!429 = !DILocation(line: 645, column: 31, scope: !401)
!430 = !DILocation(line: 645, column: 29, scope: !401)
!431 = !DILocation(line: 644, column: 22, scope: !401)
!432 = !DILocation(line: 646, column: 41, scope: !401)
!433 = !DILocation(line: 646, column: 49, scope: !401)
!434 = !DILocation(line: 646, column: 15, scope: !401)
!435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sagitta", scope: !16, file: !5, line: 602, type: !15)
!436 = !DILocation(line: 602, column: 29, scope: !16)
!437 = !DILocation(line: 647, column: 21, scope: !401)
!438 = !DILocation(line: 647, column: 19, scope: !401)
!439 = !DILocation(line: 647, column: 41, scope: !401)
!440 = !DILocation(line: 647, column: 51, scope: !401)
!441 = !DILocation(line: 648, column: 25, scope: !401)
!442 = !DILocation(line: 649, column: 72, scope: !401)
!443 = !DILocation(line: 648, column: 47, scope: !401)
!444 = !DILocation(line: 648, column: 45, scope: !401)
!445 = !DILocation(line: 650, column: 24, scope: !401)
!446 = !DILocation(line: 649, column: 81, scope: !401)
!447 = !DILocation(line: 650, column: 47, scope: !401)
!448 = !DILocation(line: 648, column: 21, scope: !401)
!449 = !DILocation(line: 652, column: 5, scope: !401)
!450 = !DILocation(line: 655, column: 17, scope: !16)
!451 = !DILocation(line: 655, column: 30, scope: !16)
!452 = !DILocation(line: 655, column: 28, scope: !16)
!453 = !DILocation(line: 656, column: 20, scope: !16)
!454 = !DILocation(line: 656, column: 16, scope: !16)
!455 = !DILocation(line: 655, column: 40, scope: !16)
!456 = !DILocation(line: 655, column: 11, scope: !16)
!457 = !DILocation(line: 655, column: 10, scope: !16)
!458 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "rang", scope: !16, file: !5, line: 599, type: !15)
!459 = !DILocation(line: 599, column: 7, scope: !16)
!460 = !DILocation(line: 657, column: 21, scope: !16)
!461 = !DILocation(line: 657, column: 41, scope: !16)
!462 = !DILocation(line: 658, column: 45, scope: !16)
!463 = !DILocation(line: 658, column: 41, scope: !16)
!464 = !DILocation(line: 657, column: 50, scope: !16)
!465 = !DILocation(line: 659, column: 41, scope: !16)
!466 = !DILocation(line: 660, column: 45, scope: !16)
!467 = !DILocation(line: 660, column: 41, scope: !16)
!468 = !DILocation(line: 659, column: 52, scope: !16)
!469 = !DILocation(line: 658, column: 53, scope: !16)
!470 = !DILocation(line: 657, column: 37, scope: !16)
!471 = !DILocation(line: 657, column: 19, scope: !16)
!472 = !DILocation(line: 661, column: 22, scope: !16)
!473 = !DILocation(line: 661, column: 20, scope: !16)
!474 = !DILocation(line: 662, column: 1, scope: !16)
!475 = !DILocation(line: 662, column: 1, scope: !476)
!476 = !DILexicalBlockFile(scope: !16, file: !5, discriminator: 1)
