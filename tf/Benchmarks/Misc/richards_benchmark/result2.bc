; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.task = type { %struct.task*, i32, i32, %struct.packet*, i32, %struct.task* (%struct.packet*)*, i64, i64 }
%struct.packet = type { %struct.packet*, i32, i32, i32, [4 x i8] }

@alphabet = global [28 x i8] c"0ABCDEFGHIJKLMNOPQRSTUVWXYZ\00", align 16
@tasktab = global [11 x %struct.task*] zeroinitializer, align 16
@tasklist = global %struct.task* null, align 8
@qpktcount = global i32 0, align 4
@holdcount = global i32 0, align 4
@tracing = global i32 1, align 4
@layout = global i32 0, align 4
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@tcb = common global %struct.task* null, align 8
@taskid = common global i64 0, align 8
@v1 = common global i64 0, align 8
@v2 = common global i64 0, align 8
@.str.2 = private unnamed_addr constant [17 x i8] c"\0ABad task id %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"Bench mark starting\0A\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"Starting\0A\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"finished\0A\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"qpkt count = %d  holdcount = %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"These results are \00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"correct\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"incorrect\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"\0Aend of run\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @createtask(i32 %id, i32 %pri, %struct.packet* %wkq, i32 %state, %struct.task* (%struct.packet*)* %fn, i64 %v1, i64 %v2) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %id, i64 0, metadata !86, metadata !87), !dbg !88
  call void @llvm.dbg.value(metadata i32 %pri, i64 0, metadata !89, metadata !87), !dbg !90
  call void @llvm.dbg.value(metadata %struct.packet* %wkq, i64 0, metadata !91, metadata !87), !dbg !92
  call void @llvm.dbg.value(metadata i32 %state, i64 0, metadata !93, metadata !87), !dbg !94
  call void @llvm.dbg.value(metadata %struct.task* (%struct.packet*)* %fn, i64 0, metadata !95, metadata !87), !dbg !96
  call void @llvm.dbg.value(metadata i64 %v1, i64 0, metadata !97, metadata !87), !dbg !98
  call void @llvm.dbg.value(metadata i64 %v2, i64 0, metadata !99, metadata !87), !dbg !100
  %call = call noalias i8* @malloc(i64 56) #4, !dbg !101
  %tmp = bitcast i8* %call to %struct.task*, !dbg !102
  call void @llvm.dbg.value(metadata %struct.task* %tmp, i64 0, metadata !103, metadata !87), !dbg !104
  %idxprom = sext i32 %id to i64, !dbg !105
  %arrayidx = getelementptr inbounds [11 x %struct.task*], [11 x %struct.task*]* @tasktab, i32 0, i64 %idxprom, !dbg !105
  store %struct.task* %tmp, %struct.task** %arrayidx, align 8, !dbg !106
  %tmp3 = load %struct.task*, %struct.task** @tasklist, align 8, !dbg !107
  %t_link = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 0, !dbg !108
  store %struct.task* %tmp3, %struct.task** %t_link, align 8, !dbg !109
  %t_id = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 1, !dbg !110
  store i32 %id, i32* %t_id, align 4, !dbg !111
  %t_pri = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 2, !dbg !112
  store i32 %pri, i32* %t_pri, align 4, !dbg !113
  %t_wkq = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 3, !dbg !114
  store %struct.packet* %wkq, %struct.packet** %t_wkq, align 8, !dbg !115
  %t_state = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 4, !dbg !116
  store i32 %state, i32* %t_state, align 4, !dbg !117
  %t_fn = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 5, !dbg !118
  store %struct.task* (%struct.packet*)* %fn, %struct.task* (%struct.packet*)** %t_fn, align 8, !dbg !119
  %t_v1 = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 6, !dbg !120
  store i64 %v1, i64* %t_v1, align 8, !dbg !121
  %t_v2 = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 7, !dbg !122
  store i64 %v2, i64* %t_v2, align 8, !dbg !123
  store %struct.task* %tmp, %struct.task** @tasklist, align 8, !dbg !124
  ret void, !dbg !125
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind uwtable
define %struct.packet* @pkt(%struct.packet* %link, i32 %id, i32 %kind) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %link, i64 0, metadata !126, metadata !87), !dbg !127
  call void @llvm.dbg.value(metadata i32 %id, i64 0, metadata !128, metadata !87), !dbg !129
  call void @llvm.dbg.value(metadata i32 %kind, i64 0, metadata !130, metadata !87), !dbg !131
  %call = call noalias i8* @malloc(i64 24) #4, !dbg !132
  %tmp = bitcast i8* %call to %struct.packet*, !dbg !133
  call void @llvm.dbg.value(metadata %struct.packet* %tmp, i64 0, metadata !134, metadata !87), !dbg !135
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !136, metadata !87), !dbg !137
  %scevgep = getelementptr i8, i8* %call, i64 20, !dbg !138
  %scevgep15 = ptrtoint i8* %scevgep to i64
  %scevgep13 = getelementptr i8, i8* %call, i64 20, !dbg !138
  %scevgep1314 = ptrtoint i8* %scevgep13 to i64
  %0 = add i64 %scevgep1314, 1, !dbg !140
  %1 = add i64 %scevgep1314, 1, !dbg !140
  %scevgep16 = getelementptr i8, i8* %call, i64 20, !dbg !138
  %scevgep1619 = ptrtoint i8* %scevgep16 to i64
  %scevgep17 = getelementptr i8, i8* %call, i64 20, !dbg !138
  %scevgep1718 = ptrtoint i8* %scevgep17 to i64
  %2 = add i64 %scevgep1718, 1, !dbg !140
  %3 = add i64 %scevgep1718, 1, !dbg !140
  br label %for.cond, !dbg !138

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp sle i32 %i.0, 3, !dbg !141
  %4 = ptrtoint i8* %scevgep to i64, !dbg !140
  %5 = sub i64 %0, %4, !dbg !140
  %6 = ptrtoint i8* %scevgep16 to i64, !dbg !140
  %7 = sub i64 %2, %6, !dbg !140
  br i1 %cmp, label %for.body, label %for.end, !dbg !140

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !143
  %p_a2 = getelementptr inbounds %struct.packet, %struct.packet* %tmp, i32 0, i32 4, !dbg !144
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %p_a2, i32 0, i64 %idxprom, !dbg !143
  store i8 0, i8* %arrayidx, align 1, !dbg !145
  br label %for.inc, !dbg !143

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !146
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !136, metadata !87), !dbg !137
  br label %for.cond, !dbg !147

for.end:                                          ; preds = %for.cond
  %p_link = getelementptr inbounds %struct.packet, %struct.packet* %tmp, i32 0, i32 0, !dbg !148
  store %struct.packet* %link, %struct.packet** %p_link, align 8, !dbg !149
  %p_id = getelementptr inbounds %struct.packet, %struct.packet* %tmp, i32 0, i32 1, !dbg !150
  store i32 %id, i32* %p_id, align 4, !dbg !151
  %p_kind = getelementptr inbounds %struct.packet, %struct.packet* %tmp, i32 0, i32 2, !dbg !152
  store i32 %kind, i32* %p_kind, align 4, !dbg !153
  %p_a1 = getelementptr inbounds %struct.packet, %struct.packet* %tmp, i32 0, i32 3, !dbg !154
  store i32 0, i32* %p_a1, align 4, !dbg !155
  ret %struct.packet* %tmp, !dbg !156
}

; Function Attrs: nounwind uwtable
define void @trace(i8 signext %a) #0 {
entry:
  call void @llvm.dbg.value(metadata i8 %a, i64 0, metadata !157, metadata !87), !dbg !158
  %tmp = load i32, i32* @layout, align 4, !dbg !159
  %dec = add nsw i32 %tmp, -1, !dbg !159
  store i32 %dec, i32* @layout, align 4, !dbg !159
  %cmp = icmp sle i32 %dec, 0, !dbg !161
  br i1 %cmp, label %if.then, label %if.end, !dbg !162

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !163
  store i32 50, i32* @layout, align 4, !dbg !165
  br label %if.end, !dbg !166

if.end:                                           ; preds = %if.then, %entry
  %conv = sext i8 %a to i32, !dbg !167
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 %conv), !dbg !168
  ret void, !dbg !169
}

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define void @schedule() #0 {
entry:
  br label %while.cond, !dbg !170

while.cond:                                       ; preds = %sw.epilog, %entry
  %tmp = load %struct.task*, %struct.task** @tcb, align 8, !dbg !171
  %cmp = icmp ne %struct.task* %tmp, null, !dbg !174
  br i1 %cmp, label %while.body, label %while.end.loopexit, !dbg !170

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.packet* null, i64 0, metadata !175, metadata !87), !dbg !177
  %tmp1 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !178
  %t_state = getelementptr inbounds %struct.task, %struct.task* %tmp1, i32 0, i32 4, !dbg !179
  %tmp2 = load i32, i32* %t_state, align 4, !dbg !179
  switch i32 %tmp2, label %sw.default [
    i32 3, label %sw.bb
    i32 0, label %sw.bb.5
    i32 1, label %sw.bb.5
    i32 2, label %sw.bb.11
    i32 4, label %sw.bb.11
    i32 5, label %sw.bb.11
    i32 6, label %sw.bb.11
    i32 7, label %sw.bb.11
  ], !dbg !180

sw.bb:                                            ; preds = %while.body
  %tmp3 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !181
  %t_wkq = getelementptr inbounds %struct.task, %struct.task* %tmp3, i32 0, i32 3, !dbg !183
  %tmp4 = load %struct.packet*, %struct.packet** %t_wkq, align 8, !dbg !183
  call void @llvm.dbg.value(metadata %struct.packet* %tmp4, i64 0, metadata !175, metadata !87), !dbg !177
  %p_link = getelementptr inbounds %struct.packet, %struct.packet* %tmp4, i32 0, i32 0, !dbg !184
  %tmp6 = load %struct.packet*, %struct.packet** %p_link, align 8, !dbg !184
  %tmp7 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !185
  %t_wkq1 = getelementptr inbounds %struct.task, %struct.task* %tmp7, i32 0, i32 3, !dbg !186
  store %struct.packet* %tmp6, %struct.packet** %t_wkq1, align 8, !dbg !187
  %tmp8 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !188
  %t_wkq2 = getelementptr inbounds %struct.task, %struct.task* %tmp8, i32 0, i32 3, !dbg !189
  %tmp9 = load %struct.packet*, %struct.packet** %t_wkq2, align 8, !dbg !189
  %cmp3 = icmp eq %struct.packet* %tmp9, null, !dbg !190
  %cond = select i1 %cmp3, i32 0, i32 1, !dbg !188
  %tmp10 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !191
  %t_state4 = getelementptr inbounds %struct.task, %struct.task* %tmp10, i32 0, i32 4, !dbg !192
  store i32 %cond, i32* %t_state4, align 4, !dbg !193
  br label %sw.bb.5, !dbg !191

sw.bb.5:                                          ; preds = %sw.bb, %while.body, %while.body
  %pkt.0 = phi %struct.packet* [ null, %while.body ], [ null, %while.body ], [ %tmp4, %sw.bb ]
  %tmp11 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !194
  %t_id = getelementptr inbounds %struct.task, %struct.task* %tmp11, i32 0, i32 1, !dbg !195
  %tmp12 = load i32, i32* %t_id, align 4, !dbg !195
  %conv = sext i32 %tmp12 to i64, !dbg !194
  store i64 %conv, i64* @taskid, align 8, !dbg !196
  %tmp13 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !197
  %t_v1 = getelementptr inbounds %struct.task, %struct.task* %tmp13, i32 0, i32 6, !dbg !198
  %tmp14 = load i64, i64* %t_v1, align 8, !dbg !198
  store i64 %tmp14, i64* @v1, align 8, !dbg !199
  %tmp15 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !200
  %t_v2 = getelementptr inbounds %struct.task, %struct.task* %tmp15, i32 0, i32 7, !dbg !201
  %tmp16 = load i64, i64* %t_v2, align 8, !dbg !201
  store i64 %tmp16, i64* @v2, align 8, !dbg !202
  %tmp17 = load i32, i32* @tracing, align 4, !dbg !203
  %cmp6 = icmp eq i32 %tmp17, 1, !dbg !205
  br i1 %cmp6, label %if.then, label %if.end, !dbg !206

if.then:                                          ; preds = %sw.bb.5
  %tmp18 = load i64, i64* @taskid, align 8, !dbg !207
  %add = add nsw i64 %tmp18, 48, !dbg !208
  %conv8 = trunc i64 %add to i8, !dbg !207
  call void @trace(i8 signext %conv8), !dbg !209
  br label %if.end, !dbg !209

if.end:                                           ; preds = %if.then, %sw.bb.5
  %tmp19 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !210
  %t_fn = getelementptr inbounds %struct.task, %struct.task* %tmp19, i32 0, i32 5, !dbg !211
  %tmp20 = load %struct.task* (%struct.packet*)*, %struct.task* (%struct.packet*)** %t_fn, align 8, !dbg !211
  %call = call %struct.task* %tmp20(%struct.packet* %pkt.0), !dbg !212
  call void @llvm.dbg.value(metadata %struct.task* %call, i64 0, metadata !213, metadata !87), !dbg !214
  %tmp22 = load i64, i64* @v1, align 8, !dbg !215
  %tmp23 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !216
  %t_v19 = getelementptr inbounds %struct.task, %struct.task* %tmp23, i32 0, i32 6, !dbg !217
  store i64 %tmp22, i64* %t_v19, align 8, !dbg !218
  %tmp24 = load i64, i64* @v2, align 8, !dbg !219
  %tmp25 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !220
  %t_v210 = getelementptr inbounds %struct.task, %struct.task* %tmp25, i32 0, i32 7, !dbg !221
  store i64 %tmp24, i64* %t_v210, align 8, !dbg !222
  store %struct.task* %call, %struct.task** @tcb, align 8, !dbg !223
  br label %sw.epilog, !dbg !224

sw.bb.11:                                         ; preds = %while.body, %while.body, %while.body, %while.body, %while.body
  %tmp27 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !225
  %t_link = getelementptr inbounds %struct.task, %struct.task* %tmp27, i32 0, i32 0, !dbg !226
  %tmp28 = load %struct.task*, %struct.task** %t_link, align 8, !dbg !226
  store %struct.task* %tmp28, %struct.task** @tcb, align 8, !dbg !227
  br label %sw.epilog, !dbg !228

sw.default:                                       ; preds = %while.body
  br label %while.end, !dbg !229

sw.epilog:                                        ; preds = %sw.bb.11, %if.end
  br label %while.cond, !dbg !170

while.end.loopexit:                               ; preds = %while.cond
  br label %while.end, !dbg !230

while.end:                                        ; preds = %while.end.loopexit, %sw.default
  ret void, !dbg !230
}

; Function Attrs: nounwind uwtable
define %struct.task* @Wait() #0 {
entry:
  %tmp = load %struct.task*, %struct.task** @tcb, align 8, !dbg !231
  %t_state = getelementptr inbounds %struct.task, %struct.task* %tmp, i32 0, i32 4, !dbg !232
  %tmp1 = load i32, i32* %t_state, align 4, !dbg !233
  %or = or i32 %tmp1, 2, !dbg !233
  store i32 %or, i32* %t_state, align 4, !dbg !233
  %tmp2 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !234
  ret %struct.task* %tmp2, !dbg !235
}

; Function Attrs: nounwind uwtable
define %struct.task* @holdself() #0 {
entry:
  %tmp = load i32, i32* @holdcount, align 4, !dbg !236
  %inc = add nsw i32 %tmp, 1, !dbg !236
  store i32 %inc, i32* @holdcount, align 4, !dbg !236
  %tmp1 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !237
  %t_state = getelementptr inbounds %struct.task, %struct.task* %tmp1, i32 0, i32 4, !dbg !238
  %tmp2 = load i32, i32* %t_state, align 4, !dbg !239
  %or = or i32 %tmp2, 4, !dbg !239
  store i32 %or, i32* %t_state, align 4, !dbg !239
  %tmp3 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !240
  %t_link = getelementptr inbounds %struct.task, %struct.task* %tmp3, i32 0, i32 0, !dbg !241
  %tmp4 = load %struct.task*, %struct.task** %t_link, align 8, !dbg !241
  ret %struct.task* %tmp4, !dbg !242
}

; Function Attrs: nounwind uwtable
define %struct.task* @findtcb(i32 %id) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %id, i64 0, metadata !243, metadata !87), !dbg !244
  call void @llvm.dbg.value(metadata %struct.task* null, i64 0, metadata !245, metadata !87), !dbg !246
  %cmp = icmp sle i32 1, %id, !dbg !247
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !249

land.lhs.true:                                    ; preds = %entry
  %conv = sext i32 %id to i64, !dbg !250
  %cmp1 = icmp sle i64 %conv, 10, !dbg !252
  br i1 %cmp1, label %if.then, label %if.end, !dbg !253

if.then:                                          ; preds = %land.lhs.true
  %idxprom = sext i32 %id to i64, !dbg !254
  %arrayidx = getelementptr inbounds [11 x %struct.task*], [11 x %struct.task*]* @tasktab, i32 0, i64 %idxprom, !dbg !254
  %tmp3 = load %struct.task*, %struct.task** %arrayidx, align 8, !dbg !254
  call void @llvm.dbg.value(metadata %struct.task* %tmp3, i64 0, metadata !245, metadata !87), !dbg !246
  br label %if.end, !dbg !255

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %t.0 = phi %struct.task* [ %tmp3, %if.then ], [ null, %land.lhs.true ], [ null, %entry ]
  %cmp3 = icmp eq %struct.task* %t.0, null, !dbg !256
  br i1 %cmp3, label %if.then.5, label %if.end.6, !dbg !258

if.then.5:                                        ; preds = %if.end
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i32 %id), !dbg !259
  br label %if.end.6, !dbg !259

if.end.6:                                         ; preds = %if.then.5, %if.end
  ret %struct.task* %t.0, !dbg !260
}

; Function Attrs: nounwind uwtable
define %struct.task* @release(i32 %id) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %id, i64 0, metadata !261, metadata !87), !dbg !262
  %call = call %struct.task* @findtcb(i32 %id), !dbg !263
  call void @llvm.dbg.value(metadata %struct.task* %call, i64 0, metadata !264, metadata !87), !dbg !265
  %cmp = icmp eq %struct.task* %call, null, !dbg !266
  br i1 %cmp, label %if.then, label %if.end, !dbg !268

if.then:                                          ; preds = %entry
  br label %return, !dbg !269

if.end:                                           ; preds = %entry
  %t_state = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 4, !dbg !270
  %tmp3 = load i32, i32* %t_state, align 4, !dbg !271
  %and = and i32 %tmp3, 65531, !dbg !271
  store i32 %and, i32* %t_state, align 4, !dbg !271
  %t_pri = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 2, !dbg !272
  %tmp5 = load i32, i32* %t_pri, align 4, !dbg !272
  %tmp6 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !274
  %t_pri1 = getelementptr inbounds %struct.task, %struct.task* %tmp6, i32 0, i32 2, !dbg !275
  %tmp7 = load i32, i32* %t_pri1, align 4, !dbg !275
  %cmp2 = icmp sgt i32 %tmp5, %tmp7, !dbg !276
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !277

if.then.3:                                        ; preds = %if.end
  br label %return, !dbg !278

if.end.4:                                         ; preds = %if.end
  %tmp9 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !279
  br label %return, !dbg !280

return:                                           ; preds = %if.end.4, %if.then.3, %if.then
  %retval.0 = phi %struct.task* [ null, %if.then ], [ %call, %if.then.3 ], [ %tmp9, %if.end.4 ]
  ret %struct.task* %retval.0, !dbg !281
}

; Function Attrs: nounwind uwtable
define %struct.task* @qpkt(%struct.packet* %pkt) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %pkt, i64 0, metadata !282, metadata !87), !dbg !283
  %p_id = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 1, !dbg !284
  %tmp1 = load i32, i32* %p_id, align 4, !dbg !284
  %call = call %struct.task* @findtcb(i32 %tmp1), !dbg !285
  call void @llvm.dbg.value(metadata %struct.task* %call, i64 0, metadata !286, metadata !87), !dbg !287
  %cmp = icmp eq %struct.task* %call, null, !dbg !288
  br i1 %cmp, label %if.then, label %if.end, !dbg !290

if.then:                                          ; preds = %entry
  br label %return, !dbg !291

if.end:                                           ; preds = %entry
  %tmp4 = load i32, i32* @qpktcount, align 4, !dbg !292
  %inc = add nsw i32 %tmp4, 1, !dbg !292
  store i32 %inc, i32* @qpktcount, align 4, !dbg !292
  %p_link = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 0, !dbg !293
  store %struct.packet* null, %struct.packet** %p_link, align 8, !dbg !294
  %tmp6 = load i64, i64* @taskid, align 8, !dbg !295
  %conv = trunc i64 %tmp6 to i32, !dbg !295
  %p_id1 = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 1, !dbg !296
  store i32 %conv, i32* %p_id1, align 4, !dbg !297
  %t_wkq = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 3, !dbg !298
  %tmp9 = load %struct.packet*, %struct.packet** %t_wkq, align 8, !dbg !298
  %cmp2 = icmp eq %struct.packet* %tmp9, null, !dbg !300
  br i1 %cmp2, label %if.then.4, label %if.else, !dbg !301

if.then.4:                                        ; preds = %if.end
  %t_wkq5 = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 3, !dbg !302
  store %struct.packet* %pkt, %struct.packet** %t_wkq5, align 8, !dbg !304
  %t_state = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 4, !dbg !305
  %tmp13 = load i32, i32* %t_state, align 4, !dbg !306
  %or = or i32 %tmp13, 1, !dbg !306
  store i32 %or, i32* %t_state, align 4, !dbg !306
  %t_pri = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 2, !dbg !307
  %tmp15 = load i32, i32* %t_pri, align 4, !dbg !307
  %tmp16 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !309
  %t_pri6 = getelementptr inbounds %struct.task, %struct.task* %tmp16, i32 0, i32 2, !dbg !310
  %tmp17 = load i32, i32* %t_pri6, align 4, !dbg !310
  %cmp7 = icmp sgt i32 %tmp15, %tmp17, !dbg !311
  br i1 %cmp7, label %if.then.9, label %if.end.10, !dbg !312

if.then.9:                                        ; preds = %if.then.4
  br label %return, !dbg !313

if.end.10:                                        ; preds = %if.then.4
  br label %if.end.12, !dbg !314

if.else:                                          ; preds = %if.end
  %t_wkq11 = getelementptr inbounds %struct.task, %struct.task* %call, i32 0, i32 3, !dbg !315
  %tmp21 = bitcast %struct.packet** %t_wkq11 to %struct.packet*, !dbg !317
  call void @append(%struct.packet* %pkt, %struct.packet* %tmp21), !dbg !318
  br label %if.end.12

if.end.12:                                        ; preds = %if.else, %if.end.10
  %tmp22 = load %struct.task*, %struct.task** @tcb, align 8, !dbg !319
  br label %return, !dbg !320

return:                                           ; preds = %if.end.12, %if.then.9, %if.then
  %retval.0 = phi %struct.task* [ %call, %if.then ], [ %call, %if.then.9 ], [ %tmp22, %if.end.12 ]
  ret %struct.task* %retval.0, !dbg !321
}

; Function Attrs: nounwind uwtable
define void @append(%struct.packet* %pkt, %struct.packet* %ptr) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %pkt, i64 0, metadata !322, metadata !87), !dbg !323
  call void @llvm.dbg.value(metadata %struct.packet* %ptr, i64 0, metadata !324, metadata !87), !dbg !325
  %p_link = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 0, !dbg !326
  store %struct.packet* null, %struct.packet** %p_link, align 8, !dbg !327
  br label %while.cond, !dbg !328

while.cond:                                       ; preds = %while.body, %entry
  %ptr.addr.0 = phi %struct.packet* [ %ptr, %entry ], [ %tmp4, %while.body ]
  %p_link1 = getelementptr inbounds %struct.packet, %struct.packet* %ptr.addr.0, i32 0, i32 0, !dbg !329
  %tmp2 = load %struct.packet*, %struct.packet** %p_link1, align 8, !dbg !329
  %tobool = icmp ne %struct.packet* %tmp2, null, !dbg !328
  br i1 %tobool, label %while.body, label %while.end, !dbg !328

while.body:                                       ; preds = %while.cond
  %p_link2 = getelementptr inbounds %struct.packet, %struct.packet* %ptr.addr.0, i32 0, i32 0, !dbg !330
  %tmp4 = load %struct.packet*, %struct.packet** %p_link2, align 8, !dbg !330
  call void @llvm.dbg.value(metadata %struct.packet* %tmp4, i64 0, metadata !324, metadata !87), !dbg !325
  br label %while.cond, !dbg !328

while.end:                                        ; preds = %while.cond
  %ptr.addr.0.lcssa = phi %struct.packet* [ %ptr.addr.0, %while.cond ]
  %p_link3 = getelementptr inbounds %struct.packet, %struct.packet* %ptr.addr.0.lcssa, i32 0, i32 0, !dbg !331
  store %struct.packet* %pkt, %struct.packet** %p_link3, align 8, !dbg !332
  ret void, !dbg !333
}

; Function Attrs: nounwind uwtable
define %struct.task* @idlefn(%struct.packet* %pkt) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %pkt, i64 0, metadata !334, metadata !87), !dbg !335
  %tmp = load i64, i64* @v2, align 8, !dbg !336
  %dec = add nsw i64 %tmp, -1, !dbg !336
  store i64 %dec, i64* @v2, align 8, !dbg !336
  %tmp1 = load i64, i64* @v2, align 8, !dbg !337
  %cmp = icmp eq i64 %tmp1, 0, !dbg !339
  br i1 %cmp, label %if.then, label %if.end, !dbg !340

if.then:                                          ; preds = %entry
  %call = call %struct.task* @holdself(), !dbg !341
  br label %return, !dbg !342

if.end:                                           ; preds = %entry
  %tmp2 = load i64, i64* @v1, align 8, !dbg !343
  %and = and i64 %tmp2, 1, !dbg !345
  %cmp1 = icmp eq i64 %and, 0, !dbg !346
  br i1 %cmp1, label %if.then.2, label %if.else, !dbg !347

if.then.2:                                        ; preds = %if.end
  %tmp3 = load i64, i64* @v1, align 8, !dbg !348
  %shr = ashr i64 %tmp3, 1, !dbg !350
  %and3 = and i64 %shr, 32767, !dbg !351
  store i64 %and3, i64* @v1, align 8, !dbg !352
  %call4 = call %struct.task* @release(i32 5), !dbg !353
  br label %return, !dbg !354

if.else:                                          ; preds = %if.end
  %tmp4 = load i64, i64* @v1, align 8, !dbg !355
  %shr5 = ashr i64 %tmp4, 1, !dbg !357
  %and6 = and i64 %shr5, 32767, !dbg !358
  %xor = xor i64 %and6, 53256, !dbg !359
  store i64 %xor, i64* @v1, align 8, !dbg !360
  %call7 = call %struct.task* @release(i32 6), !dbg !361
  br label %return, !dbg !362

return:                                           ; preds = %if.else, %if.then.2, %if.then
  %retval.0 = phi %struct.task* [ %call, %if.then ], [ %call4, %if.then.2 ], [ %call7, %if.else ]
  ret %struct.task* %retval.0, !dbg !363
}

; Function Attrs: nounwind uwtable
define %struct.task* @workfn(%struct.packet* %pkt) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %pkt, i64 0, metadata !364, metadata !87), !dbg !365
  %cmp = icmp eq %struct.packet* %pkt, null, !dbg !366
  br i1 %cmp, label %if.then, label %if.else, !dbg !368

if.then:                                          ; preds = %entry
  %call = call %struct.task* @Wait(), !dbg !369
  br label %return, !dbg !370

if.else:                                          ; preds = %entry
  %tmp1 = load i64, i64* @v1, align 8, !dbg !371
  %sub = sub nsw i64 7, %tmp1, !dbg !373
  store i64 %sub, i64* @v1, align 8, !dbg !374
  %tmp2 = load i64, i64* @v1, align 8, !dbg !375
  %conv = trunc i64 %tmp2 to i32, !dbg !375
  %p_id = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 1, !dbg !376
  store i32 %conv, i32* %p_id, align 4, !dbg !377
  %p_a1 = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 3, !dbg !378
  store i32 0, i32* %p_a1, align 4, !dbg !379
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !380, metadata !87), !dbg !381
  br label %for.cond, !dbg !382

for.cond:                                         ; preds = %for.inc, %if.else
  %i.0 = phi i32 [ 0, %if.else ], [ %inc7, %for.inc ]
  %cmp1 = icmp sle i32 %i.0, 3, !dbg !384
  br i1 %cmp1, label %for.body, label %for.end, !dbg !386

for.body:                                         ; preds = %for.cond
  %tmp6 = load i64, i64* @v2, align 8, !dbg !387
  %inc = add nsw i64 %tmp6, 1, !dbg !387
  store i64 %inc, i64* @v2, align 8, !dbg !387
  %tmp7 = load i64, i64* @v2, align 8, !dbg !389
  %cmp3 = icmp sgt i64 %tmp7, 26, !dbg !391
  br i1 %cmp3, label %if.then.5, label %if.end, !dbg !392

if.then.5:                                        ; preds = %for.body
  store i64 1, i64* @v2, align 8, !dbg !393
  br label %if.end, !dbg !394

if.end:                                           ; preds = %if.then.5, %for.body
  %tmp8 = load i64, i64* @v2, align 8, !dbg !395
  %arrayidx = getelementptr inbounds [28 x i8], [28 x i8]* @alphabet, i32 0, i64 %tmp8, !dbg !396
  %tmp9 = load i8, i8* %arrayidx, align 1, !dbg !396
  %idxprom = sext i32 %i.0 to i64, !dbg !397
  %p_a2 = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 4, !dbg !398
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %p_a2, i32 0, i64 %idxprom, !dbg !397
  store i8 %tmp9, i8* %arrayidx6, align 1, !dbg !399
  br label %for.inc, !dbg !400

for.inc:                                          ; preds = %if.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !401
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !380, metadata !87), !dbg !381
  br label %for.cond, !dbg !402

for.end:                                          ; preds = %for.cond
  %call8 = call %struct.task* @qpkt(%struct.packet* %pkt), !dbg !403
  br label %return, !dbg !404

return:                                           ; preds = %for.end, %if.then
  %retval.0 = phi %struct.task* [ %call, %if.then ], [ %call8, %for.end ]
  ret %struct.task* %retval.0, !dbg !405
}

; Function Attrs: nounwind uwtable
define %struct.task* @handlerfn(%struct.packet* %pkt) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %pkt, i64 0, metadata !406, metadata !87), !dbg !407
  %cmp = icmp ne %struct.packet* %pkt, null, !dbg !408
  br i1 %cmp, label %if.then, label %if.end, !dbg !410

if.then:                                          ; preds = %entry
  %p_kind = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 2, !dbg !411
  %tmp3 = load i32, i32* %p_kind, align 4, !dbg !411
  %cmp1 = icmp eq i32 %tmp3, 1001, !dbg !412
  %cond = select i1 %cmp1, i64* @v1, i64* @v2, !dbg !413
  %tmp4 = bitcast i64* %cond to %struct.packet*, !dbg !414
  call void @append(%struct.packet* %pkt, %struct.packet* %tmp4), !dbg !415
  br label %if.end, !dbg !415

if.end:                                           ; preds = %if.then, %entry
  %tmp5 = load i64, i64* @v1, align 8, !dbg !416
  %cmp2 = icmp ne i64 %tmp5, 0, !dbg !418
  br i1 %cmp2, label %if.then.3, label %if.end.14, !dbg !419

if.then.3:                                        ; preds = %if.end
  %tmp6 = load i64, i64* @v1, align 8, !dbg !420
  %tmp7 = inttoptr i64 %tmp6 to %struct.packet*, !dbg !422
  call void @llvm.dbg.value(metadata %struct.packet* %tmp7, i64 0, metadata !423, metadata !87), !dbg !424
  %p_a1 = getelementptr inbounds %struct.packet, %struct.packet* %tmp7, i32 0, i32 3, !dbg !425
  %tmp9 = load i32, i32* %p_a1, align 4, !dbg !425
  call void @llvm.dbg.value(metadata i32 %tmp9, i64 0, metadata !426, metadata !87), !dbg !427
  %cmp4 = icmp sgt i32 %tmp9, 3, !dbg !428
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !430

if.then.5:                                        ; preds = %if.then.3
  %tmp11 = load i64, i64* @v1, align 8, !dbg !431
  %tmp12 = inttoptr i64 %tmp11 to %struct.packet*, !dbg !433
  %p_link = getelementptr inbounds %struct.packet, %struct.packet* %tmp12, i32 0, i32 0, !dbg !434
  %tmp13 = load %struct.packet*, %struct.packet** %p_link, align 8, !dbg !434
  %tmp14 = ptrtoint %struct.packet* %tmp13 to i64, !dbg !435
  store i64 %tmp14, i64* @v1, align 8, !dbg !436
  %call = call %struct.task* @qpkt(%struct.packet* %tmp7), !dbg !437
  br label %return, !dbg !438

if.end.6:                                         ; preds = %if.then.3
  %tmp16 = load i64, i64* @v2, align 8, !dbg !439
  %cmp7 = icmp ne i64 %tmp16, 0, !dbg !441
  br i1 %cmp7, label %if.then.8, label %if.end.13, !dbg !442

if.then.8:                                        ; preds = %if.end.6
  %tmp17 = load i64, i64* @v2, align 8, !dbg !443
  %tmp18 = inttoptr i64 %tmp17 to %struct.packet*, !dbg !445
  call void @llvm.dbg.value(metadata %struct.packet* %tmp18, i64 0, metadata !446, metadata !87), !dbg !447
  %tmp19 = load i64, i64* @v2, align 8, !dbg !448
  %tmp20 = inttoptr i64 %tmp19 to %struct.packet*, !dbg !449
  %p_link9 = getelementptr inbounds %struct.packet, %struct.packet* %tmp20, i32 0, i32 0, !dbg !450
  %tmp21 = load %struct.packet*, %struct.packet** %p_link9, align 8, !dbg !450
  %tmp22 = ptrtoint %struct.packet* %tmp21 to i64, !dbg !451
  store i64 %tmp22, i64* @v2, align 8, !dbg !452
  %idxprom = sext i32 %tmp9 to i64, !dbg !453
  %p_a2 = getelementptr inbounds %struct.packet, %struct.packet* %tmp7, i32 0, i32 4, !dbg !454
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %p_a2, i32 0, i64 %idxprom, !dbg !453
  %tmp25 = load i8, i8* %arrayidx, align 1, !dbg !453
  %conv = sext i8 %tmp25 to i32, !dbg !453
  %p_a110 = getelementptr inbounds %struct.packet, %struct.packet* %tmp18, i32 0, i32 3, !dbg !455
  store i32 %conv, i32* %p_a110, align 4, !dbg !456
  %add = add nsw i32 %tmp9, 1, !dbg !457
  %p_a111 = getelementptr inbounds %struct.packet, %struct.packet* %tmp7, i32 0, i32 3, !dbg !458
  store i32 %add, i32* %p_a111, align 4, !dbg !459
  %call12 = call %struct.task* @qpkt(%struct.packet* %tmp18), !dbg !460
  br label %return, !dbg !461

if.end.13:                                        ; preds = %if.end.6
  br label %if.end.14, !dbg !462

if.end.14:                                        ; preds = %if.end.13, %if.end
  %call15 = call %struct.task* @Wait(), !dbg !463
  br label %return, !dbg !464

return:                                           ; preds = %if.end.14, %if.then.8, %if.then.5
  %retval.0 = phi %struct.task* [ %call, %if.then.5 ], [ %call12, %if.then.8 ], [ %call15, %if.end.14 ]
  ret %struct.task* %retval.0, !dbg !465
}

; Function Attrs: nounwind uwtable
define %struct.task* @devfn(%struct.packet* %pkt) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* %pkt, i64 0, metadata !466, metadata !87), !dbg !467
  %cmp = icmp eq %struct.packet* %pkt, null, !dbg !468
  br i1 %cmp, label %if.then, label %if.else, !dbg !470

if.then:                                          ; preds = %entry
  %tmp1 = load i64, i64* @v1, align 8, !dbg !471
  %cmp1 = icmp eq i64 %tmp1, 0, !dbg !474
  br i1 %cmp1, label %if.then.2, label %if.end, !dbg !475

if.then.2:                                        ; preds = %if.then
  %call = call %struct.task* @Wait(), !dbg !476
  br label %return, !dbg !477

if.end:                                           ; preds = %if.then
  %tmp2 = load i64, i64* @v1, align 8, !dbg !478
  %tmp3 = inttoptr i64 %tmp2 to %struct.packet*, !dbg !479
  call void @llvm.dbg.value(metadata %struct.packet* %tmp3, i64 0, metadata !466, metadata !87), !dbg !467
  store i64 0, i64* @v1, align 8, !dbg !480
  %call3 = call %struct.task* @qpkt(%struct.packet* %tmp3), !dbg !481
  br label %return, !dbg !482

if.else:                                          ; preds = %entry
  %tmp6 = ptrtoint %struct.packet* %pkt to i64, !dbg !483
  store i64 %tmp6, i64* @v1, align 8, !dbg !485
  %tmp7 = load i32, i32* @tracing, align 4, !dbg !486
  %cmp4 = icmp eq i32 %tmp7, 1, !dbg !488
  br i1 %cmp4, label %if.then.5, label %if.end.6, !dbg !489

if.then.5:                                        ; preds = %if.else
  %p_a1 = getelementptr inbounds %struct.packet, %struct.packet* %pkt, i32 0, i32 3, !dbg !490
  %tmp9 = load i32, i32* %p_a1, align 4, !dbg !490
  %conv = trunc i32 %tmp9 to i8, !dbg !491
  call void @trace(i8 signext %conv), !dbg !492
  br label %if.end.6, !dbg !492

if.end.6:                                         ; preds = %if.then.5, %if.else
  %call7 = call %struct.task* @holdself(), !dbg !493
  br label %return, !dbg !494

return:                                           ; preds = %if.end.6, %if.end, %if.then.2
  %retval.0 = phi %struct.task* [ %call, %if.then.2 ], [ %call3, %if.end ], [ %call7, %if.end.6 ]
  ret %struct.task* %retval.0, !dbg !495
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.packet* null, i64 0, metadata !496, metadata !87), !dbg !497
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i32 0, i32 0)), !dbg !498
  call void @createtask(i32 1, i32 0, %struct.packet* null, i32 0, %struct.task* (%struct.packet*)* @idlefn, i64 1, i64 10000000), !dbg !499
  %call2 = call %struct.packet* @pkt(%struct.packet* null, i32 0, i32 1001), !dbg !500
  call void @llvm.dbg.value(metadata %struct.packet* %call2, i64 0, metadata !496, metadata !87), !dbg !497
  %call3 = call %struct.packet* @pkt(%struct.packet* %call2, i32 0, i32 1001), !dbg !501
  call void @llvm.dbg.value(metadata %struct.packet* %call3, i64 0, metadata !496, metadata !87), !dbg !497
  call void @createtask(i32 2, i32 1000, %struct.packet* %call3, i32 3, %struct.task* (%struct.packet*)* @workfn, i64 3, i64 0), !dbg !502
  %call4 = call %struct.packet* @pkt(%struct.packet* null, i32 5, i32 1000), !dbg !503
  call void @llvm.dbg.value(metadata %struct.packet* %call4, i64 0, metadata !496, metadata !87), !dbg !497
  %call5 = call %struct.packet* @pkt(%struct.packet* %call4, i32 5, i32 1000), !dbg !504
  call void @llvm.dbg.value(metadata %struct.packet* %call5, i64 0, metadata !496, metadata !87), !dbg !497
  %call6 = call %struct.packet* @pkt(%struct.packet* %call5, i32 5, i32 1000), !dbg !505
  call void @llvm.dbg.value(metadata %struct.packet* %call6, i64 0, metadata !496, metadata !87), !dbg !497
  call void @createtask(i32 3, i32 2000, %struct.packet* %call6, i32 3, %struct.task* (%struct.packet*)* @handlerfn, i64 0, i64 0), !dbg !506
  %call7 = call %struct.packet* @pkt(%struct.packet* null, i32 6, i32 1000), !dbg !507
  call void @llvm.dbg.value(metadata %struct.packet* %call7, i64 0, metadata !496, metadata !87), !dbg !497
  %call8 = call %struct.packet* @pkt(%struct.packet* %call7, i32 6, i32 1000), !dbg !508
  call void @llvm.dbg.value(metadata %struct.packet* %call8, i64 0, metadata !496, metadata !87), !dbg !497
  %call9 = call %struct.packet* @pkt(%struct.packet* %call8, i32 6, i32 1000), !dbg !509
  call void @llvm.dbg.value(metadata %struct.packet* %call9, i64 0, metadata !496, metadata !87), !dbg !497
  call void @createtask(i32 4, i32 3000, %struct.packet* %call9, i32 3, %struct.task* (%struct.packet*)* @handlerfn, i64 0, i64 0), !dbg !510
  call void @llvm.dbg.value(metadata %struct.packet* null, i64 0, metadata !496, metadata !87), !dbg !497
  call void @createtask(i32 5, i32 4000, %struct.packet* null, i32 2, %struct.task* (%struct.packet*)* @devfn, i64 0, i64 0), !dbg !511
  call void @createtask(i32 6, i32 5000, %struct.packet* null, i32 2, %struct.task* (%struct.packet*)* @devfn, i64 0, i64 0), !dbg !512
  %tmp11 = load %struct.task*, %struct.task** @tasklist, align 8, !dbg !513
  store %struct.task* %tmp11, %struct.task** @tcb, align 8, !dbg !514
  store i32 0, i32* @holdcount, align 4, !dbg !515
  store i32 0, i32* @qpktcount, align 4, !dbg !516
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0)), !dbg !517
  store i32 0, i32* @tracing, align 4, !dbg !518
  store i32 0, i32* @layout, align 4, !dbg !519
  call void @schedule(), !dbg !520
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0)), !dbg !521
  %tmp12 = load i32, i32* @qpktcount, align 4, !dbg !522
  %tmp13 = load i32, i32* @holdcount, align 4, !dbg !523
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i32 0, i32 0), i32 %tmp12, i32 %tmp13), !dbg !524
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i32 0, i32 0)), !dbg !525
  %tmp14 = load i32, i32* @qpktcount, align 4, !dbg !526
  %cmp = icmp eq i32 %tmp14, 23263894, !dbg !528
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !529

land.lhs.true:                                    ; preds = %entry
  %tmp15 = load i32, i32* @holdcount, align 4, !dbg !530
  %cmp14 = icmp eq i32 %tmp15, 9305557, !dbg !532
  br i1 %cmp14, label %if.then, label %if.else, !dbg !533

if.then:                                          ; preds = %land.lhs.true
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)), !dbg !534
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !536, metadata !87), !dbg !537
  br label %if.end, !dbg !538

if.else:                                          ; preds = %land.lhs.true, %entry
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0)), !dbg !539
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !536, metadata !87), !dbg !537
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %retval1.0 = phi i32 [ 0, %if.then ], [ 1, %if.else ]
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i32 0, i32 0)), !dbg !541
  ret i32 %retval1.0, !dbg !542
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!83, !84}
!llvm.ident = !{!85}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !33, globals: !65)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/richards_benchmark")
!2 = !{}
!3 = !{!4, !13, !31}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DICompositeType(tag: DW_TAG_structure_type, name: "task", file: !6, line: 72, size: 448, align: 64, elements: !7)
!6 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Misc/richards_benchmark/tmp.c", directory: "/home/gleison/tf/Benchmarks/Misc/richards_benchmark")
!7 = !{!8, !9, !11, !12, !25, !26, !30, !32}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "t_link", scope: !5, file: !6, line: 73, baseType: !4, size: 64, align: 64)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "t_id", scope: !5, file: !6, line: 74, baseType: !10, size: 32, align: 32, offset: 64)
!10 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "t_pri", scope: !5, file: !6, line: 75, baseType: !10, size: 32, align: 32, offset: 96)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "t_wkq", scope: !5, file: !6, line: 76, baseType: !13, size: 64, align: 64, offset: 128)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64, align: 64)
!14 = !DICompositeType(tag: DW_TAG_structure_type, name: "packet", file: !6, line: 64, size: 192, align: 64, elements: !15)
!15 = !{!16, !17, !18, !19, !20}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "p_link", scope: !14, file: !6, line: 65, baseType: !13, size: 64, align: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "p_id", scope: !14, file: !6, line: 66, baseType: !10, size: 32, align: 32, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "p_kind", scope: !14, file: !6, line: 67, baseType: !10, size: 32, align: 32, offset: 96)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "p_a1", scope: !14, file: !6, line: 68, baseType: !10, size: 32, align: 32, offset: 128)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "p_a2", scope: !14, file: !6, line: 69, baseType: !21, size: 32, align: 8, offset: 160)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 32, align: 8, elements: !23)
!22 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!23 = !{!24}
!24 = !DISubrange(count: 4)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "t_state", scope: !5, file: !6, line: 77, baseType: !10, size: 32, align: 32, offset: 192)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "t_fn", scope: !5, file: !6, line: 78, baseType: !27, size: 64, align: 64, offset: 256)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DISubroutineType(types: !29)
!29 = !{!4, !13}
!30 = !DIDerivedType(tag: DW_TAG_member, name: "t_v1", scope: !5, file: !6, line: 79, baseType: !31, size: 64, align: 64, offset: 320)
!31 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "t_v2", scope: !5, file: !6, line: 80, baseType: !31, size: 64, align: 64, offset: 384)
!33 = !{!34, !37, !40, !43, !46, !49, !50, !53, !54, !55, !56, !57, !58, !59, !62}
!34 = !DISubprogram(name: "createtask", scope: !6, file: !6, line: 97, type: !35, isLocal: false, isDefinition: true, scopeLine: 103, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32, %struct.packet*, i32, %struct.task* (%struct.packet*)*, i64, i64)* @createtask, variables: !2)
!35 = !DISubroutineType(types: !36)
!36 = !{null, !10, !10, !13, !10, !27, !31, !31}
!37 = !DISubprogram(name: "pkt", scope: !6, file: !6, line: 118, type: !38, isLocal: false, isDefinition: true, scopeLine: 118, flags: DIFlagPrototyped, isOptimized: false, function: %struct.packet* (%struct.packet*, i32, i32)* @pkt, variables: !2)
!38 = !DISubroutineType(types: !39)
!39 = !{!13, !13, !10, !10}
!40 = !DISubprogram(name: "trace", scope: !6, file: !6, line: 133, type: !41, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, function: void (i8)* @trace, variables: !2)
!41 = !DISubroutineType(types: !42)
!42 = !{null, !22}
!43 = !DISubprogram(name: "schedule", scope: !6, file: !6, line: 142, type: !44, isLocal: false, isDefinition: true, scopeLine: 142, isOptimized: false, function: void ()* @schedule, variables: !2)
!44 = !DISubroutineType(types: !45)
!45 = !{null}
!46 = !DISubprogram(name: "Wait", scope: !6, file: !6, line: 183, type: !47, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* ()* @Wait, variables: !2)
!47 = !DISubroutineType(types: !48)
!48 = !{!4}
!49 = !DISubprogram(name: "holdself", scope: !6, file: !6, line: 188, type: !47, isLocal: false, isDefinition: true, scopeLine: 188, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* ()* @holdself, variables: !2)
!50 = !DISubprogram(name: "findtcb", scope: !6, file: !6, line: 194, type: !51, isLocal: false, isDefinition: true, scopeLine: 194, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (i32)* @findtcb, variables: !2)
!51 = !DISubroutineType(types: !52)
!52 = !{!4, !10}
!53 = !DISubprogram(name: "release", scope: !6, file: !6, line: 204, type: !51, isLocal: false, isDefinition: true, scopeLine: 204, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (i32)* @release, variables: !2)
!54 = !DISubprogram(name: "qpkt", scope: !6, file: !6, line: 218, type: !28, isLocal: false, isDefinition: true, scopeLine: 218, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (%struct.packet*)* @qpkt, variables: !2)
!55 = !DISubprogram(name: "idlefn", scope: !6, file: !6, line: 242, type: !28, isLocal: false, isDefinition: true, scopeLine: 242, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (%struct.packet*)* @idlefn, variables: !2)
!56 = !DISubprogram(name: "workfn", scope: !6, file: !6, line: 256, type: !28, isLocal: false, isDefinition: true, scopeLine: 256, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (%struct.packet*)* @workfn, variables: !2)
!57 = !DISubprogram(name: "handlerfn", scope: !6, file: !6, line: 276, type: !28, isLocal: false, isDefinition: true, scopeLine: 276, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (%struct.packet*)* @handlerfn, variables: !2)
!58 = !DISubprogram(name: "devfn", scope: !6, file: !6, line: 304, type: !28, isLocal: false, isDefinition: true, scopeLine: 304, flags: DIFlagPrototyped, isOptimized: false, function: %struct.task* (%struct.packet*)* @devfn, variables: !2)
!59 = !DISubprogram(name: "append", scope: !6, file: !6, line: 319, type: !60, isLocal: false, isDefinition: true, scopeLine: 319, flags: DIFlagPrototyped, isOptimized: false, function: void (%struct.packet*, %struct.packet*)* @append, variables: !2)
!60 = !DISubroutineType(types: !61)
!61 = !{null, !13, !13}
!62 = !DISubprogram(name: "main", scope: !6, file: !6, line: 328, type: !63, isLocal: false, isDefinition: true, scopeLine: 328, isOptimized: false, function: i32 ()* @main, variables: !2)
!63 = !DISubroutineType(types: !64)
!64 = !{!10}
!65 = !{!66, !70, !74, !75, !76, !77, !78, !79, !80, !81, !82}
!66 = !DIGlobalVariable(name: "alphabet", scope: !0, file: !6, line: 83, type: !67, isLocal: false, isDefinition: true, variable: [28 x i8]* @alphabet)
!67 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 224, align: 8, elements: !68)
!68 = !{!69}
!69 = !DISubrange(count: 28)
!70 = !DIGlobalVariable(name: "tasktab", scope: !0, file: !6, line: 84, type: !71, isLocal: false, isDefinition: true, variable: [11 x %struct.task*]* @tasktab)
!71 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 704, align: 64, elements: !72)
!72 = !{!73}
!73 = !DISubrange(count: 11)
!74 = !DIGlobalVariable(name: "tasklist", scope: !0, file: !6, line: 85, type: !4, isLocal: false, isDefinition: true, variable: %struct.task** @tasklist)
!75 = !DIGlobalVariable(name: "qpktcount", scope: !0, file: !6, line: 90, type: !10, isLocal: false, isDefinition: true, variable: i32* @qpktcount)
!76 = !DIGlobalVariable(name: "holdcount", scope: !0, file: !6, line: 91, type: !10, isLocal: false, isDefinition: true, variable: i32* @holdcount)
!77 = !DIGlobalVariable(name: "tracing", scope: !0, file: !6, line: 92, type: !10, isLocal: false, isDefinition: true, variable: i32* @tracing)
!78 = !DIGlobalVariable(name: "layout", scope: !0, file: !6, line: 93, type: !10, isLocal: false, isDefinition: true, variable: i32* @layout)
!79 = !DIGlobalVariable(name: "tcb", scope: !0, file: !6, line: 86, type: !4, isLocal: false, isDefinition: true, variable: %struct.task** @tcb)
!80 = !DIGlobalVariable(name: "taskid", scope: !0, file: !6, line: 87, type: !31, isLocal: false, isDefinition: true, variable: i64* @taskid)
!81 = !DIGlobalVariable(name: "v1", scope: !0, file: !6, line: 88, type: !31, isLocal: false, isDefinition: true, variable: i64* @v1)
!82 = !DIGlobalVariable(name: "v2", scope: !0, file: !6, line: 89, type: !31, isLocal: false, isDefinition: true, variable: i64* @v2)
!83 = !{i32 2, !"Dwarf Version", i32 4}
!84 = !{i32 2, !"Debug Info Version", i32 3}
!85 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!86 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "id", arg: 1, scope: !34, file: !6, line: 97, type: !10)
!87 = !DIExpression()
!88 = !DILocation(line: 97, column: 21, scope: !34)
!89 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pri", arg: 2, scope: !34, file: !6, line: 98, type: !10)
!90 = !DILocation(line: 98, column: 21, scope: !34)
!91 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "wkq", arg: 3, scope: !34, file: !6, line: 99, type: !13)
!92 = !DILocation(line: 99, column: 32, scope: !34)
!93 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "state", arg: 4, scope: !34, file: !6, line: 100, type: !10)
!94 = !DILocation(line: 100, column: 21, scope: !34)
!95 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fn", arg: 5, scope: !34, file: !6, line: 101, type: !27)
!96 = !DILocation(line: 101, column: 32, scope: !34)
!97 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v1", arg: 6, scope: !34, file: !6, line: 102, type: !31)
!98 = !DILocation(line: 102, column: 22, scope: !34)
!99 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "v2", arg: 7, scope: !34, file: !6, line: 103, type: !31)
!100 = !DILocation(line: 103, column: 22, scope: !34)
!101 = !DILocation(line: 104, column: 35, scope: !34)
!102 = !DILocation(line: 104, column: 20, scope: !34)
!103 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !34, file: !6, line: 104, type: !4)
!104 = !DILocation(line: 104, column: 16, scope: !34)
!105 = !DILocation(line: 106, column: 3, scope: !34)
!106 = !DILocation(line: 106, column: 15, scope: !34)
!107 = !DILocation(line: 107, column: 15, scope: !34)
!108 = !DILocation(line: 107, column: 6, scope: !34)
!109 = !DILocation(line: 107, column: 13, scope: !34)
!110 = !DILocation(line: 108, column: 6, scope: !34)
!111 = !DILocation(line: 108, column: 11, scope: !34)
!112 = !DILocation(line: 109, column: 6, scope: !34)
!113 = !DILocation(line: 109, column: 12, scope: !34)
!114 = !DILocation(line: 110, column: 6, scope: !34)
!115 = !DILocation(line: 110, column: 12, scope: !34)
!116 = !DILocation(line: 111, column: 6, scope: !34)
!117 = !DILocation(line: 111, column: 14, scope: !34)
!118 = !DILocation(line: 112, column: 6, scope: !34)
!119 = !DILocation(line: 112, column: 11, scope: !34)
!120 = !DILocation(line: 113, column: 6, scope: !34)
!121 = !DILocation(line: 113, column: 11, scope: !34)
!122 = !DILocation(line: 114, column: 6, scope: !34)
!123 = !DILocation(line: 114, column: 11, scope: !34)
!124 = !DILocation(line: 115, column: 12, scope: !34)
!125 = !DILocation(line: 116, column: 1, scope: !34)
!126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "link", arg: 1, scope: !37, file: !6, line: 118, type: !13)
!127 = !DILocation(line: 118, column: 35, scope: !37)
!128 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "id", arg: 2, scope: !37, file: !6, line: 118, type: !10)
!129 = !DILocation(line: 118, column: 45, scope: !37)
!130 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kind", arg: 3, scope: !37, file: !6, line: 118, type: !10)
!131 = !DILocation(line: 118, column: 53, scope: !37)
!132 = !DILocation(line: 120, column: 39, scope: !37)
!133 = !DILocation(line: 120, column: 22, scope: !37)
!134 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "p", scope: !37, file: !6, line: 120, type: !13)
!135 = !DILocation(line: 120, column: 18, scope: !37)
!136 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !37, file: !6, line: 119, type: !10)
!137 = !DILocation(line: 119, column: 7, scope: !37)
!138 = !DILocation(line: 122, column: 8, scope: !139)
!139 = distinct !DILexicalBlock(scope: !37, file: !6, line: 122, column: 3)
!140 = !DILocation(line: 122, column: 3, scope: !139)
!141 = !DILocation(line: 122, column: 17, scope: !142)
!142 = distinct !DILexicalBlock(scope: !139, file: !6, line: 122, column: 3)
!143 = !DILocation(line: 123, column: 5, scope: !142)
!144 = !DILocation(line: 123, column: 8, scope: !142)
!145 = !DILocation(line: 123, column: 16, scope: !142)
!146 = !DILocation(line: 122, column: 30, scope: !142)
!147 = !DILocation(line: 122, column: 3, scope: !142)
!148 = !DILocation(line: 125, column: 6, scope: !37)
!149 = !DILocation(line: 125, column: 13, scope: !37)
!150 = !DILocation(line: 126, column: 6, scope: !37)
!151 = !DILocation(line: 126, column: 11, scope: !37)
!152 = !DILocation(line: 127, column: 6, scope: !37)
!153 = !DILocation(line: 127, column: 13, scope: !37)
!154 = !DILocation(line: 128, column: 6, scope: !37)
!155 = !DILocation(line: 128, column: 11, scope: !37)
!156 = !DILocation(line: 130, column: 3, scope: !37)
!157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !40, file: !6, line: 133, type: !22)
!158 = !DILocation(line: 133, column: 17, scope: !40)
!159 = !DILocation(line: 134, column: 7, scope: !160)
!160 = distinct !DILexicalBlock(scope: !40, file: !6, line: 134, column: 7)
!161 = !DILocation(line: 134, column: 16, scope: !160)
!162 = !DILocation(line: 134, column: 7, scope: !40)
!163 = !DILocation(line: 135, column: 5, scope: !164)
!164 = distinct !DILexicalBlock(scope: !160, file: !6, line: 134, column: 22)
!165 = !DILocation(line: 136, column: 12, scope: !164)
!166 = !DILocation(line: 137, column: 3, scope: !164)
!167 = !DILocation(line: 139, column: 16, scope: !40)
!168 = !DILocation(line: 139, column: 3, scope: !40)
!169 = !DILocation(line: 140, column: 1, scope: !40)
!170 = !DILocation(line: 143, column: 3, scope: !43)
!171 = !DILocation(line: 143, column: 10, scope: !172)
!172 = !DILexicalBlockFile(scope: !173, file: !6, discriminator: 2)
!173 = !DILexicalBlockFile(scope: !43, file: !6, discriminator: 1)
!174 = !DILocation(line: 143, column: 14, scope: !43)
!175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pkt", scope: !176, file: !6, line: 144, type: !13)
!176 = distinct !DILexicalBlock(scope: !43, file: !6, line: 143, column: 20)
!177 = !DILocation(line: 144, column: 20, scope: !176)
!178 = !DILocation(line: 149, column: 13, scope: !176)
!179 = !DILocation(line: 149, column: 18, scope: !176)
!180 = !DILocation(line: 149, column: 5, scope: !176)
!181 = !DILocation(line: 151, column: 13, scope: !182)
!182 = distinct !DILexicalBlock(scope: !176, file: !6, line: 149, column: 27)
!183 = !DILocation(line: 151, column: 18, scope: !182)
!184 = !DILocation(line: 152, column: 25, scope: !182)
!185 = !DILocation(line: 152, column: 7, scope: !182)
!186 = !DILocation(line: 152, column: 12, scope: !182)
!187 = !DILocation(line: 152, column: 18, scope: !182)
!188 = !DILocation(line: 153, column: 22, scope: !182)
!189 = !DILocation(line: 153, column: 27, scope: !182)
!190 = !DILocation(line: 153, column: 33, scope: !182)
!191 = !DILocation(line: 153, column: 7, scope: !182)
!192 = !DILocation(line: 153, column: 12, scope: !182)
!193 = !DILocation(line: 153, column: 20, scope: !182)
!194 = !DILocation(line: 157, column: 16, scope: !182)
!195 = !DILocation(line: 157, column: 21, scope: !182)
!196 = !DILocation(line: 157, column: 14, scope: !182)
!197 = !DILocation(line: 158, column: 12, scope: !182)
!198 = !DILocation(line: 158, column: 17, scope: !182)
!199 = !DILocation(line: 158, column: 10, scope: !182)
!200 = !DILocation(line: 159, column: 12, scope: !182)
!201 = !DILocation(line: 159, column: 17, scope: !182)
!202 = !DILocation(line: 159, column: 10, scope: !182)
!203 = !DILocation(line: 160, column: 11, scope: !204)
!204 = distinct !DILexicalBlock(scope: !182, file: !6, line: 160, column: 11)
!205 = !DILocation(line: 160, column: 19, scope: !204)
!206 = !DILocation(line: 160, column: 11, scope: !182)
!207 = !DILocation(line: 161, column: 15, scope: !204)
!208 = !DILocation(line: 161, column: 22, scope: !204)
!209 = !DILocation(line: 161, column: 9, scope: !204)
!210 = !DILocation(line: 163, column: 19, scope: !182)
!211 = !DILocation(line: 163, column: 24, scope: !182)
!212 = !DILocation(line: 163, column: 16, scope: !182)
!213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newtcb", scope: !176, file: !6, line: 145, type: !4)
!214 = !DILocation(line: 145, column: 18, scope: !176)
!215 = !DILocation(line: 164, column: 19, scope: !182)
!216 = !DILocation(line: 164, column: 7, scope: !182)
!217 = !DILocation(line: 164, column: 12, scope: !182)
!218 = !DILocation(line: 164, column: 17, scope: !182)
!219 = !DILocation(line: 165, column: 19, scope: !182)
!220 = !DILocation(line: 165, column: 7, scope: !182)
!221 = !DILocation(line: 165, column: 12, scope: !182)
!222 = !DILocation(line: 165, column: 17, scope: !182)
!223 = !DILocation(line: 166, column: 11, scope: !182)
!224 = !DILocation(line: 167, column: 7, scope: !182)
!225 = !DILocation(line: 174, column: 13, scope: !182)
!226 = !DILocation(line: 174, column: 18, scope: !182)
!227 = !DILocation(line: 174, column: 11, scope: !182)
!228 = !DILocation(line: 175, column: 7, scope: !182)
!229 = !DILocation(line: 178, column: 7, scope: !182)
!230 = !DILocation(line: 181, column: 1, scope: !43)
!231 = !DILocation(line: 184, column: 3, scope: !46)
!232 = !DILocation(line: 184, column: 8, scope: !46)
!233 = !DILocation(line: 184, column: 16, scope: !46)
!234 = !DILocation(line: 185, column: 11, scope: !46)
!235 = !DILocation(line: 185, column: 3, scope: !46)
!236 = !DILocation(line: 189, column: 3, scope: !49)
!237 = !DILocation(line: 190, column: 3, scope: !49)
!238 = !DILocation(line: 190, column: 8, scope: !49)
!239 = !DILocation(line: 190, column: 16, scope: !49)
!240 = !DILocation(line: 191, column: 11, scope: !49)
!241 = !DILocation(line: 191, column: 16, scope: !49)
!242 = !DILocation(line: 191, column: 3, scope: !49)
!243 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "id", arg: 1, scope: !50, file: !6, line: 194, type: !10)
!244 = !DILocation(line: 194, column: 26, scope: !50)
!245 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !50, file: !6, line: 195, type: !4)
!246 = !DILocation(line: 195, column: 16, scope: !50)
!247 = !DILocation(line: 197, column: 9, scope: !248)
!248 = distinct !DILexicalBlock(scope: !50, file: !6, line: 197, column: 7)
!249 = !DILocation(line: 197, column: 15, scope: !248)
!250 = !DILocation(line: 197, column: 18, scope: !251)
!251 = !DILexicalBlockFile(scope: !248, file: !6, discriminator: 1)
!252 = !DILocation(line: 197, column: 21, scope: !248)
!253 = !DILocation(line: 197, column: 7, scope: !50)
!254 = !DILocation(line: 198, column: 9, scope: !248)
!255 = !DILocation(line: 198, column: 5, scope: !248)
!256 = !DILocation(line: 199, column: 9, scope: !257)
!257 = distinct !DILexicalBlock(scope: !50, file: !6, line: 199, column: 7)
!258 = !DILocation(line: 199, column: 7, scope: !50)
!259 = !DILocation(line: 200, column: 5, scope: !257)
!260 = !DILocation(line: 201, column: 3, scope: !50)
!261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "id", arg: 1, scope: !53, file: !6, line: 204, type: !10)
!262 = !DILocation(line: 204, column: 26, scope: !53)
!263 = !DILocation(line: 207, column: 7, scope: !53)
!264 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !53, file: !6, line: 205, type: !4)
!265 = !DILocation(line: 205, column: 16, scope: !53)
!266 = !DILocation(line: 208, column: 9, scope: !267)
!267 = distinct !DILexicalBlock(scope: !53, file: !6, line: 208, column: 7)
!268 = !DILocation(line: 208, column: 7, scope: !53)
!269 = !DILocation(line: 209, column: 5, scope: !267)
!270 = !DILocation(line: 211, column: 6, scope: !53)
!271 = !DILocation(line: 211, column: 14, scope: !53)
!272 = !DILocation(line: 212, column: 10, scope: !273)
!273 = distinct !DILexicalBlock(scope: !53, file: !6, line: 212, column: 7)
!274 = !DILocation(line: 212, column: 18, scope: !273)
!275 = !DILocation(line: 212, column: 23, scope: !273)
!276 = !DILocation(line: 212, column: 16, scope: !273)
!277 = !DILocation(line: 212, column: 7, scope: !53)
!278 = !DILocation(line: 213, column: 5, scope: !273)
!279 = !DILocation(line: 215, column: 11, scope: !53)
!280 = !DILocation(line: 215, column: 3, scope: !53)
!281 = !DILocation(line: 216, column: 1, scope: !53)
!282 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pkt", arg: 1, scope: !54, file: !6, line: 218, type: !13)
!283 = !DILocation(line: 218, column: 34, scope: !54)
!284 = !DILocation(line: 221, column: 20, scope: !54)
!285 = !DILocation(line: 221, column: 7, scope: !54)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !54, file: !6, line: 219, type: !4)
!287 = !DILocation(line: 219, column: 16, scope: !54)
!288 = !DILocation(line: 222, column: 9, scope: !289)
!289 = distinct !DILexicalBlock(scope: !54, file: !6, line: 222, column: 7)
!290 = !DILocation(line: 222, column: 7, scope: !54)
!291 = !DILocation(line: 223, column: 5, scope: !289)
!292 = !DILocation(line: 225, column: 12, scope: !54)
!293 = !DILocation(line: 227, column: 8, scope: !54)
!294 = !DILocation(line: 227, column: 15, scope: !54)
!295 = !DILocation(line: 228, column: 15, scope: !54)
!296 = !DILocation(line: 228, column: 8, scope: !54)
!297 = !DILocation(line: 228, column: 13, scope: !54)
!298 = !DILocation(line: 230, column: 10, scope: !299)
!299 = distinct !DILexicalBlock(scope: !54, file: !6, line: 230, column: 7)
!300 = !DILocation(line: 230, column: 16, scope: !299)
!301 = !DILocation(line: 230, column: 7, scope: !54)
!302 = !DILocation(line: 231, column: 8, scope: !303)
!303 = distinct !DILexicalBlock(scope: !299, file: !6, line: 230, column: 22)
!304 = !DILocation(line: 231, column: 14, scope: !303)
!305 = !DILocation(line: 232, column: 8, scope: !303)
!306 = !DILocation(line: 232, column: 16, scope: !303)
!307 = !DILocation(line: 233, column: 12, scope: !308)
!308 = distinct !DILexicalBlock(scope: !303, file: !6, line: 233, column: 9)
!309 = !DILocation(line: 233, column: 20, scope: !308)
!310 = !DILocation(line: 233, column: 25, scope: !308)
!311 = !DILocation(line: 233, column: 18, scope: !308)
!312 = !DILocation(line: 233, column: 9, scope: !303)
!313 = !DILocation(line: 234, column: 7, scope: !308)
!314 = !DILocation(line: 235, column: 3, scope: !303)
!315 = !DILocation(line: 236, column: 39, scope: !316)
!316 = distinct !DILexicalBlock(scope: !299, file: !6, line: 235, column: 10)
!317 = !DILocation(line: 236, column: 17, scope: !316)
!318 = !DILocation(line: 236, column: 5, scope: !316)
!319 = !DILocation(line: 239, column: 11, scope: !54)
!320 = !DILocation(line: 239, column: 3, scope: !54)
!321 = !DILocation(line: 240, column: 1, scope: !54)
!322 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pkt", arg: 1, scope: !59, file: !6, line: 319, type: !13)
!323 = !DILocation(line: 319, column: 28, scope: !59)
!324 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ptr", arg: 2, scope: !59, file: !6, line: 319, type: !13)
!325 = !DILocation(line: 319, column: 48, scope: !59)
!326 = !DILocation(line: 320, column: 8, scope: !59)
!327 = !DILocation(line: 320, column: 15, scope: !59)
!328 = !DILocation(line: 322, column: 3, scope: !59)
!329 = !DILocation(line: 322, column: 15, scope: !59)
!330 = !DILocation(line: 323, column: 16, scope: !59)
!331 = !DILocation(line: 325, column: 8, scope: !59)
!332 = !DILocation(line: 325, column: 15, scope: !59)
!333 = !DILocation(line: 326, column: 1, scope: !59)
!334 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pkt", arg: 1, scope: !55, file: !6, line: 242, type: !13)
!335 = !DILocation(line: 242, column: 36, scope: !55)
!336 = !DILocation(line: 243, column: 3, scope: !55)
!337 = !DILocation(line: 244, column: 7, scope: !338)
!338 = distinct !DILexicalBlock(scope: !55, file: !6, line: 244, column: 7)
!339 = !DILocation(line: 244, column: 10, scope: !338)
!340 = !DILocation(line: 244, column: 7, scope: !55)
!341 = !DILocation(line: 245, column: 13, scope: !338)
!342 = !DILocation(line: 245, column: 5, scope: !338)
!343 = !DILocation(line: 247, column: 8, scope: !344)
!344 = distinct !DILexicalBlock(scope: !55, file: !6, line: 247, column: 7)
!345 = !DILocation(line: 247, column: 11, scope: !344)
!346 = !DILocation(line: 247, column: 16, scope: !344)
!347 = !DILocation(line: 247, column: 7, scope: !55)
!348 = !DILocation(line: 248, column: 11, scope: !349)
!349 = distinct !DILexicalBlock(scope: !344, file: !6, line: 247, column: 22)
!350 = !DILocation(line: 248, column: 14, scope: !349)
!351 = !DILocation(line: 248, column: 20, scope: !349)
!352 = !DILocation(line: 248, column: 8, scope: !349)
!353 = !DILocation(line: 249, column: 13, scope: !349)
!354 = !DILocation(line: 249, column: 5, scope: !349)
!355 = !DILocation(line: 251, column: 12, scope: !356)
!356 = distinct !DILexicalBlock(scope: !344, file: !6, line: 250, column: 10)
!357 = !DILocation(line: 251, column: 15, scope: !356)
!358 = !DILocation(line: 251, column: 21, scope: !356)
!359 = !DILocation(line: 251, column: 31, scope: !356)
!360 = !DILocation(line: 251, column: 8, scope: !356)
!361 = !DILocation(line: 252, column: 13, scope: !356)
!362 = !DILocation(line: 252, column: 5, scope: !356)
!363 = !DILocation(line: 254, column: 1, scope: !55)
!364 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pkt", arg: 1, scope: !56, file: !6, line: 256, type: !13)
!365 = !DILocation(line: 256, column: 36, scope: !56)
!366 = !DILocation(line: 257, column: 11, scope: !367)
!367 = distinct !DILexicalBlock(scope: !56, file: !6, line: 257, column: 7)
!368 = !DILocation(line: 257, column: 7, scope: !56)
!369 = !DILocation(line: 258, column: 13, scope: !367)
!370 = !DILocation(line: 258, column: 5, scope: !367)
!371 = !DILocation(line: 262, column: 36, scope: !372)
!372 = distinct !DILexicalBlock(scope: !367, file: !6, line: 259, column: 8)
!373 = !DILocation(line: 262, column: 34, scope: !372)
!374 = !DILocation(line: 262, column: 8, scope: !372)
!375 = !DILocation(line: 263, column: 17, scope: !372)
!376 = !DILocation(line: 263, column: 10, scope: !372)
!377 = !DILocation(line: 263, column: 15, scope: !372)
!378 = !DILocation(line: 265, column: 10, scope: !372)
!379 = !DILocation(line: 265, column: 15, scope: !372)
!380 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !372, file: !6, line: 260, type: !10)
!381 = !DILocation(line: 260, column: 9, scope: !372)
!382 = !DILocation(line: 266, column: 10, scope: !383)
!383 = distinct !DILexicalBlock(scope: !372, file: !6, line: 266, column: 5)
!384 = !DILocation(line: 266, column: 19, scope: !385)
!385 = distinct !DILexicalBlock(scope: !383, file: !6, line: 266, column: 5)
!386 = !DILocation(line: 266, column: 5, scope: !383)
!387 = !DILocation(line: 267, column: 9, scope: !388)
!388 = distinct !DILexicalBlock(scope: !385, file: !6, line: 266, column: 36)
!389 = !DILocation(line: 268, column: 11, scope: !390)
!390 = distinct !DILexicalBlock(scope: !388, file: !6, line: 268, column: 11)
!391 = !DILocation(line: 268, column: 14, scope: !390)
!392 = !DILocation(line: 268, column: 11, scope: !388)
!393 = !DILocation(line: 269, column: 12, scope: !390)
!394 = !DILocation(line: 269, column: 9, scope: !390)
!395 = !DILocation(line: 270, column: 33, scope: !388)
!396 = !DILocation(line: 270, column: 24, scope: !388)
!397 = !DILocation(line: 270, column: 7, scope: !388)
!398 = !DILocation(line: 270, column: 13, scope: !388)
!399 = !DILocation(line: 270, column: 22, scope: !388)
!400 = !DILocation(line: 271, column: 5, scope: !388)
!401 = !DILocation(line: 266, column: 32, scope: !385)
!402 = !DILocation(line: 266, column: 5, scope: !385)
!403 = !DILocation(line: 272, column: 13, scope: !372)
!404 = !DILocation(line: 272, column: 5, scope: !372)
!405 = !DILocation(line: 274, column: 1, scope: !56)
!406 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pkt", arg: 1, scope: !57, file: !6, line: 276, type: !13)
!407 = !DILocation(line: 276, column: 39, scope: !57)
!408 = !DILocation(line: 277, column: 11, scope: !409)
!409 = distinct !DILexicalBlock(scope: !57, file: !6, line: 277, column: 7)
!410 = !DILocation(line: 277, column: 7, scope: !57)
!411 = !DILocation(line: 279, column: 35, scope: !409)
!412 = !DILocation(line: 279, column: 42, scope: !409)
!413 = !DILocation(line: 279, column: 30, scope: !409)
!414 = !DILocation(line: 279, column: 12, scope: !409)
!415 = !DILocation(line: 278, column: 5, scope: !409)
!416 = !DILocation(line: 281, column: 7, scope: !417)
!417 = distinct !DILexicalBlock(scope: !57, file: !6, line: 281, column: 7)
!418 = !DILocation(line: 281, column: 10, scope: !417)
!419 = !DILocation(line: 281, column: 7, scope: !57)
!420 = !DILocation(line: 283, column: 47, scope: !421)
!421 = distinct !DILexicalBlock(scope: !417, file: !6, line: 281, column: 16)
!422 = !DILocation(line: 283, column: 30, scope: !421)
!423 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "workpkt", scope: !421, file: !6, line: 283, type: !13)
!424 = !DILocation(line: 283, column: 20, scope: !421)
!425 = !DILocation(line: 284, column: 22, scope: !421)
!426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "count", scope: !421, file: !6, line: 282, type: !10)
!427 = !DILocation(line: 282, column: 9, scope: !421)
!428 = !DILocation(line: 286, column: 15, scope: !429)
!429 = distinct !DILexicalBlock(scope: !421, file: !6, line: 286, column: 9)
!430 = !DILocation(line: 286, column: 9, scope: !421)
!431 = !DILocation(line: 287, column: 37, scope: !432)
!432 = distinct !DILexicalBlock(scope: !429, file: !6, line: 286, column: 26)
!433 = !DILocation(line: 287, column: 20, scope: !432)
!434 = !DILocation(line: 287, column: 42, scope: !432)
!435 = !DILocation(line: 287, column: 12, scope: !432)
!436 = !DILocation(line: 287, column: 10, scope: !432)
!437 = !DILocation(line: 288, column: 15, scope: !432)
!438 = !DILocation(line: 288, column: 7, scope: !432)
!439 = !DILocation(line: 291, column: 9, scope: !440)
!440 = distinct !DILexicalBlock(scope: !421, file: !6, line: 291, column: 9)
!441 = !DILocation(line: 291, column: 12, scope: !440)
!442 = !DILocation(line: 291, column: 9, scope: !421)
!443 = !DILocation(line: 294, column: 33, scope: !444)
!444 = distinct !DILexicalBlock(scope: !440, file: !6, line: 291, column: 18)
!445 = !DILocation(line: 294, column: 16, scope: !444)
!446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "devpkt", scope: !444, file: !6, line: 292, type: !13)
!447 = !DILocation(line: 292, column: 22, scope: !444)
!448 = !DILocation(line: 295, column: 37, scope: !444)
!449 = !DILocation(line: 295, column: 20, scope: !444)
!450 = !DILocation(line: 295, column: 42, scope: !444)
!451 = !DILocation(line: 295, column: 12, scope: !444)
!452 = !DILocation(line: 295, column: 10, scope: !444)
!453 = !DILocation(line: 296, column: 22, scope: !444)
!454 = !DILocation(line: 296, column: 31, scope: !444)
!455 = !DILocation(line: 296, column: 15, scope: !444)
!456 = !DILocation(line: 296, column: 20, scope: !444)
!457 = !DILocation(line: 297, column: 29, scope: !444)
!458 = !DILocation(line: 297, column: 16, scope: !444)
!459 = !DILocation(line: 297, column: 21, scope: !444)
!460 = !DILocation(line: 298, column: 15, scope: !444)
!461 = !DILocation(line: 298, column: 7, scope: !444)
!462 = !DILocation(line: 300, column: 3, scope: !421)
!463 = !DILocation(line: 301, column: 11, scope: !57)
!464 = !DILocation(line: 301, column: 3, scope: !57)
!465 = !DILocation(line: 302, column: 1, scope: !57)
!466 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pkt", arg: 1, scope: !58, file: !6, line: 304, type: !13)
!467 = !DILocation(line: 304, column: 35, scope: !58)
!468 = !DILocation(line: 305, column: 11, scope: !469)
!469 = distinct !DILexicalBlock(scope: !58, file: !6, line: 305, column: 7)
!470 = !DILocation(line: 305, column: 7, scope: !58)
!471 = !DILocation(line: 306, column: 9, scope: !472)
!472 = distinct !DILexicalBlock(scope: !473, file: !6, line: 306, column: 9)
!473 = distinct !DILexicalBlock(scope: !469, file: !6, line: 305, column: 17)
!474 = !DILocation(line: 306, column: 12, scope: !472)
!475 = !DILocation(line: 306, column: 9, scope: !473)
!476 = !DILocation(line: 307, column: 15, scope: !472)
!477 = !DILocation(line: 307, column: 7, scope: !472)
!478 = !DILocation(line: 308, column: 28, scope: !473)
!479 = !DILocation(line: 308, column: 11, scope: !473)
!480 = !DILocation(line: 309, column: 8, scope: !473)
!481 = !DILocation(line: 310, column: 13, scope: !473)
!482 = !DILocation(line: 310, column: 5, scope: !473)
!483 = !DILocation(line: 312, column: 10, scope: !484)
!484 = distinct !DILexicalBlock(scope: !469, file: !6, line: 311, column: 10)
!485 = !DILocation(line: 312, column: 8, scope: !484)
!486 = !DILocation(line: 313, column: 9, scope: !487)
!487 = distinct !DILexicalBlock(scope: !484, file: !6, line: 313, column: 9)
!488 = !DILocation(line: 313, column: 17, scope: !487)
!489 = !DILocation(line: 313, column: 9, scope: !484)
!490 = !DILocation(line: 314, column: 18, scope: !487)
!491 = !DILocation(line: 314, column: 13, scope: !487)
!492 = !DILocation(line: 314, column: 7, scope: !487)
!493 = !DILocation(line: 315, column: 13, scope: !484)
!494 = !DILocation(line: 315, column: 5, scope: !484)
!495 = !DILocation(line: 317, column: 1, scope: !58)
!496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "wkq", scope: !62, file: !6, line: 329, type: !13)
!497 = !DILocation(line: 329, column: 18, scope: !62)
!498 = !DILocation(line: 332, column: 3, scope: !62)
!499 = !DILocation(line: 334, column: 3, scope: !62)
!500 = !DILocation(line: 336, column: 9, scope: !62)
!501 = !DILocation(line: 337, column: 9, scope: !62)
!502 = !DILocation(line: 339, column: 3, scope: !62)
!503 = !DILocation(line: 341, column: 9, scope: !62)
!504 = !DILocation(line: 342, column: 9, scope: !62)
!505 = !DILocation(line: 343, column: 9, scope: !62)
!506 = !DILocation(line: 345, column: 3, scope: !62)
!507 = !DILocation(line: 347, column: 9, scope: !62)
!508 = !DILocation(line: 348, column: 9, scope: !62)
!509 = !DILocation(line: 349, column: 9, scope: !62)
!510 = !DILocation(line: 351, column: 3, scope: !62)
!511 = !DILocation(line: 354, column: 3, scope: !62)
!512 = !DILocation(line: 355, column: 3, scope: !62)
!513 = !DILocation(line: 357, column: 9, scope: !62)
!514 = !DILocation(line: 357, column: 7, scope: !62)
!515 = !DILocation(line: 359, column: 25, scope: !62)
!516 = !DILocation(line: 359, column: 13, scope: !62)
!517 = !DILocation(line: 361, column: 3, scope: !62)
!518 = !DILocation(line: 363, column: 11, scope: !62)
!519 = !DILocation(line: 364, column: 10, scope: !62)
!520 = !DILocation(line: 366, column: 3, scope: !62)
!521 = !DILocation(line: 368, column: 3, scope: !62)
!522 = !DILocation(line: 371, column: 10, scope: !62)
!523 = !DILocation(line: 371, column: 21, scope: !62)
!524 = !DILocation(line: 370, column: 3, scope: !62)
!525 = !DILocation(line: 373, column: 3, scope: !62)
!526 = !DILocation(line: 374, column: 7, scope: !527)
!527 = distinct !DILexicalBlock(scope: !62, file: !6, line: 374, column: 7)
!528 = !DILocation(line: 374, column: 17, scope: !527)
!529 = !DILocation(line: 374, column: 33, scope: !527)
!530 = !DILocation(line: 374, column: 36, scope: !531)
!531 = !DILexicalBlockFile(scope: !527, file: !6, discriminator: 1)
!532 = !DILocation(line: 374, column: 46, scope: !527)
!533 = !DILocation(line: 374, column: 7, scope: !62)
!534 = !DILocation(line: 375, column: 5, scope: !535)
!535 = distinct !DILexicalBlock(scope: !527, file: !6, line: 374, column: 63)
!536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "retval", scope: !62, file: !6, line: 330, type: !10)
!537 = !DILocation(line: 330, column: 7, scope: !62)
!538 = !DILocation(line: 377, column: 3, scope: !535)
!539 = !DILocation(line: 378, column: 5, scope: !540)
!540 = distinct !DILexicalBlock(scope: !527, file: !6, line: 377, column: 10)
!541 = !DILocation(line: 382, column: 3, scope: !62)
!542 = !DILocation(line: 383, column: 3, scope: !62)
