; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.node = type { %struct.node*, %struct.node*, i32 }
%struct.element = type { i32, i32 }
%struct.complex = type { float, float }

@seed = common global i64 0, align 8
@biggest = common global i32 0, align 4
@littlest = common global i32 0, align 4
@sortlist = common global [5001 x i32] zeroinitializer, align 16
@.str = private unnamed_addr constant [18 x i8] c" Error in Quick.\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@value = common global float 0.000000e+00, align 4
@fixed = common global float 0.000000e+00, align 4
@floated = common global float 0.000000e+00, align 4
@permarray = common global [11 x i32] zeroinitializer, align 16
@pctr = common global i32 0, align 4
@tree = common global %struct.node* null, align 8
@stack = common global [4 x i32] zeroinitializer, align 16
@cellspace = common global [19 x %struct.element] zeroinitializer, align 16
@freelist = common global i32 0, align 4
@movesdone = common global i32 0, align 4
@ima = common global [41 x [41 x i32]] zeroinitializer, align 16
@imb = common global [41 x [41 x i32]] zeroinitializer, align 16
@imr = common global [41 x [41 x i32]] zeroinitializer, align 16
@rma = common global [41 x [41 x float]] zeroinitializer, align 16
@rmb = common global [41 x [41 x float]] zeroinitializer, align 16
@rmr = common global [41 x [41 x float]] zeroinitializer, align 16
@piececount = common global [4 x i32] zeroinitializer, align 16
@class = common global [13 x i32] zeroinitializer, align 16
@piecemax = common global [13 x i32] zeroinitializer, align 16
@puzzl = common global [512 x i32] zeroinitializer, align 16
@p = common global [13 x [512 x i32]] zeroinitializer, align 16
@n = common global i32 0, align 4
@kount = common global i32 0, align 4
@top = common global i32 0, align 4
@z = common global [257 x %struct.complex] zeroinitializer, align 16
@w = common global [257 x %struct.complex] zeroinitializer, align 16
@e = common global [130 x %struct.complex] zeroinitializer, align 16
@zr = common global float 0.000000e+00, align 4
@zi = common global float 0.000000e+00, align 4

; Function Attrs: nounwind uwtable
define void @Initrand() #0 {
entry:
  store i64 74755, i64* @seed, align 8, !dbg !105
  ret void, !dbg !106
}

; Function Attrs: nounwind uwtable
define i32 @Rand() #0 {
entry:
  %tmp = load i64, i64* @seed, align 8, !dbg !107
  %mul = mul nsw i64 %tmp, 1309, !dbg !108
  %add = add nsw i64 %mul, 13849, !dbg !109
  %and = and i64 %add, 65535, !dbg !110
  store i64 %and, i64* @seed, align 8, !dbg !111
  %tmp1 = load i64, i64* @seed, align 8, !dbg !112
  %conv = trunc i64 %tmp1 to i32, !dbg !113
  ret i32 %conv, !dbg !114
}

; Function Attrs: nounwind uwtable
define void @Initarr() #0 {
entry:
  call void @Initrand(), !dbg !115
  store i32 0, i32* @biggest, align 4, !dbg !116
  store i32 0, i32* @littlest, align 4, !dbg !117
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !118, metadata !119), !dbg !120
  br label %for.cond, !dbg !121

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]
  %cmp = icmp sle i32 %i.0, 5000, !dbg !123
  br i1 %cmp, label %for.body, label %for.end, !dbg !125

for.body:                                         ; preds = %for.cond
  %call = call i32 @Rand(), !dbg !126
  %conv = sext i32 %call to i64, !dbg !126
  call void @llvm.dbg.value(metadata i64 %conv, i64 0, metadata !128, metadata !119), !dbg !129
  %div = sdiv i64 %conv, 100000, !dbg !130
  %mul = mul nsw i64 %div, 100000, !dbg !131
  %sub = sub nsw i64 %conv, %mul, !dbg !132
  %sub1 = sub nsw i64 %sub, 50000, !dbg !133
  %conv2 = trunc i64 %sub1 to i32, !dbg !134
  %idxprom = sext i32 %i.0 to i64, !dbg !135
  %arrayidx = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 %idxprom, !dbg !135
  store i32 %conv2, i32* %arrayidx, align 4, !dbg !136
  %idxprom3 = sext i32 %i.0 to i64, !dbg !137
  %arrayidx4 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 %idxprom3, !dbg !137
  %tmp5 = load i32, i32* %arrayidx4, align 4, !dbg !137
  %tmp6 = load i32, i32* @biggest, align 4, !dbg !139
  %cmp5 = icmp sgt i32 %tmp5, %tmp6, !dbg !140
  br i1 %cmp5, label %if.then, label %if.else, !dbg !141

if.then:                                          ; preds = %for.body
  %idxprom7 = sext i32 %i.0 to i64, !dbg !142
  %arrayidx8 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 %idxprom7, !dbg !142
  %tmp8 = load i32, i32* %arrayidx8, align 4, !dbg !142
  store i32 %tmp8, i32* @biggest, align 4, !dbg !143
  br label %if.end.16, !dbg !144

if.else:                                          ; preds = %for.body
  %idxprom9 = sext i32 %i.0 to i64, !dbg !145
  %arrayidx10 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 %idxprom9, !dbg !145
  %tmp10 = load i32, i32* %arrayidx10, align 4, !dbg !145
  %tmp11 = load i32, i32* @littlest, align 4, !dbg !147
  %cmp11 = icmp slt i32 %tmp10, %tmp11, !dbg !148
  br i1 %cmp11, label %if.then.13, label %if.end, !dbg !149

if.then.13:                                       ; preds = %if.else
  %idxprom14 = sext i32 %i.0 to i64, !dbg !150
  %arrayidx15 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 %idxprom14, !dbg !150
  %tmp13 = load i32, i32* %arrayidx15, align 4, !dbg !150
  store i32 %tmp13, i32* @littlest, align 4, !dbg !151
  br label %if.end, !dbg !152

if.end:                                           ; preds = %if.then.13, %if.else
  br label %if.end.16

if.end.16:                                        ; preds = %if.end, %if.then
  br label %for.inc, !dbg !153

for.inc:                                          ; preds = %if.end.16
  %inc = add nsw i32 %i.0, 1, !dbg !154
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !118, metadata !119), !dbg !120
  br label %for.cond, !dbg !155

for.end:                                          ; preds = %for.cond
  ret void, !dbg !156
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @Quicksort(i32* %a, i32 %l, i32 %r) #0 {
entry:
  call void @llvm.dbg.value(metadata i32* %a, i64 0, metadata !157, metadata !119), !dbg !158
  call void @llvm.dbg.value(metadata i32 %l, i64 0, metadata !159, metadata !119), !dbg !160
  call void @llvm.dbg.value(metadata i32 %r, i64 0, metadata !161, metadata !119), !dbg !162
  call void @llvm.dbg.value(metadata i32 %l, i64 0, metadata !163, metadata !119), !dbg !164
  call void @llvm.dbg.value(metadata i32 %r, i64 0, metadata !165, metadata !119), !dbg !166
  %add = add nsw i32 %l, %r, !dbg !167
  %div = sdiv i32 %add, 2, !dbg !168
  %idxprom = sext i32 %div to i64, !dbg !169
  %arrayidx = getelementptr inbounds i32, i32* %a, i64 %idxprom, !dbg !169
  %tmp5 = load i32, i32* %arrayidx, align 4, !dbg !169
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !170, metadata !119), !dbg !171
  br label %do.body, !dbg !172

do.body:                                          ; preds = %do.cond, %entry
  %i.0 = phi i32 [ %l, %entry ], [ %i.2, %do.cond ]
  %j.0 = phi i32 [ %r, %entry ], [ %j.2, %do.cond ]
  br label %while.cond, !dbg !173

while.cond:                                       ; preds = %while.body, %do.body
  %i.1 = phi i32 [ %i.0, %do.body ], [ %add3, %while.body ]
  %idxprom1 = sext i32 %i.1 to i64, !dbg !175
  %arrayidx2 = getelementptr inbounds i32, i32* %a, i64 %idxprom1, !dbg !175
  %tmp8 = load i32, i32* %arrayidx2, align 4, !dbg !175
  %cmp = icmp slt i32 %tmp8, %tmp5, !dbg !176
  br i1 %cmp, label %while.body, label %while.end, !dbg !173

while.body:                                       ; preds = %while.cond
  %add3 = add nsw i32 %i.1, 1, !dbg !177
  call void @llvm.dbg.value(metadata i32 %add3, i64 0, metadata !163, metadata !119), !dbg !164
  br label %while.cond, !dbg !173

while.end:                                        ; preds = %while.cond
  %i.1.lcssa = phi i32 [ %i.1, %while.cond ]
  br label %while.cond.4, !dbg !178

while.cond.4:                                     ; preds = %while.body.8, %while.end
  %j.1 = phi i32 [ %j.0, %while.end ], [ %sub, %while.body.8 ]
  %idxprom5 = sext i32 %j.1 to i64, !dbg !179
  %arrayidx6 = getelementptr inbounds i32, i32* %a, i64 %idxprom5, !dbg !179
  %tmp14 = load i32, i32* %arrayidx6, align 4, !dbg !179
  %cmp7 = icmp slt i32 %tmp5, %tmp14, !dbg !180
  br i1 %cmp7, label %while.body.8, label %while.end.9, !dbg !178

while.body.8:                                     ; preds = %while.cond.4
  %sub = sub nsw i32 %j.1, 1, !dbg !181
  call void @llvm.dbg.value(metadata i32 %sub, i64 0, metadata !165, metadata !119), !dbg !166
  br label %while.cond.4, !dbg !178

while.end.9:                                      ; preds = %while.cond.4
  %j.1.lcssa = phi i32 [ %j.1, %while.cond.4 ]
  %cmp10 = icmp sle i32 %i.1.lcssa, %j.1.lcssa, !dbg !182
  br i1 %cmp10, label %if.then, label %if.end, !dbg !184

if.then:                                          ; preds = %while.end.9
  %idxprom11 = sext i32 %i.1.lcssa to i64, !dbg !185
  %arrayidx12 = getelementptr inbounds i32, i32* %a, i64 %idxprom11, !dbg !185
  %tmp20 = load i32, i32* %arrayidx12, align 4, !dbg !185
  call void @llvm.dbg.value(metadata i32 %tmp20, i64 0, metadata !187, metadata !119), !dbg !188
  %idxprom13 = sext i32 %j.1.lcssa to i64, !dbg !189
  %arrayidx14 = getelementptr inbounds i32, i32* %a, i64 %idxprom13, !dbg !189
  %tmp23 = load i32, i32* %arrayidx14, align 4, !dbg !189
  %idxprom15 = sext i32 %i.1.lcssa to i64, !dbg !190
  %arrayidx16 = getelementptr inbounds i32, i32* %a, i64 %idxprom15, !dbg !190
  store i32 %tmp23, i32* %arrayidx16, align 4, !dbg !191
  %idxprom17 = sext i32 %j.1.lcssa to i64, !dbg !192
  %arrayidx18 = getelementptr inbounds i32, i32* %a, i64 %idxprom17, !dbg !192
  store i32 %tmp20, i32* %arrayidx18, align 4, !dbg !193
  %add19 = add nsw i32 %i.1.lcssa, 1, !dbg !194
  call void @llvm.dbg.value(metadata i32 %add19, i64 0, metadata !163, metadata !119), !dbg !164
  %sub20 = sub nsw i32 %j.1.lcssa, 1, !dbg !195
  call void @llvm.dbg.value(metadata i32 %sub20, i64 0, metadata !165, metadata !119), !dbg !166
  br label %if.end, !dbg !196

if.end:                                           ; preds = %if.then, %while.end.9
  %i.2 = phi i32 [ %add19, %if.then ], [ %i.1.lcssa, %while.end.9 ]
  %j.2 = phi i32 [ %sub20, %if.then ], [ %j.1.lcssa, %while.end.9 ]
  br label %do.cond, !dbg !197

do.cond:                                          ; preds = %if.end
  %cmp21 = icmp sle i32 %i.2, %j.2, !dbg !198
  br i1 %cmp21, label %do.body, label %do.end, !dbg !197

do.end:                                           ; preds = %do.cond
  %j.2.lcssa = phi i32 [ %j.2, %do.cond ]
  %i.2.lcssa = phi i32 [ %i.2, %do.cond ]
  %cmp22 = icmp slt i32 %l, %j.2.lcssa, !dbg !199
  br i1 %cmp22, label %if.then.23, label %if.end.24, !dbg !201

if.then.23:                                       ; preds = %do.end
  call void @Quicksort(i32* %a, i32 %l, i32 %j.2.lcssa), !dbg !202
  br label %if.end.24, !dbg !202

if.end.24:                                        ; preds = %if.then.23, %do.end
  %cmp25 = icmp slt i32 %i.2.lcssa, %r, !dbg !203
  br i1 %cmp25, label %if.then.26, label %if.end.27, !dbg !205

if.then.26:                                       ; preds = %if.end.24
  call void @Quicksort(i32* %a, i32 %i.2.lcssa, i32 %r), !dbg !206
  br label %if.end.27, !dbg !206

if.end.27:                                        ; preds = %if.then.26, %if.end.24
  ret void, !dbg !207
}

; Function Attrs: nounwind uwtable
define void @Quick(i32 %run) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %run, i64 0, metadata !208, metadata !119), !dbg !209
  call void @Initarr(), !dbg !210
  call void @Quicksort(i32* getelementptr inbounds ([5001 x i32], [5001 x i32]* @sortlist, i32 0, i32 0), i32 1, i32 5000), !dbg !211
  %tmp = load i32, i32* getelementptr inbounds ([5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 1), align 4, !dbg !212
  %tmp1 = load i32, i32* @littlest, align 4, !dbg !214
  %cmp = icmp ne i32 %tmp, %tmp1, !dbg !215
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !216

lor.lhs.false:                                    ; preds = %entry
  %tmp2 = load i32, i32* getelementptr inbounds ([5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 5000), align 4, !dbg !217
  %tmp3 = load i32, i32* @biggest, align 4, !dbg !219
  %cmp1 = icmp ne i32 %tmp2, %tmp3, !dbg !220
  br i1 %cmp1, label %if.then, label %if.end, !dbg !221

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0)), !dbg !222
  br label %if.end, !dbg !222

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %add = add nsw i32 %run, 1, !dbg !223
  %idxprom = sext i32 %add to i64, !dbg !224
  %arrayidx = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist, i32 0, i64 %idxprom, !dbg !224
  %tmp5 = load i32, i32* %arrayidx, align 4, !dbg !224
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %tmp5), !dbg !225
  ret void, !dbg !226
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !227, metadata !119), !dbg !228
  br label %for.cond, !dbg !229

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 100, !dbg !231
  br i1 %cmp, label %for.body, label %for.end, !dbg !233

for.body:                                         ; preds = %for.cond
  call void @Quick(i32 %i.0), !dbg !234
  br label %for.inc, !dbg !234

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !235
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !227, metadata !119), !dbg !228
  br label %for.cond, !dbg !236

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !237
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!102, !103}
!llvm.ident = !{!104}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5, globals: !21)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Stanford/Quicksort")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!5 = !{!6, !10, !12, !13, !17, !20}
!6 = !DISubprogram(name: "Initrand", scope: !7, file: !7, line: 117, type: !8, isLocal: false, isDefinition: true, scopeLine: 117, isOptimized: false, function: void ()* @Initrand, variables: !2)
!7 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Stanford/Quicksort/tmp.c", directory: "/home/gleison/tf/Benchmarks/Stanford/Quicksort")
!8 = !DISubroutineType(types: !9)
!9 = !{null}
!10 = !DISubprogram(name: "Rand", scope: !7, file: !7, line: 121, type: !11, isLocal: false, isDefinition: true, scopeLine: 121, isOptimized: false, function: i32 ()* @Rand, variables: !2)
!11 = !DISubroutineType(types: !3)
!12 = !DISubprogram(name: "Initarr", scope: !7, file: !7, line: 127, type: !8, isLocal: false, isDefinition: true, scopeLine: 127, isOptimized: false, function: void ()* @Initarr, variables: !2)
!13 = !DISubprogram(name: "Quicksort", scope: !7, file: !7, line: 144, type: !14, isLocal: false, isDefinition: true, scopeLine: 144, flags: DIFlagPrototyped, isOptimized: false, function: void (i32*, i32, i32)* @Quicksort, variables: !2)
!14 = !DISubroutineType(types: !15)
!15 = !{null, !16, !4, !4}
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!17 = !DISubprogram(name: "Quick", scope: !7, file: !7, line: 170, type: !18, isLocal: false, isDefinition: true, scopeLine: 170, flags: DIFlagPrototyped, isOptimized: false, function: void (i32)* @Quick, variables: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{null, !4}
!20 = !DISubprogram(name: "main", scope: !7, file: !7, line: 178, type: !11, isLocal: false, isDefinition: true, scopeLine: 178, isOptimized: false, function: i32 ()* @main, variables: !2)
!21 = !{!22, !24, !25, !26, !28, !32, !34, !41, !45, !53, !54, !55, !59, !60, !61, !63, !64, !65, !66, !70, !71, !75, !78, !79, !80, !84, !85, !86, !87, !95, !96, !100, !101}
!22 = !DIGlobalVariable(name: "value", scope: !0, file: !7, line: 83, type: !23, isLocal: false, isDefinition: true, variable: float* @value)
!23 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!24 = !DIGlobalVariable(name: "fixed", scope: !0, file: !7, line: 83, type: !23, isLocal: false, isDefinition: true, variable: float* @fixed)
!25 = !DIGlobalVariable(name: "floated", scope: !0, file: !7, line: 83, type: !23, isLocal: false, isDefinition: true, variable: float* @floated)
!26 = !DIGlobalVariable(name: "seed", scope: !0, file: !7, line: 86, type: !27, isLocal: false, isDefinition: true, variable: i64* @seed)
!27 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!28 = !DIGlobalVariable(name: "permarray", scope: !0, file: !7, line: 89, type: !29, isLocal: false, isDefinition: true, variable: [11 x i32]* @permarray)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 352, align: 32, elements: !30)
!30 = !{!31}
!31 = !DISubrange(count: 11)
!32 = !DIGlobalVariable(name: "pctr", scope: !0, file: !7, line: 91, type: !33, isLocal: false, isDefinition: true, variable: i32* @pctr)
!33 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!34 = !DIGlobalVariable(name: "tree", scope: !0, file: !7, line: 94, type: !35, isLocal: false, isDefinition: true, variable: %struct.node** @tree)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "node", file: !7, line: 45, size: 192, align: 64, elements: !37)
!37 = !{!38, !39, !40}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !36, file: !7, line: 46, baseType: !35, size: 64, align: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !36, file: !7, line: 46, baseType: !35, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !36, file: !7, line: 47, baseType: !4, size: 32, align: 32, offset: 128)
!41 = !DIGlobalVariable(name: "stack", scope: !0, file: !7, line: 97, type: !42, isLocal: false, isDefinition: true, variable: [4 x i32]* @stack)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, align: 32, elements: !43)
!43 = !{!44}
!44 = !DISubrange(count: 4)
!45 = !DIGlobalVariable(name: "cellspace", scope: !0, file: !7, line: 98, type: !46, isLocal: false, isDefinition: true, variable: [19 x %struct.element]* @cellspace)
!46 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 1216, align: 32, elements: !51)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "element", file: !7, line: 54, size: 64, align: 32, elements: !48)
!48 = !{!49, !50}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "discsize", scope: !47, file: !7, line: 55, baseType: !4, size: 32, align: 32)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !47, file: !7, line: 56, baseType: !4, size: 32, align: 32, offset: 32)
!51 = !{!52}
!52 = !DISubrange(count: 19)
!53 = !DIGlobalVariable(name: "freelist", scope: !0, file: !7, line: 99, type: !4, isLocal: false, isDefinition: true, variable: i32* @freelist)
!54 = !DIGlobalVariable(name: "movesdone", scope: !0, file: !7, line: 99, type: !4, isLocal: false, isDefinition: true, variable: i32* @movesdone)
!55 = !DIGlobalVariable(name: "ima", scope: !0, file: !7, line: 103, type: !56, isLocal: false, isDefinition: true, variable: [41 x [41 x i32]]* @ima)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 53792, align: 32, elements: !57)
!57 = !{!58, !58}
!58 = !DISubrange(count: 41)
!59 = !DIGlobalVariable(name: "imb", scope: !0, file: !7, line: 103, type: !56, isLocal: false, isDefinition: true, variable: [41 x [41 x i32]]* @imb)
!60 = !DIGlobalVariable(name: "imr", scope: !0, file: !7, line: 103, type: !56, isLocal: false, isDefinition: true, variable: [41 x [41 x i32]]* @imr)
!61 = !DIGlobalVariable(name: "rma", scope: !0, file: !7, line: 104, type: !62, isLocal: false, isDefinition: true, variable: [41 x [41 x float]]* @rma)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 53792, align: 32, elements: !57)
!63 = !DIGlobalVariable(name: "rmb", scope: !0, file: !7, line: 104, type: !62, isLocal: false, isDefinition: true, variable: [41 x [41 x float]]* @rmb)
!64 = !DIGlobalVariable(name: "rmr", scope: !0, file: !7, line: 104, type: !62, isLocal: false, isDefinition: true, variable: [41 x [41 x float]]* @rmr)
!65 = !DIGlobalVariable(name: "piececount", scope: !0, file: !7, line: 107, type: !42, isLocal: false, isDefinition: true, variable: [4 x i32]* @piececount)
!66 = !DIGlobalVariable(name: "class", scope: !0, file: !7, line: 107, type: !67, isLocal: false, isDefinition: true, variable: [13 x i32]* @class)
!67 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 416, align: 32, elements: !68)
!68 = !{!69}
!69 = !DISubrange(count: 13)
!70 = !DIGlobalVariable(name: "piecemax", scope: !0, file: !7, line: 107, type: !67, isLocal: false, isDefinition: true, variable: [13 x i32]* @piecemax)
!71 = !DIGlobalVariable(name: "puzzl", scope: !0, file: !7, line: 108, type: !72, isLocal: false, isDefinition: true, variable: [512 x i32]* @puzzl)
!72 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16384, align: 32, elements: !73)
!73 = !{!74}
!74 = !DISubrange(count: 512)
!75 = !DIGlobalVariable(name: "p", scope: !0, file: !7, line: 108, type: !76, isLocal: false, isDefinition: true, variable: [13 x [512 x i32]]* @p)
!76 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 212992, align: 32, elements: !77)
!77 = !{!69, !74}
!78 = !DIGlobalVariable(name: "n", scope: !0, file: !7, line: 108, type: !4, isLocal: false, isDefinition: true, variable: i32* @n)
!79 = !DIGlobalVariable(name: "kount", scope: !0, file: !7, line: 108, type: !4, isLocal: false, isDefinition: true, variable: i32* @kount)
!80 = !DIGlobalVariable(name: "sortlist", scope: !0, file: !7, line: 111, type: !81, isLocal: false, isDefinition: true, variable: [5001 x i32]* @sortlist)
!81 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160032, align: 32, elements: !82)
!82 = !{!83}
!83 = !DISubrange(count: 5001)
!84 = !DIGlobalVariable(name: "biggest", scope: !0, file: !7, line: 111, type: !4, isLocal: false, isDefinition: true, variable: i32* @biggest)
!85 = !DIGlobalVariable(name: "littlest", scope: !0, file: !7, line: 111, type: !4, isLocal: false, isDefinition: true, variable: i32* @littlest)
!86 = !DIGlobalVariable(name: "top", scope: !0, file: !7, line: 111, type: !4, isLocal: false, isDefinition: true, variable: i32* @top)
!87 = !DIGlobalVariable(name: "z", scope: !0, file: !7, line: 114, type: !88, isLocal: false, isDefinition: true, variable: [257 x %struct.complex]* @z)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 16448, align: 32, elements: !93)
!89 = !DICompositeType(tag: DW_TAG_structure_type, name: "complex", file: !7, line: 75, size: 64, align: 32, elements: !90)
!90 = !{!91, !92}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !89, file: !7, line: 76, baseType: !23, size: 32, align: 32)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !89, file: !7, line: 76, baseType: !23, size: 32, align: 32, offset: 32)
!93 = !{!94}
!94 = !DISubrange(count: 257)
!95 = !DIGlobalVariable(name: "w", scope: !0, file: !7, line: 114, type: !88, isLocal: false, isDefinition: true, variable: [257 x %struct.complex]* @w)
!96 = !DIGlobalVariable(name: "e", scope: !0, file: !7, line: 114, type: !97, isLocal: false, isDefinition: true, variable: [130 x %struct.complex]* @e)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8320, align: 32, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 130)
!100 = !DIGlobalVariable(name: "zr", scope: !0, file: !7, line: 115, type: !23, isLocal: false, isDefinition: true, variable: float* @zr)
!101 = !DIGlobalVariable(name: "zi", scope: !0, file: !7, line: 115, type: !23, isLocal: false, isDefinition: true, variable: float* @zi)
!102 = !{i32 2, !"Dwarf Version", i32 4}
!103 = !{i32 2, !"Debug Info Version", i32 3}
!104 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!105 = !DILocation(line: 118, column: 8, scope: !6)
!106 = !DILocation(line: 119, column: 1, scope: !6)
!107 = !DILocation(line: 122, column: 11, scope: !10)
!108 = !DILocation(line: 122, column: 16, scope: !10)
!109 = !DILocation(line: 122, column: 24, scope: !10)
!110 = !DILocation(line: 122, column: 34, scope: !10)
!111 = !DILocation(line: 122, column: 8, scope: !10)
!112 = !DILocation(line: 123, column: 16, scope: !10)
!113 = !DILocation(line: 123, column: 11, scope: !10)
!114 = !DILocation(line: 123, column: 3, scope: !10)
!115 = !DILocation(line: 130, column: 3, scope: !12)
!116 = !DILocation(line: 131, column: 11, scope: !12)
!117 = !DILocation(line: 132, column: 12, scope: !12)
!118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !12, file: !7, line: 128, type: !4)
!119 = !DIExpression()
!120 = !DILocation(line: 128, column: 7, scope: !12)
!121 = !DILocation(line: 133, column: 8, scope: !122)
!122 = distinct !DILexicalBlock(scope: !12, file: !7, line: 133, column: 3)
!123 = !DILocation(line: 133, column: 17, scope: !124)
!124 = distinct !DILexicalBlock(scope: !122, file: !7, line: 133, column: 3)
!125 = !DILocation(line: 133, column: 3, scope: !122)
!126 = !DILocation(line: 134, column: 12, scope: !127)
!127 = distinct !DILexicalBlock(scope: !124, file: !7, line: 133, column: 39)
!128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !12, file: !7, line: 129, type: !27)
!129 = !DILocation(line: 129, column: 8, scope: !12)
!130 = !DILocation(line: 136, column: 38, scope: !127)
!131 = !DILocation(line: 136, column: 49, scope: !127)
!132 = !DILocation(line: 136, column: 30, scope: !127)
!133 = !DILocation(line: 136, column: 59, scope: !127)
!134 = !DILocation(line: 136, column: 19, scope: !127)
!135 = !DILocation(line: 136, column: 5, scope: !127)
!136 = !DILocation(line: 136, column: 17, scope: !127)
!137 = !DILocation(line: 137, column: 9, scope: !138)
!138 = distinct !DILexicalBlock(scope: !127, file: !7, line: 137, column: 9)
!139 = !DILocation(line: 137, column: 23, scope: !138)
!140 = !DILocation(line: 137, column: 21, scope: !138)
!141 = !DILocation(line: 137, column: 9, scope: !127)
!142 = !DILocation(line: 138, column: 17, scope: !138)
!143 = !DILocation(line: 138, column: 15, scope: !138)
!144 = !DILocation(line: 138, column: 7, scope: !138)
!145 = !DILocation(line: 139, column: 14, scope: !146)
!146 = distinct !DILexicalBlock(scope: !138, file: !7, line: 139, column: 14)
!147 = !DILocation(line: 139, column: 28, scope: !146)
!148 = !DILocation(line: 139, column: 26, scope: !146)
!149 = !DILocation(line: 139, column: 14, scope: !138)
!150 = !DILocation(line: 140, column: 18, scope: !146)
!151 = !DILocation(line: 140, column: 16, scope: !146)
!152 = !DILocation(line: 140, column: 7, scope: !146)
!153 = !DILocation(line: 141, column: 3, scope: !127)
!154 = !DILocation(line: 133, column: 35, scope: !124)
!155 = !DILocation(line: 133, column: 3, scope: !124)
!156 = !DILocation(line: 142, column: 1, scope: !12)
!157 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !13, file: !7, line: 144, type: !16)
!158 = !DILocation(line: 144, column: 20, scope: !13)
!159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l", arg: 2, scope: !13, file: !7, line: 144, type: !4)
!160 = !DILocation(line: 144, column: 29, scope: !13)
!161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "r", arg: 3, scope: !13, file: !7, line: 144, type: !4)
!162 = !DILocation(line: 144, column: 36, scope: !13)
!163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !13, file: !7, line: 146, type: !4)
!164 = !DILocation(line: 146, column: 7, scope: !13)
!165 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !13, file: !7, line: 146, type: !4)
!166 = !DILocation(line: 146, column: 10, scope: !13)
!167 = !DILocation(line: 150, column: 12, scope: !13)
!168 = !DILocation(line: 150, column: 17, scope: !13)
!169 = !DILocation(line: 150, column: 7, scope: !13)
!170 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !13, file: !7, line: 146, type: !4)
!171 = !DILocation(line: 146, column: 13, scope: !13)
!172 = !DILocation(line: 151, column: 3, scope: !13)
!173 = !DILocation(line: 152, column: 5, scope: !174)
!174 = distinct !DILexicalBlock(scope: !13, file: !7, line: 151, column: 6)
!175 = !DILocation(line: 152, column: 12, scope: !174)
!176 = !DILocation(line: 152, column: 17, scope: !174)
!177 = !DILocation(line: 153, column: 13, scope: !174)
!178 = !DILocation(line: 154, column: 5, scope: !174)
!179 = !DILocation(line: 154, column: 16, scope: !174)
!180 = !DILocation(line: 154, column: 14, scope: !174)
!181 = !DILocation(line: 155, column: 13, scope: !174)
!182 = !DILocation(line: 156, column: 11, scope: !183)
!183 = distinct !DILexicalBlock(scope: !174, file: !7, line: 156, column: 9)
!184 = !DILocation(line: 156, column: 9, scope: !174)
!185 = !DILocation(line: 157, column: 11, scope: !186)
!186 = distinct !DILexicalBlock(scope: !183, file: !7, line: 156, column: 17)
!187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !13, file: !7, line: 146, type: !4)
!188 = !DILocation(line: 146, column: 16, scope: !13)
!189 = !DILocation(line: 158, column: 14, scope: !186)
!190 = !DILocation(line: 158, column: 7, scope: !186)
!191 = !DILocation(line: 158, column: 12, scope: !186)
!192 = !DILocation(line: 159, column: 7, scope: !186)
!193 = !DILocation(line: 159, column: 12, scope: !186)
!194 = !DILocation(line: 160, column: 13, scope: !186)
!195 = !DILocation(line: 161, column: 13, scope: !186)
!196 = !DILocation(line: 162, column: 5, scope: !186)
!197 = !DILocation(line: 163, column: 3, scope: !174)
!198 = !DILocation(line: 163, column: 14, scope: !13)
!199 = !DILocation(line: 164, column: 9, scope: !200)
!200 = distinct !DILexicalBlock(scope: !13, file: !7, line: 164, column: 7)
!201 = !DILocation(line: 164, column: 7, scope: !13)
!202 = !DILocation(line: 165, column: 5, scope: !200)
!203 = !DILocation(line: 166, column: 9, scope: !204)
!204 = distinct !DILexicalBlock(scope: !13, file: !7, line: 166, column: 7)
!205 = !DILocation(line: 166, column: 7, scope: !13)
!206 = !DILocation(line: 167, column: 5, scope: !204)
!207 = !DILocation(line: 168, column: 1, scope: !13)
!208 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "run", arg: 1, scope: !17, file: !7, line: 170, type: !4)
!209 = !DILocation(line: 170, column: 16, scope: !17)
!210 = !DILocation(line: 171, column: 3, scope: !17)
!211 = !DILocation(line: 172, column: 3, scope: !17)
!212 = !DILocation(line: 173, column: 8, scope: !213)
!213 = distinct !DILexicalBlock(scope: !17, file: !7, line: 173, column: 7)
!214 = !DILocation(line: 173, column: 23, scope: !213)
!215 = !DILocation(line: 173, column: 20, scope: !213)
!216 = !DILocation(line: 173, column: 33, scope: !213)
!217 = !DILocation(line: 173, column: 37, scope: !218)
!218 = !DILexicalBlockFile(scope: !213, file: !7, discriminator: 1)
!219 = !DILocation(line: 173, column: 63, scope: !213)
!220 = !DILocation(line: 173, column: 60, scope: !213)
!221 = !DILocation(line: 173, column: 7, scope: !17)
!222 = !DILocation(line: 174, column: 5, scope: !213)
!223 = !DILocation(line: 175, column: 31, scope: !17)
!224 = !DILocation(line: 175, column: 18, scope: !17)
!225 = !DILocation(line: 175, column: 3, scope: !17)
!226 = !DILocation(line: 176, column: 1, scope: !17)
!227 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !20, file: !7, line: 179, type: !4)
!228 = !DILocation(line: 179, column: 7, scope: !20)
!229 = !DILocation(line: 180, column: 8, scope: !230)
!230 = distinct !DILexicalBlock(scope: !20, file: !7, line: 180, column: 3)
!231 = !DILocation(line: 180, column: 17, scope: !232)
!232 = distinct !DILexicalBlock(scope: !230, file: !7, line: 180, column: 3)
!233 = !DILocation(line: 180, column: 3, scope: !230)
!234 = !DILocation(line: 181, column: 5, scope: !232)
!235 = !DILocation(line: 180, column: 25, scope: !232)
!236 = !DILocation(line: 180, column: 3, scope: !232)
!237 = !DILocation(line: 182, column: 3, scope: !20)
