; ModuleID = 'result.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.node = type { %struct.node*, %struct.node*, i32 }
%struct.element = type { i32, i32 }
%struct.complex = type { float, float }

@seed = common global i64 0, align 8
@.str = private unnamed_addr constant [19 x i8] c" Error in Queens.\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@value = common global float 0.000000e+00, align 4
@fixed = common global float 0.000000e+00, align 4
@floated = common global float 0.000000e+00, align 4
@permarray = common global [11 x i32] zeroinitializer, align 16
@pctr = common global i32 0, align 4
@tree = common global %struct.node* null, align 8
@stack = common global [4 x i32] zeroinitializer, align 16
@cellspace = common global [19 x %struct.element] zeroinitializer, align 16
@freelist = common global i32 0, align 4
@movesdone = common global i32 0, align 4
@ima = common global [41 x [41 x i32]] zeroinitializer, align 16
@imb = common global [41 x [41 x i32]] zeroinitializer, align 16
@imr = common global [41 x [41 x i32]] zeroinitializer, align 16
@rma = common global [41 x [41 x float]] zeroinitializer, align 16
@rmb = common global [41 x [41 x float]] zeroinitializer, align 16
@rmr = common global [41 x [41 x float]] zeroinitializer, align 16
@piececount = common global [4 x i32] zeroinitializer, align 16
@class = common global [13 x i32] zeroinitializer, align 16
@piecemax = common global [13 x i32] zeroinitializer, align 16
@puzzl = common global [512 x i32] zeroinitializer, align 16
@p = common global [13 x [512 x i32]] zeroinitializer, align 16
@n = common global i32 0, align 4
@kount = common global i32 0, align 4
@sortlist = common global [5001 x i32] zeroinitializer, align 16
@biggest = common global i32 0, align 4
@littlest = common global i32 0, align 4
@top = common global i32 0, align 4
@z = common global [257 x %struct.complex] zeroinitializer, align 16
@w = common global [257 x %struct.complex] zeroinitializer, align 16
@e = common global [130 x %struct.complex] zeroinitializer, align 16
@zr = common global float 0.000000e+00, align 4
@zi = common global float 0.000000e+00, align 4

; Function Attrs: nounwind uwtable
define void @Initrand() #0 {
entry:
  store i64 74755, i64* @seed, align 8, !dbg !105
  ret void, !dbg !106
}

; Function Attrs: nounwind uwtable
define i32 @Rand() #0 {
entry:
  %tmp = load i64, i64* @seed, align 8, !dbg !107
  %mul = mul nsw i64 %tmp, 1309, !dbg !108
  %add = add nsw i64 %mul, 13849, !dbg !109
  %and = and i64 %add, 65535, !dbg !110
  store i64 %and, i64* @seed, align 8, !dbg !111
  %tmp1 = load i64, i64* @seed, align 8, !dbg !112
  %conv = trunc i64 %tmp1 to i32, !dbg !113
  ret i32 %conv, !dbg !114
}

; Function Attrs: nounwind uwtable
define void @Try(i32 %i, i32* %q, i32* %a, i32* %b, i32* %c, i32* %x) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %i, i64 0, metadata !115, metadata !116), !dbg !117
  call void @llvm.dbg.value(metadata i32* %q, i64 0, metadata !118, metadata !116), !dbg !119
  call void @llvm.dbg.value(metadata i32* %a, i64 0, metadata !120, metadata !116), !dbg !121
  call void @llvm.dbg.value(metadata i32* %b, i64 0, metadata !122, metadata !116), !dbg !123
  call void @llvm.dbg.value(metadata i32* %c, i64 0, metadata !124, metadata !116), !dbg !125
  call void @llvm.dbg.value(metadata i32* %x, i64 0, metadata !126, metadata !116), !dbg !127
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !128, metadata !116), !dbg !130
  %q49 = ptrtoint i32* %q to i64
  br label %for.cond, !dbg !131

for.cond:                                         ; preds = %for.inc, %entry
  %k.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %k.0, 100000, !dbg !132
  br i1 %cmp, label %for.body, label %for.end, !dbg !134

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !135

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %k.0, 1, !dbg !137
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !128, metadata !116), !dbg !130
  br label %for.cond, !dbg !139

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !140, metadata !116), !dbg !141
  store i32 0, i32* %q, align 4, !dbg !142
  %0 = add i64 %q49, 4, !dbg !143
  %1 = add i64 %q49, 4, !dbg !143
  %2 = add i64 %q49, 4, !dbg !143
  %3 = add i64 %q49, 4, !dbg !143
  br label %while.cond, !dbg !144

while.cond:                                       ; preds = %if.end.38, %for.end
  %j.0 = phi i32 [ 0, %for.end ], [ %add, %if.end.38 ]
  %tmp4 = load i32, i32* %q, align 4, !dbg !145
  %tobool = icmp ne i32 %tmp4, 0, !dbg !145
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !143

land.rhs:                                         ; preds = %while.cond
  %cmp1 = icmp ne i32 %j.0, 8, !dbg !146
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %tmp6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %tmp6, label %while.body, label %while.end, !dbg !147

while.body:                                       ; preds = %land.end
  %add = add nsw i32 %j.0, 1, !dbg !149
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !140, metadata !116), !dbg !141
  store i32 0, i32* %q, align 4, !dbg !151
  %idxprom = sext i32 %add to i64, !dbg !152
  %arrayidx = getelementptr inbounds i32, i32* %b, i64 %idxprom, !dbg !152
  %tmp11 = load i32, i32* %arrayidx, align 4, !dbg !152
  %tobool2 = icmp ne i32 %tmp11, 0, !dbg !152
  br i1 %tobool2, label %land.lhs.true, label %if.end.38, !dbg !154

land.lhs.true:                                    ; preds = %while.body
  %add3 = add nsw i32 %i, %add, !dbg !155
  %idxprom4 = sext i32 %add3 to i64, !dbg !156
  %arrayidx5 = getelementptr inbounds i32, i32* %a, i64 %idxprom4, !dbg !156
  %tmp15 = load i32, i32* %arrayidx5, align 4, !dbg !156
  %tobool6 = icmp ne i32 %tmp15, 0, !dbg !156
  br i1 %tobool6, label %land.lhs.true.7, label %if.end.38, !dbg !157

land.lhs.true.7:                                  ; preds = %land.lhs.true
  %sub = sub nsw i32 %i, %add, !dbg !158
  %add8 = add nsw i32 %sub, 7, !dbg !159
  %idxprom9 = sext i32 %add8 to i64, !dbg !160
  %arrayidx10 = getelementptr inbounds i32, i32* %c, i64 %idxprom9, !dbg !160
  %tmp19 = load i32, i32* %arrayidx10, align 4, !dbg !160
  %tobool11 = icmp ne i32 %tmp19, 0, !dbg !160
  br i1 %tobool11, label %if.then, label %if.end.38, !dbg !161

if.then:                                          ; preds = %land.lhs.true.7
  %idxprom12 = sext i32 %i to i64, !dbg !162
  %arrayidx13 = getelementptr inbounds i32, i32* %x, i64 %idxprom12, !dbg !162
  store i32 %add, i32* %arrayidx13, align 4, !dbg !164
  %idxprom14 = sext i32 %add to i64, !dbg !165
  %arrayidx15 = getelementptr inbounds i32, i32* %b, i64 %idxprom14, !dbg !165
  store i32 0, i32* %arrayidx15, align 4, !dbg !166
  %add16 = add nsw i32 %i, %add, !dbg !167
  %idxprom17 = sext i32 %add16 to i64, !dbg !168
  %arrayidx18 = getelementptr inbounds i32, i32* %a, i64 %idxprom17, !dbg !168
  store i32 0, i32* %arrayidx18, align 4, !dbg !169
  %sub19 = sub nsw i32 %i, %add, !dbg !170
  %add20 = add nsw i32 %sub19, 7, !dbg !171
  %idxprom21 = sext i32 %add20 to i64, !dbg !172
  %arrayidx22 = getelementptr inbounds i32, i32* %c, i64 %idxprom21, !dbg !172
  store i32 0, i32* %arrayidx22, align 4, !dbg !173
  %cmp23 = icmp slt i32 %i, 8, !dbg !174
  br i1 %cmp23, label %if.then.24, label %if.else, !dbg !176

if.then.24:                                       ; preds = %if.then
  %add25 = add nsw i32 %i, 1, !dbg !177
  call void @Try(i32 %add25, i32* %q, i32* %a, i32* %b, i32* %c, i32* %x), !dbg !179
  %tmp39 = load i32, i32* %q, align 4, !dbg !180
  %tobool26 = icmp ne i32 %tmp39, 0, !dbg !180
  br i1 %tobool26, label %if.end, label %if.then.27, !dbg !182

if.then.27:                                       ; preds = %if.then.24
  %idxprom28 = sext i32 %add to i64, !dbg !183
  %arrayidx29 = getelementptr inbounds i32, i32* %b, i64 %idxprom28, !dbg !183
  store i32 1, i32* %arrayidx29, align 4, !dbg !185
  %add30 = add nsw i32 %i, %add, !dbg !186
  %idxprom31 = sext i32 %add30 to i64, !dbg !187
  %arrayidx32 = getelementptr inbounds i32, i32* %a, i64 %idxprom31, !dbg !187
  store i32 1, i32* %arrayidx32, align 4, !dbg !188
  %sub33 = sub nsw i32 %i, %add, !dbg !189
  %add34 = add nsw i32 %sub33, 7, !dbg !190
  %idxprom35 = sext i32 %add34 to i64, !dbg !191
  %arrayidx36 = getelementptr inbounds i32, i32* %c, i64 %idxprom35, !dbg !191
  store i32 1, i32* %arrayidx36, align 4, !dbg !192
  br label %if.end, !dbg !193

if.end:                                           ; preds = %if.then.27, %if.then.24
  br label %if.end.37, !dbg !194

if.else:                                          ; preds = %if.then
  store i32 1, i32* %q, align 4, !dbg !195
  br label %if.end.37

if.end.37:                                        ; preds = %if.else, %if.end
  br label %if.end.38, !dbg !196

if.end.38:                                        ; preds = %if.end.37, %land.lhs.true.7, %land.lhs.true, %while.body
  br label %while.cond, !dbg !144

while.end:                                        ; preds = %land.end
  ret void, !dbg !197
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define void @Doit() #0 {
entry:
  %q = alloca i32, align 4
  %a = alloca [9 x i32], align 16
  %b = alloca [17 x i32], align 16
  %c = alloca [15 x i32], align 16
  %0 = ptrtoint [15 x i32]* %c to i64
  %c17 = ptrtoint [15 x i32]* %c to i64
  %x = alloca [9 x i32], align 16
  call void @llvm.dbg.declare(metadata i32* %q, metadata !198, metadata !116), !dbg !199
  call void @llvm.dbg.declare(metadata [9 x i32]* %a, metadata !200, metadata !116), !dbg !204
  call void @llvm.dbg.declare(metadata [17 x i32]* %b, metadata !205, metadata !116), !dbg !209
  call void @llvm.dbg.declare(metadata [15 x i32]* %c, metadata !210, metadata !116), !dbg !214
  call void @llvm.dbg.declare(metadata [9 x i32]* %x, metadata !215, metadata !116), !dbg !216
  call void @llvm.dbg.value(metadata i32 -7, i64 0, metadata !217, metadata !116), !dbg !218
  %scevgep = getelementptr [9 x i32], [9 x i32]* %a, i64 0, i64 -7, !dbg !219
  %scevgep12 = ptrtoint i32* %scevgep to i64
  %scevgep10 = getelementptr [9 x i32], [9 x i32]* %a, i64 0, i64 -7, !dbg !219
  %scevgep1011 = ptrtoint i32* %scevgep10 to i64
  %1 = add i64 %scevgep1011, 4, !dbg !219
  %2 = add i64 %scevgep1011, 4, !dbg !219
  %scevgep13 = getelementptr [17 x i32], [17 x i32]* %b, i64 0, i64 -7, !dbg !219
  %scevgep1316 = ptrtoint i32* %scevgep13 to i64
  %scevgep14 = getelementptr [17 x i32], [17 x i32]* %b, i64 0, i64 -7, !dbg !219
  %scevgep1415 = ptrtoint i32* %scevgep14 to i64
  %3 = add i64 %scevgep1415, 4, !dbg !219
  %4 = add i64 %scevgep1415, 4, !dbg !219
  %5 = add i64 %c17, 4, !dbg !219
  %6 = add i64 %c17, 4, !dbg !219
  %scevgep18 = getelementptr [9 x i32], [9 x i32]* %a, i64 0, i64 -7, !dbg !219
  %scevgep1821 = ptrtoint i32* %scevgep18 to i64
  %scevgep19 = getelementptr [9 x i32], [9 x i32]* %a, i64 0, i64 -7, !dbg !219
  %scevgep1920 = ptrtoint i32* %scevgep19 to i64
  %7 = add i64 %scevgep1920, 4, !dbg !219
  %8 = add i64 %scevgep1920, 4, !dbg !219
  %scevgep22 = getelementptr [17 x i32], [17 x i32]* %b, i64 0, i64 -7, !dbg !219
  %scevgep2225 = ptrtoint i32* %scevgep22 to i64
  %scevgep23 = getelementptr [17 x i32], [17 x i32]* %b, i64 0, i64 -7, !dbg !219
  %scevgep2324 = ptrtoint i32* %scevgep23 to i64
  %9 = add i64 %scevgep2324, 4, !dbg !219
  %10 = add i64 %scevgep2324, 4, !dbg !219
  %11 = add i64 %0, 4, !dbg !219
  %12 = add i64 %0, 4, !dbg !219
  br label %while.cond, !dbg !219

while.cond:                                       ; preds = %if.end.12, %entry
  %i.0 = phi i32 [ -7, %entry ], [ %add13, %if.end.12 ]
  %cmp = icmp sle i32 %i.0, 16, !dbg !220
  %13 = ptrtoint i32* %scevgep to i64, !dbg !219
  %14 = sub i64 %1, %13, !dbg !219
  %15 = ptrtoint i32* %scevgep13 to i64, !dbg !219
  %16 = sub i64 %3, %15, !dbg !219
  %17 = ptrtoint [15 x i32]* undef to i64, !dbg !219
  %18 = sub i64 %5, %0, !dbg !219
  %19 = ptrtoint i32* %scevgep18 to i64, !dbg !219
  %20 = sub i64 %7, %19, !dbg !219
  %21 = ptrtoint i32* %scevgep22 to i64, !dbg !219
  %22 = sub i64 %9, %21, !dbg !219
  %23 = ptrtoint [15 x i32]* %c to i64, !dbg !219
  %24 = sub i64 %11, %23, !dbg !219
  br i1 %cmp, label %while.body, label %while.end, !dbg !219

while.body:                                       ; preds = %while.cond
  %cmp1 = icmp sge i32 %i.0, 1, !dbg !221
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !224

land.lhs.true:                                    ; preds = %while.body
  %cmp2 = icmp sle i32 %i.0, 8, !dbg !225
  br i1 %cmp2, label %if.then, label %if.end, !dbg !226

if.then:                                          ; preds = %land.lhs.true
  %idxprom = sext i32 %i.0 to i64, !dbg !227
  %arrayidx = getelementptr inbounds [9 x i32], [9 x i32]* %a, i32 0, i64 %idxprom, !dbg !227
  store i32 1, i32* %arrayidx, align 4, !dbg !228
  br label %if.end, !dbg !227

if.end:                                           ; preds = %if.then, %land.lhs.true, %while.body
  %cmp3 = icmp sge i32 %i.0, 2, !dbg !229
  br i1 %cmp3, label %if.then.4, label %if.end.7, !dbg !231

if.then.4:                                        ; preds = %if.end
  %idxprom5 = sext i32 %i.0 to i64, !dbg !232
  %arrayidx6 = getelementptr inbounds [17 x i32], [17 x i32]* %b, i32 0, i64 %idxprom5, !dbg !232
  store i32 1, i32* %arrayidx6, align 4, !dbg !233
  br label %if.end.7, !dbg !232

if.end.7:                                         ; preds = %if.then.4, %if.end
  %cmp8 = icmp sle i32 %i.0, 7, !dbg !234
  br i1 %cmp8, label %if.then.9, label %if.end.12, !dbg !236

if.then.9:                                        ; preds = %if.end.7
  %add = add nsw i32 %i.0, 7, !dbg !237
  %idxprom10 = sext i32 %add to i64, !dbg !238
  %arrayidx11 = getelementptr inbounds [15 x i32], [15 x i32]* %c, i32 0, i64 %idxprom10, !dbg !238
  store i32 1, i32* %arrayidx11, align 4, !dbg !239
  br label %if.end.12, !dbg !238

if.end.12:                                        ; preds = %if.then.9, %if.end.7
  %add13 = add nsw i32 %i.0, 1, !dbg !240
  call void @llvm.dbg.value(metadata i32 %add13, i64 0, metadata !217, metadata !116), !dbg !218
  br label %while.cond, !dbg !219

while.end:                                        ; preds = %while.cond
  %arraydecay = getelementptr inbounds [17 x i32], [17 x i32]* %b, i32 0, i32 0, !dbg !241
  %arraydecay14 = getelementptr inbounds [9 x i32], [9 x i32]* %a, i32 0, i32 0, !dbg !242
  %arraydecay15 = getelementptr inbounds [15 x i32], [15 x i32]* %c, i32 0, i32 0, !dbg !243
  %arraydecay16 = getelementptr inbounds [9 x i32], [9 x i32]* %x, i32 0, i32 0, !dbg !244
  call void @Try(i32 1, i32* %q, i32* %arraydecay, i32* %arraydecay14, i32* %arraydecay15, i32* %arraydecay16), !dbg !245
  %tmp9 = load i32, i32* %q, align 4, !dbg !246
  %tobool = icmp ne i32 %tmp9, 0, !dbg !246
  br i1 %tobool, label %if.end.18, label %if.then.17, !dbg !248

if.then.17:                                       ; preds = %while.end
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0)), !dbg !249
  br label %if.end.18, !dbg !249

if.end.18:                                        ; preds = %if.then.17, %while.end
  ret void, !dbg !250
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define void @Queens(i32 %run) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %run, i64 0, metadata !251, metadata !116), !dbg !252
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !253, metadata !116), !dbg !254
  br label %for.cond, !dbg !255

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]
  %cmp = icmp sle i32 %i.0, 50, !dbg !257
  br i1 %cmp, label %for.body, label %for.end, !dbg !259

for.body:                                         ; preds = %for.cond
  call void @Doit(), !dbg !260
  br label %for.inc, !dbg !260

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !261
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !253, metadata !116), !dbg !254
  br label %for.cond, !dbg !262

for.end:                                          ; preds = %for.cond
  %add = add nsw i32 %run, 1, !dbg !263
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 %add), !dbg !264
  ret void, !dbg !265
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !266, metadata !116), !dbg !267
  br label %for.cond, !dbg !268

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 100, !dbg !270
  br i1 %cmp, label %for.body, label %for.end, !dbg !272

for.body:                                         ; preds = %for.cond
  call void @Queens(i32 %i.0), !dbg !273
  br label %for.inc, !dbg !273

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !274
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !266, metadata !116), !dbg !267
  br label %for.cond, !dbg !275

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !276
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!102, !103}
!llvm.ident = !{!104}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5, globals: !21)
!1 = !DIFile(filename: "tmp.c", directory: "/home/gleison/tf/Benchmarks/Stanford/Queens")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!5 = !{!6, !10, !12, !16, !17, !20}
!6 = !DISubprogram(name: "Initrand", scope: !7, file: !7, line: 119, type: !8, isLocal: false, isDefinition: true, scopeLine: 119, isOptimized: false, function: void ()* @Initrand, variables: !2)
!7 = !DIFile(filename: "/home/gleison/tf/Benchmarks/Stanford/Queens/tmp.c", directory: "/home/gleison/tf/Benchmarks/Stanford/Queens")
!8 = !DISubroutineType(types: !9)
!9 = !{null}
!10 = !DISubprogram(name: "Rand", scope: !7, file: !7, line: 121, type: !11, isLocal: false, isDefinition: true, scopeLine: 121, isOptimized: false, function: i32 ()* @Rand, variables: !2)
!11 = !DISubroutineType(types: !3)
!12 = !DISubprogram(name: "Try", scope: !7, file: !7, line: 138, type: !13, isLocal: false, isDefinition: true, scopeLine: 138, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i32*, i32*, i32*, i32*, i32*)* @Try, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{null, !4, !15, !15, !15, !15, !15}
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!16 = !DISubprogram(name: "Doit", scope: !7, file: !7, line: 165, type: !8, isLocal: false, isDefinition: true, scopeLine: 165, isOptimized: false, function: void ()* @Doit, variables: !2)
!17 = !DISubprogram(name: "Queens", scope: !7, file: !7, line: 184, type: !18, isLocal: false, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: false, function: void (i32)* @Queens, variables: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{null, !4}
!20 = !DISubprogram(name: "main", scope: !7, file: !7, line: 191, type: !11, isLocal: false, isDefinition: true, scopeLine: 191, isOptimized: false, function: i32 ()* @main, variables: !2)
!21 = !{!22, !24, !25, !26, !28, !32, !34, !41, !45, !53, !54, !55, !59, !60, !61, !63, !64, !65, !66, !70, !71, !75, !78, !79, !80, !84, !85, !86, !87, !95, !96, !100, !101}
!22 = !DIGlobalVariable(name: "value", scope: !0, file: !7, line: 83, type: !23, isLocal: false, isDefinition: true, variable: float* @value)
!23 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!24 = !DIGlobalVariable(name: "fixed", scope: !0, file: !7, line: 83, type: !23, isLocal: false, isDefinition: true, variable: float* @fixed)
!25 = !DIGlobalVariable(name: "floated", scope: !0, file: !7, line: 83, type: !23, isLocal: false, isDefinition: true, variable: float* @floated)
!26 = !DIGlobalVariable(name: "seed", scope: !0, file: !7, line: 86, type: !27, isLocal: false, isDefinition: true, variable: i64* @seed)
!27 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!28 = !DIGlobalVariable(name: "permarray", scope: !0, file: !7, line: 89, type: !29, isLocal: false, isDefinition: true, variable: [11 x i32]* @permarray)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 352, align: 32, elements: !30)
!30 = !{!31}
!31 = !DISubrange(count: 11)
!32 = !DIGlobalVariable(name: "pctr", scope: !0, file: !7, line: 91, type: !33, isLocal: false, isDefinition: true, variable: i32* @pctr)
!33 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!34 = !DIGlobalVariable(name: "tree", scope: !0, file: !7, line: 94, type: !35, isLocal: false, isDefinition: true, variable: %struct.node** @tree)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64, align: 64)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "node", file: !7, line: 45, size: 192, align: 64, elements: !37)
!37 = !{!38, !39, !40}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !36, file: !7, line: 46, baseType: !35, size: 64, align: 64)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !36, file: !7, line: 46, baseType: !35, size: 64, align: 64, offset: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !36, file: !7, line: 47, baseType: !4, size: 32, align: 32, offset: 128)
!41 = !DIGlobalVariable(name: "stack", scope: !0, file: !7, line: 97, type: !42, isLocal: false, isDefinition: true, variable: [4 x i32]* @stack)
!42 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 128, align: 32, elements: !43)
!43 = !{!44}
!44 = !DISubrange(count: 4)
!45 = !DIGlobalVariable(name: "cellspace", scope: !0, file: !7, line: 98, type: !46, isLocal: false, isDefinition: true, variable: [19 x %struct.element]* @cellspace)
!46 = !DICompositeType(tag: DW_TAG_array_type, baseType: !47, size: 1216, align: 32, elements: !51)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "element", file: !7, line: 54, size: 64, align: 32, elements: !48)
!48 = !{!49, !50}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "discsize", scope: !47, file: !7, line: 55, baseType: !4, size: 32, align: 32)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !47, file: !7, line: 56, baseType: !4, size: 32, align: 32, offset: 32)
!51 = !{!52}
!52 = !DISubrange(count: 19)
!53 = !DIGlobalVariable(name: "freelist", scope: !0, file: !7, line: 99, type: !4, isLocal: false, isDefinition: true, variable: i32* @freelist)
!54 = !DIGlobalVariable(name: "movesdone", scope: !0, file: !7, line: 99, type: !4, isLocal: false, isDefinition: true, variable: i32* @movesdone)
!55 = !DIGlobalVariable(name: "ima", scope: !0, file: !7, line: 103, type: !56, isLocal: false, isDefinition: true, variable: [41 x [41 x i32]]* @ima)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 53792, align: 32, elements: !57)
!57 = !{!58, !58}
!58 = !DISubrange(count: 41)
!59 = !DIGlobalVariable(name: "imb", scope: !0, file: !7, line: 103, type: !56, isLocal: false, isDefinition: true, variable: [41 x [41 x i32]]* @imb)
!60 = !DIGlobalVariable(name: "imr", scope: !0, file: !7, line: 104, type: !56, isLocal: false, isDefinition: true, variable: [41 x [41 x i32]]* @imr)
!61 = !DIGlobalVariable(name: "rma", scope: !0, file: !7, line: 105, type: !62, isLocal: false, isDefinition: true, variable: [41 x [41 x float]]* @rma)
!62 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 53792, align: 32, elements: !57)
!63 = !DIGlobalVariable(name: "rmb", scope: !0, file: !7, line: 105, type: !62, isLocal: false, isDefinition: true, variable: [41 x [41 x float]]* @rmb)
!64 = !DIGlobalVariable(name: "rmr", scope: !0, file: !7, line: 106, type: !62, isLocal: false, isDefinition: true, variable: [41 x [41 x float]]* @rmr)
!65 = !DIGlobalVariable(name: "piececount", scope: !0, file: !7, line: 109, type: !42, isLocal: false, isDefinition: true, variable: [4 x i32]* @piececount)
!66 = !DIGlobalVariable(name: "class", scope: !0, file: !7, line: 109, type: !67, isLocal: false, isDefinition: true, variable: [13 x i32]* @class)
!67 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 416, align: 32, elements: !68)
!68 = !{!69}
!69 = !DISubrange(count: 13)
!70 = !DIGlobalVariable(name: "piecemax", scope: !0, file: !7, line: 109, type: !67, isLocal: false, isDefinition: true, variable: [13 x i32]* @piecemax)
!71 = !DIGlobalVariable(name: "puzzl", scope: !0, file: !7, line: 110, type: !72, isLocal: false, isDefinition: true, variable: [512 x i32]* @puzzl)
!72 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 16384, align: 32, elements: !73)
!73 = !{!74}
!74 = !DISubrange(count: 512)
!75 = !DIGlobalVariable(name: "p", scope: !0, file: !7, line: 110, type: !76, isLocal: false, isDefinition: true, variable: [13 x [512 x i32]]* @p)
!76 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 212992, align: 32, elements: !77)
!77 = !{!69, !74}
!78 = !DIGlobalVariable(name: "n", scope: !0, file: !7, line: 110, type: !4, isLocal: false, isDefinition: true, variable: i32* @n)
!79 = !DIGlobalVariable(name: "kount", scope: !0, file: !7, line: 110, type: !4, isLocal: false, isDefinition: true, variable: i32* @kount)
!80 = !DIGlobalVariable(name: "sortlist", scope: !0, file: !7, line: 113, type: !81, isLocal: false, isDefinition: true, variable: [5001 x i32]* @sortlist)
!81 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 160032, align: 32, elements: !82)
!82 = !{!83}
!83 = !DISubrange(count: 5001)
!84 = !DIGlobalVariable(name: "biggest", scope: !0, file: !7, line: 113, type: !4, isLocal: false, isDefinition: true, variable: i32* @biggest)
!85 = !DIGlobalVariable(name: "littlest", scope: !0, file: !7, line: 113, type: !4, isLocal: false, isDefinition: true, variable: i32* @littlest)
!86 = !DIGlobalVariable(name: "top", scope: !0, file: !7, line: 113, type: !4, isLocal: false, isDefinition: true, variable: i32* @top)
!87 = !DIGlobalVariable(name: "z", scope: !0, file: !7, line: 116, type: !88, isLocal: false, isDefinition: true, variable: [257 x %struct.complex]* @z)
!88 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 16448, align: 32, elements: !93)
!89 = !DICompositeType(tag: DW_TAG_structure_type, name: "complex", file: !7, line: 75, size: 64, align: 32, elements: !90)
!90 = !{!91, !92}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "rp", scope: !89, file: !7, line: 76, baseType: !23, size: 32, align: 32)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !89, file: !7, line: 76, baseType: !23, size: 32, align: 32, offset: 32)
!93 = !{!94}
!94 = !DISubrange(count: 257)
!95 = !DIGlobalVariable(name: "w", scope: !0, file: !7, line: 116, type: !88, isLocal: false, isDefinition: true, variable: [257 x %struct.complex]* @w)
!96 = !DIGlobalVariable(name: "e", scope: !0, file: !7, line: 116, type: !97, isLocal: false, isDefinition: true, variable: [130 x %struct.complex]* @e)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8320, align: 32, elements: !98)
!98 = !{!99}
!99 = !DISubrange(count: 130)
!100 = !DIGlobalVariable(name: "zr", scope: !0, file: !7, line: 117, type: !23, isLocal: false, isDefinition: true, variable: float* @zr)
!101 = !DIGlobalVariable(name: "zi", scope: !0, file: !7, line: 117, type: !23, isLocal: false, isDefinition: true, variable: float* @zi)
!102 = !{i32 2, !"Dwarf Version", i32 4}
!103 = !{i32 2, !"Debug Info Version", i32 3}
!104 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!105 = !DILocation(line: 119, column: 24, scope: !6)
!106 = !DILocation(line: 119, column: 59, scope: !6)
!107 = !DILocation(line: 122, column: 11, scope: !10)
!108 = !DILocation(line: 122, column: 16, scope: !10)
!109 = !DILocation(line: 122, column: 24, scope: !10)
!110 = !DILocation(line: 122, column: 34, scope: !10)
!111 = !DILocation(line: 122, column: 8, scope: !10)
!112 = !DILocation(line: 123, column: 16, scope: !10)
!113 = !DILocation(line: 123, column: 11, scope: !10)
!114 = !DILocation(line: 123, column: 3, scope: !10)
!115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "i", arg: 1, scope: !12, file: !7, line: 138, type: !4)
!116 = !DIExpression()
!117 = !DILocation(line: 138, column: 14, scope: !12)
!118 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "q", arg: 2, scope: !12, file: !7, line: 138, type: !15)
!119 = !DILocation(line: 138, column: 22, scope: !12)
!120 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 3, scope: !12, file: !7, line: 138, type: !15)
!121 = !DILocation(line: 138, column: 29, scope: !12)
!122 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 4, scope: !12, file: !7, line: 138, type: !15)
!123 = !DILocation(line: 138, column: 38, scope: !12)
!124 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 5, scope: !12, file: !7, line: 138, type: !15)
!125 = !DILocation(line: 138, column: 47, scope: !12)
!126 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 6, scope: !12, file: !7, line: 138, type: !15)
!127 = !DILocation(line: 138, column: 56, scope: !12)
!128 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !129, file: !7, line: 139, type: !4)
!129 = distinct !DILexicalBlock(scope: !12, file: !7, line: 139, column: 3)
!130 = !DILocation(line: 139, column: 12, scope: !129)
!131 = !DILocation(line: 139, column: 8, scope: !129)
!132 = !DILocation(line: 139, column: 21, scope: !133)
!133 = distinct !DILexicalBlock(scope: !129, file: !7, line: 139, column: 3)
!134 = !DILocation(line: 139, column: 3, scope: !129)
!135 = !DILocation(line: 139, column: 3, scope: !136)
!136 = !DILexicalBlockFile(scope: !129, file: !7, discriminator: 2)
!137 = !DILocation(line: 139, column: 32, scope: !138)
!138 = !DILexicalBlockFile(scope: !133, file: !7, discriminator: 3)
!139 = !DILocation(line: 139, column: 3, scope: !133)
!140 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !12, file: !7, line: 141, type: !4)
!141 = !DILocation(line: 141, column: 7, scope: !12)
!142 = !DILocation(line: 143, column: 6, scope: !12)
!143 = !DILocation(line: 144, column: 16, scope: !12)
!144 = !DILocation(line: 144, column: 3, scope: !12)
!145 = !DILocation(line: 144, column: 12, scope: !12)
!146 = !DILocation(line: 144, column: 22, scope: !12)
!147 = !DILocation(line: 144, column: 3, scope: !148)
!148 = !DILexicalBlockFile(scope: !12, file: !7, discriminator: 2)
!149 = !DILocation(line: 145, column: 11, scope: !150)
!150 = distinct !DILexicalBlock(scope: !12, file: !7, line: 144, column: 29)
!151 = !DILocation(line: 146, column: 8, scope: !150)
!152 = !DILocation(line: 147, column: 9, scope: !153)
!153 = distinct !DILexicalBlock(scope: !150, file: !7, line: 147, column: 9)
!154 = !DILocation(line: 147, column: 14, scope: !153)
!155 = !DILocation(line: 147, column: 21, scope: !153)
!156 = !DILocation(line: 147, column: 17, scope: !153)
!157 = !DILocation(line: 147, column: 26, scope: !153)
!158 = !DILocation(line: 147, column: 33, scope: !153)
!159 = !DILocation(line: 147, column: 37, scope: !153)
!160 = !DILocation(line: 147, column: 29, scope: !153)
!161 = !DILocation(line: 147, column: 9, scope: !150)
!162 = !DILocation(line: 148, column: 7, scope: !163)
!163 = distinct !DILexicalBlock(scope: !153, file: !7, line: 147, column: 43)
!164 = !DILocation(line: 148, column: 12, scope: !163)
!165 = !DILocation(line: 149, column: 7, scope: !163)
!166 = !DILocation(line: 149, column: 12, scope: !163)
!167 = !DILocation(line: 150, column: 11, scope: !163)
!168 = !DILocation(line: 150, column: 7, scope: !163)
!169 = !DILocation(line: 150, column: 16, scope: !163)
!170 = !DILocation(line: 151, column: 11, scope: !163)
!171 = !DILocation(line: 151, column: 15, scope: !163)
!172 = !DILocation(line: 151, column: 7, scope: !163)
!173 = !DILocation(line: 151, column: 20, scope: !163)
!174 = !DILocation(line: 152, column: 13, scope: !175)
!175 = distinct !DILexicalBlock(scope: !163, file: !7, line: 152, column: 11)
!176 = !DILocation(line: 152, column: 11, scope: !163)
!177 = !DILocation(line: 153, column: 15, scope: !178)
!178 = distinct !DILexicalBlock(scope: !175, file: !7, line: 152, column: 18)
!179 = !DILocation(line: 153, column: 9, scope: !178)
!180 = !DILocation(line: 154, column: 14, scope: !181)
!181 = distinct !DILexicalBlock(scope: !178, file: !7, line: 154, column: 13)
!182 = !DILocation(line: 154, column: 13, scope: !178)
!183 = !DILocation(line: 155, column: 11, scope: !184)
!184 = distinct !DILexicalBlock(scope: !181, file: !7, line: 154, column: 18)
!185 = !DILocation(line: 155, column: 16, scope: !184)
!186 = !DILocation(line: 156, column: 15, scope: !184)
!187 = !DILocation(line: 156, column: 11, scope: !184)
!188 = !DILocation(line: 156, column: 20, scope: !184)
!189 = !DILocation(line: 157, column: 15, scope: !184)
!190 = !DILocation(line: 157, column: 19, scope: !184)
!191 = !DILocation(line: 157, column: 11, scope: !184)
!192 = !DILocation(line: 157, column: 24, scope: !184)
!193 = !DILocation(line: 158, column: 9, scope: !184)
!194 = !DILocation(line: 159, column: 7, scope: !178)
!195 = !DILocation(line: 160, column: 12, scope: !175)
!196 = !DILocation(line: 161, column: 5, scope: !163)
!197 = !DILocation(line: 163, column: 1, scope: !12)
!198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !16, file: !7, line: 166, type: !4)
!199 = !DILocation(line: 166, column: 10, scope: !16)
!200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !16, file: !7, line: 167, type: !201)
!201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 288, align: 32, elements: !202)
!202 = !{!203}
!203 = !DISubrange(count: 9)
!204 = !DILocation(line: 167, column: 7, scope: !16)
!205 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b", scope: !16, file: !7, line: 167, type: !206)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 544, align: 32, elements: !207)
!207 = !{!208}
!208 = !DISubrange(count: 17)
!209 = !DILocation(line: 167, column: 13, scope: !16)
!210 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !16, file: !7, line: 167, type: !211)
!211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 480, align: 32, elements: !212)
!212 = !{!213}
!213 = !DISubrange(count: 15)
!214 = !DILocation(line: 167, column: 20, scope: !16)
!215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !16, file: !7, line: 167, type: !201)
!216 = !DILocation(line: 167, column: 27, scope: !16)
!217 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !16, file: !7, line: 166, type: !4)
!218 = !DILocation(line: 166, column: 7, scope: !16)
!219 = !DILocation(line: 169, column: 3, scope: !16)
!220 = !DILocation(line: 169, column: 12, scope: !16)
!221 = !DILocation(line: 170, column: 12, scope: !222)
!222 = distinct !DILexicalBlock(scope: !223, file: !7, line: 170, column: 9)
!223 = distinct !DILexicalBlock(scope: !16, file: !7, line: 169, column: 19)
!224 = !DILocation(line: 170, column: 18, scope: !222)
!225 = !DILocation(line: 170, column: 24, scope: !222)
!226 = !DILocation(line: 170, column: 9, scope: !223)
!227 = !DILocation(line: 171, column: 7, scope: !222)
!228 = !DILocation(line: 171, column: 12, scope: !222)
!229 = !DILocation(line: 172, column: 11, scope: !230)
!230 = distinct !DILexicalBlock(scope: !223, file: !7, line: 172, column: 9)
!231 = !DILocation(line: 172, column: 9, scope: !223)
!232 = !DILocation(line: 173, column: 7, scope: !230)
!233 = !DILocation(line: 173, column: 12, scope: !230)
!234 = !DILocation(line: 174, column: 11, scope: !235)
!235 = distinct !DILexicalBlock(scope: !223, file: !7, line: 174, column: 9)
!236 = !DILocation(line: 174, column: 9, scope: !223)
!237 = !DILocation(line: 175, column: 11, scope: !235)
!238 = !DILocation(line: 175, column: 7, scope: !235)
!239 = !DILocation(line: 175, column: 16, scope: !235)
!240 = !DILocation(line: 176, column: 11, scope: !223)
!241 = !DILocation(line: 179, column: 14, scope: !16)
!242 = !DILocation(line: 179, column: 17, scope: !16)
!243 = !DILocation(line: 179, column: 20, scope: !16)
!244 = !DILocation(line: 179, column: 23, scope: !16)
!245 = !DILocation(line: 179, column: 3, scope: !16)
!246 = !DILocation(line: 180, column: 8, scope: !247)
!247 = distinct !DILexicalBlock(scope: !16, file: !7, line: 180, column: 7)
!248 = !DILocation(line: 180, column: 7, scope: !16)
!249 = !DILocation(line: 181, column: 5, scope: !247)
!250 = !DILocation(line: 182, column: 1, scope: !16)
!251 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "run", arg: 1, scope: !17, file: !7, line: 184, type: !4)
!252 = !DILocation(line: 184, column: 17, scope: !17)
!253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !17, file: !7, line: 185, type: !4)
!254 = !DILocation(line: 185, column: 7, scope: !17)
!255 = !DILocation(line: 186, column: 8, scope: !256)
!256 = distinct !DILexicalBlock(scope: !17, file: !7, line: 186, column: 3)
!257 = !DILocation(line: 186, column: 17, scope: !258)
!258 = distinct !DILexicalBlock(scope: !256, file: !7, line: 186, column: 3)
!259 = !DILocation(line: 186, column: 3, scope: !256)
!260 = !DILocation(line: 187, column: 5, scope: !258)
!261 = !DILocation(line: 186, column: 25, scope: !258)
!262 = !DILocation(line: 186, column: 3, scope: !258)
!263 = !DILocation(line: 188, column: 22, scope: !17)
!264 = !DILocation(line: 188, column: 3, scope: !17)
!265 = !DILocation(line: 189, column: 1, scope: !17)
!266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !20, file: !7, line: 192, type: !4)
!267 = !DILocation(line: 192, column: 7, scope: !20)
!268 = !DILocation(line: 193, column: 8, scope: !269)
!269 = distinct !DILexicalBlock(scope: !20, file: !7, line: 193, column: 3)
!270 = !DILocation(line: 193, column: 17, scope: !271)
!271 = distinct !DILexicalBlock(scope: !269, file: !7, line: 193, column: 3)
!272 = !DILocation(line: 193, column: 3, scope: !269)
!273 = !DILocation(line: 194, column: 5, scope: !271)
!274 = !DILocation(line: 193, column: 25, scope: !271)
!275 = !DILocation(line: 193, column: 3, scope: !271)
!276 = !DILocation(line: 195, column: 3, scope: !20)
